
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Libro
 * 
 */
export type Libro = $Result.DefaultSelection<Prisma.$LibroPayload>
/**
 * Model LibroMateria
 * 
 */
export type LibroMateria = $Result.DefaultSelection<Prisma.$LibroMateriaPayload>
/**
 * Model LibroAutor
 * 
 */
export type LibroAutor = $Result.DefaultSelection<Prisma.$LibroAutorPayload>
/**
 * Model LibroIdioma
 * 
 */
export type LibroIdioma = $Result.DefaultSelection<Prisma.$LibroIdiomaPayload>
/**
 * Model LibroEditorial
 * 
 */
export type LibroEditorial = $Result.DefaultSelection<Prisma.$LibroEditorialPayload>
/**
 * Model Curso
 * 
 */
export type Curso = $Result.DefaultSelection<Prisma.$CursoPayload>
/**
 * Model CursoAyudante
 * 
 */
export type CursoAyudante = $Result.DefaultSelection<Prisma.$CursoAyudantePayload>
/**
 * Model Division
 * 
 */
export type Division = $Result.DefaultSelection<Prisma.$DivisionPayload>
/**
 * Model Equipo
 * 
 */
export type Equipo = $Result.DefaultSelection<Prisma.$EquipoPayload>
/**
 * Model EquipoMarca
 * 
 */
export type EquipoMarca = $Result.DefaultSelection<Prisma.$EquipoMarcaPayload>
/**
 * Model EquipoTipo
 * 
 */
export type EquipoTipo = $Result.DefaultSelection<Prisma.$EquipoTipoPayload>
/**
 * Model EquipoEstado
 * 
 */
export type EquipoEstado = $Result.DefaultSelection<Prisma.$EquipoEstadoPayload>
/**
 * Model Laboratorio
 * 
 */
export type Laboratorio = $Result.DefaultSelection<Prisma.$LaboratorioPayload>
/**
 * Model Armario
 * 
 */
export type Armario = $Result.DefaultSelection<Prisma.$ArmarioPayload>
/**
 * Model Estante
 * 
 */
export type Estante = $Result.DefaultSelection<Prisma.$EstantePayload>
/**
 * Model Software
 * 
 */
export type Software = $Result.DefaultSelection<Prisma.$SoftwarePayload>
/**
 * Model SoftwareLaboratorio
 * 
 */
export type SoftwareLaboratorio = $Result.DefaultSelection<Prisma.$SoftwareLaboratorioPayload>
/**
 * Model Mails
 * 
 */
export type Mails = $Result.DefaultSelection<Prisma.$MailsPayload>
/**
 * Model Materia
 * 
 */
export type Materia = $Result.DefaultSelection<Prisma.$MateriaPayload>
/**
 * Model MateriaJefeTp
 * 
 */
export type MateriaJefeTp = $Result.DefaultSelection<Prisma.$MateriaJefeTpPayload>
/**
 * Model MateriaCorrelativa
 * 
 */
export type MateriaCorrelativa = $Result.DefaultSelection<Prisma.$MateriaCorrelativaPayload>
/**
 * Model Reserva
 * 
 */
export type Reserva = $Result.DefaultSelection<Prisma.$ReservaPayload>
/**
 * Model ReservaEquipo
 * 
 */
export type ReservaEquipo = $Result.DefaultSelection<Prisma.$ReservaEquipoPayload>
/**
 * Model ReservaLibro
 * 
 */
export type ReservaLibro = $Result.DefaultSelection<Prisma.$ReservaLibroPayload>
/**
 * Model ReservaLaboratorioCerrado
 * 
 */
export type ReservaLaboratorioCerrado = $Result.DefaultSelection<Prisma.$ReservaLaboratorioCerradoPayload>
/**
 * Model ReservaLaboratorioCerradoEquipo
 * 
 */
export type ReservaLaboratorioCerradoEquipo = $Result.DefaultSelection<Prisma.$ReservaLaboratorioCerradoEquipoPayload>
/**
 * Model ReservaLaboratorioAbierto
 * 
 */
export type ReservaLaboratorioAbierto = $Result.DefaultSelection<Prisma.$ReservaLaboratorioAbiertoPayload>
/**
 * Model ReservaLaboratorioAbiertoEquipo
 * 
 */
export type ReservaLaboratorioAbiertoEquipo = $Result.DefaultSelection<Prisma.$ReservaLaboratorioAbiertoEquipoPayload>
/**
 * Model Pantalla
 * 
 */
export type Pantalla = $Result.DefaultSelection<Prisma.$PantallaPayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model VerificationToken
 * 
 */
export type VerificationToken = $Result.DefaultSelection<Prisma.$VerificationTokenPayload>
/**
 * Model Sede
 * 
 */
export type Sede = $Result.DefaultSelection<Prisma.$SedePayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Tutor
 * 
 */
export type Tutor = $Result.DefaultSelection<Prisma.$TutorPayload>
/**
 * Model UsuarioRol
 * 
 */
export type UsuarioRol = $Result.DefaultSelection<Prisma.$UsuarioRolPayload>
/**
 * Model Rol
 * 
 */
export type Rol = $Result.DefaultSelection<Prisma.$RolPayload>
/**
 * Model RolPermiso
 * 
 */
export type RolPermiso = $Result.DefaultSelection<Prisma.$RolPermisoPayload>
/**
 * Model Permiso
 * 
 */
export type Permiso = $Result.DefaultSelection<Prisma.$PermisoPayload>
/**
 * Model Provincia
 * 
 */
export type Provincia = $Result.DefaultSelection<Prisma.$ProvinciaPayload>
/**
 * Model Pais
 * 
 */
export type Pais = $Result.DefaultSelection<Prisma.$PaisPayload>
/**
 * Model DocumentoTipo
 * 
 */
export type DocumentoTipo = $Result.DefaultSelection<Prisma.$DocumentoTipoPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const TurnoCurso: {
  MANANA: 'MANANA',
  TARDE: 'TARDE',
  NOCHE: 'NOCHE'
};

export type TurnoCurso = (typeof TurnoCurso)[keyof typeof TurnoCurso]


export const CursoDia: {
  LUNES: 'LUNES',
  MARTES: 'MARTES',
  MIERCOLES: 'MIERCOLES',
  JUEVES: 'JUEVES',
  VIERNES: 'VIERNES',
  SABADO: 'SABADO',
  DOMINGO: 'DOMINGO'
};

export type CursoDia = (typeof CursoDia)[keyof typeof CursoDia]


export const MateriaDuracion: {
  ANUAL: 'ANUAL',
  CUATRIMESTRAL: 'CUATRIMESTRAL',
  AMBOS: 'AMBOS'
};

export type MateriaDuracion = (typeof MateriaDuracion)[keyof typeof MateriaDuracion]


export const MateriaTipo: {
  INTEGRADORA: 'INTEGRADORA',
  OBLIGATORIA: 'OBLIGATORIA',
  ELECTIVA: 'ELECTIVA'
};

export type MateriaTipo = (typeof MateriaTipo)[keyof typeof MateriaTipo]


export const EstatusCorrelativa: {
  CURSAR_REGULARIZADA: 'CURSAR_REGULARIZADA',
  CURSAR_APROBADA: 'CURSAR_APROBADA',
  RENDIR_APROBADA: 'RENDIR_APROBADA'
};

export type EstatusCorrelativa = (typeof EstatusCorrelativa)[keyof typeof EstatusCorrelativa]


export const SgeNombre: {
  ADMIN_QUERY: 'ADMIN_QUERY',
  ADMIN_MODIFICAR_ATRIBUTOS: 'ADMIN_MODIFICAR_ATRIBUTOS',
  ADMIN_MODIFICAR_ATRIBUTOS_ADMIN: 'ADMIN_MODIFICAR_ATRIBUTOS_ADMIN',
  ADMIN_VER_PANEL_ADMIN: 'ADMIN_VER_PANEL_ADMIN',
  ADMIN_ABM_USUARIOS: 'ADMIN_ABM_USUARIOS',
  ADMIN_ES_ALUMNO: 'ADMIN_ES_ALUMNO',
  ADMIN_ES_DOCENTE: 'ADMIN_ES_DOCENTE',
  ADMIN_ACCESO_SVN: 'ADMIN_ACCESO_SVN',
  ADMIN_ES_TUTOR: 'ADMIN_ES_TUTOR',
  ADMIN_ES_PANOL: 'ADMIN_ES_PANOL',
  ADMIN_ES_CONSEJERO: 'ADMIN_ES_CONSEJERO',
  ADMIN_ES_ADMINISTRADOR_WEB: 'ADMIN_ES_ADMINISTRADOR_WEB',
  ADMIN_ACTUALIZAR_ACTA_CONSEJEROS: 'ADMIN_ACTUALIZAR_ACTA_CONSEJEROS',
  ADMIN_VER_RESULTADOS_ACTA: 'ADMIN_VER_RESULTADOS_ACTA',
  ADMIN_VER_NOTIFICACIONES_INDEX: 'ADMIN_VER_NOTIFICACIONES_INDEX',
  ADMIN_VER_FICHA_USUARIO: 'ADMIN_VER_FICHA_USUARIO',
  ADMIN_AGREGAR_USUARIOS_A_GRUPOS: 'ADMIN_AGREGAR_USUARIOS_A_GRUPOS',
  ADMIN_OFERTAS_LABORALES_ABM: 'ADMIN_OFERTAS_LABORALES_ABM',
  RES_LAB_RESERVAR_CURSO_AUTO: 'RES_LAB_RESERVAR_CURSO_AUTO',
  RES_LAB_VER_RESERVAS_CURSO_AUTO: 'RES_LAB_VER_RESERVAS_CURSO_AUTO',
  RES_LAB_REALIZAR_RESERVA_DISCRECIONAL: 'RES_LAB_REALIZAR_RESERVA_DISCRECIONAL',
  RES_LAB_CONFIRMAR_RESERVAS: 'RES_LAB_CONFIRMAR_RESERVAS',
  RES_LAB_VER_TODO_RESERVAS: 'RES_LAB_VER_TODO_RESERVAS',
  RES_LAB_VER_RESERVAS_GENERALES_DOCENTES: 'RES_LAB_VER_RESERVAS_GENERALES_DOCENTES',
  RES_LAB_RESERVAR_CATEDRA_AUTO: 'RES_LAB_RESERVAR_CATEDRA_AUTO',
  RES_LAB_VER_RESERVAS_CATEDRA: 'RES_LAB_VER_RESERVAS_CATEDRA',
  RES_LAB_ABM_PANTALLA: 'RES_LAB_ABM_PANTALLA',
  APLICACIONES_VER_LISTADO: 'APLICACIONES_VER_LISTADO',
  APLICACIONES_ABM: 'APLICACIONES_ABM',
  LABORATORIOS_ABM: 'LABORATORIOS_ABM',
  APLICACIONES_CARGAR_PRACTICA_AUTO: 'APLICACIONES_CARGAR_PRACTICA_AUTO',
  LAB_ABIERTO_RESERVAR: 'LAB_ABIERTO_RESERVAR',
  LAB_ABIERTO_VER_MIS_RESERVAS: 'LAB_ABIERTO_VER_MIS_RESERVAS',
  LAB_ABIERTO_VER_PLANILLA_TUTORES: 'LAB_ABIERTO_VER_PLANILLA_TUTORES',
  LAB_ABIERTO_CONFIRMAR_RESERVAS: 'LAB_ABIERTO_CONFIRMAR_RESERVAS',
  LAB_ABIERTO_SUSPENDER_ALUMNO: 'LAB_ABIERTO_SUSPENDER_ALUMNO',
  LAB_ABIERTO_DESSUSPENDER_ALUMNO: 'LAB_ABIERTO_DESSUSPENDER_ALUMNO',
  LAB_ABIERTO_TUTORES_ABM: 'LAB_ABIERTO_TUTORES_ABM',
  MATERIAS_ABM: 'MATERIAS_ABM',
  MATERIAS_VER_LISTADO: 'MATERIAS_VER_LISTADO',
  MATERIAS_ADMINISTRAR_CORRELATIVA: 'MATERIAS_ADMINISTRAR_CORRELATIVA',
  CURSOS_MOSTRAR_TODOS: 'CURSOS_MOSTRAR_TODOS',
  CURSOS_ABM: 'CURSOS_ABM',
  CURSOS_VER_MIS_CURSOS_AUTO: 'CURSOS_VER_MIS_CURSOS_AUTO',
  DIVISIONES_ABM: 'DIVISIONES_ABM',
  DIVISIONES_VER_LISTADO: 'DIVISIONES_VER_LISTADO',
  ARMARIOS_ABM: 'ARMARIOS_ABM',
  ESTANTES_ABM: 'ESTANTES_ABM',
  EQUIPOS_ABM: 'EQUIPOS_ABM',
  EQUIPOS_VER_LISTADO: 'EQUIPOS_VER_LISTADO',
  EQUIPOS_BUSCAR_EQUIPO: 'EQUIPOS_BUSCAR_EQUIPO',
  EQUIPOS_REPORTE_ARMARIO: 'EQUIPOS_REPORTE_ARMARIO',
  EQUIPOS_REPORTE_TIPO: 'EQUIPOS_REPORTE_TIPO',
  EQUIPOS_ADMIN_VER_UBICACION: 'EQUIPOS_ADMIN_VER_UBICACION',
  EQUIPOS_REPORTE_LABORATORIO: 'EQUIPOS_REPORTE_LABORATORIO',
  EQUIPOS_ABM_MANUALES: 'EQUIPOS_ABM_MANUALES',
  EQUIPOS_PRESTAMO_PRESTAR: 'EQUIPOS_PRESTAMO_PRESTAR',
  EQUIPOS_PRESTAMO_VER_PRESTAMOS: 'EQUIPOS_PRESTAMO_VER_PRESTAMOS',
  EQUIPOS_PRESTAMO_VER_MIS_PRESTAMOS: 'EQUIPOS_PRESTAMO_VER_MIS_PRESTAMOS',
  EQUIPOS_TIPO_ABM: 'EQUIPOS_TIPO_ABM',
  BIBLIOTECA_ABM_LIBRO: 'BIBLIOTECA_ABM_LIBRO',
  BIBLIOTECA_VER_LISTADO: 'BIBLIOTECA_VER_LISTADO',
  BIBLIOTECA_BUSCAR_LIBRO: 'BIBLIOTECA_BUSCAR_LIBRO',
  BIBLIOTECA_VER_DETALLES_LIBRO: 'BIBLIOTECA_VER_DETALLES_LIBRO',
  BIBLIOTECA_EDITORIALES_ABM: 'BIBLIOTECA_EDITORIALES_ABM',
  BIBLIOTECA_PRESTAMO_PRESTAR: 'BIBLIOTECA_PRESTAMO_PRESTAR',
  BIBLIOTECA_PRESTAMO_VER_PRESTAMOS: 'BIBLIOTECA_PRESTAMO_VER_PRESTAMOS',
  BIBLIOTECA_PRESTAMO_VER_MIS_PRESTAMOS: 'BIBLIOTECA_PRESTAMO_VER_MIS_PRESTAMOS',
  CONV_ELECTROCOMPONENTES_REQUERIR_CERTIFICADO: 'CONV_ELECTROCOMPONENTES_REQUERIR_CERTIFICADO',
  CONV_ELECTROCOMPONENTES_VER_DETALLES: 'CONV_ELECTROCOMPONENTES_VER_DETALLES',
  CONV_ELECTROCOMPONENTES_ADMIN_CERTIFICADOS: 'CONV_ELECTROCOMPONENTES_ADMIN_CERTIFICADOS',
  CONV_ELECTROCOMPONENTES_ELIMINAR_CERTIFICADO: 'CONV_ELECTROCOMPONENTES_ELIMINAR_CERTIFICADO',
  CONV_MAYER_REQUERIR_CERTIFICADO: 'CONV_MAYER_REQUERIR_CERTIFICADO',
  CONV_MAYER_VER_MIS_PEDIDOS: 'CONV_MAYER_VER_MIS_PEDIDOS',
  CONV_MAYER_ENVIAR_RESUMEN: 'CONV_MAYER_ENVIAR_RESUMEN',
  CONV_MAYER_ADMIN_PEDIDOS: 'CONV_MAYER_ADMIN_PEDIDOS',
  REP_FALLAS_BUSCAR_REP_FALLAS: 'REP_FALLAS_BUSCAR_REP_FALLAS',
  REP_FALLAS_REPORTAR_FALLAS: 'REP_FALLAS_REPORTAR_FALLAS',
  REP_FALLAS_ADMIN_REP_FALLAS: 'REP_FALLAS_ADMIN_REP_FALLAS',
  ACTIVIDADES_USUARIO_SGE_PUBLICAR_ADMIN: 'ACTIVIDADES_USUARIO_SGE_PUBLICAR_ADMIN',
  ACTIVIDADES_USUARIO_SGE_VER_PUBLICACIONES: 'ACTIVIDADES_USUARIO_SGE_VER_PUBLICACIONES',
  ACTIVIDADES_ABIERTAS_PUBLICAR_ADMIN: 'ACTIVIDADES_ABIERTAS_PUBLICAR_ADMIN',
  ACTIVIDADES_ABIERTAS_VER_PUBLICACIONES: 'ACTIVIDADES_ABIERTAS_VER_PUBLICACIONES'
};

export type SgeNombre = (typeof SgeNombre)[keyof typeof SgeNombre]


export const ReservaEstatus: {
  PENDIENTE: 'PENDIENTE',
  FINALIZADA: 'FINALIZADA',
  CANCELADA: 'CANCELADA',
  RECHAZADA: 'RECHAZADA'
};

export type ReservaEstatus = (typeof ReservaEstatus)[keyof typeof ReservaEstatus]


export const ReservaTipo: {
  LABORATORIO_ABIERTO: 'LABORATORIO_ABIERTO',
  LABORATORIO_CERRADO: 'LABORATORIO_CERRADO',
  INVENTARIO: 'INVENTARIO',
  LIBRO: 'LIBRO'
};

export type ReservaTipo = (typeof ReservaTipo)[keyof typeof ReservaTipo]


export const LaboratorioAbiertoTipo: {
  LA: 'LA',
  TLA_BASICA: 'TLA_BASICA',
  TLA: 'TLA'
};

export type LaboratorioAbiertoTipo = (typeof LaboratorioAbiertoTipo)[keyof typeof LaboratorioAbiertoTipo]

}

export type TurnoCurso = $Enums.TurnoCurso

export const TurnoCurso: typeof $Enums.TurnoCurso

export type CursoDia = $Enums.CursoDia

export const CursoDia: typeof $Enums.CursoDia

export type MateriaDuracion = $Enums.MateriaDuracion

export const MateriaDuracion: typeof $Enums.MateriaDuracion

export type MateriaTipo = $Enums.MateriaTipo

export const MateriaTipo: typeof $Enums.MateriaTipo

export type EstatusCorrelativa = $Enums.EstatusCorrelativa

export const EstatusCorrelativa: typeof $Enums.EstatusCorrelativa

export type SgeNombre = $Enums.SgeNombre

export const SgeNombre: typeof $Enums.SgeNombre

export type ReservaEstatus = $Enums.ReservaEstatus

export const ReservaEstatus: typeof $Enums.ReservaEstatus

export type ReservaTipo = $Enums.ReservaTipo

export const ReservaTipo: typeof $Enums.ReservaTipo

export type LaboratorioAbiertoTipo = $Enums.LaboratorioAbiertoTipo

export const LaboratorioAbiertoTipo: typeof $Enums.LaboratorioAbiertoTipo

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Libros
 * const libros = await prisma.libro.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Libros
   * const libros = await prisma.libro.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.libro`: Exposes CRUD operations for the **Libro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Libros
    * const libros = await prisma.libro.findMany()
    * ```
    */
  get libro(): Prisma.LibroDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.libroMateria`: Exposes CRUD operations for the **LibroMateria** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LibroMaterias
    * const libroMaterias = await prisma.libroMateria.findMany()
    * ```
    */
  get libroMateria(): Prisma.LibroMateriaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.libroAutor`: Exposes CRUD operations for the **LibroAutor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LibroAutors
    * const libroAutors = await prisma.libroAutor.findMany()
    * ```
    */
  get libroAutor(): Prisma.LibroAutorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.libroIdioma`: Exposes CRUD operations for the **LibroIdioma** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LibroIdiomas
    * const libroIdiomas = await prisma.libroIdioma.findMany()
    * ```
    */
  get libroIdioma(): Prisma.LibroIdiomaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.libroEditorial`: Exposes CRUD operations for the **LibroEditorial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LibroEditorials
    * const libroEditorials = await prisma.libroEditorial.findMany()
    * ```
    */
  get libroEditorial(): Prisma.LibroEditorialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.curso`: Exposes CRUD operations for the **Curso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cursos
    * const cursos = await prisma.curso.findMany()
    * ```
    */
  get curso(): Prisma.CursoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cursoAyudante`: Exposes CRUD operations for the **CursoAyudante** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CursoAyudantes
    * const cursoAyudantes = await prisma.cursoAyudante.findMany()
    * ```
    */
  get cursoAyudante(): Prisma.CursoAyudanteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.division`: Exposes CRUD operations for the **Division** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Divisions
    * const divisions = await prisma.division.findMany()
    * ```
    */
  get division(): Prisma.DivisionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.equipo`: Exposes CRUD operations for the **Equipo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Equipos
    * const equipos = await prisma.equipo.findMany()
    * ```
    */
  get equipo(): Prisma.EquipoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.equipoMarca`: Exposes CRUD operations for the **EquipoMarca** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EquipoMarcas
    * const equipoMarcas = await prisma.equipoMarca.findMany()
    * ```
    */
  get equipoMarca(): Prisma.EquipoMarcaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.equipoTipo`: Exposes CRUD operations for the **EquipoTipo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EquipoTipos
    * const equipoTipos = await prisma.equipoTipo.findMany()
    * ```
    */
  get equipoTipo(): Prisma.EquipoTipoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.equipoEstado`: Exposes CRUD operations for the **EquipoEstado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EquipoEstados
    * const equipoEstados = await prisma.equipoEstado.findMany()
    * ```
    */
  get equipoEstado(): Prisma.EquipoEstadoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.laboratorio`: Exposes CRUD operations for the **Laboratorio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Laboratorios
    * const laboratorios = await prisma.laboratorio.findMany()
    * ```
    */
  get laboratorio(): Prisma.LaboratorioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.armario`: Exposes CRUD operations for the **Armario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Armarios
    * const armarios = await prisma.armario.findMany()
    * ```
    */
  get armario(): Prisma.ArmarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estante`: Exposes CRUD operations for the **Estante** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estantes
    * const estantes = await prisma.estante.findMany()
    * ```
    */
  get estante(): Prisma.EstanteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.software`: Exposes CRUD operations for the **Software** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Software
    * const software = await prisma.software.findMany()
    * ```
    */
  get software(): Prisma.SoftwareDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.softwareLaboratorio`: Exposes CRUD operations for the **SoftwareLaboratorio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SoftwareLaboratorios
    * const softwareLaboratorios = await prisma.softwareLaboratorio.findMany()
    * ```
    */
  get softwareLaboratorio(): Prisma.SoftwareLaboratorioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mails`: Exposes CRUD operations for the **Mails** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mails
    * const mails = await prisma.mails.findMany()
    * ```
    */
  get mails(): Prisma.MailsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.materia`: Exposes CRUD operations for the **Materia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Materias
    * const materias = await prisma.materia.findMany()
    * ```
    */
  get materia(): Prisma.MateriaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.materiaJefeTp`: Exposes CRUD operations for the **MateriaJefeTp** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MateriaJefeTps
    * const materiaJefeTps = await prisma.materiaJefeTp.findMany()
    * ```
    */
  get materiaJefeTp(): Prisma.MateriaJefeTpDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.materiaCorrelativa`: Exposes CRUD operations for the **MateriaCorrelativa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MateriaCorrelativas
    * const materiaCorrelativas = await prisma.materiaCorrelativa.findMany()
    * ```
    */
  get materiaCorrelativa(): Prisma.MateriaCorrelativaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reserva`: Exposes CRUD operations for the **Reserva** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservas
    * const reservas = await prisma.reserva.findMany()
    * ```
    */
  get reserva(): Prisma.ReservaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservaEquipo`: Exposes CRUD operations for the **ReservaEquipo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReservaEquipos
    * const reservaEquipos = await prisma.reservaEquipo.findMany()
    * ```
    */
  get reservaEquipo(): Prisma.ReservaEquipoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservaLibro`: Exposes CRUD operations for the **ReservaLibro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReservaLibros
    * const reservaLibros = await prisma.reservaLibro.findMany()
    * ```
    */
  get reservaLibro(): Prisma.ReservaLibroDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservaLaboratorioCerrado`: Exposes CRUD operations for the **ReservaLaboratorioCerrado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReservaLaboratorioCerrados
    * const reservaLaboratorioCerrados = await prisma.reservaLaboratorioCerrado.findMany()
    * ```
    */
  get reservaLaboratorioCerrado(): Prisma.ReservaLaboratorioCerradoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservaLaboratorioCerradoEquipo`: Exposes CRUD operations for the **ReservaLaboratorioCerradoEquipo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReservaLaboratorioCerradoEquipos
    * const reservaLaboratorioCerradoEquipos = await prisma.reservaLaboratorioCerradoEquipo.findMany()
    * ```
    */
  get reservaLaboratorioCerradoEquipo(): Prisma.ReservaLaboratorioCerradoEquipoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservaLaboratorioAbierto`: Exposes CRUD operations for the **ReservaLaboratorioAbierto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReservaLaboratorioAbiertos
    * const reservaLaboratorioAbiertos = await prisma.reservaLaboratorioAbierto.findMany()
    * ```
    */
  get reservaLaboratorioAbierto(): Prisma.ReservaLaboratorioAbiertoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservaLaboratorioAbiertoEquipo`: Exposes CRUD operations for the **ReservaLaboratorioAbiertoEquipo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReservaLaboratorioAbiertoEquipos
    * const reservaLaboratorioAbiertoEquipos = await prisma.reservaLaboratorioAbiertoEquipo.findMany()
    * ```
    */
  get reservaLaboratorioAbiertoEquipo(): Prisma.ReservaLaboratorioAbiertoEquipoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pantalla`: Exposes CRUD operations for the **Pantalla** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pantallas
    * const pantallas = await prisma.pantalla.findMany()
    * ```
    */
  get pantalla(): Prisma.PantallaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verificationToken`: Exposes CRUD operations for the **VerificationToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VerificationTokens
    * const verificationTokens = await prisma.verificationToken.findMany()
    * ```
    */
  get verificationToken(): Prisma.VerificationTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sede`: Exposes CRUD operations for the **Sede** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sedes
    * const sedes = await prisma.sede.findMany()
    * ```
    */
  get sede(): Prisma.SedeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tutor`: Exposes CRUD operations for the **Tutor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tutors
    * const tutors = await prisma.tutor.findMany()
    * ```
    */
  get tutor(): Prisma.TutorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuarioRol`: Exposes CRUD operations for the **UsuarioRol** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UsuarioRols
    * const usuarioRols = await prisma.usuarioRol.findMany()
    * ```
    */
  get usuarioRol(): Prisma.UsuarioRolDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rol`: Exposes CRUD operations for the **Rol** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rols
    * const rols = await prisma.rol.findMany()
    * ```
    */
  get rol(): Prisma.RolDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rolPermiso`: Exposes CRUD operations for the **RolPermiso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RolPermisos
    * const rolPermisos = await prisma.rolPermiso.findMany()
    * ```
    */
  get rolPermiso(): Prisma.RolPermisoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permiso`: Exposes CRUD operations for the **Permiso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permisos
    * const permisos = await prisma.permiso.findMany()
    * ```
    */
  get permiso(): Prisma.PermisoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.provincia`: Exposes CRUD operations for the **Provincia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Provincias
    * const provincias = await prisma.provincia.findMany()
    * ```
    */
  get provincia(): Prisma.ProvinciaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pais`: Exposes CRUD operations for the **Pais** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pais
    * const pais = await prisma.pais.findMany()
    * ```
    */
  get pais(): Prisma.PaisDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.documentoTipo`: Exposes CRUD operations for the **DocumentoTipo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DocumentoTipos
    * const documentoTipos = await prisma.documentoTipo.findMany()
    * ```
    */
  get documentoTipo(): Prisma.DocumentoTipoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Libro: 'Libro',
    LibroMateria: 'LibroMateria',
    LibroAutor: 'LibroAutor',
    LibroIdioma: 'LibroIdioma',
    LibroEditorial: 'LibroEditorial',
    Curso: 'Curso',
    CursoAyudante: 'CursoAyudante',
    Division: 'Division',
    Equipo: 'Equipo',
    EquipoMarca: 'EquipoMarca',
    EquipoTipo: 'EquipoTipo',
    EquipoEstado: 'EquipoEstado',
    Laboratorio: 'Laboratorio',
    Armario: 'Armario',
    Estante: 'Estante',
    Software: 'Software',
    SoftwareLaboratorio: 'SoftwareLaboratorio',
    Mails: 'Mails',
    Materia: 'Materia',
    MateriaJefeTp: 'MateriaJefeTp',
    MateriaCorrelativa: 'MateriaCorrelativa',
    Reserva: 'Reserva',
    ReservaEquipo: 'ReservaEquipo',
    ReservaLibro: 'ReservaLibro',
    ReservaLaboratorioCerrado: 'ReservaLaboratorioCerrado',
    ReservaLaboratorioCerradoEquipo: 'ReservaLaboratorioCerradoEquipo',
    ReservaLaboratorioAbierto: 'ReservaLaboratorioAbierto',
    ReservaLaboratorioAbiertoEquipo: 'ReservaLaboratorioAbiertoEquipo',
    Pantalla: 'Pantalla',
    Account: 'Account',
    Session: 'Session',
    VerificationToken: 'VerificationToken',
    Sede: 'Sede',
    User: 'User',
    Tutor: 'Tutor',
    UsuarioRol: 'UsuarioRol',
    Rol: 'Rol',
    RolPermiso: 'RolPermiso',
    Permiso: 'Permiso',
    Provincia: 'Provincia',
    Pais: 'Pais',
    DocumentoTipo: 'DocumentoTipo'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "libro" | "libroMateria" | "libroAutor" | "libroIdioma" | "libroEditorial" | "curso" | "cursoAyudante" | "division" | "equipo" | "equipoMarca" | "equipoTipo" | "equipoEstado" | "laboratorio" | "armario" | "estante" | "software" | "softwareLaboratorio" | "mails" | "materia" | "materiaJefeTp" | "materiaCorrelativa" | "reserva" | "reservaEquipo" | "reservaLibro" | "reservaLaboratorioCerrado" | "reservaLaboratorioCerradoEquipo" | "reservaLaboratorioAbierto" | "reservaLaboratorioAbiertoEquipo" | "pantalla" | "account" | "session" | "verificationToken" | "sede" | "user" | "tutor" | "usuarioRol" | "rol" | "rolPermiso" | "permiso" | "provincia" | "pais" | "documentoTipo"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Libro: {
        payload: Prisma.$LibroPayload<ExtArgs>
        fields: Prisma.LibroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LibroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LibroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroPayload>
          }
          findFirst: {
            args: Prisma.LibroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LibroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroPayload>
          }
          findMany: {
            args: Prisma.LibroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroPayload>[]
          }
          create: {
            args: Prisma.LibroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroPayload>
          }
          createMany: {
            args: Prisma.LibroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LibroCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroPayload>[]
          }
          delete: {
            args: Prisma.LibroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroPayload>
          }
          update: {
            args: Prisma.LibroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroPayload>
          }
          deleteMany: {
            args: Prisma.LibroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LibroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LibroUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroPayload>[]
          }
          upsert: {
            args: Prisma.LibroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroPayload>
          }
          aggregate: {
            args: Prisma.LibroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLibro>
          }
          groupBy: {
            args: Prisma.LibroGroupByArgs<ExtArgs>
            result: $Utils.Optional<LibroGroupByOutputType>[]
          }
          count: {
            args: Prisma.LibroCountArgs<ExtArgs>
            result: $Utils.Optional<LibroCountAggregateOutputType> | number
          }
        }
      }
      LibroMateria: {
        payload: Prisma.$LibroMateriaPayload<ExtArgs>
        fields: Prisma.LibroMateriaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LibroMateriaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroMateriaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LibroMateriaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroMateriaPayload>
          }
          findFirst: {
            args: Prisma.LibroMateriaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroMateriaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LibroMateriaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroMateriaPayload>
          }
          findMany: {
            args: Prisma.LibroMateriaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroMateriaPayload>[]
          }
          create: {
            args: Prisma.LibroMateriaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroMateriaPayload>
          }
          createMany: {
            args: Prisma.LibroMateriaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LibroMateriaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroMateriaPayload>[]
          }
          delete: {
            args: Prisma.LibroMateriaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroMateriaPayload>
          }
          update: {
            args: Prisma.LibroMateriaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroMateriaPayload>
          }
          deleteMany: {
            args: Prisma.LibroMateriaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LibroMateriaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LibroMateriaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroMateriaPayload>[]
          }
          upsert: {
            args: Prisma.LibroMateriaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroMateriaPayload>
          }
          aggregate: {
            args: Prisma.LibroMateriaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLibroMateria>
          }
          groupBy: {
            args: Prisma.LibroMateriaGroupByArgs<ExtArgs>
            result: $Utils.Optional<LibroMateriaGroupByOutputType>[]
          }
          count: {
            args: Prisma.LibroMateriaCountArgs<ExtArgs>
            result: $Utils.Optional<LibroMateriaCountAggregateOutputType> | number
          }
        }
      }
      LibroAutor: {
        payload: Prisma.$LibroAutorPayload<ExtArgs>
        fields: Prisma.LibroAutorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LibroAutorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroAutorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LibroAutorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroAutorPayload>
          }
          findFirst: {
            args: Prisma.LibroAutorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroAutorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LibroAutorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroAutorPayload>
          }
          findMany: {
            args: Prisma.LibroAutorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroAutorPayload>[]
          }
          create: {
            args: Prisma.LibroAutorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroAutorPayload>
          }
          createMany: {
            args: Prisma.LibroAutorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LibroAutorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroAutorPayload>[]
          }
          delete: {
            args: Prisma.LibroAutorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroAutorPayload>
          }
          update: {
            args: Prisma.LibroAutorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroAutorPayload>
          }
          deleteMany: {
            args: Prisma.LibroAutorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LibroAutorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LibroAutorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroAutorPayload>[]
          }
          upsert: {
            args: Prisma.LibroAutorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroAutorPayload>
          }
          aggregate: {
            args: Prisma.LibroAutorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLibroAutor>
          }
          groupBy: {
            args: Prisma.LibroAutorGroupByArgs<ExtArgs>
            result: $Utils.Optional<LibroAutorGroupByOutputType>[]
          }
          count: {
            args: Prisma.LibroAutorCountArgs<ExtArgs>
            result: $Utils.Optional<LibroAutorCountAggregateOutputType> | number
          }
        }
      }
      LibroIdioma: {
        payload: Prisma.$LibroIdiomaPayload<ExtArgs>
        fields: Prisma.LibroIdiomaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LibroIdiomaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroIdiomaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LibroIdiomaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroIdiomaPayload>
          }
          findFirst: {
            args: Prisma.LibroIdiomaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroIdiomaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LibroIdiomaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroIdiomaPayload>
          }
          findMany: {
            args: Prisma.LibroIdiomaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroIdiomaPayload>[]
          }
          create: {
            args: Prisma.LibroIdiomaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroIdiomaPayload>
          }
          createMany: {
            args: Prisma.LibroIdiomaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LibroIdiomaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroIdiomaPayload>[]
          }
          delete: {
            args: Prisma.LibroIdiomaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroIdiomaPayload>
          }
          update: {
            args: Prisma.LibroIdiomaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroIdiomaPayload>
          }
          deleteMany: {
            args: Prisma.LibroIdiomaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LibroIdiomaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LibroIdiomaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroIdiomaPayload>[]
          }
          upsert: {
            args: Prisma.LibroIdiomaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroIdiomaPayload>
          }
          aggregate: {
            args: Prisma.LibroIdiomaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLibroIdioma>
          }
          groupBy: {
            args: Prisma.LibroIdiomaGroupByArgs<ExtArgs>
            result: $Utils.Optional<LibroIdiomaGroupByOutputType>[]
          }
          count: {
            args: Prisma.LibroIdiomaCountArgs<ExtArgs>
            result: $Utils.Optional<LibroIdiomaCountAggregateOutputType> | number
          }
        }
      }
      LibroEditorial: {
        payload: Prisma.$LibroEditorialPayload<ExtArgs>
        fields: Prisma.LibroEditorialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LibroEditorialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroEditorialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LibroEditorialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroEditorialPayload>
          }
          findFirst: {
            args: Prisma.LibroEditorialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroEditorialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LibroEditorialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroEditorialPayload>
          }
          findMany: {
            args: Prisma.LibroEditorialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroEditorialPayload>[]
          }
          create: {
            args: Prisma.LibroEditorialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroEditorialPayload>
          }
          createMany: {
            args: Prisma.LibroEditorialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LibroEditorialCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroEditorialPayload>[]
          }
          delete: {
            args: Prisma.LibroEditorialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroEditorialPayload>
          }
          update: {
            args: Prisma.LibroEditorialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroEditorialPayload>
          }
          deleteMany: {
            args: Prisma.LibroEditorialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LibroEditorialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LibroEditorialUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroEditorialPayload>[]
          }
          upsert: {
            args: Prisma.LibroEditorialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LibroEditorialPayload>
          }
          aggregate: {
            args: Prisma.LibroEditorialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLibroEditorial>
          }
          groupBy: {
            args: Prisma.LibroEditorialGroupByArgs<ExtArgs>
            result: $Utils.Optional<LibroEditorialGroupByOutputType>[]
          }
          count: {
            args: Prisma.LibroEditorialCountArgs<ExtArgs>
            result: $Utils.Optional<LibroEditorialCountAggregateOutputType> | number
          }
        }
      }
      Curso: {
        payload: Prisma.$CursoPayload<ExtArgs>
        fields: Prisma.CursoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CursoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CursoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          findFirst: {
            args: Prisma.CursoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CursoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          findMany: {
            args: Prisma.CursoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>[]
          }
          create: {
            args: Prisma.CursoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          createMany: {
            args: Prisma.CursoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CursoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>[]
          }
          delete: {
            args: Prisma.CursoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          update: {
            args: Prisma.CursoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          deleteMany: {
            args: Prisma.CursoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CursoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CursoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>[]
          }
          upsert: {
            args: Prisma.CursoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          aggregate: {
            args: Prisma.CursoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCurso>
          }
          groupBy: {
            args: Prisma.CursoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CursoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CursoCountArgs<ExtArgs>
            result: $Utils.Optional<CursoCountAggregateOutputType> | number
          }
        }
      }
      CursoAyudante: {
        payload: Prisma.$CursoAyudantePayload<ExtArgs>
        fields: Prisma.CursoAyudanteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CursoAyudanteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoAyudantePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CursoAyudanteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoAyudantePayload>
          }
          findFirst: {
            args: Prisma.CursoAyudanteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoAyudantePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CursoAyudanteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoAyudantePayload>
          }
          findMany: {
            args: Prisma.CursoAyudanteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoAyudantePayload>[]
          }
          create: {
            args: Prisma.CursoAyudanteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoAyudantePayload>
          }
          createMany: {
            args: Prisma.CursoAyudanteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CursoAyudanteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoAyudantePayload>[]
          }
          delete: {
            args: Prisma.CursoAyudanteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoAyudantePayload>
          }
          update: {
            args: Prisma.CursoAyudanteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoAyudantePayload>
          }
          deleteMany: {
            args: Prisma.CursoAyudanteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CursoAyudanteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CursoAyudanteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoAyudantePayload>[]
          }
          upsert: {
            args: Prisma.CursoAyudanteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoAyudantePayload>
          }
          aggregate: {
            args: Prisma.CursoAyudanteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCursoAyudante>
          }
          groupBy: {
            args: Prisma.CursoAyudanteGroupByArgs<ExtArgs>
            result: $Utils.Optional<CursoAyudanteGroupByOutputType>[]
          }
          count: {
            args: Prisma.CursoAyudanteCountArgs<ExtArgs>
            result: $Utils.Optional<CursoAyudanteCountAggregateOutputType> | number
          }
        }
      }
      Division: {
        payload: Prisma.$DivisionPayload<ExtArgs>
        fields: Prisma.DivisionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DivisionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DivisionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DivisionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DivisionPayload>
          }
          findFirst: {
            args: Prisma.DivisionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DivisionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DivisionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DivisionPayload>
          }
          findMany: {
            args: Prisma.DivisionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DivisionPayload>[]
          }
          create: {
            args: Prisma.DivisionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DivisionPayload>
          }
          createMany: {
            args: Prisma.DivisionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DivisionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DivisionPayload>[]
          }
          delete: {
            args: Prisma.DivisionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DivisionPayload>
          }
          update: {
            args: Prisma.DivisionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DivisionPayload>
          }
          deleteMany: {
            args: Prisma.DivisionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DivisionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DivisionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DivisionPayload>[]
          }
          upsert: {
            args: Prisma.DivisionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DivisionPayload>
          }
          aggregate: {
            args: Prisma.DivisionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDivision>
          }
          groupBy: {
            args: Prisma.DivisionGroupByArgs<ExtArgs>
            result: $Utils.Optional<DivisionGroupByOutputType>[]
          }
          count: {
            args: Prisma.DivisionCountArgs<ExtArgs>
            result: $Utils.Optional<DivisionCountAggregateOutputType> | number
          }
        }
      }
      Equipo: {
        payload: Prisma.$EquipoPayload<ExtArgs>
        fields: Prisma.EquipoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EquipoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EquipoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoPayload>
          }
          findFirst: {
            args: Prisma.EquipoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EquipoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoPayload>
          }
          findMany: {
            args: Prisma.EquipoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoPayload>[]
          }
          create: {
            args: Prisma.EquipoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoPayload>
          }
          createMany: {
            args: Prisma.EquipoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EquipoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoPayload>[]
          }
          delete: {
            args: Prisma.EquipoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoPayload>
          }
          update: {
            args: Prisma.EquipoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoPayload>
          }
          deleteMany: {
            args: Prisma.EquipoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EquipoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EquipoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoPayload>[]
          }
          upsert: {
            args: Prisma.EquipoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoPayload>
          }
          aggregate: {
            args: Prisma.EquipoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEquipo>
          }
          groupBy: {
            args: Prisma.EquipoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EquipoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EquipoCountArgs<ExtArgs>
            result: $Utils.Optional<EquipoCountAggregateOutputType> | number
          }
        }
      }
      EquipoMarca: {
        payload: Prisma.$EquipoMarcaPayload<ExtArgs>
        fields: Prisma.EquipoMarcaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EquipoMarcaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoMarcaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EquipoMarcaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoMarcaPayload>
          }
          findFirst: {
            args: Prisma.EquipoMarcaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoMarcaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EquipoMarcaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoMarcaPayload>
          }
          findMany: {
            args: Prisma.EquipoMarcaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoMarcaPayload>[]
          }
          create: {
            args: Prisma.EquipoMarcaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoMarcaPayload>
          }
          createMany: {
            args: Prisma.EquipoMarcaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EquipoMarcaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoMarcaPayload>[]
          }
          delete: {
            args: Prisma.EquipoMarcaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoMarcaPayload>
          }
          update: {
            args: Prisma.EquipoMarcaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoMarcaPayload>
          }
          deleteMany: {
            args: Prisma.EquipoMarcaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EquipoMarcaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EquipoMarcaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoMarcaPayload>[]
          }
          upsert: {
            args: Prisma.EquipoMarcaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoMarcaPayload>
          }
          aggregate: {
            args: Prisma.EquipoMarcaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEquipoMarca>
          }
          groupBy: {
            args: Prisma.EquipoMarcaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EquipoMarcaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EquipoMarcaCountArgs<ExtArgs>
            result: $Utils.Optional<EquipoMarcaCountAggregateOutputType> | number
          }
        }
      }
      EquipoTipo: {
        payload: Prisma.$EquipoTipoPayload<ExtArgs>
        fields: Prisma.EquipoTipoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EquipoTipoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoTipoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EquipoTipoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoTipoPayload>
          }
          findFirst: {
            args: Prisma.EquipoTipoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoTipoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EquipoTipoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoTipoPayload>
          }
          findMany: {
            args: Prisma.EquipoTipoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoTipoPayload>[]
          }
          create: {
            args: Prisma.EquipoTipoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoTipoPayload>
          }
          createMany: {
            args: Prisma.EquipoTipoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EquipoTipoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoTipoPayload>[]
          }
          delete: {
            args: Prisma.EquipoTipoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoTipoPayload>
          }
          update: {
            args: Prisma.EquipoTipoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoTipoPayload>
          }
          deleteMany: {
            args: Prisma.EquipoTipoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EquipoTipoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EquipoTipoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoTipoPayload>[]
          }
          upsert: {
            args: Prisma.EquipoTipoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoTipoPayload>
          }
          aggregate: {
            args: Prisma.EquipoTipoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEquipoTipo>
          }
          groupBy: {
            args: Prisma.EquipoTipoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EquipoTipoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EquipoTipoCountArgs<ExtArgs>
            result: $Utils.Optional<EquipoTipoCountAggregateOutputType> | number
          }
        }
      }
      EquipoEstado: {
        payload: Prisma.$EquipoEstadoPayload<ExtArgs>
        fields: Prisma.EquipoEstadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EquipoEstadoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoEstadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EquipoEstadoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoEstadoPayload>
          }
          findFirst: {
            args: Prisma.EquipoEstadoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoEstadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EquipoEstadoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoEstadoPayload>
          }
          findMany: {
            args: Prisma.EquipoEstadoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoEstadoPayload>[]
          }
          create: {
            args: Prisma.EquipoEstadoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoEstadoPayload>
          }
          createMany: {
            args: Prisma.EquipoEstadoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EquipoEstadoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoEstadoPayload>[]
          }
          delete: {
            args: Prisma.EquipoEstadoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoEstadoPayload>
          }
          update: {
            args: Prisma.EquipoEstadoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoEstadoPayload>
          }
          deleteMany: {
            args: Prisma.EquipoEstadoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EquipoEstadoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EquipoEstadoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoEstadoPayload>[]
          }
          upsert: {
            args: Prisma.EquipoEstadoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipoEstadoPayload>
          }
          aggregate: {
            args: Prisma.EquipoEstadoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEquipoEstado>
          }
          groupBy: {
            args: Prisma.EquipoEstadoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EquipoEstadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EquipoEstadoCountArgs<ExtArgs>
            result: $Utils.Optional<EquipoEstadoCountAggregateOutputType> | number
          }
        }
      }
      Laboratorio: {
        payload: Prisma.$LaboratorioPayload<ExtArgs>
        fields: Prisma.LaboratorioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LaboratorioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratorioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LaboratorioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratorioPayload>
          }
          findFirst: {
            args: Prisma.LaboratorioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratorioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LaboratorioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratorioPayload>
          }
          findMany: {
            args: Prisma.LaboratorioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratorioPayload>[]
          }
          create: {
            args: Prisma.LaboratorioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratorioPayload>
          }
          createMany: {
            args: Prisma.LaboratorioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LaboratorioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratorioPayload>[]
          }
          delete: {
            args: Prisma.LaboratorioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratorioPayload>
          }
          update: {
            args: Prisma.LaboratorioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratorioPayload>
          }
          deleteMany: {
            args: Prisma.LaboratorioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LaboratorioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LaboratorioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratorioPayload>[]
          }
          upsert: {
            args: Prisma.LaboratorioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratorioPayload>
          }
          aggregate: {
            args: Prisma.LaboratorioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLaboratorio>
          }
          groupBy: {
            args: Prisma.LaboratorioGroupByArgs<ExtArgs>
            result: $Utils.Optional<LaboratorioGroupByOutputType>[]
          }
          count: {
            args: Prisma.LaboratorioCountArgs<ExtArgs>
            result: $Utils.Optional<LaboratorioCountAggregateOutputType> | number
          }
        }
      }
      Armario: {
        payload: Prisma.$ArmarioPayload<ExtArgs>
        fields: Prisma.ArmarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ArmarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArmarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ArmarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArmarioPayload>
          }
          findFirst: {
            args: Prisma.ArmarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArmarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ArmarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArmarioPayload>
          }
          findMany: {
            args: Prisma.ArmarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArmarioPayload>[]
          }
          create: {
            args: Prisma.ArmarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArmarioPayload>
          }
          createMany: {
            args: Prisma.ArmarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ArmarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArmarioPayload>[]
          }
          delete: {
            args: Prisma.ArmarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArmarioPayload>
          }
          update: {
            args: Prisma.ArmarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArmarioPayload>
          }
          deleteMany: {
            args: Prisma.ArmarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ArmarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ArmarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArmarioPayload>[]
          }
          upsert: {
            args: Prisma.ArmarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArmarioPayload>
          }
          aggregate: {
            args: Prisma.ArmarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArmario>
          }
          groupBy: {
            args: Prisma.ArmarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArmarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.ArmarioCountArgs<ExtArgs>
            result: $Utils.Optional<ArmarioCountAggregateOutputType> | number
          }
        }
      }
      Estante: {
        payload: Prisma.$EstantePayload<ExtArgs>
        fields: Prisma.EstanteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstanteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstantePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstanteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstantePayload>
          }
          findFirst: {
            args: Prisma.EstanteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstantePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstanteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstantePayload>
          }
          findMany: {
            args: Prisma.EstanteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstantePayload>[]
          }
          create: {
            args: Prisma.EstanteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstantePayload>
          }
          createMany: {
            args: Prisma.EstanteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstanteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstantePayload>[]
          }
          delete: {
            args: Prisma.EstanteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstantePayload>
          }
          update: {
            args: Prisma.EstanteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstantePayload>
          }
          deleteMany: {
            args: Prisma.EstanteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstanteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstanteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstantePayload>[]
          }
          upsert: {
            args: Prisma.EstanteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstantePayload>
          }
          aggregate: {
            args: Prisma.EstanteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstante>
          }
          groupBy: {
            args: Prisma.EstanteGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstanteGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstanteCountArgs<ExtArgs>
            result: $Utils.Optional<EstanteCountAggregateOutputType> | number
          }
        }
      }
      Software: {
        payload: Prisma.$SoftwarePayload<ExtArgs>
        fields: Prisma.SoftwareFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SoftwareFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SoftwareFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          findFirst: {
            args: Prisma.SoftwareFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SoftwareFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          findMany: {
            args: Prisma.SoftwareFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>[]
          }
          create: {
            args: Prisma.SoftwareCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          createMany: {
            args: Prisma.SoftwareCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SoftwareCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>[]
          }
          delete: {
            args: Prisma.SoftwareDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          update: {
            args: Prisma.SoftwareUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          deleteMany: {
            args: Prisma.SoftwareDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SoftwareUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SoftwareUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>[]
          }
          upsert: {
            args: Prisma.SoftwareUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwarePayload>
          }
          aggregate: {
            args: Prisma.SoftwareAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSoftware>
          }
          groupBy: {
            args: Prisma.SoftwareGroupByArgs<ExtArgs>
            result: $Utils.Optional<SoftwareGroupByOutputType>[]
          }
          count: {
            args: Prisma.SoftwareCountArgs<ExtArgs>
            result: $Utils.Optional<SoftwareCountAggregateOutputType> | number
          }
        }
      }
      SoftwareLaboratorio: {
        payload: Prisma.$SoftwareLaboratorioPayload<ExtArgs>
        fields: Prisma.SoftwareLaboratorioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SoftwareLaboratorioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareLaboratorioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SoftwareLaboratorioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareLaboratorioPayload>
          }
          findFirst: {
            args: Prisma.SoftwareLaboratorioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareLaboratorioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SoftwareLaboratorioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareLaboratorioPayload>
          }
          findMany: {
            args: Prisma.SoftwareLaboratorioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareLaboratorioPayload>[]
          }
          create: {
            args: Prisma.SoftwareLaboratorioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareLaboratorioPayload>
          }
          createMany: {
            args: Prisma.SoftwareLaboratorioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SoftwareLaboratorioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareLaboratorioPayload>[]
          }
          delete: {
            args: Prisma.SoftwareLaboratorioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareLaboratorioPayload>
          }
          update: {
            args: Prisma.SoftwareLaboratorioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareLaboratorioPayload>
          }
          deleteMany: {
            args: Prisma.SoftwareLaboratorioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SoftwareLaboratorioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SoftwareLaboratorioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareLaboratorioPayload>[]
          }
          upsert: {
            args: Prisma.SoftwareLaboratorioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareLaboratorioPayload>
          }
          aggregate: {
            args: Prisma.SoftwareLaboratorioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSoftwareLaboratorio>
          }
          groupBy: {
            args: Prisma.SoftwareLaboratorioGroupByArgs<ExtArgs>
            result: $Utils.Optional<SoftwareLaboratorioGroupByOutputType>[]
          }
          count: {
            args: Prisma.SoftwareLaboratorioCountArgs<ExtArgs>
            result: $Utils.Optional<SoftwareLaboratorioCountAggregateOutputType> | number
          }
        }
      }
      Mails: {
        payload: Prisma.$MailsPayload<ExtArgs>
        fields: Prisma.MailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MailsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MailsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MailsPayload>
          }
          findFirst: {
            args: Prisma.MailsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MailsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MailsPayload>
          }
          findMany: {
            args: Prisma.MailsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MailsPayload>[]
          }
          create: {
            args: Prisma.MailsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MailsPayload>
          }
          createMany: {
            args: Prisma.MailsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MailsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MailsPayload>[]
          }
          delete: {
            args: Prisma.MailsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MailsPayload>
          }
          update: {
            args: Prisma.MailsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MailsPayload>
          }
          deleteMany: {
            args: Prisma.MailsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MailsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MailsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MailsPayload>[]
          }
          upsert: {
            args: Prisma.MailsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MailsPayload>
          }
          aggregate: {
            args: Prisma.MailsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMails>
          }
          groupBy: {
            args: Prisma.MailsGroupByArgs<ExtArgs>
            result: $Utils.Optional<MailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.MailsCountArgs<ExtArgs>
            result: $Utils.Optional<MailsCountAggregateOutputType> | number
          }
        }
      }
      Materia: {
        payload: Prisma.$MateriaPayload<ExtArgs>
        fields: Prisma.MateriaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MateriaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MateriaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaPayload>
          }
          findFirst: {
            args: Prisma.MateriaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MateriaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaPayload>
          }
          findMany: {
            args: Prisma.MateriaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaPayload>[]
          }
          create: {
            args: Prisma.MateriaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaPayload>
          }
          createMany: {
            args: Prisma.MateriaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MateriaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaPayload>[]
          }
          delete: {
            args: Prisma.MateriaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaPayload>
          }
          update: {
            args: Prisma.MateriaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaPayload>
          }
          deleteMany: {
            args: Prisma.MateriaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MateriaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MateriaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaPayload>[]
          }
          upsert: {
            args: Prisma.MateriaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaPayload>
          }
          aggregate: {
            args: Prisma.MateriaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMateria>
          }
          groupBy: {
            args: Prisma.MateriaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MateriaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MateriaCountArgs<ExtArgs>
            result: $Utils.Optional<MateriaCountAggregateOutputType> | number
          }
        }
      }
      MateriaJefeTp: {
        payload: Prisma.$MateriaJefeTpPayload<ExtArgs>
        fields: Prisma.MateriaJefeTpFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MateriaJefeTpFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaJefeTpPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MateriaJefeTpFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaJefeTpPayload>
          }
          findFirst: {
            args: Prisma.MateriaJefeTpFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaJefeTpPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MateriaJefeTpFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaJefeTpPayload>
          }
          findMany: {
            args: Prisma.MateriaJefeTpFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaJefeTpPayload>[]
          }
          create: {
            args: Prisma.MateriaJefeTpCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaJefeTpPayload>
          }
          createMany: {
            args: Prisma.MateriaJefeTpCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MateriaJefeTpCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaJefeTpPayload>[]
          }
          delete: {
            args: Prisma.MateriaJefeTpDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaJefeTpPayload>
          }
          update: {
            args: Prisma.MateriaJefeTpUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaJefeTpPayload>
          }
          deleteMany: {
            args: Prisma.MateriaJefeTpDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MateriaJefeTpUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MateriaJefeTpUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaJefeTpPayload>[]
          }
          upsert: {
            args: Prisma.MateriaJefeTpUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaJefeTpPayload>
          }
          aggregate: {
            args: Prisma.MateriaJefeTpAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMateriaJefeTp>
          }
          groupBy: {
            args: Prisma.MateriaJefeTpGroupByArgs<ExtArgs>
            result: $Utils.Optional<MateriaJefeTpGroupByOutputType>[]
          }
          count: {
            args: Prisma.MateriaJefeTpCountArgs<ExtArgs>
            result: $Utils.Optional<MateriaJefeTpCountAggregateOutputType> | number
          }
        }
      }
      MateriaCorrelativa: {
        payload: Prisma.$MateriaCorrelativaPayload<ExtArgs>
        fields: Prisma.MateriaCorrelativaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MateriaCorrelativaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaCorrelativaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MateriaCorrelativaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaCorrelativaPayload>
          }
          findFirst: {
            args: Prisma.MateriaCorrelativaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaCorrelativaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MateriaCorrelativaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaCorrelativaPayload>
          }
          findMany: {
            args: Prisma.MateriaCorrelativaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaCorrelativaPayload>[]
          }
          create: {
            args: Prisma.MateriaCorrelativaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaCorrelativaPayload>
          }
          createMany: {
            args: Prisma.MateriaCorrelativaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MateriaCorrelativaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaCorrelativaPayload>[]
          }
          delete: {
            args: Prisma.MateriaCorrelativaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaCorrelativaPayload>
          }
          update: {
            args: Prisma.MateriaCorrelativaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaCorrelativaPayload>
          }
          deleteMany: {
            args: Prisma.MateriaCorrelativaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MateriaCorrelativaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MateriaCorrelativaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaCorrelativaPayload>[]
          }
          upsert: {
            args: Prisma.MateriaCorrelativaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MateriaCorrelativaPayload>
          }
          aggregate: {
            args: Prisma.MateriaCorrelativaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMateriaCorrelativa>
          }
          groupBy: {
            args: Prisma.MateriaCorrelativaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MateriaCorrelativaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MateriaCorrelativaCountArgs<ExtArgs>
            result: $Utils.Optional<MateriaCorrelativaCountAggregateOutputType> | number
          }
        }
      }
      Reserva: {
        payload: Prisma.$ReservaPayload<ExtArgs>
        fields: Prisma.ReservaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          findFirst: {
            args: Prisma.ReservaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          findMany: {
            args: Prisma.ReservaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>[]
          }
          create: {
            args: Prisma.ReservaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          createMany: {
            args: Prisma.ReservaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>[]
          }
          delete: {
            args: Prisma.ReservaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          update: {
            args: Prisma.ReservaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          deleteMany: {
            args: Prisma.ReservaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>[]
          }
          upsert: {
            args: Prisma.ReservaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          aggregate: {
            args: Prisma.ReservaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReserva>
          }
          groupBy: {
            args: Prisma.ReservaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservaCountArgs<ExtArgs>
            result: $Utils.Optional<ReservaCountAggregateOutputType> | number
          }
        }
      }
      ReservaEquipo: {
        payload: Prisma.$ReservaEquipoPayload<ExtArgs>
        fields: Prisma.ReservaEquipoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservaEquipoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEquipoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservaEquipoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEquipoPayload>
          }
          findFirst: {
            args: Prisma.ReservaEquipoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEquipoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservaEquipoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEquipoPayload>
          }
          findMany: {
            args: Prisma.ReservaEquipoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEquipoPayload>[]
          }
          create: {
            args: Prisma.ReservaEquipoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEquipoPayload>
          }
          createMany: {
            args: Prisma.ReservaEquipoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservaEquipoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEquipoPayload>[]
          }
          delete: {
            args: Prisma.ReservaEquipoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEquipoPayload>
          }
          update: {
            args: Prisma.ReservaEquipoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEquipoPayload>
          }
          deleteMany: {
            args: Prisma.ReservaEquipoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservaEquipoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservaEquipoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEquipoPayload>[]
          }
          upsert: {
            args: Prisma.ReservaEquipoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEquipoPayload>
          }
          aggregate: {
            args: Prisma.ReservaEquipoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservaEquipo>
          }
          groupBy: {
            args: Prisma.ReservaEquipoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservaEquipoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservaEquipoCountArgs<ExtArgs>
            result: $Utils.Optional<ReservaEquipoCountAggregateOutputType> | number
          }
        }
      }
      ReservaLibro: {
        payload: Prisma.$ReservaLibroPayload<ExtArgs>
        fields: Prisma.ReservaLibroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservaLibroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLibroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservaLibroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLibroPayload>
          }
          findFirst: {
            args: Prisma.ReservaLibroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLibroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservaLibroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLibroPayload>
          }
          findMany: {
            args: Prisma.ReservaLibroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLibroPayload>[]
          }
          create: {
            args: Prisma.ReservaLibroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLibroPayload>
          }
          createMany: {
            args: Prisma.ReservaLibroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservaLibroCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLibroPayload>[]
          }
          delete: {
            args: Prisma.ReservaLibroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLibroPayload>
          }
          update: {
            args: Prisma.ReservaLibroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLibroPayload>
          }
          deleteMany: {
            args: Prisma.ReservaLibroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservaLibroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservaLibroUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLibroPayload>[]
          }
          upsert: {
            args: Prisma.ReservaLibroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLibroPayload>
          }
          aggregate: {
            args: Prisma.ReservaLibroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservaLibro>
          }
          groupBy: {
            args: Prisma.ReservaLibroGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservaLibroGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservaLibroCountArgs<ExtArgs>
            result: $Utils.Optional<ReservaLibroCountAggregateOutputType> | number
          }
        }
      }
      ReservaLaboratorioCerrado: {
        payload: Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>
        fields: Prisma.ReservaLaboratorioCerradoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservaLaboratorioCerradoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservaLaboratorioCerradoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoPayload>
          }
          findFirst: {
            args: Prisma.ReservaLaboratorioCerradoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservaLaboratorioCerradoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoPayload>
          }
          findMany: {
            args: Prisma.ReservaLaboratorioCerradoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoPayload>[]
          }
          create: {
            args: Prisma.ReservaLaboratorioCerradoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoPayload>
          }
          createMany: {
            args: Prisma.ReservaLaboratorioCerradoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservaLaboratorioCerradoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoPayload>[]
          }
          delete: {
            args: Prisma.ReservaLaboratorioCerradoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoPayload>
          }
          update: {
            args: Prisma.ReservaLaboratorioCerradoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoPayload>
          }
          deleteMany: {
            args: Prisma.ReservaLaboratorioCerradoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservaLaboratorioCerradoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservaLaboratorioCerradoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoPayload>[]
          }
          upsert: {
            args: Prisma.ReservaLaboratorioCerradoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoPayload>
          }
          aggregate: {
            args: Prisma.ReservaLaboratorioCerradoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservaLaboratorioCerrado>
          }
          groupBy: {
            args: Prisma.ReservaLaboratorioCerradoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservaLaboratorioCerradoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservaLaboratorioCerradoCountArgs<ExtArgs>
            result: $Utils.Optional<ReservaLaboratorioCerradoCountAggregateOutputType> | number
          }
        }
      }
      ReservaLaboratorioCerradoEquipo: {
        payload: Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>
        fields: Prisma.ReservaLaboratorioCerradoEquipoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservaLaboratorioCerradoEquipoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservaLaboratorioCerradoEquipoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload>
          }
          findFirst: {
            args: Prisma.ReservaLaboratorioCerradoEquipoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservaLaboratorioCerradoEquipoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload>
          }
          findMany: {
            args: Prisma.ReservaLaboratorioCerradoEquipoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload>[]
          }
          create: {
            args: Prisma.ReservaLaboratorioCerradoEquipoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload>
          }
          createMany: {
            args: Prisma.ReservaLaboratorioCerradoEquipoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservaLaboratorioCerradoEquipoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload>[]
          }
          delete: {
            args: Prisma.ReservaLaboratorioCerradoEquipoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload>
          }
          update: {
            args: Prisma.ReservaLaboratorioCerradoEquipoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload>
          }
          deleteMany: {
            args: Prisma.ReservaLaboratorioCerradoEquipoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservaLaboratorioCerradoEquipoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservaLaboratorioCerradoEquipoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload>[]
          }
          upsert: {
            args: Prisma.ReservaLaboratorioCerradoEquipoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload>
          }
          aggregate: {
            args: Prisma.ReservaLaboratorioCerradoEquipoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservaLaboratorioCerradoEquipo>
          }
          groupBy: {
            args: Prisma.ReservaLaboratorioCerradoEquipoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservaLaboratorioCerradoEquipoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservaLaboratorioCerradoEquipoCountArgs<ExtArgs>
            result: $Utils.Optional<ReservaLaboratorioCerradoEquipoCountAggregateOutputType> | number
          }
        }
      }
      ReservaLaboratorioAbierto: {
        payload: Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>
        fields: Prisma.ReservaLaboratorioAbiertoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservaLaboratorioAbiertoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservaLaboratorioAbiertoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoPayload>
          }
          findFirst: {
            args: Prisma.ReservaLaboratorioAbiertoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservaLaboratorioAbiertoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoPayload>
          }
          findMany: {
            args: Prisma.ReservaLaboratorioAbiertoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoPayload>[]
          }
          create: {
            args: Prisma.ReservaLaboratorioAbiertoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoPayload>
          }
          createMany: {
            args: Prisma.ReservaLaboratorioAbiertoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservaLaboratorioAbiertoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoPayload>[]
          }
          delete: {
            args: Prisma.ReservaLaboratorioAbiertoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoPayload>
          }
          update: {
            args: Prisma.ReservaLaboratorioAbiertoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoPayload>
          }
          deleteMany: {
            args: Prisma.ReservaLaboratorioAbiertoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservaLaboratorioAbiertoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservaLaboratorioAbiertoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoPayload>[]
          }
          upsert: {
            args: Prisma.ReservaLaboratorioAbiertoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoPayload>
          }
          aggregate: {
            args: Prisma.ReservaLaboratorioAbiertoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservaLaboratorioAbierto>
          }
          groupBy: {
            args: Prisma.ReservaLaboratorioAbiertoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservaLaboratorioAbiertoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservaLaboratorioAbiertoCountArgs<ExtArgs>
            result: $Utils.Optional<ReservaLaboratorioAbiertoCountAggregateOutputType> | number
          }
        }
      }
      ReservaLaboratorioAbiertoEquipo: {
        payload: Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>
        fields: Prisma.ReservaLaboratorioAbiertoEquipoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload>
          }
          findFirst: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload>
          }
          findMany: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload>[]
          }
          create: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload>
          }
          createMany: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload>[]
          }
          delete: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload>
          }
          update: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload>
          }
          deleteMany: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload>[]
          }
          upsert: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload>
          }
          aggregate: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservaLaboratorioAbiertoEquipo>
          }
          groupBy: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservaLaboratorioAbiertoEquipoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservaLaboratorioAbiertoEquipoCountArgs<ExtArgs>
            result: $Utils.Optional<ReservaLaboratorioAbiertoEquipoCountAggregateOutputType> | number
          }
        }
      }
      Pantalla: {
        payload: Prisma.$PantallaPayload<ExtArgs>
        fields: Prisma.PantallaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PantallaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PantallaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PantallaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PantallaPayload>
          }
          findFirst: {
            args: Prisma.PantallaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PantallaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PantallaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PantallaPayload>
          }
          findMany: {
            args: Prisma.PantallaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PantallaPayload>[]
          }
          create: {
            args: Prisma.PantallaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PantallaPayload>
          }
          createMany: {
            args: Prisma.PantallaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PantallaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PantallaPayload>[]
          }
          delete: {
            args: Prisma.PantallaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PantallaPayload>
          }
          update: {
            args: Prisma.PantallaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PantallaPayload>
          }
          deleteMany: {
            args: Prisma.PantallaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PantallaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PantallaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PantallaPayload>[]
          }
          upsert: {
            args: Prisma.PantallaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PantallaPayload>
          }
          aggregate: {
            args: Prisma.PantallaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePantalla>
          }
          groupBy: {
            args: Prisma.PantallaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PantallaGroupByOutputType>[]
          }
          count: {
            args: Prisma.PantallaCountArgs<ExtArgs>
            result: $Utils.Optional<PantallaCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      VerificationToken: {
        payload: Prisma.$VerificationTokenPayload<ExtArgs>
        fields: Prisma.VerificationTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findFirst: {
            args: Prisma.VerificationTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findMany: {
            args: Prisma.VerificationTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          create: {
            args: Prisma.VerificationTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          createMany: {
            args: Prisma.VerificationTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificationTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          delete: {
            args: Prisma.VerificationTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          update: {
            args: Prisma.VerificationTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          deleteMany: {
            args: Prisma.VerificationTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VerificationTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          upsert: {
            args: Prisma.VerificationTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          aggregate: {
            args: Prisma.VerificationTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificationToken>
          }
          groupBy: {
            args: Prisma.VerificationTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationTokenCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenCountAggregateOutputType> | number
          }
        }
      }
      Sede: {
        payload: Prisma.$SedePayload<ExtArgs>
        fields: Prisma.SedeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SedeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SedeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          findFirst: {
            args: Prisma.SedeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SedeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          findMany: {
            args: Prisma.SedeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>[]
          }
          create: {
            args: Prisma.SedeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          createMany: {
            args: Prisma.SedeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SedeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>[]
          }
          delete: {
            args: Prisma.SedeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          update: {
            args: Prisma.SedeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          deleteMany: {
            args: Prisma.SedeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SedeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SedeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>[]
          }
          upsert: {
            args: Prisma.SedeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SedePayload>
          }
          aggregate: {
            args: Prisma.SedeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSede>
          }
          groupBy: {
            args: Prisma.SedeGroupByArgs<ExtArgs>
            result: $Utils.Optional<SedeGroupByOutputType>[]
          }
          count: {
            args: Prisma.SedeCountArgs<ExtArgs>
            result: $Utils.Optional<SedeCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Tutor: {
        payload: Prisma.$TutorPayload<ExtArgs>
        fields: Prisma.TutorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TutorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TutorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          findFirst: {
            args: Prisma.TutorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TutorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          findMany: {
            args: Prisma.TutorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>[]
          }
          create: {
            args: Prisma.TutorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          createMany: {
            args: Prisma.TutorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TutorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>[]
          }
          delete: {
            args: Prisma.TutorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          update: {
            args: Prisma.TutorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          deleteMany: {
            args: Prisma.TutorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TutorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TutorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>[]
          }
          upsert: {
            args: Prisma.TutorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TutorPayload>
          }
          aggregate: {
            args: Prisma.TutorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTutor>
          }
          groupBy: {
            args: Prisma.TutorGroupByArgs<ExtArgs>
            result: $Utils.Optional<TutorGroupByOutputType>[]
          }
          count: {
            args: Prisma.TutorCountArgs<ExtArgs>
            result: $Utils.Optional<TutorCountAggregateOutputType> | number
          }
        }
      }
      UsuarioRol: {
        payload: Prisma.$UsuarioRolPayload<ExtArgs>
        fields: Prisma.UsuarioRolFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioRolFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioRolPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioRolFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioRolPayload>
          }
          findFirst: {
            args: Prisma.UsuarioRolFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioRolPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioRolFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioRolPayload>
          }
          findMany: {
            args: Prisma.UsuarioRolFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioRolPayload>[]
          }
          create: {
            args: Prisma.UsuarioRolCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioRolPayload>
          }
          createMany: {
            args: Prisma.UsuarioRolCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioRolCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioRolPayload>[]
          }
          delete: {
            args: Prisma.UsuarioRolDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioRolPayload>
          }
          update: {
            args: Prisma.UsuarioRolUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioRolPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioRolDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioRolUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioRolUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioRolPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioRolUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioRolPayload>
          }
          aggregate: {
            args: Prisma.UsuarioRolAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarioRol>
          }
          groupBy: {
            args: Prisma.UsuarioRolGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioRolGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioRolCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioRolCountAggregateOutputType> | number
          }
        }
      }
      Rol: {
        payload: Prisma.$RolPayload<ExtArgs>
        fields: Prisma.RolFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RolFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RolFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          findFirst: {
            args: Prisma.RolFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RolFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          findMany: {
            args: Prisma.RolFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          create: {
            args: Prisma.RolCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          createMany: {
            args: Prisma.RolCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RolCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          delete: {
            args: Prisma.RolDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          update: {
            args: Prisma.RolUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          deleteMany: {
            args: Prisma.RolDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RolUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RolUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          upsert: {
            args: Prisma.RolUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          aggregate: {
            args: Prisma.RolAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRol>
          }
          groupBy: {
            args: Prisma.RolGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolGroupByOutputType>[]
          }
          count: {
            args: Prisma.RolCountArgs<ExtArgs>
            result: $Utils.Optional<RolCountAggregateOutputType> | number
          }
        }
      }
      RolPermiso: {
        payload: Prisma.$RolPermisoPayload<ExtArgs>
        fields: Prisma.RolPermisoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RolPermisoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPermisoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RolPermisoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPermisoPayload>
          }
          findFirst: {
            args: Prisma.RolPermisoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPermisoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RolPermisoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPermisoPayload>
          }
          findMany: {
            args: Prisma.RolPermisoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPermisoPayload>[]
          }
          create: {
            args: Prisma.RolPermisoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPermisoPayload>
          }
          createMany: {
            args: Prisma.RolPermisoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RolPermisoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPermisoPayload>[]
          }
          delete: {
            args: Prisma.RolPermisoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPermisoPayload>
          }
          update: {
            args: Prisma.RolPermisoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPermisoPayload>
          }
          deleteMany: {
            args: Prisma.RolPermisoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RolPermisoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RolPermisoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPermisoPayload>[]
          }
          upsert: {
            args: Prisma.RolPermisoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPermisoPayload>
          }
          aggregate: {
            args: Prisma.RolPermisoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRolPermiso>
          }
          groupBy: {
            args: Prisma.RolPermisoGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolPermisoGroupByOutputType>[]
          }
          count: {
            args: Prisma.RolPermisoCountArgs<ExtArgs>
            result: $Utils.Optional<RolPermisoCountAggregateOutputType> | number
          }
        }
      }
      Permiso: {
        payload: Prisma.$PermisoPayload<ExtArgs>
        fields: Prisma.PermisoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermisoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermisoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          findFirst: {
            args: Prisma.PermisoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermisoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          findMany: {
            args: Prisma.PermisoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          create: {
            args: Prisma.PermisoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          createMany: {
            args: Prisma.PermisoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermisoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          delete: {
            args: Prisma.PermisoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          update: {
            args: Prisma.PermisoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          deleteMany: {
            args: Prisma.PermisoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermisoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermisoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          upsert: {
            args: Prisma.PermisoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          aggregate: {
            args: Prisma.PermisoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermiso>
          }
          groupBy: {
            args: Prisma.PermisoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermisoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermisoCountArgs<ExtArgs>
            result: $Utils.Optional<PermisoCountAggregateOutputType> | number
          }
        }
      }
      Provincia: {
        payload: Prisma.$ProvinciaPayload<ExtArgs>
        fields: Prisma.ProvinciaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProvinciaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProvinciaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciaPayload>
          }
          findFirst: {
            args: Prisma.ProvinciaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProvinciaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciaPayload>
          }
          findMany: {
            args: Prisma.ProvinciaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciaPayload>[]
          }
          create: {
            args: Prisma.ProvinciaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciaPayload>
          }
          createMany: {
            args: Prisma.ProvinciaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProvinciaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciaPayload>[]
          }
          delete: {
            args: Prisma.ProvinciaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciaPayload>
          }
          update: {
            args: Prisma.ProvinciaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciaPayload>
          }
          deleteMany: {
            args: Prisma.ProvinciaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProvinciaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProvinciaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciaPayload>[]
          }
          upsert: {
            args: Prisma.ProvinciaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciaPayload>
          }
          aggregate: {
            args: Prisma.ProvinciaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvincia>
          }
          groupBy: {
            args: Prisma.ProvinciaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProvinciaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProvinciaCountArgs<ExtArgs>
            result: $Utils.Optional<ProvinciaCountAggregateOutputType> | number
          }
        }
      }
      Pais: {
        payload: Prisma.$PaisPayload<ExtArgs>
        fields: Prisma.PaisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaisFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaisFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisPayload>
          }
          findFirst: {
            args: Prisma.PaisFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaisFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisPayload>
          }
          findMany: {
            args: Prisma.PaisFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisPayload>[]
          }
          create: {
            args: Prisma.PaisCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisPayload>
          }
          createMany: {
            args: Prisma.PaisCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaisCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisPayload>[]
          }
          delete: {
            args: Prisma.PaisDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisPayload>
          }
          update: {
            args: Prisma.PaisUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisPayload>
          }
          deleteMany: {
            args: Prisma.PaisDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaisUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaisUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisPayload>[]
          }
          upsert: {
            args: Prisma.PaisUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisPayload>
          }
          aggregate: {
            args: Prisma.PaisAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePais>
          }
          groupBy: {
            args: Prisma.PaisGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaisGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaisCountArgs<ExtArgs>
            result: $Utils.Optional<PaisCountAggregateOutputType> | number
          }
        }
      }
      DocumentoTipo: {
        payload: Prisma.$DocumentoTipoPayload<ExtArgs>
        fields: Prisma.DocumentoTipoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DocumentoTipoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoTipoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DocumentoTipoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoTipoPayload>
          }
          findFirst: {
            args: Prisma.DocumentoTipoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoTipoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DocumentoTipoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoTipoPayload>
          }
          findMany: {
            args: Prisma.DocumentoTipoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoTipoPayload>[]
          }
          create: {
            args: Prisma.DocumentoTipoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoTipoPayload>
          }
          createMany: {
            args: Prisma.DocumentoTipoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DocumentoTipoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoTipoPayload>[]
          }
          delete: {
            args: Prisma.DocumentoTipoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoTipoPayload>
          }
          update: {
            args: Prisma.DocumentoTipoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoTipoPayload>
          }
          deleteMany: {
            args: Prisma.DocumentoTipoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DocumentoTipoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DocumentoTipoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoTipoPayload>[]
          }
          upsert: {
            args: Prisma.DocumentoTipoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoTipoPayload>
          }
          aggregate: {
            args: Prisma.DocumentoTipoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocumentoTipo>
          }
          groupBy: {
            args: Prisma.DocumentoTipoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentoTipoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DocumentoTipoCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentoTipoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    libro?: LibroOmit
    libroMateria?: LibroMateriaOmit
    libroAutor?: LibroAutorOmit
    libroIdioma?: LibroIdiomaOmit
    libroEditorial?: LibroEditorialOmit
    curso?: CursoOmit
    cursoAyudante?: CursoAyudanteOmit
    division?: DivisionOmit
    equipo?: EquipoOmit
    equipoMarca?: EquipoMarcaOmit
    equipoTipo?: EquipoTipoOmit
    equipoEstado?: EquipoEstadoOmit
    laboratorio?: LaboratorioOmit
    armario?: ArmarioOmit
    estante?: EstanteOmit
    software?: SoftwareOmit
    softwareLaboratorio?: SoftwareLaboratorioOmit
    mails?: MailsOmit
    materia?: MateriaOmit
    materiaJefeTp?: MateriaJefeTpOmit
    materiaCorrelativa?: MateriaCorrelativaOmit
    reserva?: ReservaOmit
    reservaEquipo?: ReservaEquipoOmit
    reservaLibro?: ReservaLibroOmit
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoOmit
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoOmit
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoOmit
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoOmit
    pantalla?: PantallaOmit
    account?: AccountOmit
    session?: SessionOmit
    verificationToken?: VerificationTokenOmit
    sede?: SedeOmit
    user?: UserOmit
    tutor?: TutorOmit
    usuarioRol?: UsuarioRolOmit
    rol?: RolOmit
    rolPermiso?: RolPermisoOmit
    permiso?: PermisoOmit
    provincia?: ProvinciaOmit
    pais?: PaisOmit
    documentoTipo?: DocumentoTipoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type LibroCountOutputType
   */

  export type LibroCountOutputType = {
    materias: number
    reservas: number
  }

  export type LibroCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materias?: boolean | LibroCountOutputTypeCountMateriasArgs
    reservas?: boolean | LibroCountOutputTypeCountReservasArgs
  }

  // Custom InputTypes
  /**
   * LibroCountOutputType without action
   */
  export type LibroCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroCountOutputType
     */
    select?: LibroCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LibroCountOutputType without action
   */
  export type LibroCountOutputTypeCountMateriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroMateriaWhereInput
  }

  /**
   * LibroCountOutputType without action
   */
  export type LibroCountOutputTypeCountReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLibroWhereInput
  }


  /**
   * Count Type LibroAutorCountOutputType
   */

  export type LibroAutorCountOutputType = {
    libros: number
  }

  export type LibroAutorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    libros?: boolean | LibroAutorCountOutputTypeCountLibrosArgs
  }

  // Custom InputTypes
  /**
   * LibroAutorCountOutputType without action
   */
  export type LibroAutorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutorCountOutputType
     */
    select?: LibroAutorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LibroAutorCountOutputType without action
   */
  export type LibroAutorCountOutputTypeCountLibrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroWhereInput
  }


  /**
   * Count Type LibroIdiomaCountOutputType
   */

  export type LibroIdiomaCountOutputType = {
    libros: number
  }

  export type LibroIdiomaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    libros?: boolean | LibroIdiomaCountOutputTypeCountLibrosArgs
  }

  // Custom InputTypes
  /**
   * LibroIdiomaCountOutputType without action
   */
  export type LibroIdiomaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdiomaCountOutputType
     */
    select?: LibroIdiomaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LibroIdiomaCountOutputType without action
   */
  export type LibroIdiomaCountOutputTypeCountLibrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroWhereInput
  }


  /**
   * Count Type LibroEditorialCountOutputType
   */

  export type LibroEditorialCountOutputType = {
    libros: number
  }

  export type LibroEditorialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    libros?: boolean | LibroEditorialCountOutputTypeCountLibrosArgs
  }

  // Custom InputTypes
  /**
   * LibroEditorialCountOutputType without action
   */
  export type LibroEditorialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorialCountOutputType
     */
    select?: LibroEditorialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LibroEditorialCountOutputType without action
   */
  export type LibroEditorialCountOutputTypeCountLibrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroWhereInput
  }


  /**
   * Count Type CursoCountOutputType
   */

  export type CursoCountOutputType = {
    ayudantes: number
    reservaLaboratorioCerrado: number
  }

  export type CursoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ayudantes?: boolean | CursoCountOutputTypeCountAyudantesArgs
    reservaLaboratorioCerrado?: boolean | CursoCountOutputTypeCountReservaLaboratorioCerradoArgs
  }

  // Custom InputTypes
  /**
   * CursoCountOutputType without action
   */
  export type CursoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoCountOutputType
     */
    select?: CursoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CursoCountOutputType without action
   */
  export type CursoCountOutputTypeCountAyudantesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoAyudanteWhereInput
  }

  /**
   * CursoCountOutputType without action
   */
  export type CursoCountOutputTypeCountReservaLaboratorioCerradoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioCerradoWhereInput
  }


  /**
   * Count Type DivisionCountOutputType
   */

  export type DivisionCountOutputType = {
    cursos: number
  }

  export type DivisionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | DivisionCountOutputTypeCountCursosArgs
  }

  // Custom InputTypes
  /**
   * DivisionCountOutputType without action
   */
  export type DivisionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DivisionCountOutputType
     */
    select?: DivisionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DivisionCountOutputType without action
   */
  export type DivisionCountOutputTypeCountCursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoWhereInput
  }


  /**
   * Count Type EquipoCountOutputType
   */

  export type EquipoCountOutputType = {
    reservas: number
  }

  export type EquipoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | EquipoCountOutputTypeCountReservasArgs
  }

  // Custom InputTypes
  /**
   * EquipoCountOutputType without action
   */
  export type EquipoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoCountOutputType
     */
    select?: EquipoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EquipoCountOutputType without action
   */
  export type EquipoCountOutputTypeCountReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaEquipoWhereInput
  }


  /**
   * Count Type EquipoMarcaCountOutputType
   */

  export type EquipoMarcaCountOutputType = {
    equipos: number
  }

  export type EquipoMarcaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipos?: boolean | EquipoMarcaCountOutputTypeCountEquiposArgs
  }

  // Custom InputTypes
  /**
   * EquipoMarcaCountOutputType without action
   */
  export type EquipoMarcaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarcaCountOutputType
     */
    select?: EquipoMarcaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EquipoMarcaCountOutputType without action
   */
  export type EquipoMarcaCountOutputTypeCountEquiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipoWhereInput
  }


  /**
   * Count Type EquipoTipoCountOutputType
   */

  export type EquipoTipoCountOutputType = {
    equipos: number
    reservaLaboratorioCerradoEquipo: number
    reservaLaboratorioAbiertoEquipo: number
  }

  export type EquipoTipoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipos?: boolean | EquipoTipoCountOutputTypeCountEquiposArgs
    reservaLaboratorioCerradoEquipo?: boolean | EquipoTipoCountOutputTypeCountReservaLaboratorioCerradoEquipoArgs
    reservaLaboratorioAbiertoEquipo?: boolean | EquipoTipoCountOutputTypeCountReservaLaboratorioAbiertoEquipoArgs
  }

  // Custom InputTypes
  /**
   * EquipoTipoCountOutputType without action
   */
  export type EquipoTipoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipoCountOutputType
     */
    select?: EquipoTipoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EquipoTipoCountOutputType without action
   */
  export type EquipoTipoCountOutputTypeCountEquiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipoWhereInput
  }

  /**
   * EquipoTipoCountOutputType without action
   */
  export type EquipoTipoCountOutputTypeCountReservaLaboratorioCerradoEquipoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioCerradoEquipoWhereInput
  }

  /**
   * EquipoTipoCountOutputType without action
   */
  export type EquipoTipoCountOutputTypeCountReservaLaboratorioAbiertoEquipoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
  }


  /**
   * Count Type EquipoEstadoCountOutputType
   */

  export type EquipoEstadoCountOutputType = {
    equipos: number
  }

  export type EquipoEstadoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipos?: boolean | EquipoEstadoCountOutputTypeCountEquiposArgs
  }

  // Custom InputTypes
  /**
   * EquipoEstadoCountOutputType without action
   */
  export type EquipoEstadoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstadoCountOutputType
     */
    select?: EquipoEstadoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EquipoEstadoCountOutputType without action
   */
  export type EquipoEstadoCountOutputTypeCountEquiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipoWhereInput
  }


  /**
   * Count Type LaboratorioCountOutputType
   */

  export type LaboratorioCountOutputType = {
    software: number
    armarios: number
    equipos: number
    libros: number
    reservaLaboratorioCerrado: number
    reservaLaboratorioAbierto: number
  }

  export type LaboratorioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    software?: boolean | LaboratorioCountOutputTypeCountSoftwareArgs
    armarios?: boolean | LaboratorioCountOutputTypeCountArmariosArgs
    equipos?: boolean | LaboratorioCountOutputTypeCountEquiposArgs
    libros?: boolean | LaboratorioCountOutputTypeCountLibrosArgs
    reservaLaboratorioCerrado?: boolean | LaboratorioCountOutputTypeCountReservaLaboratorioCerradoArgs
    reservaLaboratorioAbierto?: boolean | LaboratorioCountOutputTypeCountReservaLaboratorioAbiertoArgs
  }

  // Custom InputTypes
  /**
   * LaboratorioCountOutputType without action
   */
  export type LaboratorioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LaboratorioCountOutputType
     */
    select?: LaboratorioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LaboratorioCountOutputType without action
   */
  export type LaboratorioCountOutputTypeCountSoftwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareLaboratorioWhereInput
  }

  /**
   * LaboratorioCountOutputType without action
   */
  export type LaboratorioCountOutputTypeCountArmariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArmarioWhereInput
  }

  /**
   * LaboratorioCountOutputType without action
   */
  export type LaboratorioCountOutputTypeCountEquiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipoWhereInput
  }

  /**
   * LaboratorioCountOutputType without action
   */
  export type LaboratorioCountOutputTypeCountLibrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroWhereInput
  }

  /**
   * LaboratorioCountOutputType without action
   */
  export type LaboratorioCountOutputTypeCountReservaLaboratorioCerradoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioCerradoWhereInput
  }

  /**
   * LaboratorioCountOutputType without action
   */
  export type LaboratorioCountOutputTypeCountReservaLaboratorioAbiertoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioAbiertoWhereInput
  }


  /**
   * Count Type ArmarioCountOutputType
   */

  export type ArmarioCountOutputType = {
    estantes: number
    equipos: number
    libros: number
  }

  export type ArmarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estantes?: boolean | ArmarioCountOutputTypeCountEstantesArgs
    equipos?: boolean | ArmarioCountOutputTypeCountEquiposArgs
    libros?: boolean | ArmarioCountOutputTypeCountLibrosArgs
  }

  // Custom InputTypes
  /**
   * ArmarioCountOutputType without action
   */
  export type ArmarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArmarioCountOutputType
     */
    select?: ArmarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ArmarioCountOutputType without action
   */
  export type ArmarioCountOutputTypeCountEstantesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstanteWhereInput
  }

  /**
   * ArmarioCountOutputType without action
   */
  export type ArmarioCountOutputTypeCountEquiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipoWhereInput
  }

  /**
   * ArmarioCountOutputType without action
   */
  export type ArmarioCountOutputTypeCountLibrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroWhereInput
  }


  /**
   * Count Type EstanteCountOutputType
   */

  export type EstanteCountOutputType = {
    equipos: number
    libros: number
  }

  export type EstanteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipos?: boolean | EstanteCountOutputTypeCountEquiposArgs
    libros?: boolean | EstanteCountOutputTypeCountLibrosArgs
  }

  // Custom InputTypes
  /**
   * EstanteCountOutputType without action
   */
  export type EstanteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstanteCountOutputType
     */
    select?: EstanteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstanteCountOutputType without action
   */
  export type EstanteCountOutputTypeCountEquiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipoWhereInput
  }

  /**
   * EstanteCountOutputType without action
   */
  export type EstanteCountOutputTypeCountLibrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroWhereInput
  }


  /**
   * Count Type SoftwareCountOutputType
   */

  export type SoftwareCountOutputType = {
    laboratorios: number
  }

  export type SoftwareCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    laboratorios?: boolean | SoftwareCountOutputTypeCountLaboratoriosArgs
  }

  // Custom InputTypes
  /**
   * SoftwareCountOutputType without action
   */
  export type SoftwareCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCountOutputType
     */
    select?: SoftwareCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SoftwareCountOutputType without action
   */
  export type SoftwareCountOutputTypeCountLaboratoriosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareLaboratorioWhereInput
  }


  /**
   * Count Type MateriaCountOutputType
   */

  export type MateriaCountOutputType = {
    jefeTrabajoPracticos: number
    cursos: number
    libros: number
    materiaPrerequisito: number
    correlativa: number
    reservaLaboratorioCerrado: number
  }

  export type MateriaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jefeTrabajoPracticos?: boolean | MateriaCountOutputTypeCountJefeTrabajoPracticosArgs
    cursos?: boolean | MateriaCountOutputTypeCountCursosArgs
    libros?: boolean | MateriaCountOutputTypeCountLibrosArgs
    materiaPrerequisito?: boolean | MateriaCountOutputTypeCountMateriaPrerequisitoArgs
    correlativa?: boolean | MateriaCountOutputTypeCountCorrelativaArgs
    reservaLaboratorioCerrado?: boolean | MateriaCountOutputTypeCountReservaLaboratorioCerradoArgs
  }

  // Custom InputTypes
  /**
   * MateriaCountOutputType without action
   */
  export type MateriaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCountOutputType
     */
    select?: MateriaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MateriaCountOutputType without action
   */
  export type MateriaCountOutputTypeCountJefeTrabajoPracticosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MateriaJefeTpWhereInput
  }

  /**
   * MateriaCountOutputType without action
   */
  export type MateriaCountOutputTypeCountCursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoWhereInput
  }

  /**
   * MateriaCountOutputType without action
   */
  export type MateriaCountOutputTypeCountLibrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroMateriaWhereInput
  }

  /**
   * MateriaCountOutputType without action
   */
  export type MateriaCountOutputTypeCountMateriaPrerequisitoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MateriaCorrelativaWhereInput
  }

  /**
   * MateriaCountOutputType without action
   */
  export type MateriaCountOutputTypeCountCorrelativaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MateriaCorrelativaWhereInput
  }

  /**
   * MateriaCountOutputType without action
   */
  export type MateriaCountOutputTypeCountReservaLaboratorioCerradoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioCerradoWhereInput
  }


  /**
   * Count Type ReservaLaboratorioCerradoCountOutputType
   */

  export type ReservaLaboratorioCerradoCountOutputType = {
    equipoReservado: number
  }

  export type ReservaLaboratorioCerradoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipoReservado?: boolean | ReservaLaboratorioCerradoCountOutputTypeCountEquipoReservadoArgs
  }

  // Custom InputTypes
  /**
   * ReservaLaboratorioCerradoCountOutputType without action
   */
  export type ReservaLaboratorioCerradoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoCountOutputType
     */
    select?: ReservaLaboratorioCerradoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReservaLaboratorioCerradoCountOutputType without action
   */
  export type ReservaLaboratorioCerradoCountOutputTypeCountEquipoReservadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioCerradoEquipoWhereInput
  }


  /**
   * Count Type ReservaLaboratorioAbiertoCountOutputType
   */

  export type ReservaLaboratorioAbiertoCountOutputType = {
    equipoReservado: number
  }

  export type ReservaLaboratorioAbiertoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipoReservado?: boolean | ReservaLaboratorioAbiertoCountOutputTypeCountEquipoReservadoArgs
  }

  // Custom InputTypes
  /**
   * ReservaLaboratorioAbiertoCountOutputType without action
   */
  export type ReservaLaboratorioAbiertoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoCountOutputType
     */
    select?: ReservaLaboratorioAbiertoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReservaLaboratorioAbiertoCountOutputType without action
   */
  export type ReservaLaboratorioAbiertoCountOutputTypeCountEquipoReservadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
  }


  /**
   * Count Type SedeCountOutputType
   */

  export type SedeCountOutputType = {
    cursos: number
    equipos: number
    laboratorios: number
    libros: number
    ReservaLaboratorioAbierto: number
    ReservaLaboratorioCerrado: number
    Pantalla: number
  }

  export type SedeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | SedeCountOutputTypeCountCursosArgs
    equipos?: boolean | SedeCountOutputTypeCountEquiposArgs
    laboratorios?: boolean | SedeCountOutputTypeCountLaboratoriosArgs
    libros?: boolean | SedeCountOutputTypeCountLibrosArgs
    ReservaLaboratorioAbierto?: boolean | SedeCountOutputTypeCountReservaLaboratorioAbiertoArgs
    ReservaLaboratorioCerrado?: boolean | SedeCountOutputTypeCountReservaLaboratorioCerradoArgs
    Pantalla?: boolean | SedeCountOutputTypeCountPantallaArgs
  }

  // Custom InputTypes
  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SedeCountOutputType
     */
    select?: SedeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountCursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoWhereInput
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountEquiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipoWhereInput
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountLaboratoriosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LaboratorioWhereInput
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountLibrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroWhereInput
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountReservaLaboratorioAbiertoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioAbiertoWhereInput
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountReservaLaboratorioCerradoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioCerradoWhereInput
  }

  /**
   * SedeCountOutputType without action
   */
  export type SedeCountOutputTypeCountPantallaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PantallaWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    accounts: number
    sessions: number
    usuarioRol: number
    reservasSolicitadas: number
    reservasRenovadas: number
    reservasComoTutor: number
    reservasAprobadas: number
    reservasRechazadas: number
    reservasRecibidas: number
    cursosComoAyudante: number
    cursosComoProfesor: number
    MateriaJefeTp: number
    materiasDirector: number
    ReservaLaboratorioCerrado: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | UserCountOutputTypeCountAccountsArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    usuarioRol?: boolean | UserCountOutputTypeCountUsuarioRolArgs
    reservasSolicitadas?: boolean | UserCountOutputTypeCountReservasSolicitadasArgs
    reservasRenovadas?: boolean | UserCountOutputTypeCountReservasRenovadasArgs
    reservasComoTutor?: boolean | UserCountOutputTypeCountReservasComoTutorArgs
    reservasAprobadas?: boolean | UserCountOutputTypeCountReservasAprobadasArgs
    reservasRechazadas?: boolean | UserCountOutputTypeCountReservasRechazadasArgs
    reservasRecibidas?: boolean | UserCountOutputTypeCountReservasRecibidasArgs
    cursosComoAyudante?: boolean | UserCountOutputTypeCountCursosComoAyudanteArgs
    cursosComoProfesor?: boolean | UserCountOutputTypeCountCursosComoProfesorArgs
    MateriaJefeTp?: boolean | UserCountOutputTypeCountMateriaJefeTpArgs
    materiasDirector?: boolean | UserCountOutputTypeCountMateriasDirectorArgs
    ReservaLaboratorioCerrado?: boolean | UserCountOutputTypeCountReservaLaboratorioCerradoArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUsuarioRolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioRolWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReservasSolicitadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReservasRenovadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReservasComoTutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReservasAprobadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReservasRechazadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReservasRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCursosComoAyudanteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoAyudanteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCursosComoProfesorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMateriaJefeTpArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MateriaJefeTpWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMateriasDirectorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MateriaWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReservaLaboratorioCerradoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioCerradoWhereInput
  }


  /**
   * Count Type RolCountOutputType
   */

  export type RolCountOutputType = {
    usuarios: number
    rolPermiso: number
  }

  export type RolCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | RolCountOutputTypeCountUsuariosArgs
    rolPermiso?: boolean | RolCountOutputTypeCountRolPermisoArgs
  }

  // Custom InputTypes
  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolCountOutputType
     */
    select?: RolCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioRolWhereInput
  }

  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeCountRolPermisoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolPermisoWhereInput
  }


  /**
   * Count Type PermisoCountOutputType
   */

  export type PermisoCountOutputType = {
    rolPermiso: number
  }

  export type PermisoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rolPermiso?: boolean | PermisoCountOutputTypeCountRolPermisoArgs
  }

  // Custom InputTypes
  /**
   * PermisoCountOutputType without action
   */
  export type PermisoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoCountOutputType
     */
    select?: PermisoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermisoCountOutputType without action
   */
  export type PermisoCountOutputTypeCountRolPermisoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolPermisoWhereInput
  }


  /**
   * Count Type ProvinciaCountOutputType
   */

  export type ProvinciaCountOutputType = {
    usuarios: number
  }

  export type ProvinciaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | ProvinciaCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * ProvinciaCountOutputType without action
   */
  export type ProvinciaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProvinciaCountOutputType
     */
    select?: ProvinciaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProvinciaCountOutputType without action
   */
  export type ProvinciaCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type PaisCountOutputType
   */

  export type PaisCountOutputType = {
    usuarios: number
    provincias: number
  }

  export type PaisCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | PaisCountOutputTypeCountUsuariosArgs
    provincias?: boolean | PaisCountOutputTypeCountProvinciasArgs
  }

  // Custom InputTypes
  /**
   * PaisCountOutputType without action
   */
  export type PaisCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaisCountOutputType
     */
    select?: PaisCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PaisCountOutputType without action
   */
  export type PaisCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * PaisCountOutputType without action
   */
  export type PaisCountOutputTypeCountProvinciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProvinciaWhereInput
  }


  /**
   * Count Type DocumentoTipoCountOutputType
   */

  export type DocumentoTipoCountOutputType = {
    usuarios: number
  }

  export type DocumentoTipoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | DocumentoTipoCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * DocumentoTipoCountOutputType without action
   */
  export type DocumentoTipoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipoCountOutputType
     */
    select?: DocumentoTipoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DocumentoTipoCountOutputType without action
   */
  export type DocumentoTipoCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Libro
   */

  export type AggregateLibro = {
    _count: LibroCountAggregateOutputType | null
    _avg: LibroAvgAggregateOutputType | null
    _sum: LibroSumAggregateOutputType | null
    _min: LibroMinAggregateOutputType | null
    _max: LibroMaxAggregateOutputType | null
  }

  export type LibroAvgAggregateOutputType = {
    id: number | null
    anio: number | null
    laboratorioId: number | null
    armarioId: number | null
    estanteId: number | null
    autorId: number | null
    idiomaId: number | null
    editorialId: number | null
    sedeId: number | null
  }

  export type LibroSumAggregateOutputType = {
    id: number | null
    anio: number | null
    laboratorioId: number | null
    armarioId: number | null
    estanteId: number | null
    autorId: number | null
    idiomaId: number | null
    editorialId: number | null
    sedeId: number | null
  }

  export type LibroMinAggregateOutputType = {
    id: number | null
    bibliotecaId: string | null
    inventarioId: string | null
    titulo: string | null
    anio: number | null
    isbn: string | null
    laboratorioId: number | null
    armarioId: number | null
    estanteId: number | null
    autorId: number | null
    idiomaId: number | null
    editorialId: number | null
    sedeId: number | null
    disponible: boolean | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type LibroMaxAggregateOutputType = {
    id: number | null
    bibliotecaId: string | null
    inventarioId: string | null
    titulo: string | null
    anio: number | null
    isbn: string | null
    laboratorioId: number | null
    armarioId: number | null
    estanteId: number | null
    autorId: number | null
    idiomaId: number | null
    editorialId: number | null
    sedeId: number | null
    disponible: boolean | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type LibroCountAggregateOutputType = {
    id: number
    bibliotecaId: number
    inventarioId: number
    titulo: number
    anio: number
    isbn: number
    laboratorioId: number
    armarioId: number
    estanteId: number
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type LibroAvgAggregateInputType = {
    id?: true
    anio?: true
    laboratorioId?: true
    armarioId?: true
    estanteId?: true
    autorId?: true
    idiomaId?: true
    editorialId?: true
    sedeId?: true
  }

  export type LibroSumAggregateInputType = {
    id?: true
    anio?: true
    laboratorioId?: true
    armarioId?: true
    estanteId?: true
    autorId?: true
    idiomaId?: true
    editorialId?: true
    sedeId?: true
  }

  export type LibroMinAggregateInputType = {
    id?: true
    bibliotecaId?: true
    inventarioId?: true
    titulo?: true
    anio?: true
    isbn?: true
    laboratorioId?: true
    armarioId?: true
    estanteId?: true
    autorId?: true
    idiomaId?: true
    editorialId?: true
    sedeId?: true
    disponible?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type LibroMaxAggregateInputType = {
    id?: true
    bibliotecaId?: true
    inventarioId?: true
    titulo?: true
    anio?: true
    isbn?: true
    laboratorioId?: true
    armarioId?: true
    estanteId?: true
    autorId?: true
    idiomaId?: true
    editorialId?: true
    sedeId?: true
    disponible?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type LibroCountAggregateInputType = {
    id?: true
    bibliotecaId?: true
    inventarioId?: true
    titulo?: true
    anio?: true
    isbn?: true
    laboratorioId?: true
    armarioId?: true
    estanteId?: true
    autorId?: true
    idiomaId?: true
    editorialId?: true
    sedeId?: true
    disponible?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type LibroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Libro to aggregate.
     */
    where?: LibroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Libros to fetch.
     */
    orderBy?: LibroOrderByWithRelationInput | LibroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LibroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Libros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Libros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Libros
    **/
    _count?: true | LibroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LibroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LibroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LibroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LibroMaxAggregateInputType
  }

  export type GetLibroAggregateType<T extends LibroAggregateArgs> = {
        [P in keyof T & keyof AggregateLibro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLibro[P]>
      : GetScalarType<T[P], AggregateLibro[P]>
  }




  export type LibroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroWhereInput
    orderBy?: LibroOrderByWithAggregationInput | LibroOrderByWithAggregationInput[]
    by: LibroScalarFieldEnum[] | LibroScalarFieldEnum
    having?: LibroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LibroCountAggregateInputType | true
    _avg?: LibroAvgAggregateInputType
    _sum?: LibroSumAggregateInputType
    _min?: LibroMinAggregateInputType
    _max?: LibroMaxAggregateInputType
  }

  export type LibroGroupByOutputType = {
    id: number
    bibliotecaId: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn: string | null
    laboratorioId: number
    armarioId: number | null
    estanteId: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible: boolean
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: LibroCountAggregateOutputType | null
    _avg: LibroAvgAggregateOutputType | null
    _sum: LibroSumAggregateOutputType | null
    _min: LibroMinAggregateOutputType | null
    _max: LibroMaxAggregateOutputType | null
  }

  type GetLibroGroupByPayload<T extends LibroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LibroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LibroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LibroGroupByOutputType[P]>
            : GetScalarType<T[P], LibroGroupByOutputType[P]>
        }
      >
    >


  export type LibroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bibliotecaId?: boolean
    inventarioId?: boolean
    titulo?: boolean
    anio?: boolean
    isbn?: boolean
    laboratorioId?: boolean
    armarioId?: boolean
    estanteId?: boolean
    autorId?: boolean
    idiomaId?: boolean
    editorialId?: boolean
    sedeId?: boolean
    disponible?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    materias?: boolean | Libro$materiasArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Libro$armarioArgs<ExtArgs>
    estante?: boolean | Libro$estanteArgs<ExtArgs>
    autor?: boolean | LibroAutorDefaultArgs<ExtArgs>
    idioma?: boolean | LibroIdiomaDefaultArgs<ExtArgs>
    editorial?: boolean | LibroEditorialDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    reservas?: boolean | Libro$reservasArgs<ExtArgs>
    _count?: boolean | LibroCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["libro"]>

  export type LibroSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bibliotecaId?: boolean
    inventarioId?: boolean
    titulo?: boolean
    anio?: boolean
    isbn?: boolean
    laboratorioId?: boolean
    armarioId?: boolean
    estanteId?: boolean
    autorId?: boolean
    idiomaId?: boolean
    editorialId?: boolean
    sedeId?: boolean
    disponible?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Libro$armarioArgs<ExtArgs>
    estante?: boolean | Libro$estanteArgs<ExtArgs>
    autor?: boolean | LibroAutorDefaultArgs<ExtArgs>
    idioma?: boolean | LibroIdiomaDefaultArgs<ExtArgs>
    editorial?: boolean | LibroEditorialDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["libro"]>

  export type LibroSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bibliotecaId?: boolean
    inventarioId?: boolean
    titulo?: boolean
    anio?: boolean
    isbn?: boolean
    laboratorioId?: boolean
    armarioId?: boolean
    estanteId?: boolean
    autorId?: boolean
    idiomaId?: boolean
    editorialId?: boolean
    sedeId?: boolean
    disponible?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Libro$armarioArgs<ExtArgs>
    estante?: boolean | Libro$estanteArgs<ExtArgs>
    autor?: boolean | LibroAutorDefaultArgs<ExtArgs>
    idioma?: boolean | LibroIdiomaDefaultArgs<ExtArgs>
    editorial?: boolean | LibroEditorialDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["libro"]>

  export type LibroSelectScalar = {
    id?: boolean
    bibliotecaId?: boolean
    inventarioId?: boolean
    titulo?: boolean
    anio?: boolean
    isbn?: boolean
    laboratorioId?: boolean
    armarioId?: boolean
    estanteId?: boolean
    autorId?: boolean
    idiomaId?: boolean
    editorialId?: boolean
    sedeId?: boolean
    disponible?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type LibroOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bibliotecaId" | "inventarioId" | "titulo" | "anio" | "isbn" | "laboratorioId" | "armarioId" | "estanteId" | "autorId" | "idiomaId" | "editorialId" | "sedeId" | "disponible" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["libro"]>
  export type LibroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materias?: boolean | Libro$materiasArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Libro$armarioArgs<ExtArgs>
    estante?: boolean | Libro$estanteArgs<ExtArgs>
    autor?: boolean | LibroAutorDefaultArgs<ExtArgs>
    idioma?: boolean | LibroIdiomaDefaultArgs<ExtArgs>
    editorial?: boolean | LibroEditorialDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    reservas?: boolean | Libro$reservasArgs<ExtArgs>
    _count?: boolean | LibroCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LibroIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Libro$armarioArgs<ExtArgs>
    estante?: boolean | Libro$estanteArgs<ExtArgs>
    autor?: boolean | LibroAutorDefaultArgs<ExtArgs>
    idioma?: boolean | LibroIdiomaDefaultArgs<ExtArgs>
    editorial?: boolean | LibroEditorialDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }
  export type LibroIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Libro$armarioArgs<ExtArgs>
    estante?: boolean | Libro$estanteArgs<ExtArgs>
    autor?: boolean | LibroAutorDefaultArgs<ExtArgs>
    idioma?: boolean | LibroIdiomaDefaultArgs<ExtArgs>
    editorial?: boolean | LibroEditorialDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }

  export type $LibroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Libro"
    objects: {
      materias: Prisma.$LibroMateriaPayload<ExtArgs>[]
      laboratorio: Prisma.$LaboratorioPayload<ExtArgs>
      armario: Prisma.$ArmarioPayload<ExtArgs> | null
      estante: Prisma.$EstantePayload<ExtArgs> | null
      autor: Prisma.$LibroAutorPayload<ExtArgs>
      idioma: Prisma.$LibroIdiomaPayload<ExtArgs>
      editorial: Prisma.$LibroEditorialPayload<ExtArgs>
      sede: Prisma.$SedePayload<ExtArgs>
      reservas: Prisma.$ReservaLibroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bibliotecaId: string | null
      inventarioId: string
      titulo: string
      anio: number
      isbn: string | null
      laboratorioId: number
      armarioId: number | null
      estanteId: number | null
      autorId: number
      idiomaId: number
      editorialId: number
      sedeId: number
      disponible: boolean
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["libro"]>
    composites: {}
  }

  type LibroGetPayload<S extends boolean | null | undefined | LibroDefaultArgs> = $Result.GetResult<Prisma.$LibroPayload, S>

  type LibroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LibroFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LibroCountAggregateInputType | true
    }

  export interface LibroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Libro'], meta: { name: 'Libro' } }
    /**
     * Find zero or one Libro that matches the filter.
     * @param {LibroFindUniqueArgs} args - Arguments to find a Libro
     * @example
     * // Get one Libro
     * const libro = await prisma.libro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LibroFindUniqueArgs>(args: SelectSubset<T, LibroFindUniqueArgs<ExtArgs>>): Prisma__LibroClient<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Libro that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LibroFindUniqueOrThrowArgs} args - Arguments to find a Libro
     * @example
     * // Get one Libro
     * const libro = await prisma.libro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LibroFindUniqueOrThrowArgs>(args: SelectSubset<T, LibroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LibroClient<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Libro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroFindFirstArgs} args - Arguments to find a Libro
     * @example
     * // Get one Libro
     * const libro = await prisma.libro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LibroFindFirstArgs>(args?: SelectSubset<T, LibroFindFirstArgs<ExtArgs>>): Prisma__LibroClient<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Libro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroFindFirstOrThrowArgs} args - Arguments to find a Libro
     * @example
     * // Get one Libro
     * const libro = await prisma.libro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LibroFindFirstOrThrowArgs>(args?: SelectSubset<T, LibroFindFirstOrThrowArgs<ExtArgs>>): Prisma__LibroClient<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Libros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Libros
     * const libros = await prisma.libro.findMany()
     * 
     * // Get first 10 Libros
     * const libros = await prisma.libro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const libroWithIdOnly = await prisma.libro.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LibroFindManyArgs>(args?: SelectSubset<T, LibroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Libro.
     * @param {LibroCreateArgs} args - Arguments to create a Libro.
     * @example
     * // Create one Libro
     * const Libro = await prisma.libro.create({
     *   data: {
     *     // ... data to create a Libro
     *   }
     * })
     * 
     */
    create<T extends LibroCreateArgs>(args: SelectSubset<T, LibroCreateArgs<ExtArgs>>): Prisma__LibroClient<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Libros.
     * @param {LibroCreateManyArgs} args - Arguments to create many Libros.
     * @example
     * // Create many Libros
     * const libro = await prisma.libro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LibroCreateManyArgs>(args?: SelectSubset<T, LibroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Libros and returns the data saved in the database.
     * @param {LibroCreateManyAndReturnArgs} args - Arguments to create many Libros.
     * @example
     * // Create many Libros
     * const libro = await prisma.libro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Libros and only return the `id`
     * const libroWithIdOnly = await prisma.libro.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LibroCreateManyAndReturnArgs>(args?: SelectSubset<T, LibroCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Libro.
     * @param {LibroDeleteArgs} args - Arguments to delete one Libro.
     * @example
     * // Delete one Libro
     * const Libro = await prisma.libro.delete({
     *   where: {
     *     // ... filter to delete one Libro
     *   }
     * })
     * 
     */
    delete<T extends LibroDeleteArgs>(args: SelectSubset<T, LibroDeleteArgs<ExtArgs>>): Prisma__LibroClient<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Libro.
     * @param {LibroUpdateArgs} args - Arguments to update one Libro.
     * @example
     * // Update one Libro
     * const libro = await prisma.libro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LibroUpdateArgs>(args: SelectSubset<T, LibroUpdateArgs<ExtArgs>>): Prisma__LibroClient<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Libros.
     * @param {LibroDeleteManyArgs} args - Arguments to filter Libros to delete.
     * @example
     * // Delete a few Libros
     * const { count } = await prisma.libro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LibroDeleteManyArgs>(args?: SelectSubset<T, LibroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Libros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Libros
     * const libro = await prisma.libro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LibroUpdateManyArgs>(args: SelectSubset<T, LibroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Libros and returns the data updated in the database.
     * @param {LibroUpdateManyAndReturnArgs} args - Arguments to update many Libros.
     * @example
     * // Update many Libros
     * const libro = await prisma.libro.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Libros and only return the `id`
     * const libroWithIdOnly = await prisma.libro.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LibroUpdateManyAndReturnArgs>(args: SelectSubset<T, LibroUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Libro.
     * @param {LibroUpsertArgs} args - Arguments to update or create a Libro.
     * @example
     * // Update or create a Libro
     * const libro = await prisma.libro.upsert({
     *   create: {
     *     // ... data to create a Libro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Libro we want to update
     *   }
     * })
     */
    upsert<T extends LibroUpsertArgs>(args: SelectSubset<T, LibroUpsertArgs<ExtArgs>>): Prisma__LibroClient<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Libros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroCountArgs} args - Arguments to filter Libros to count.
     * @example
     * // Count the number of Libros
     * const count = await prisma.libro.count({
     *   where: {
     *     // ... the filter for the Libros we want to count
     *   }
     * })
    **/
    count<T extends LibroCountArgs>(
      args?: Subset<T, LibroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LibroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Libro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LibroAggregateArgs>(args: Subset<T, LibroAggregateArgs>): Prisma.PrismaPromise<GetLibroAggregateType<T>>

    /**
     * Group by Libro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LibroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LibroGroupByArgs['orderBy'] }
        : { orderBy?: LibroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LibroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLibroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Libro model
   */
  readonly fields: LibroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Libro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LibroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    materias<T extends Libro$materiasArgs<ExtArgs> = {}>(args?: Subset<T, Libro$materiasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    laboratorio<T extends LaboratorioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LaboratorioDefaultArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    armario<T extends Libro$armarioArgs<ExtArgs> = {}>(args?: Subset<T, Libro$armarioArgs<ExtArgs>>): Prisma__ArmarioClient<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    estante<T extends Libro$estanteArgs<ExtArgs> = {}>(args?: Subset<T, Libro$estanteArgs<ExtArgs>>): Prisma__EstanteClient<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    autor<T extends LibroAutorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LibroAutorDefaultArgs<ExtArgs>>): Prisma__LibroAutorClient<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    idioma<T extends LibroIdiomaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LibroIdiomaDefaultArgs<ExtArgs>>): Prisma__LibroIdiomaClient<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    editorial<T extends LibroEditorialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LibroEditorialDefaultArgs<ExtArgs>>): Prisma__LibroEditorialClient<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reservas<T extends Libro$reservasArgs<ExtArgs> = {}>(args?: Subset<T, Libro$reservasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Libro model
   */
  interface LibroFieldRefs {
    readonly id: FieldRef<"Libro", 'Int'>
    readonly bibliotecaId: FieldRef<"Libro", 'String'>
    readonly inventarioId: FieldRef<"Libro", 'String'>
    readonly titulo: FieldRef<"Libro", 'String'>
    readonly anio: FieldRef<"Libro", 'Int'>
    readonly isbn: FieldRef<"Libro", 'String'>
    readonly laboratorioId: FieldRef<"Libro", 'Int'>
    readonly armarioId: FieldRef<"Libro", 'Int'>
    readonly estanteId: FieldRef<"Libro", 'Int'>
    readonly autorId: FieldRef<"Libro", 'Int'>
    readonly idiomaId: FieldRef<"Libro", 'Int'>
    readonly editorialId: FieldRef<"Libro", 'Int'>
    readonly sedeId: FieldRef<"Libro", 'Int'>
    readonly disponible: FieldRef<"Libro", 'Boolean'>
    readonly fechaCreacion: FieldRef<"Libro", 'DateTime'>
    readonly fechaModificacion: FieldRef<"Libro", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Libro", 'String'>
    readonly usuarioModificadorId: FieldRef<"Libro", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Libro findUnique
   */
  export type LibroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    /**
     * Filter, which Libro to fetch.
     */
    where: LibroWhereUniqueInput
  }

  /**
   * Libro findUniqueOrThrow
   */
  export type LibroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    /**
     * Filter, which Libro to fetch.
     */
    where: LibroWhereUniqueInput
  }

  /**
   * Libro findFirst
   */
  export type LibroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    /**
     * Filter, which Libro to fetch.
     */
    where?: LibroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Libros to fetch.
     */
    orderBy?: LibroOrderByWithRelationInput | LibroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Libros.
     */
    cursor?: LibroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Libros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Libros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Libros.
     */
    distinct?: LibroScalarFieldEnum | LibroScalarFieldEnum[]
  }

  /**
   * Libro findFirstOrThrow
   */
  export type LibroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    /**
     * Filter, which Libro to fetch.
     */
    where?: LibroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Libros to fetch.
     */
    orderBy?: LibroOrderByWithRelationInput | LibroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Libros.
     */
    cursor?: LibroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Libros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Libros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Libros.
     */
    distinct?: LibroScalarFieldEnum | LibroScalarFieldEnum[]
  }

  /**
   * Libro findMany
   */
  export type LibroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    /**
     * Filter, which Libros to fetch.
     */
    where?: LibroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Libros to fetch.
     */
    orderBy?: LibroOrderByWithRelationInput | LibroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Libros.
     */
    cursor?: LibroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Libros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Libros.
     */
    skip?: number
    distinct?: LibroScalarFieldEnum | LibroScalarFieldEnum[]
  }

  /**
   * Libro create
   */
  export type LibroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    /**
     * The data needed to create a Libro.
     */
    data: XOR<LibroCreateInput, LibroUncheckedCreateInput>
  }

  /**
   * Libro createMany
   */
  export type LibroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Libros.
     */
    data: LibroCreateManyInput | LibroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Libro createManyAndReturn
   */
  export type LibroCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * The data used to create many Libros.
     */
    data: LibroCreateManyInput | LibroCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Libro update
   */
  export type LibroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    /**
     * The data needed to update a Libro.
     */
    data: XOR<LibroUpdateInput, LibroUncheckedUpdateInput>
    /**
     * Choose, which Libro to update.
     */
    where: LibroWhereUniqueInput
  }

  /**
   * Libro updateMany
   */
  export type LibroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Libros.
     */
    data: XOR<LibroUpdateManyMutationInput, LibroUncheckedUpdateManyInput>
    /**
     * Filter which Libros to update
     */
    where?: LibroWhereInput
    /**
     * Limit how many Libros to update.
     */
    limit?: number
  }

  /**
   * Libro updateManyAndReturn
   */
  export type LibroUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * The data used to update Libros.
     */
    data: XOR<LibroUpdateManyMutationInput, LibroUncheckedUpdateManyInput>
    /**
     * Filter which Libros to update
     */
    where?: LibroWhereInput
    /**
     * Limit how many Libros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Libro upsert
   */
  export type LibroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    /**
     * The filter to search for the Libro to update in case it exists.
     */
    where: LibroWhereUniqueInput
    /**
     * In case the Libro found by the `where` argument doesn't exist, create a new Libro with this data.
     */
    create: XOR<LibroCreateInput, LibroUncheckedCreateInput>
    /**
     * In case the Libro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LibroUpdateInput, LibroUncheckedUpdateInput>
  }

  /**
   * Libro delete
   */
  export type LibroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    /**
     * Filter which Libro to delete.
     */
    where: LibroWhereUniqueInput
  }

  /**
   * Libro deleteMany
   */
  export type LibroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Libros to delete
     */
    where?: LibroWhereInput
    /**
     * Limit how many Libros to delete.
     */
    limit?: number
  }

  /**
   * Libro.materias
   */
  export type Libro$materiasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
    where?: LibroMateriaWhereInput
    orderBy?: LibroMateriaOrderByWithRelationInput | LibroMateriaOrderByWithRelationInput[]
    cursor?: LibroMateriaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LibroMateriaScalarFieldEnum | LibroMateriaScalarFieldEnum[]
  }

  /**
   * Libro.armario
   */
  export type Libro$armarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    where?: ArmarioWhereInput
  }

  /**
   * Libro.estante
   */
  export type Libro$estanteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    where?: EstanteWhereInput
  }

  /**
   * Libro.reservas
   */
  export type Libro$reservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
    where?: ReservaLibroWhereInput
    orderBy?: ReservaLibroOrderByWithRelationInput | ReservaLibroOrderByWithRelationInput[]
    cursor?: ReservaLibroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLibroScalarFieldEnum | ReservaLibroScalarFieldEnum[]
  }

  /**
   * Libro without action
   */
  export type LibroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
  }


  /**
   * Model LibroMateria
   */

  export type AggregateLibroMateria = {
    _count: LibroMateriaCountAggregateOutputType | null
    _avg: LibroMateriaAvgAggregateOutputType | null
    _sum: LibroMateriaSumAggregateOutputType | null
    _min: LibroMateriaMinAggregateOutputType | null
    _max: LibroMateriaMaxAggregateOutputType | null
  }

  export type LibroMateriaAvgAggregateOutputType = {
    libroId: number | null
    materiaId: number | null
  }

  export type LibroMateriaSumAggregateOutputType = {
    libroId: number | null
    materiaId: number | null
  }

  export type LibroMateriaMinAggregateOutputType = {
    libroId: number | null
    materiaId: number | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type LibroMateriaMaxAggregateOutputType = {
    libroId: number | null
    materiaId: number | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type LibroMateriaCountAggregateOutputType = {
    libroId: number
    materiaId: number
    fechaCreacion: number
    usuarioCreadorId: number
    _all: number
  }


  export type LibroMateriaAvgAggregateInputType = {
    libroId?: true
    materiaId?: true
  }

  export type LibroMateriaSumAggregateInputType = {
    libroId?: true
    materiaId?: true
  }

  export type LibroMateriaMinAggregateInputType = {
    libroId?: true
    materiaId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type LibroMateriaMaxAggregateInputType = {
    libroId?: true
    materiaId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type LibroMateriaCountAggregateInputType = {
    libroId?: true
    materiaId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    _all?: true
  }

  export type LibroMateriaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LibroMateria to aggregate.
     */
    where?: LibroMateriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroMaterias to fetch.
     */
    orderBy?: LibroMateriaOrderByWithRelationInput | LibroMateriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LibroMateriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroMaterias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroMaterias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LibroMaterias
    **/
    _count?: true | LibroMateriaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LibroMateriaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LibroMateriaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LibroMateriaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LibroMateriaMaxAggregateInputType
  }

  export type GetLibroMateriaAggregateType<T extends LibroMateriaAggregateArgs> = {
        [P in keyof T & keyof AggregateLibroMateria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLibroMateria[P]>
      : GetScalarType<T[P], AggregateLibroMateria[P]>
  }




  export type LibroMateriaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroMateriaWhereInput
    orderBy?: LibroMateriaOrderByWithAggregationInput | LibroMateriaOrderByWithAggregationInput[]
    by: LibroMateriaScalarFieldEnum[] | LibroMateriaScalarFieldEnum
    having?: LibroMateriaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LibroMateriaCountAggregateInputType | true
    _avg?: LibroMateriaAvgAggregateInputType
    _sum?: LibroMateriaSumAggregateInputType
    _min?: LibroMateriaMinAggregateInputType
    _max?: LibroMateriaMaxAggregateInputType
  }

  export type LibroMateriaGroupByOutputType = {
    libroId: number
    materiaId: number
    fechaCreacion: Date
    usuarioCreadorId: string
    _count: LibroMateriaCountAggregateOutputType | null
    _avg: LibroMateriaAvgAggregateOutputType | null
    _sum: LibroMateriaSumAggregateOutputType | null
    _min: LibroMateriaMinAggregateOutputType | null
    _max: LibroMateriaMaxAggregateOutputType | null
  }

  type GetLibroMateriaGroupByPayload<T extends LibroMateriaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LibroMateriaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LibroMateriaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LibroMateriaGroupByOutputType[P]>
            : GetScalarType<T[P], LibroMateriaGroupByOutputType[P]>
        }
      >
    >


  export type LibroMateriaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    libroId?: boolean
    materiaId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    libro?: boolean | LibroDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["libroMateria"]>

  export type LibroMateriaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    libroId?: boolean
    materiaId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    libro?: boolean | LibroDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["libroMateria"]>

  export type LibroMateriaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    libroId?: boolean
    materiaId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    libro?: boolean | LibroDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["libroMateria"]>

  export type LibroMateriaSelectScalar = {
    libroId?: boolean
    materiaId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }

  export type LibroMateriaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"libroId" | "materiaId" | "fechaCreacion" | "usuarioCreadorId", ExtArgs["result"]["libroMateria"]>
  export type LibroMateriaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    libro?: boolean | LibroDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
  }
  export type LibroMateriaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    libro?: boolean | LibroDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
  }
  export type LibroMateriaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    libro?: boolean | LibroDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
  }

  export type $LibroMateriaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LibroMateria"
    objects: {
      libro: Prisma.$LibroPayload<ExtArgs>
      materia: Prisma.$MateriaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      libroId: number
      materiaId: number
      fechaCreacion: Date
      usuarioCreadorId: string
    }, ExtArgs["result"]["libroMateria"]>
    composites: {}
  }

  type LibroMateriaGetPayload<S extends boolean | null | undefined | LibroMateriaDefaultArgs> = $Result.GetResult<Prisma.$LibroMateriaPayload, S>

  type LibroMateriaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LibroMateriaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LibroMateriaCountAggregateInputType | true
    }

  export interface LibroMateriaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LibroMateria'], meta: { name: 'LibroMateria' } }
    /**
     * Find zero or one LibroMateria that matches the filter.
     * @param {LibroMateriaFindUniqueArgs} args - Arguments to find a LibroMateria
     * @example
     * // Get one LibroMateria
     * const libroMateria = await prisma.libroMateria.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LibroMateriaFindUniqueArgs>(args: SelectSubset<T, LibroMateriaFindUniqueArgs<ExtArgs>>): Prisma__LibroMateriaClient<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LibroMateria that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LibroMateriaFindUniqueOrThrowArgs} args - Arguments to find a LibroMateria
     * @example
     * // Get one LibroMateria
     * const libroMateria = await prisma.libroMateria.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LibroMateriaFindUniqueOrThrowArgs>(args: SelectSubset<T, LibroMateriaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LibroMateriaClient<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LibroMateria that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroMateriaFindFirstArgs} args - Arguments to find a LibroMateria
     * @example
     * // Get one LibroMateria
     * const libroMateria = await prisma.libroMateria.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LibroMateriaFindFirstArgs>(args?: SelectSubset<T, LibroMateriaFindFirstArgs<ExtArgs>>): Prisma__LibroMateriaClient<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LibroMateria that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroMateriaFindFirstOrThrowArgs} args - Arguments to find a LibroMateria
     * @example
     * // Get one LibroMateria
     * const libroMateria = await prisma.libroMateria.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LibroMateriaFindFirstOrThrowArgs>(args?: SelectSubset<T, LibroMateriaFindFirstOrThrowArgs<ExtArgs>>): Prisma__LibroMateriaClient<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LibroMaterias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroMateriaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LibroMaterias
     * const libroMaterias = await prisma.libroMateria.findMany()
     * 
     * // Get first 10 LibroMaterias
     * const libroMaterias = await prisma.libroMateria.findMany({ take: 10 })
     * 
     * // Only select the `libroId`
     * const libroMateriaWithLibroIdOnly = await prisma.libroMateria.findMany({ select: { libroId: true } })
     * 
     */
    findMany<T extends LibroMateriaFindManyArgs>(args?: SelectSubset<T, LibroMateriaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LibroMateria.
     * @param {LibroMateriaCreateArgs} args - Arguments to create a LibroMateria.
     * @example
     * // Create one LibroMateria
     * const LibroMateria = await prisma.libroMateria.create({
     *   data: {
     *     // ... data to create a LibroMateria
     *   }
     * })
     * 
     */
    create<T extends LibroMateriaCreateArgs>(args: SelectSubset<T, LibroMateriaCreateArgs<ExtArgs>>): Prisma__LibroMateriaClient<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LibroMaterias.
     * @param {LibroMateriaCreateManyArgs} args - Arguments to create many LibroMaterias.
     * @example
     * // Create many LibroMaterias
     * const libroMateria = await prisma.libroMateria.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LibroMateriaCreateManyArgs>(args?: SelectSubset<T, LibroMateriaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LibroMaterias and returns the data saved in the database.
     * @param {LibroMateriaCreateManyAndReturnArgs} args - Arguments to create many LibroMaterias.
     * @example
     * // Create many LibroMaterias
     * const libroMateria = await prisma.libroMateria.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LibroMaterias and only return the `libroId`
     * const libroMateriaWithLibroIdOnly = await prisma.libroMateria.createManyAndReturn({
     *   select: { libroId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LibroMateriaCreateManyAndReturnArgs>(args?: SelectSubset<T, LibroMateriaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LibroMateria.
     * @param {LibroMateriaDeleteArgs} args - Arguments to delete one LibroMateria.
     * @example
     * // Delete one LibroMateria
     * const LibroMateria = await prisma.libroMateria.delete({
     *   where: {
     *     // ... filter to delete one LibroMateria
     *   }
     * })
     * 
     */
    delete<T extends LibroMateriaDeleteArgs>(args: SelectSubset<T, LibroMateriaDeleteArgs<ExtArgs>>): Prisma__LibroMateriaClient<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LibroMateria.
     * @param {LibroMateriaUpdateArgs} args - Arguments to update one LibroMateria.
     * @example
     * // Update one LibroMateria
     * const libroMateria = await prisma.libroMateria.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LibroMateriaUpdateArgs>(args: SelectSubset<T, LibroMateriaUpdateArgs<ExtArgs>>): Prisma__LibroMateriaClient<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LibroMaterias.
     * @param {LibroMateriaDeleteManyArgs} args - Arguments to filter LibroMaterias to delete.
     * @example
     * // Delete a few LibroMaterias
     * const { count } = await prisma.libroMateria.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LibroMateriaDeleteManyArgs>(args?: SelectSubset<T, LibroMateriaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LibroMaterias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroMateriaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LibroMaterias
     * const libroMateria = await prisma.libroMateria.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LibroMateriaUpdateManyArgs>(args: SelectSubset<T, LibroMateriaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LibroMaterias and returns the data updated in the database.
     * @param {LibroMateriaUpdateManyAndReturnArgs} args - Arguments to update many LibroMaterias.
     * @example
     * // Update many LibroMaterias
     * const libroMateria = await prisma.libroMateria.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LibroMaterias and only return the `libroId`
     * const libroMateriaWithLibroIdOnly = await prisma.libroMateria.updateManyAndReturn({
     *   select: { libroId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LibroMateriaUpdateManyAndReturnArgs>(args: SelectSubset<T, LibroMateriaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LibroMateria.
     * @param {LibroMateriaUpsertArgs} args - Arguments to update or create a LibroMateria.
     * @example
     * // Update or create a LibroMateria
     * const libroMateria = await prisma.libroMateria.upsert({
     *   create: {
     *     // ... data to create a LibroMateria
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LibroMateria we want to update
     *   }
     * })
     */
    upsert<T extends LibroMateriaUpsertArgs>(args: SelectSubset<T, LibroMateriaUpsertArgs<ExtArgs>>): Prisma__LibroMateriaClient<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LibroMaterias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroMateriaCountArgs} args - Arguments to filter LibroMaterias to count.
     * @example
     * // Count the number of LibroMaterias
     * const count = await prisma.libroMateria.count({
     *   where: {
     *     // ... the filter for the LibroMaterias we want to count
     *   }
     * })
    **/
    count<T extends LibroMateriaCountArgs>(
      args?: Subset<T, LibroMateriaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LibroMateriaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LibroMateria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroMateriaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LibroMateriaAggregateArgs>(args: Subset<T, LibroMateriaAggregateArgs>): Prisma.PrismaPromise<GetLibroMateriaAggregateType<T>>

    /**
     * Group by LibroMateria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroMateriaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LibroMateriaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LibroMateriaGroupByArgs['orderBy'] }
        : { orderBy?: LibroMateriaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LibroMateriaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLibroMateriaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LibroMateria model
   */
  readonly fields: LibroMateriaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LibroMateria.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LibroMateriaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    libro<T extends LibroDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LibroDefaultArgs<ExtArgs>>): Prisma__LibroClient<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    materia<T extends MateriaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MateriaDefaultArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LibroMateria model
   */
  interface LibroMateriaFieldRefs {
    readonly libroId: FieldRef<"LibroMateria", 'Int'>
    readonly materiaId: FieldRef<"LibroMateria", 'Int'>
    readonly fechaCreacion: FieldRef<"LibroMateria", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"LibroMateria", 'String'>
  }
    

  // Custom InputTypes
  /**
   * LibroMateria findUnique
   */
  export type LibroMateriaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
    /**
     * Filter, which LibroMateria to fetch.
     */
    where: LibroMateriaWhereUniqueInput
  }

  /**
   * LibroMateria findUniqueOrThrow
   */
  export type LibroMateriaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
    /**
     * Filter, which LibroMateria to fetch.
     */
    where: LibroMateriaWhereUniqueInput
  }

  /**
   * LibroMateria findFirst
   */
  export type LibroMateriaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
    /**
     * Filter, which LibroMateria to fetch.
     */
    where?: LibroMateriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroMaterias to fetch.
     */
    orderBy?: LibroMateriaOrderByWithRelationInput | LibroMateriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LibroMaterias.
     */
    cursor?: LibroMateriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroMaterias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroMaterias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LibroMaterias.
     */
    distinct?: LibroMateriaScalarFieldEnum | LibroMateriaScalarFieldEnum[]
  }

  /**
   * LibroMateria findFirstOrThrow
   */
  export type LibroMateriaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
    /**
     * Filter, which LibroMateria to fetch.
     */
    where?: LibroMateriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroMaterias to fetch.
     */
    orderBy?: LibroMateriaOrderByWithRelationInput | LibroMateriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LibroMaterias.
     */
    cursor?: LibroMateriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroMaterias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroMaterias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LibroMaterias.
     */
    distinct?: LibroMateriaScalarFieldEnum | LibroMateriaScalarFieldEnum[]
  }

  /**
   * LibroMateria findMany
   */
  export type LibroMateriaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
    /**
     * Filter, which LibroMaterias to fetch.
     */
    where?: LibroMateriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroMaterias to fetch.
     */
    orderBy?: LibroMateriaOrderByWithRelationInput | LibroMateriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LibroMaterias.
     */
    cursor?: LibroMateriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroMaterias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroMaterias.
     */
    skip?: number
    distinct?: LibroMateriaScalarFieldEnum | LibroMateriaScalarFieldEnum[]
  }

  /**
   * LibroMateria create
   */
  export type LibroMateriaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
    /**
     * The data needed to create a LibroMateria.
     */
    data: XOR<LibroMateriaCreateInput, LibroMateriaUncheckedCreateInput>
  }

  /**
   * LibroMateria createMany
   */
  export type LibroMateriaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LibroMaterias.
     */
    data: LibroMateriaCreateManyInput | LibroMateriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LibroMateria createManyAndReturn
   */
  export type LibroMateriaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * The data used to create many LibroMaterias.
     */
    data: LibroMateriaCreateManyInput | LibroMateriaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LibroMateria update
   */
  export type LibroMateriaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
    /**
     * The data needed to update a LibroMateria.
     */
    data: XOR<LibroMateriaUpdateInput, LibroMateriaUncheckedUpdateInput>
    /**
     * Choose, which LibroMateria to update.
     */
    where: LibroMateriaWhereUniqueInput
  }

  /**
   * LibroMateria updateMany
   */
  export type LibroMateriaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LibroMaterias.
     */
    data: XOR<LibroMateriaUpdateManyMutationInput, LibroMateriaUncheckedUpdateManyInput>
    /**
     * Filter which LibroMaterias to update
     */
    where?: LibroMateriaWhereInput
    /**
     * Limit how many LibroMaterias to update.
     */
    limit?: number
  }

  /**
   * LibroMateria updateManyAndReturn
   */
  export type LibroMateriaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * The data used to update LibroMaterias.
     */
    data: XOR<LibroMateriaUpdateManyMutationInput, LibroMateriaUncheckedUpdateManyInput>
    /**
     * Filter which LibroMaterias to update
     */
    where?: LibroMateriaWhereInput
    /**
     * Limit how many LibroMaterias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * LibroMateria upsert
   */
  export type LibroMateriaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
    /**
     * The filter to search for the LibroMateria to update in case it exists.
     */
    where: LibroMateriaWhereUniqueInput
    /**
     * In case the LibroMateria found by the `where` argument doesn't exist, create a new LibroMateria with this data.
     */
    create: XOR<LibroMateriaCreateInput, LibroMateriaUncheckedCreateInput>
    /**
     * In case the LibroMateria was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LibroMateriaUpdateInput, LibroMateriaUncheckedUpdateInput>
  }

  /**
   * LibroMateria delete
   */
  export type LibroMateriaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
    /**
     * Filter which LibroMateria to delete.
     */
    where: LibroMateriaWhereUniqueInput
  }

  /**
   * LibroMateria deleteMany
   */
  export type LibroMateriaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LibroMaterias to delete
     */
    where?: LibroMateriaWhereInput
    /**
     * Limit how many LibroMaterias to delete.
     */
    limit?: number
  }

  /**
   * LibroMateria without action
   */
  export type LibroMateriaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
  }


  /**
   * Model LibroAutor
   */

  export type AggregateLibroAutor = {
    _count: LibroAutorCountAggregateOutputType | null
    _avg: LibroAutorAvgAggregateOutputType | null
    _sum: LibroAutorSumAggregateOutputType | null
    _min: LibroAutorMinAggregateOutputType | null
    _max: LibroAutorMaxAggregateOutputType | null
  }

  export type LibroAutorAvgAggregateOutputType = {
    id: number | null
  }

  export type LibroAutorSumAggregateOutputType = {
    id: number | null
  }

  export type LibroAutorMinAggregateOutputType = {
    id: number | null
    autorNombre: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type LibroAutorMaxAggregateOutputType = {
    id: number | null
    autorNombre: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type LibroAutorCountAggregateOutputType = {
    id: number
    autorNombre: number
    fechaCreacion: number
    usuarioCreadorId: number
    _all: number
  }


  export type LibroAutorAvgAggregateInputType = {
    id?: true
  }

  export type LibroAutorSumAggregateInputType = {
    id?: true
  }

  export type LibroAutorMinAggregateInputType = {
    id?: true
    autorNombre?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type LibroAutorMaxAggregateInputType = {
    id?: true
    autorNombre?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type LibroAutorCountAggregateInputType = {
    id?: true
    autorNombre?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    _all?: true
  }

  export type LibroAutorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LibroAutor to aggregate.
     */
    where?: LibroAutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroAutors to fetch.
     */
    orderBy?: LibroAutorOrderByWithRelationInput | LibroAutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LibroAutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroAutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroAutors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LibroAutors
    **/
    _count?: true | LibroAutorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LibroAutorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LibroAutorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LibroAutorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LibroAutorMaxAggregateInputType
  }

  export type GetLibroAutorAggregateType<T extends LibroAutorAggregateArgs> = {
        [P in keyof T & keyof AggregateLibroAutor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLibroAutor[P]>
      : GetScalarType<T[P], AggregateLibroAutor[P]>
  }




  export type LibroAutorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroAutorWhereInput
    orderBy?: LibroAutorOrderByWithAggregationInput | LibroAutorOrderByWithAggregationInput[]
    by: LibroAutorScalarFieldEnum[] | LibroAutorScalarFieldEnum
    having?: LibroAutorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LibroAutorCountAggregateInputType | true
    _avg?: LibroAutorAvgAggregateInputType
    _sum?: LibroAutorSumAggregateInputType
    _min?: LibroAutorMinAggregateInputType
    _max?: LibroAutorMaxAggregateInputType
  }

  export type LibroAutorGroupByOutputType = {
    id: number
    autorNombre: string
    fechaCreacion: Date
    usuarioCreadorId: string
    _count: LibroAutorCountAggregateOutputType | null
    _avg: LibroAutorAvgAggregateOutputType | null
    _sum: LibroAutorSumAggregateOutputType | null
    _min: LibroAutorMinAggregateOutputType | null
    _max: LibroAutorMaxAggregateOutputType | null
  }

  type GetLibroAutorGroupByPayload<T extends LibroAutorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LibroAutorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LibroAutorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LibroAutorGroupByOutputType[P]>
            : GetScalarType<T[P], LibroAutorGroupByOutputType[P]>
        }
      >
    >


  export type LibroAutorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    autorNombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    libros?: boolean | LibroAutor$librosArgs<ExtArgs>
    _count?: boolean | LibroAutorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["libroAutor"]>

  export type LibroAutorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    autorNombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["libroAutor"]>

  export type LibroAutorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    autorNombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["libroAutor"]>

  export type LibroAutorSelectScalar = {
    id?: boolean
    autorNombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }

  export type LibroAutorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "autorNombre" | "fechaCreacion" | "usuarioCreadorId", ExtArgs["result"]["libroAutor"]>
  export type LibroAutorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    libros?: boolean | LibroAutor$librosArgs<ExtArgs>
    _count?: boolean | LibroAutorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LibroAutorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type LibroAutorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $LibroAutorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LibroAutor"
    objects: {
      libros: Prisma.$LibroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      autorNombre: string
      fechaCreacion: Date
      usuarioCreadorId: string
    }, ExtArgs["result"]["libroAutor"]>
    composites: {}
  }

  type LibroAutorGetPayload<S extends boolean | null | undefined | LibroAutorDefaultArgs> = $Result.GetResult<Prisma.$LibroAutorPayload, S>

  type LibroAutorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LibroAutorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LibroAutorCountAggregateInputType | true
    }

  export interface LibroAutorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LibroAutor'], meta: { name: 'LibroAutor' } }
    /**
     * Find zero or one LibroAutor that matches the filter.
     * @param {LibroAutorFindUniqueArgs} args - Arguments to find a LibroAutor
     * @example
     * // Get one LibroAutor
     * const libroAutor = await prisma.libroAutor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LibroAutorFindUniqueArgs>(args: SelectSubset<T, LibroAutorFindUniqueArgs<ExtArgs>>): Prisma__LibroAutorClient<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LibroAutor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LibroAutorFindUniqueOrThrowArgs} args - Arguments to find a LibroAutor
     * @example
     * // Get one LibroAutor
     * const libroAutor = await prisma.libroAutor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LibroAutorFindUniqueOrThrowArgs>(args: SelectSubset<T, LibroAutorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LibroAutorClient<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LibroAutor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroAutorFindFirstArgs} args - Arguments to find a LibroAutor
     * @example
     * // Get one LibroAutor
     * const libroAutor = await prisma.libroAutor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LibroAutorFindFirstArgs>(args?: SelectSubset<T, LibroAutorFindFirstArgs<ExtArgs>>): Prisma__LibroAutorClient<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LibroAutor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroAutorFindFirstOrThrowArgs} args - Arguments to find a LibroAutor
     * @example
     * // Get one LibroAutor
     * const libroAutor = await prisma.libroAutor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LibroAutorFindFirstOrThrowArgs>(args?: SelectSubset<T, LibroAutorFindFirstOrThrowArgs<ExtArgs>>): Prisma__LibroAutorClient<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LibroAutors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroAutorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LibroAutors
     * const libroAutors = await prisma.libroAutor.findMany()
     * 
     * // Get first 10 LibroAutors
     * const libroAutors = await prisma.libroAutor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const libroAutorWithIdOnly = await prisma.libroAutor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LibroAutorFindManyArgs>(args?: SelectSubset<T, LibroAutorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LibroAutor.
     * @param {LibroAutorCreateArgs} args - Arguments to create a LibroAutor.
     * @example
     * // Create one LibroAutor
     * const LibroAutor = await prisma.libroAutor.create({
     *   data: {
     *     // ... data to create a LibroAutor
     *   }
     * })
     * 
     */
    create<T extends LibroAutorCreateArgs>(args: SelectSubset<T, LibroAutorCreateArgs<ExtArgs>>): Prisma__LibroAutorClient<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LibroAutors.
     * @param {LibroAutorCreateManyArgs} args - Arguments to create many LibroAutors.
     * @example
     * // Create many LibroAutors
     * const libroAutor = await prisma.libroAutor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LibroAutorCreateManyArgs>(args?: SelectSubset<T, LibroAutorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LibroAutors and returns the data saved in the database.
     * @param {LibroAutorCreateManyAndReturnArgs} args - Arguments to create many LibroAutors.
     * @example
     * // Create many LibroAutors
     * const libroAutor = await prisma.libroAutor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LibroAutors and only return the `id`
     * const libroAutorWithIdOnly = await prisma.libroAutor.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LibroAutorCreateManyAndReturnArgs>(args?: SelectSubset<T, LibroAutorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LibroAutor.
     * @param {LibroAutorDeleteArgs} args - Arguments to delete one LibroAutor.
     * @example
     * // Delete one LibroAutor
     * const LibroAutor = await prisma.libroAutor.delete({
     *   where: {
     *     // ... filter to delete one LibroAutor
     *   }
     * })
     * 
     */
    delete<T extends LibroAutorDeleteArgs>(args: SelectSubset<T, LibroAutorDeleteArgs<ExtArgs>>): Prisma__LibroAutorClient<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LibroAutor.
     * @param {LibroAutorUpdateArgs} args - Arguments to update one LibroAutor.
     * @example
     * // Update one LibroAutor
     * const libroAutor = await prisma.libroAutor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LibroAutorUpdateArgs>(args: SelectSubset<T, LibroAutorUpdateArgs<ExtArgs>>): Prisma__LibroAutorClient<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LibroAutors.
     * @param {LibroAutorDeleteManyArgs} args - Arguments to filter LibroAutors to delete.
     * @example
     * // Delete a few LibroAutors
     * const { count } = await prisma.libroAutor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LibroAutorDeleteManyArgs>(args?: SelectSubset<T, LibroAutorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LibroAutors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroAutorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LibroAutors
     * const libroAutor = await prisma.libroAutor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LibroAutorUpdateManyArgs>(args: SelectSubset<T, LibroAutorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LibroAutors and returns the data updated in the database.
     * @param {LibroAutorUpdateManyAndReturnArgs} args - Arguments to update many LibroAutors.
     * @example
     * // Update many LibroAutors
     * const libroAutor = await prisma.libroAutor.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LibroAutors and only return the `id`
     * const libroAutorWithIdOnly = await prisma.libroAutor.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LibroAutorUpdateManyAndReturnArgs>(args: SelectSubset<T, LibroAutorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LibroAutor.
     * @param {LibroAutorUpsertArgs} args - Arguments to update or create a LibroAutor.
     * @example
     * // Update or create a LibroAutor
     * const libroAutor = await prisma.libroAutor.upsert({
     *   create: {
     *     // ... data to create a LibroAutor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LibroAutor we want to update
     *   }
     * })
     */
    upsert<T extends LibroAutorUpsertArgs>(args: SelectSubset<T, LibroAutorUpsertArgs<ExtArgs>>): Prisma__LibroAutorClient<$Result.GetResult<Prisma.$LibroAutorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LibroAutors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroAutorCountArgs} args - Arguments to filter LibroAutors to count.
     * @example
     * // Count the number of LibroAutors
     * const count = await prisma.libroAutor.count({
     *   where: {
     *     // ... the filter for the LibroAutors we want to count
     *   }
     * })
    **/
    count<T extends LibroAutorCountArgs>(
      args?: Subset<T, LibroAutorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LibroAutorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LibroAutor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroAutorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LibroAutorAggregateArgs>(args: Subset<T, LibroAutorAggregateArgs>): Prisma.PrismaPromise<GetLibroAutorAggregateType<T>>

    /**
     * Group by LibroAutor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroAutorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LibroAutorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LibroAutorGroupByArgs['orderBy'] }
        : { orderBy?: LibroAutorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LibroAutorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLibroAutorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LibroAutor model
   */
  readonly fields: LibroAutorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LibroAutor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LibroAutorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    libros<T extends LibroAutor$librosArgs<ExtArgs> = {}>(args?: Subset<T, LibroAutor$librosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LibroAutor model
   */
  interface LibroAutorFieldRefs {
    readonly id: FieldRef<"LibroAutor", 'Int'>
    readonly autorNombre: FieldRef<"LibroAutor", 'String'>
    readonly fechaCreacion: FieldRef<"LibroAutor", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"LibroAutor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * LibroAutor findUnique
   */
  export type LibroAutorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroAutorInclude<ExtArgs> | null
    /**
     * Filter, which LibroAutor to fetch.
     */
    where: LibroAutorWhereUniqueInput
  }

  /**
   * LibroAutor findUniqueOrThrow
   */
  export type LibroAutorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroAutorInclude<ExtArgs> | null
    /**
     * Filter, which LibroAutor to fetch.
     */
    where: LibroAutorWhereUniqueInput
  }

  /**
   * LibroAutor findFirst
   */
  export type LibroAutorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroAutorInclude<ExtArgs> | null
    /**
     * Filter, which LibroAutor to fetch.
     */
    where?: LibroAutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroAutors to fetch.
     */
    orderBy?: LibroAutorOrderByWithRelationInput | LibroAutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LibroAutors.
     */
    cursor?: LibroAutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroAutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroAutors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LibroAutors.
     */
    distinct?: LibroAutorScalarFieldEnum | LibroAutorScalarFieldEnum[]
  }

  /**
   * LibroAutor findFirstOrThrow
   */
  export type LibroAutorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroAutorInclude<ExtArgs> | null
    /**
     * Filter, which LibroAutor to fetch.
     */
    where?: LibroAutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroAutors to fetch.
     */
    orderBy?: LibroAutorOrderByWithRelationInput | LibroAutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LibroAutors.
     */
    cursor?: LibroAutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroAutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroAutors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LibroAutors.
     */
    distinct?: LibroAutorScalarFieldEnum | LibroAutorScalarFieldEnum[]
  }

  /**
   * LibroAutor findMany
   */
  export type LibroAutorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroAutorInclude<ExtArgs> | null
    /**
     * Filter, which LibroAutors to fetch.
     */
    where?: LibroAutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroAutors to fetch.
     */
    orderBy?: LibroAutorOrderByWithRelationInput | LibroAutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LibroAutors.
     */
    cursor?: LibroAutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroAutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroAutors.
     */
    skip?: number
    distinct?: LibroAutorScalarFieldEnum | LibroAutorScalarFieldEnum[]
  }

  /**
   * LibroAutor create
   */
  export type LibroAutorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroAutorInclude<ExtArgs> | null
    /**
     * The data needed to create a LibroAutor.
     */
    data: XOR<LibroAutorCreateInput, LibroAutorUncheckedCreateInput>
  }

  /**
   * LibroAutor createMany
   */
  export type LibroAutorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LibroAutors.
     */
    data: LibroAutorCreateManyInput | LibroAutorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LibroAutor createManyAndReturn
   */
  export type LibroAutorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * The data used to create many LibroAutors.
     */
    data: LibroAutorCreateManyInput | LibroAutorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LibroAutor update
   */
  export type LibroAutorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroAutorInclude<ExtArgs> | null
    /**
     * The data needed to update a LibroAutor.
     */
    data: XOR<LibroAutorUpdateInput, LibroAutorUncheckedUpdateInput>
    /**
     * Choose, which LibroAutor to update.
     */
    where: LibroAutorWhereUniqueInput
  }

  /**
   * LibroAutor updateMany
   */
  export type LibroAutorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LibroAutors.
     */
    data: XOR<LibroAutorUpdateManyMutationInput, LibroAutorUncheckedUpdateManyInput>
    /**
     * Filter which LibroAutors to update
     */
    where?: LibroAutorWhereInput
    /**
     * Limit how many LibroAutors to update.
     */
    limit?: number
  }

  /**
   * LibroAutor updateManyAndReturn
   */
  export type LibroAutorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * The data used to update LibroAutors.
     */
    data: XOR<LibroAutorUpdateManyMutationInput, LibroAutorUncheckedUpdateManyInput>
    /**
     * Filter which LibroAutors to update
     */
    where?: LibroAutorWhereInput
    /**
     * Limit how many LibroAutors to update.
     */
    limit?: number
  }

  /**
   * LibroAutor upsert
   */
  export type LibroAutorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroAutorInclude<ExtArgs> | null
    /**
     * The filter to search for the LibroAutor to update in case it exists.
     */
    where: LibroAutorWhereUniqueInput
    /**
     * In case the LibroAutor found by the `where` argument doesn't exist, create a new LibroAutor with this data.
     */
    create: XOR<LibroAutorCreateInput, LibroAutorUncheckedCreateInput>
    /**
     * In case the LibroAutor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LibroAutorUpdateInput, LibroAutorUncheckedUpdateInput>
  }

  /**
   * LibroAutor delete
   */
  export type LibroAutorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroAutorInclude<ExtArgs> | null
    /**
     * Filter which LibroAutor to delete.
     */
    where: LibroAutorWhereUniqueInput
  }

  /**
   * LibroAutor deleteMany
   */
  export type LibroAutorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LibroAutors to delete
     */
    where?: LibroAutorWhereInput
    /**
     * Limit how many LibroAutors to delete.
     */
    limit?: number
  }

  /**
   * LibroAutor.libros
   */
  export type LibroAutor$librosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    where?: LibroWhereInput
    orderBy?: LibroOrderByWithRelationInput | LibroOrderByWithRelationInput[]
    cursor?: LibroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LibroScalarFieldEnum | LibroScalarFieldEnum[]
  }

  /**
   * LibroAutor without action
   */
  export type LibroAutorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroAutor
     */
    select?: LibroAutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroAutor
     */
    omit?: LibroAutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroAutorInclude<ExtArgs> | null
  }


  /**
   * Model LibroIdioma
   */

  export type AggregateLibroIdioma = {
    _count: LibroIdiomaCountAggregateOutputType | null
    _avg: LibroIdiomaAvgAggregateOutputType | null
    _sum: LibroIdiomaSumAggregateOutputType | null
    _min: LibroIdiomaMinAggregateOutputType | null
    _max: LibroIdiomaMaxAggregateOutputType | null
  }

  export type LibroIdiomaAvgAggregateOutputType = {
    id: number | null
  }

  export type LibroIdiomaSumAggregateOutputType = {
    id: number | null
  }

  export type LibroIdiomaMinAggregateOutputType = {
    id: number | null
    idioma: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type LibroIdiomaMaxAggregateOutputType = {
    id: number | null
    idioma: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type LibroIdiomaCountAggregateOutputType = {
    id: number
    idioma: number
    fechaCreacion: number
    usuarioCreadorId: number
    _all: number
  }


  export type LibroIdiomaAvgAggregateInputType = {
    id?: true
  }

  export type LibroIdiomaSumAggregateInputType = {
    id?: true
  }

  export type LibroIdiomaMinAggregateInputType = {
    id?: true
    idioma?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type LibroIdiomaMaxAggregateInputType = {
    id?: true
    idioma?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type LibroIdiomaCountAggregateInputType = {
    id?: true
    idioma?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    _all?: true
  }

  export type LibroIdiomaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LibroIdioma to aggregate.
     */
    where?: LibroIdiomaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroIdiomas to fetch.
     */
    orderBy?: LibroIdiomaOrderByWithRelationInput | LibroIdiomaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LibroIdiomaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroIdiomas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroIdiomas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LibroIdiomas
    **/
    _count?: true | LibroIdiomaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LibroIdiomaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LibroIdiomaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LibroIdiomaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LibroIdiomaMaxAggregateInputType
  }

  export type GetLibroIdiomaAggregateType<T extends LibroIdiomaAggregateArgs> = {
        [P in keyof T & keyof AggregateLibroIdioma]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLibroIdioma[P]>
      : GetScalarType<T[P], AggregateLibroIdioma[P]>
  }




  export type LibroIdiomaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroIdiomaWhereInput
    orderBy?: LibroIdiomaOrderByWithAggregationInput | LibroIdiomaOrderByWithAggregationInput[]
    by: LibroIdiomaScalarFieldEnum[] | LibroIdiomaScalarFieldEnum
    having?: LibroIdiomaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LibroIdiomaCountAggregateInputType | true
    _avg?: LibroIdiomaAvgAggregateInputType
    _sum?: LibroIdiomaSumAggregateInputType
    _min?: LibroIdiomaMinAggregateInputType
    _max?: LibroIdiomaMaxAggregateInputType
  }

  export type LibroIdiomaGroupByOutputType = {
    id: number
    idioma: string
    fechaCreacion: Date
    usuarioCreadorId: string
    _count: LibroIdiomaCountAggregateOutputType | null
    _avg: LibroIdiomaAvgAggregateOutputType | null
    _sum: LibroIdiomaSumAggregateOutputType | null
    _min: LibroIdiomaMinAggregateOutputType | null
    _max: LibroIdiomaMaxAggregateOutputType | null
  }

  type GetLibroIdiomaGroupByPayload<T extends LibroIdiomaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LibroIdiomaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LibroIdiomaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LibroIdiomaGroupByOutputType[P]>
            : GetScalarType<T[P], LibroIdiomaGroupByOutputType[P]>
        }
      >
    >


  export type LibroIdiomaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    idioma?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    libros?: boolean | LibroIdioma$librosArgs<ExtArgs>
    _count?: boolean | LibroIdiomaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["libroIdioma"]>

  export type LibroIdiomaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    idioma?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["libroIdioma"]>

  export type LibroIdiomaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    idioma?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["libroIdioma"]>

  export type LibroIdiomaSelectScalar = {
    id?: boolean
    idioma?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }

  export type LibroIdiomaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "idioma" | "fechaCreacion" | "usuarioCreadorId", ExtArgs["result"]["libroIdioma"]>
  export type LibroIdiomaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    libros?: boolean | LibroIdioma$librosArgs<ExtArgs>
    _count?: boolean | LibroIdiomaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LibroIdiomaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type LibroIdiomaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $LibroIdiomaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LibroIdioma"
    objects: {
      libros: Prisma.$LibroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      idioma: string
      fechaCreacion: Date
      usuarioCreadorId: string
    }, ExtArgs["result"]["libroIdioma"]>
    composites: {}
  }

  type LibroIdiomaGetPayload<S extends boolean | null | undefined | LibroIdiomaDefaultArgs> = $Result.GetResult<Prisma.$LibroIdiomaPayload, S>

  type LibroIdiomaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LibroIdiomaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LibroIdiomaCountAggregateInputType | true
    }

  export interface LibroIdiomaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LibroIdioma'], meta: { name: 'LibroIdioma' } }
    /**
     * Find zero or one LibroIdioma that matches the filter.
     * @param {LibroIdiomaFindUniqueArgs} args - Arguments to find a LibroIdioma
     * @example
     * // Get one LibroIdioma
     * const libroIdioma = await prisma.libroIdioma.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LibroIdiomaFindUniqueArgs>(args: SelectSubset<T, LibroIdiomaFindUniqueArgs<ExtArgs>>): Prisma__LibroIdiomaClient<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LibroIdioma that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LibroIdiomaFindUniqueOrThrowArgs} args - Arguments to find a LibroIdioma
     * @example
     * // Get one LibroIdioma
     * const libroIdioma = await prisma.libroIdioma.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LibroIdiomaFindUniqueOrThrowArgs>(args: SelectSubset<T, LibroIdiomaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LibroIdiomaClient<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LibroIdioma that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroIdiomaFindFirstArgs} args - Arguments to find a LibroIdioma
     * @example
     * // Get one LibroIdioma
     * const libroIdioma = await prisma.libroIdioma.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LibroIdiomaFindFirstArgs>(args?: SelectSubset<T, LibroIdiomaFindFirstArgs<ExtArgs>>): Prisma__LibroIdiomaClient<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LibroIdioma that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroIdiomaFindFirstOrThrowArgs} args - Arguments to find a LibroIdioma
     * @example
     * // Get one LibroIdioma
     * const libroIdioma = await prisma.libroIdioma.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LibroIdiomaFindFirstOrThrowArgs>(args?: SelectSubset<T, LibroIdiomaFindFirstOrThrowArgs<ExtArgs>>): Prisma__LibroIdiomaClient<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LibroIdiomas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroIdiomaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LibroIdiomas
     * const libroIdiomas = await prisma.libroIdioma.findMany()
     * 
     * // Get first 10 LibroIdiomas
     * const libroIdiomas = await prisma.libroIdioma.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const libroIdiomaWithIdOnly = await prisma.libroIdioma.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LibroIdiomaFindManyArgs>(args?: SelectSubset<T, LibroIdiomaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LibroIdioma.
     * @param {LibroIdiomaCreateArgs} args - Arguments to create a LibroIdioma.
     * @example
     * // Create one LibroIdioma
     * const LibroIdioma = await prisma.libroIdioma.create({
     *   data: {
     *     // ... data to create a LibroIdioma
     *   }
     * })
     * 
     */
    create<T extends LibroIdiomaCreateArgs>(args: SelectSubset<T, LibroIdiomaCreateArgs<ExtArgs>>): Prisma__LibroIdiomaClient<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LibroIdiomas.
     * @param {LibroIdiomaCreateManyArgs} args - Arguments to create many LibroIdiomas.
     * @example
     * // Create many LibroIdiomas
     * const libroIdioma = await prisma.libroIdioma.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LibroIdiomaCreateManyArgs>(args?: SelectSubset<T, LibroIdiomaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LibroIdiomas and returns the data saved in the database.
     * @param {LibroIdiomaCreateManyAndReturnArgs} args - Arguments to create many LibroIdiomas.
     * @example
     * // Create many LibroIdiomas
     * const libroIdioma = await prisma.libroIdioma.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LibroIdiomas and only return the `id`
     * const libroIdiomaWithIdOnly = await prisma.libroIdioma.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LibroIdiomaCreateManyAndReturnArgs>(args?: SelectSubset<T, LibroIdiomaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LibroIdioma.
     * @param {LibroIdiomaDeleteArgs} args - Arguments to delete one LibroIdioma.
     * @example
     * // Delete one LibroIdioma
     * const LibroIdioma = await prisma.libroIdioma.delete({
     *   where: {
     *     // ... filter to delete one LibroIdioma
     *   }
     * })
     * 
     */
    delete<T extends LibroIdiomaDeleteArgs>(args: SelectSubset<T, LibroIdiomaDeleteArgs<ExtArgs>>): Prisma__LibroIdiomaClient<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LibroIdioma.
     * @param {LibroIdiomaUpdateArgs} args - Arguments to update one LibroIdioma.
     * @example
     * // Update one LibroIdioma
     * const libroIdioma = await prisma.libroIdioma.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LibroIdiomaUpdateArgs>(args: SelectSubset<T, LibroIdiomaUpdateArgs<ExtArgs>>): Prisma__LibroIdiomaClient<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LibroIdiomas.
     * @param {LibroIdiomaDeleteManyArgs} args - Arguments to filter LibroIdiomas to delete.
     * @example
     * // Delete a few LibroIdiomas
     * const { count } = await prisma.libroIdioma.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LibroIdiomaDeleteManyArgs>(args?: SelectSubset<T, LibroIdiomaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LibroIdiomas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroIdiomaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LibroIdiomas
     * const libroIdioma = await prisma.libroIdioma.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LibroIdiomaUpdateManyArgs>(args: SelectSubset<T, LibroIdiomaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LibroIdiomas and returns the data updated in the database.
     * @param {LibroIdiomaUpdateManyAndReturnArgs} args - Arguments to update many LibroIdiomas.
     * @example
     * // Update many LibroIdiomas
     * const libroIdioma = await prisma.libroIdioma.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LibroIdiomas and only return the `id`
     * const libroIdiomaWithIdOnly = await prisma.libroIdioma.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LibroIdiomaUpdateManyAndReturnArgs>(args: SelectSubset<T, LibroIdiomaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LibroIdioma.
     * @param {LibroIdiomaUpsertArgs} args - Arguments to update or create a LibroIdioma.
     * @example
     * // Update or create a LibroIdioma
     * const libroIdioma = await prisma.libroIdioma.upsert({
     *   create: {
     *     // ... data to create a LibroIdioma
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LibroIdioma we want to update
     *   }
     * })
     */
    upsert<T extends LibroIdiomaUpsertArgs>(args: SelectSubset<T, LibroIdiomaUpsertArgs<ExtArgs>>): Prisma__LibroIdiomaClient<$Result.GetResult<Prisma.$LibroIdiomaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LibroIdiomas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroIdiomaCountArgs} args - Arguments to filter LibroIdiomas to count.
     * @example
     * // Count the number of LibroIdiomas
     * const count = await prisma.libroIdioma.count({
     *   where: {
     *     // ... the filter for the LibroIdiomas we want to count
     *   }
     * })
    **/
    count<T extends LibroIdiomaCountArgs>(
      args?: Subset<T, LibroIdiomaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LibroIdiomaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LibroIdioma.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroIdiomaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LibroIdiomaAggregateArgs>(args: Subset<T, LibroIdiomaAggregateArgs>): Prisma.PrismaPromise<GetLibroIdiomaAggregateType<T>>

    /**
     * Group by LibroIdioma.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroIdiomaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LibroIdiomaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LibroIdiomaGroupByArgs['orderBy'] }
        : { orderBy?: LibroIdiomaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LibroIdiomaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLibroIdiomaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LibroIdioma model
   */
  readonly fields: LibroIdiomaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LibroIdioma.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LibroIdiomaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    libros<T extends LibroIdioma$librosArgs<ExtArgs> = {}>(args?: Subset<T, LibroIdioma$librosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LibroIdioma model
   */
  interface LibroIdiomaFieldRefs {
    readonly id: FieldRef<"LibroIdioma", 'Int'>
    readonly idioma: FieldRef<"LibroIdioma", 'String'>
    readonly fechaCreacion: FieldRef<"LibroIdioma", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"LibroIdioma", 'String'>
  }
    

  // Custom InputTypes
  /**
   * LibroIdioma findUnique
   */
  export type LibroIdiomaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIdiomaInclude<ExtArgs> | null
    /**
     * Filter, which LibroIdioma to fetch.
     */
    where: LibroIdiomaWhereUniqueInput
  }

  /**
   * LibroIdioma findUniqueOrThrow
   */
  export type LibroIdiomaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIdiomaInclude<ExtArgs> | null
    /**
     * Filter, which LibroIdioma to fetch.
     */
    where: LibroIdiomaWhereUniqueInput
  }

  /**
   * LibroIdioma findFirst
   */
  export type LibroIdiomaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIdiomaInclude<ExtArgs> | null
    /**
     * Filter, which LibroIdioma to fetch.
     */
    where?: LibroIdiomaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroIdiomas to fetch.
     */
    orderBy?: LibroIdiomaOrderByWithRelationInput | LibroIdiomaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LibroIdiomas.
     */
    cursor?: LibroIdiomaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroIdiomas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroIdiomas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LibroIdiomas.
     */
    distinct?: LibroIdiomaScalarFieldEnum | LibroIdiomaScalarFieldEnum[]
  }

  /**
   * LibroIdioma findFirstOrThrow
   */
  export type LibroIdiomaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIdiomaInclude<ExtArgs> | null
    /**
     * Filter, which LibroIdioma to fetch.
     */
    where?: LibroIdiomaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroIdiomas to fetch.
     */
    orderBy?: LibroIdiomaOrderByWithRelationInput | LibroIdiomaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LibroIdiomas.
     */
    cursor?: LibroIdiomaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroIdiomas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroIdiomas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LibroIdiomas.
     */
    distinct?: LibroIdiomaScalarFieldEnum | LibroIdiomaScalarFieldEnum[]
  }

  /**
   * LibroIdioma findMany
   */
  export type LibroIdiomaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIdiomaInclude<ExtArgs> | null
    /**
     * Filter, which LibroIdiomas to fetch.
     */
    where?: LibroIdiomaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroIdiomas to fetch.
     */
    orderBy?: LibroIdiomaOrderByWithRelationInput | LibroIdiomaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LibroIdiomas.
     */
    cursor?: LibroIdiomaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroIdiomas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroIdiomas.
     */
    skip?: number
    distinct?: LibroIdiomaScalarFieldEnum | LibroIdiomaScalarFieldEnum[]
  }

  /**
   * LibroIdioma create
   */
  export type LibroIdiomaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIdiomaInclude<ExtArgs> | null
    /**
     * The data needed to create a LibroIdioma.
     */
    data: XOR<LibroIdiomaCreateInput, LibroIdiomaUncheckedCreateInput>
  }

  /**
   * LibroIdioma createMany
   */
  export type LibroIdiomaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LibroIdiomas.
     */
    data: LibroIdiomaCreateManyInput | LibroIdiomaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LibroIdioma createManyAndReturn
   */
  export type LibroIdiomaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * The data used to create many LibroIdiomas.
     */
    data: LibroIdiomaCreateManyInput | LibroIdiomaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LibroIdioma update
   */
  export type LibroIdiomaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIdiomaInclude<ExtArgs> | null
    /**
     * The data needed to update a LibroIdioma.
     */
    data: XOR<LibroIdiomaUpdateInput, LibroIdiomaUncheckedUpdateInput>
    /**
     * Choose, which LibroIdioma to update.
     */
    where: LibroIdiomaWhereUniqueInput
  }

  /**
   * LibroIdioma updateMany
   */
  export type LibroIdiomaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LibroIdiomas.
     */
    data: XOR<LibroIdiomaUpdateManyMutationInput, LibroIdiomaUncheckedUpdateManyInput>
    /**
     * Filter which LibroIdiomas to update
     */
    where?: LibroIdiomaWhereInput
    /**
     * Limit how many LibroIdiomas to update.
     */
    limit?: number
  }

  /**
   * LibroIdioma updateManyAndReturn
   */
  export type LibroIdiomaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * The data used to update LibroIdiomas.
     */
    data: XOR<LibroIdiomaUpdateManyMutationInput, LibroIdiomaUncheckedUpdateManyInput>
    /**
     * Filter which LibroIdiomas to update
     */
    where?: LibroIdiomaWhereInput
    /**
     * Limit how many LibroIdiomas to update.
     */
    limit?: number
  }

  /**
   * LibroIdioma upsert
   */
  export type LibroIdiomaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIdiomaInclude<ExtArgs> | null
    /**
     * The filter to search for the LibroIdioma to update in case it exists.
     */
    where: LibroIdiomaWhereUniqueInput
    /**
     * In case the LibroIdioma found by the `where` argument doesn't exist, create a new LibroIdioma with this data.
     */
    create: XOR<LibroIdiomaCreateInput, LibroIdiomaUncheckedCreateInput>
    /**
     * In case the LibroIdioma was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LibroIdiomaUpdateInput, LibroIdiomaUncheckedUpdateInput>
  }

  /**
   * LibroIdioma delete
   */
  export type LibroIdiomaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIdiomaInclude<ExtArgs> | null
    /**
     * Filter which LibroIdioma to delete.
     */
    where: LibroIdiomaWhereUniqueInput
  }

  /**
   * LibroIdioma deleteMany
   */
  export type LibroIdiomaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LibroIdiomas to delete
     */
    where?: LibroIdiomaWhereInput
    /**
     * Limit how many LibroIdiomas to delete.
     */
    limit?: number
  }

  /**
   * LibroIdioma.libros
   */
  export type LibroIdioma$librosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    where?: LibroWhereInput
    orderBy?: LibroOrderByWithRelationInput | LibroOrderByWithRelationInput[]
    cursor?: LibroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LibroScalarFieldEnum | LibroScalarFieldEnum[]
  }

  /**
   * LibroIdioma without action
   */
  export type LibroIdiomaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroIdioma
     */
    select?: LibroIdiomaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroIdioma
     */
    omit?: LibroIdiomaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroIdiomaInclude<ExtArgs> | null
  }


  /**
   * Model LibroEditorial
   */

  export type AggregateLibroEditorial = {
    _count: LibroEditorialCountAggregateOutputType | null
    _avg: LibroEditorialAvgAggregateOutputType | null
    _sum: LibroEditorialSumAggregateOutputType | null
    _min: LibroEditorialMinAggregateOutputType | null
    _max: LibroEditorialMaxAggregateOutputType | null
  }

  export type LibroEditorialAvgAggregateOutputType = {
    id: number | null
  }

  export type LibroEditorialSumAggregateOutputType = {
    id: number | null
  }

  export type LibroEditorialMinAggregateOutputType = {
    id: number | null
    editorial: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type LibroEditorialMaxAggregateOutputType = {
    id: number | null
    editorial: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type LibroEditorialCountAggregateOutputType = {
    id: number
    editorial: number
    fechaCreacion: number
    usuarioCreadorId: number
    _all: number
  }


  export type LibroEditorialAvgAggregateInputType = {
    id?: true
  }

  export type LibroEditorialSumAggregateInputType = {
    id?: true
  }

  export type LibroEditorialMinAggregateInputType = {
    id?: true
    editorial?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type LibroEditorialMaxAggregateInputType = {
    id?: true
    editorial?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type LibroEditorialCountAggregateInputType = {
    id?: true
    editorial?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    _all?: true
  }

  export type LibroEditorialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LibroEditorial to aggregate.
     */
    where?: LibroEditorialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroEditorials to fetch.
     */
    orderBy?: LibroEditorialOrderByWithRelationInput | LibroEditorialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LibroEditorialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroEditorials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroEditorials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LibroEditorials
    **/
    _count?: true | LibroEditorialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LibroEditorialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LibroEditorialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LibroEditorialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LibroEditorialMaxAggregateInputType
  }

  export type GetLibroEditorialAggregateType<T extends LibroEditorialAggregateArgs> = {
        [P in keyof T & keyof AggregateLibroEditorial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLibroEditorial[P]>
      : GetScalarType<T[P], AggregateLibroEditorial[P]>
  }




  export type LibroEditorialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LibroEditorialWhereInput
    orderBy?: LibroEditorialOrderByWithAggregationInput | LibroEditorialOrderByWithAggregationInput[]
    by: LibroEditorialScalarFieldEnum[] | LibroEditorialScalarFieldEnum
    having?: LibroEditorialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LibroEditorialCountAggregateInputType | true
    _avg?: LibroEditorialAvgAggregateInputType
    _sum?: LibroEditorialSumAggregateInputType
    _min?: LibroEditorialMinAggregateInputType
    _max?: LibroEditorialMaxAggregateInputType
  }

  export type LibroEditorialGroupByOutputType = {
    id: number
    editorial: string
    fechaCreacion: Date
    usuarioCreadorId: string
    _count: LibroEditorialCountAggregateOutputType | null
    _avg: LibroEditorialAvgAggregateOutputType | null
    _sum: LibroEditorialSumAggregateOutputType | null
    _min: LibroEditorialMinAggregateOutputType | null
    _max: LibroEditorialMaxAggregateOutputType | null
  }

  type GetLibroEditorialGroupByPayload<T extends LibroEditorialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LibroEditorialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LibroEditorialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LibroEditorialGroupByOutputType[P]>
            : GetScalarType<T[P], LibroEditorialGroupByOutputType[P]>
        }
      >
    >


  export type LibroEditorialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    editorial?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    libros?: boolean | LibroEditorial$librosArgs<ExtArgs>
    _count?: boolean | LibroEditorialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["libroEditorial"]>

  export type LibroEditorialSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    editorial?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["libroEditorial"]>

  export type LibroEditorialSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    editorial?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["libroEditorial"]>

  export type LibroEditorialSelectScalar = {
    id?: boolean
    editorial?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }

  export type LibroEditorialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "editorial" | "fechaCreacion" | "usuarioCreadorId", ExtArgs["result"]["libroEditorial"]>
  export type LibroEditorialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    libros?: boolean | LibroEditorial$librosArgs<ExtArgs>
    _count?: boolean | LibroEditorialCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LibroEditorialIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type LibroEditorialIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $LibroEditorialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LibroEditorial"
    objects: {
      libros: Prisma.$LibroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      editorial: string
      fechaCreacion: Date
      usuarioCreadorId: string
    }, ExtArgs["result"]["libroEditorial"]>
    composites: {}
  }

  type LibroEditorialGetPayload<S extends boolean | null | undefined | LibroEditorialDefaultArgs> = $Result.GetResult<Prisma.$LibroEditorialPayload, S>

  type LibroEditorialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LibroEditorialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LibroEditorialCountAggregateInputType | true
    }

  export interface LibroEditorialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LibroEditorial'], meta: { name: 'LibroEditorial' } }
    /**
     * Find zero or one LibroEditorial that matches the filter.
     * @param {LibroEditorialFindUniqueArgs} args - Arguments to find a LibroEditorial
     * @example
     * // Get one LibroEditorial
     * const libroEditorial = await prisma.libroEditorial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LibroEditorialFindUniqueArgs>(args: SelectSubset<T, LibroEditorialFindUniqueArgs<ExtArgs>>): Prisma__LibroEditorialClient<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LibroEditorial that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LibroEditorialFindUniqueOrThrowArgs} args - Arguments to find a LibroEditorial
     * @example
     * // Get one LibroEditorial
     * const libroEditorial = await prisma.libroEditorial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LibroEditorialFindUniqueOrThrowArgs>(args: SelectSubset<T, LibroEditorialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LibroEditorialClient<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LibroEditorial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroEditorialFindFirstArgs} args - Arguments to find a LibroEditorial
     * @example
     * // Get one LibroEditorial
     * const libroEditorial = await prisma.libroEditorial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LibroEditorialFindFirstArgs>(args?: SelectSubset<T, LibroEditorialFindFirstArgs<ExtArgs>>): Prisma__LibroEditorialClient<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LibroEditorial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroEditorialFindFirstOrThrowArgs} args - Arguments to find a LibroEditorial
     * @example
     * // Get one LibroEditorial
     * const libroEditorial = await prisma.libroEditorial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LibroEditorialFindFirstOrThrowArgs>(args?: SelectSubset<T, LibroEditorialFindFirstOrThrowArgs<ExtArgs>>): Prisma__LibroEditorialClient<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LibroEditorials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroEditorialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LibroEditorials
     * const libroEditorials = await prisma.libroEditorial.findMany()
     * 
     * // Get first 10 LibroEditorials
     * const libroEditorials = await prisma.libroEditorial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const libroEditorialWithIdOnly = await prisma.libroEditorial.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LibroEditorialFindManyArgs>(args?: SelectSubset<T, LibroEditorialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LibroEditorial.
     * @param {LibroEditorialCreateArgs} args - Arguments to create a LibroEditorial.
     * @example
     * // Create one LibroEditorial
     * const LibroEditorial = await prisma.libroEditorial.create({
     *   data: {
     *     // ... data to create a LibroEditorial
     *   }
     * })
     * 
     */
    create<T extends LibroEditorialCreateArgs>(args: SelectSubset<T, LibroEditorialCreateArgs<ExtArgs>>): Prisma__LibroEditorialClient<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LibroEditorials.
     * @param {LibroEditorialCreateManyArgs} args - Arguments to create many LibroEditorials.
     * @example
     * // Create many LibroEditorials
     * const libroEditorial = await prisma.libroEditorial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LibroEditorialCreateManyArgs>(args?: SelectSubset<T, LibroEditorialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LibroEditorials and returns the data saved in the database.
     * @param {LibroEditorialCreateManyAndReturnArgs} args - Arguments to create many LibroEditorials.
     * @example
     * // Create many LibroEditorials
     * const libroEditorial = await prisma.libroEditorial.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LibroEditorials and only return the `id`
     * const libroEditorialWithIdOnly = await prisma.libroEditorial.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LibroEditorialCreateManyAndReturnArgs>(args?: SelectSubset<T, LibroEditorialCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LibroEditorial.
     * @param {LibroEditorialDeleteArgs} args - Arguments to delete one LibroEditorial.
     * @example
     * // Delete one LibroEditorial
     * const LibroEditorial = await prisma.libroEditorial.delete({
     *   where: {
     *     // ... filter to delete one LibroEditorial
     *   }
     * })
     * 
     */
    delete<T extends LibroEditorialDeleteArgs>(args: SelectSubset<T, LibroEditorialDeleteArgs<ExtArgs>>): Prisma__LibroEditorialClient<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LibroEditorial.
     * @param {LibroEditorialUpdateArgs} args - Arguments to update one LibroEditorial.
     * @example
     * // Update one LibroEditorial
     * const libroEditorial = await prisma.libroEditorial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LibroEditorialUpdateArgs>(args: SelectSubset<T, LibroEditorialUpdateArgs<ExtArgs>>): Prisma__LibroEditorialClient<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LibroEditorials.
     * @param {LibroEditorialDeleteManyArgs} args - Arguments to filter LibroEditorials to delete.
     * @example
     * // Delete a few LibroEditorials
     * const { count } = await prisma.libroEditorial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LibroEditorialDeleteManyArgs>(args?: SelectSubset<T, LibroEditorialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LibroEditorials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroEditorialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LibroEditorials
     * const libroEditorial = await prisma.libroEditorial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LibroEditorialUpdateManyArgs>(args: SelectSubset<T, LibroEditorialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LibroEditorials and returns the data updated in the database.
     * @param {LibroEditorialUpdateManyAndReturnArgs} args - Arguments to update many LibroEditorials.
     * @example
     * // Update many LibroEditorials
     * const libroEditorial = await prisma.libroEditorial.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LibroEditorials and only return the `id`
     * const libroEditorialWithIdOnly = await prisma.libroEditorial.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LibroEditorialUpdateManyAndReturnArgs>(args: SelectSubset<T, LibroEditorialUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LibroEditorial.
     * @param {LibroEditorialUpsertArgs} args - Arguments to update or create a LibroEditorial.
     * @example
     * // Update or create a LibroEditorial
     * const libroEditorial = await prisma.libroEditorial.upsert({
     *   create: {
     *     // ... data to create a LibroEditorial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LibroEditorial we want to update
     *   }
     * })
     */
    upsert<T extends LibroEditorialUpsertArgs>(args: SelectSubset<T, LibroEditorialUpsertArgs<ExtArgs>>): Prisma__LibroEditorialClient<$Result.GetResult<Prisma.$LibroEditorialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LibroEditorials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroEditorialCountArgs} args - Arguments to filter LibroEditorials to count.
     * @example
     * // Count the number of LibroEditorials
     * const count = await prisma.libroEditorial.count({
     *   where: {
     *     // ... the filter for the LibroEditorials we want to count
     *   }
     * })
    **/
    count<T extends LibroEditorialCountArgs>(
      args?: Subset<T, LibroEditorialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LibroEditorialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LibroEditorial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroEditorialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LibroEditorialAggregateArgs>(args: Subset<T, LibroEditorialAggregateArgs>): Prisma.PrismaPromise<GetLibroEditorialAggregateType<T>>

    /**
     * Group by LibroEditorial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LibroEditorialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LibroEditorialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LibroEditorialGroupByArgs['orderBy'] }
        : { orderBy?: LibroEditorialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LibroEditorialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLibroEditorialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LibroEditorial model
   */
  readonly fields: LibroEditorialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LibroEditorial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LibroEditorialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    libros<T extends LibroEditorial$librosArgs<ExtArgs> = {}>(args?: Subset<T, LibroEditorial$librosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LibroEditorial model
   */
  interface LibroEditorialFieldRefs {
    readonly id: FieldRef<"LibroEditorial", 'Int'>
    readonly editorial: FieldRef<"LibroEditorial", 'String'>
    readonly fechaCreacion: FieldRef<"LibroEditorial", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"LibroEditorial", 'String'>
  }
    

  // Custom InputTypes
  /**
   * LibroEditorial findUnique
   */
  export type LibroEditorialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroEditorialInclude<ExtArgs> | null
    /**
     * Filter, which LibroEditorial to fetch.
     */
    where: LibroEditorialWhereUniqueInput
  }

  /**
   * LibroEditorial findUniqueOrThrow
   */
  export type LibroEditorialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroEditorialInclude<ExtArgs> | null
    /**
     * Filter, which LibroEditorial to fetch.
     */
    where: LibroEditorialWhereUniqueInput
  }

  /**
   * LibroEditorial findFirst
   */
  export type LibroEditorialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroEditorialInclude<ExtArgs> | null
    /**
     * Filter, which LibroEditorial to fetch.
     */
    where?: LibroEditorialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroEditorials to fetch.
     */
    orderBy?: LibroEditorialOrderByWithRelationInput | LibroEditorialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LibroEditorials.
     */
    cursor?: LibroEditorialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroEditorials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroEditorials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LibroEditorials.
     */
    distinct?: LibroEditorialScalarFieldEnum | LibroEditorialScalarFieldEnum[]
  }

  /**
   * LibroEditorial findFirstOrThrow
   */
  export type LibroEditorialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroEditorialInclude<ExtArgs> | null
    /**
     * Filter, which LibroEditorial to fetch.
     */
    where?: LibroEditorialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroEditorials to fetch.
     */
    orderBy?: LibroEditorialOrderByWithRelationInput | LibroEditorialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LibroEditorials.
     */
    cursor?: LibroEditorialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroEditorials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroEditorials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LibroEditorials.
     */
    distinct?: LibroEditorialScalarFieldEnum | LibroEditorialScalarFieldEnum[]
  }

  /**
   * LibroEditorial findMany
   */
  export type LibroEditorialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroEditorialInclude<ExtArgs> | null
    /**
     * Filter, which LibroEditorials to fetch.
     */
    where?: LibroEditorialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LibroEditorials to fetch.
     */
    orderBy?: LibroEditorialOrderByWithRelationInput | LibroEditorialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LibroEditorials.
     */
    cursor?: LibroEditorialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LibroEditorials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LibroEditorials.
     */
    skip?: number
    distinct?: LibroEditorialScalarFieldEnum | LibroEditorialScalarFieldEnum[]
  }

  /**
   * LibroEditorial create
   */
  export type LibroEditorialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroEditorialInclude<ExtArgs> | null
    /**
     * The data needed to create a LibroEditorial.
     */
    data: XOR<LibroEditorialCreateInput, LibroEditorialUncheckedCreateInput>
  }

  /**
   * LibroEditorial createMany
   */
  export type LibroEditorialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LibroEditorials.
     */
    data: LibroEditorialCreateManyInput | LibroEditorialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LibroEditorial createManyAndReturn
   */
  export type LibroEditorialCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * The data used to create many LibroEditorials.
     */
    data: LibroEditorialCreateManyInput | LibroEditorialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LibroEditorial update
   */
  export type LibroEditorialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroEditorialInclude<ExtArgs> | null
    /**
     * The data needed to update a LibroEditorial.
     */
    data: XOR<LibroEditorialUpdateInput, LibroEditorialUncheckedUpdateInput>
    /**
     * Choose, which LibroEditorial to update.
     */
    where: LibroEditorialWhereUniqueInput
  }

  /**
   * LibroEditorial updateMany
   */
  export type LibroEditorialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LibroEditorials.
     */
    data: XOR<LibroEditorialUpdateManyMutationInput, LibroEditorialUncheckedUpdateManyInput>
    /**
     * Filter which LibroEditorials to update
     */
    where?: LibroEditorialWhereInput
    /**
     * Limit how many LibroEditorials to update.
     */
    limit?: number
  }

  /**
   * LibroEditorial updateManyAndReturn
   */
  export type LibroEditorialUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * The data used to update LibroEditorials.
     */
    data: XOR<LibroEditorialUpdateManyMutationInput, LibroEditorialUncheckedUpdateManyInput>
    /**
     * Filter which LibroEditorials to update
     */
    where?: LibroEditorialWhereInput
    /**
     * Limit how many LibroEditorials to update.
     */
    limit?: number
  }

  /**
   * LibroEditorial upsert
   */
  export type LibroEditorialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroEditorialInclude<ExtArgs> | null
    /**
     * The filter to search for the LibroEditorial to update in case it exists.
     */
    where: LibroEditorialWhereUniqueInput
    /**
     * In case the LibroEditorial found by the `where` argument doesn't exist, create a new LibroEditorial with this data.
     */
    create: XOR<LibroEditorialCreateInput, LibroEditorialUncheckedCreateInput>
    /**
     * In case the LibroEditorial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LibroEditorialUpdateInput, LibroEditorialUncheckedUpdateInput>
  }

  /**
   * LibroEditorial delete
   */
  export type LibroEditorialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroEditorialInclude<ExtArgs> | null
    /**
     * Filter which LibroEditorial to delete.
     */
    where: LibroEditorialWhereUniqueInput
  }

  /**
   * LibroEditorial deleteMany
   */
  export type LibroEditorialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LibroEditorials to delete
     */
    where?: LibroEditorialWhereInput
    /**
     * Limit how many LibroEditorials to delete.
     */
    limit?: number
  }

  /**
   * LibroEditorial.libros
   */
  export type LibroEditorial$librosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    where?: LibroWhereInput
    orderBy?: LibroOrderByWithRelationInput | LibroOrderByWithRelationInput[]
    cursor?: LibroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LibroScalarFieldEnum | LibroScalarFieldEnum[]
  }

  /**
   * LibroEditorial without action
   */
  export type LibroEditorialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroEditorial
     */
    select?: LibroEditorialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroEditorial
     */
    omit?: LibroEditorialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroEditorialInclude<ExtArgs> | null
  }


  /**
   * Model Curso
   */

  export type AggregateCurso = {
    _count: CursoCountAggregateOutputType | null
    _avg: CursoAvgAggregateOutputType | null
    _sum: CursoSumAggregateOutputType | null
    _min: CursoMinAggregateOutputType | null
    _max: CursoMaxAggregateOutputType | null
  }

  export type CursoAvgAggregateOutputType = {
    id: number | null
    anioDeCarrera: number | null
    sedeId: number | null
    materiaId: number | null
    divisionId: number | null
  }

  export type CursoSumAggregateOutputType = {
    id: number | null
    anioDeCarrera: number | null
    sedeId: number | null
    materiaId: number | null
    divisionId: number | null
  }

  export type CursoMinAggregateOutputType = {
    id: number | null
    horaInicio1: string | null
    duracion1: string | null
    horaInicio2: string | null
    duracion2: string | null
    dia1: $Enums.CursoDia | null
    dia2: $Enums.CursoDia | null
    profesorId: string | null
    anioDeCarrera: number | null
    activo: boolean | null
    ac: string | null
    sedeId: number | null
    materiaId: number | null
    divisionId: number | null
    turno: $Enums.TurnoCurso | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type CursoMaxAggregateOutputType = {
    id: number | null
    horaInicio1: string | null
    duracion1: string | null
    horaInicio2: string | null
    duracion2: string | null
    dia1: $Enums.CursoDia | null
    dia2: $Enums.CursoDia | null
    profesorId: string | null
    anioDeCarrera: number | null
    activo: boolean | null
    ac: string | null
    sedeId: number | null
    materiaId: number | null
    divisionId: number | null
    turno: $Enums.TurnoCurso | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type CursoCountAggregateOutputType = {
    id: number
    horaInicio1: number
    duracion1: number
    horaInicio2: number
    duracion2: number
    dia1: number
    dia2: number
    profesorId: number
    anioDeCarrera: number
    activo: number
    ac: number
    sedeId: number
    materiaId: number
    divisionId: number
    turno: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type CursoAvgAggregateInputType = {
    id?: true
    anioDeCarrera?: true
    sedeId?: true
    materiaId?: true
    divisionId?: true
  }

  export type CursoSumAggregateInputType = {
    id?: true
    anioDeCarrera?: true
    sedeId?: true
    materiaId?: true
    divisionId?: true
  }

  export type CursoMinAggregateInputType = {
    id?: true
    horaInicio1?: true
    duracion1?: true
    horaInicio2?: true
    duracion2?: true
    dia1?: true
    dia2?: true
    profesorId?: true
    anioDeCarrera?: true
    activo?: true
    ac?: true
    sedeId?: true
    materiaId?: true
    divisionId?: true
    turno?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type CursoMaxAggregateInputType = {
    id?: true
    horaInicio1?: true
    duracion1?: true
    horaInicio2?: true
    duracion2?: true
    dia1?: true
    dia2?: true
    profesorId?: true
    anioDeCarrera?: true
    activo?: true
    ac?: true
    sedeId?: true
    materiaId?: true
    divisionId?: true
    turno?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type CursoCountAggregateInputType = {
    id?: true
    horaInicio1?: true
    duracion1?: true
    horaInicio2?: true
    duracion2?: true
    dia1?: true
    dia2?: true
    profesorId?: true
    anioDeCarrera?: true
    activo?: true
    ac?: true
    sedeId?: true
    materiaId?: true
    divisionId?: true
    turno?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type CursoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Curso to aggregate.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cursos
    **/
    _count?: true | CursoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CursoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CursoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CursoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CursoMaxAggregateInputType
  }

  export type GetCursoAggregateType<T extends CursoAggregateArgs> = {
        [P in keyof T & keyof AggregateCurso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCurso[P]>
      : GetScalarType<T[P], AggregateCurso[P]>
  }




  export type CursoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoWhereInput
    orderBy?: CursoOrderByWithAggregationInput | CursoOrderByWithAggregationInput[]
    by: CursoScalarFieldEnum[] | CursoScalarFieldEnum
    having?: CursoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CursoCountAggregateInputType | true
    _avg?: CursoAvgAggregateInputType
    _sum?: CursoSumAggregateInputType
    _min?: CursoMinAggregateInputType
    _max?: CursoMaxAggregateInputType
  }

  export type CursoGroupByOutputType = {
    id: number
    horaInicio1: string
    duracion1: string
    horaInicio2: string | null
    duracion2: string | null
    dia1: $Enums.CursoDia
    dia2: $Enums.CursoDia | null
    profesorId: string
    anioDeCarrera: number
    activo: boolean
    ac: string
    sedeId: number
    materiaId: number
    divisionId: number
    turno: $Enums.TurnoCurso
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: CursoCountAggregateOutputType | null
    _avg: CursoAvgAggregateOutputType | null
    _sum: CursoSumAggregateOutputType | null
    _min: CursoMinAggregateOutputType | null
    _max: CursoMaxAggregateOutputType | null
  }

  type GetCursoGroupByPayload<T extends CursoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CursoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CursoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CursoGroupByOutputType[P]>
            : GetScalarType<T[P], CursoGroupByOutputType[P]>
        }
      >
    >


  export type CursoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    horaInicio1?: boolean
    duracion1?: boolean
    horaInicio2?: boolean
    duracion2?: boolean
    dia1?: boolean
    dia2?: boolean
    profesorId?: boolean
    anioDeCarrera?: boolean
    activo?: boolean
    ac?: boolean
    sedeId?: boolean
    materiaId?: boolean
    divisionId?: boolean
    turno?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    ayudantes?: boolean | Curso$ayudantesArgs<ExtArgs>
    profesor?: boolean | UserDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    division?: boolean | DivisionDefaultArgs<ExtArgs>
    reservaLaboratorioCerrado?: boolean | Curso$reservaLaboratorioCerradoArgs<ExtArgs>
    _count?: boolean | CursoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["curso"]>

  export type CursoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    horaInicio1?: boolean
    duracion1?: boolean
    horaInicio2?: boolean
    duracion2?: boolean
    dia1?: boolean
    dia2?: boolean
    profesorId?: boolean
    anioDeCarrera?: boolean
    activo?: boolean
    ac?: boolean
    sedeId?: boolean
    materiaId?: boolean
    divisionId?: boolean
    turno?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    profesor?: boolean | UserDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    division?: boolean | DivisionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["curso"]>

  export type CursoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    horaInicio1?: boolean
    duracion1?: boolean
    horaInicio2?: boolean
    duracion2?: boolean
    dia1?: boolean
    dia2?: boolean
    profesorId?: boolean
    anioDeCarrera?: boolean
    activo?: boolean
    ac?: boolean
    sedeId?: boolean
    materiaId?: boolean
    divisionId?: boolean
    turno?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    profesor?: boolean | UserDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    division?: boolean | DivisionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["curso"]>

  export type CursoSelectScalar = {
    id?: boolean
    horaInicio1?: boolean
    duracion1?: boolean
    horaInicio2?: boolean
    duracion2?: boolean
    dia1?: boolean
    dia2?: boolean
    profesorId?: boolean
    anioDeCarrera?: boolean
    activo?: boolean
    ac?: boolean
    sedeId?: boolean
    materiaId?: boolean
    divisionId?: boolean
    turno?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type CursoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "horaInicio1" | "duracion1" | "horaInicio2" | "duracion2" | "dia1" | "dia2" | "profesorId" | "anioDeCarrera" | "activo" | "ac" | "sedeId" | "materiaId" | "divisionId" | "turno" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["curso"]>
  export type CursoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ayudantes?: boolean | Curso$ayudantesArgs<ExtArgs>
    profesor?: boolean | UserDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    division?: boolean | DivisionDefaultArgs<ExtArgs>
    reservaLaboratorioCerrado?: boolean | Curso$reservaLaboratorioCerradoArgs<ExtArgs>
    _count?: boolean | CursoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CursoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profesor?: boolean | UserDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    division?: boolean | DivisionDefaultArgs<ExtArgs>
  }
  export type CursoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profesor?: boolean | UserDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    division?: boolean | DivisionDefaultArgs<ExtArgs>
  }

  export type $CursoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Curso"
    objects: {
      ayudantes: Prisma.$CursoAyudantePayload<ExtArgs>[]
      profesor: Prisma.$UserPayload<ExtArgs>
      sede: Prisma.$SedePayload<ExtArgs>
      materia: Prisma.$MateriaPayload<ExtArgs>
      division: Prisma.$DivisionPayload<ExtArgs>
      reservaLaboratorioCerrado: Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      horaInicio1: string
      duracion1: string
      horaInicio2: string | null
      duracion2: string | null
      dia1: $Enums.CursoDia
      dia2: $Enums.CursoDia | null
      profesorId: string
      anioDeCarrera: number
      activo: boolean
      ac: string
      sedeId: number
      materiaId: number
      divisionId: number
      turno: $Enums.TurnoCurso
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["curso"]>
    composites: {}
  }

  type CursoGetPayload<S extends boolean | null | undefined | CursoDefaultArgs> = $Result.GetResult<Prisma.$CursoPayload, S>

  type CursoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CursoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CursoCountAggregateInputType | true
    }

  export interface CursoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Curso'], meta: { name: 'Curso' } }
    /**
     * Find zero or one Curso that matches the filter.
     * @param {CursoFindUniqueArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CursoFindUniqueArgs>(args: SelectSubset<T, CursoFindUniqueArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Curso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CursoFindUniqueOrThrowArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CursoFindUniqueOrThrowArgs>(args: SelectSubset<T, CursoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Curso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindFirstArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CursoFindFirstArgs>(args?: SelectSubset<T, CursoFindFirstArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Curso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindFirstOrThrowArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CursoFindFirstOrThrowArgs>(args?: SelectSubset<T, CursoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cursos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cursos
     * const cursos = await prisma.curso.findMany()
     * 
     * // Get first 10 Cursos
     * const cursos = await prisma.curso.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cursoWithIdOnly = await prisma.curso.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CursoFindManyArgs>(args?: SelectSubset<T, CursoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Curso.
     * @param {CursoCreateArgs} args - Arguments to create a Curso.
     * @example
     * // Create one Curso
     * const Curso = await prisma.curso.create({
     *   data: {
     *     // ... data to create a Curso
     *   }
     * })
     * 
     */
    create<T extends CursoCreateArgs>(args: SelectSubset<T, CursoCreateArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cursos.
     * @param {CursoCreateManyArgs} args - Arguments to create many Cursos.
     * @example
     * // Create many Cursos
     * const curso = await prisma.curso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CursoCreateManyArgs>(args?: SelectSubset<T, CursoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cursos and returns the data saved in the database.
     * @param {CursoCreateManyAndReturnArgs} args - Arguments to create many Cursos.
     * @example
     * // Create many Cursos
     * const curso = await prisma.curso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cursos and only return the `id`
     * const cursoWithIdOnly = await prisma.curso.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CursoCreateManyAndReturnArgs>(args?: SelectSubset<T, CursoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Curso.
     * @param {CursoDeleteArgs} args - Arguments to delete one Curso.
     * @example
     * // Delete one Curso
     * const Curso = await prisma.curso.delete({
     *   where: {
     *     // ... filter to delete one Curso
     *   }
     * })
     * 
     */
    delete<T extends CursoDeleteArgs>(args: SelectSubset<T, CursoDeleteArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Curso.
     * @param {CursoUpdateArgs} args - Arguments to update one Curso.
     * @example
     * // Update one Curso
     * const curso = await prisma.curso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CursoUpdateArgs>(args: SelectSubset<T, CursoUpdateArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cursos.
     * @param {CursoDeleteManyArgs} args - Arguments to filter Cursos to delete.
     * @example
     * // Delete a few Cursos
     * const { count } = await prisma.curso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CursoDeleteManyArgs>(args?: SelectSubset<T, CursoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cursos
     * const curso = await prisma.curso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CursoUpdateManyArgs>(args: SelectSubset<T, CursoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cursos and returns the data updated in the database.
     * @param {CursoUpdateManyAndReturnArgs} args - Arguments to update many Cursos.
     * @example
     * // Update many Cursos
     * const curso = await prisma.curso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cursos and only return the `id`
     * const cursoWithIdOnly = await prisma.curso.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CursoUpdateManyAndReturnArgs>(args: SelectSubset<T, CursoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Curso.
     * @param {CursoUpsertArgs} args - Arguments to update or create a Curso.
     * @example
     * // Update or create a Curso
     * const curso = await prisma.curso.upsert({
     *   create: {
     *     // ... data to create a Curso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Curso we want to update
     *   }
     * })
     */
    upsert<T extends CursoUpsertArgs>(args: SelectSubset<T, CursoUpsertArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoCountArgs} args - Arguments to filter Cursos to count.
     * @example
     * // Count the number of Cursos
     * const count = await prisma.curso.count({
     *   where: {
     *     // ... the filter for the Cursos we want to count
     *   }
     * })
    **/
    count<T extends CursoCountArgs>(
      args?: Subset<T, CursoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CursoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Curso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CursoAggregateArgs>(args: Subset<T, CursoAggregateArgs>): Prisma.PrismaPromise<GetCursoAggregateType<T>>

    /**
     * Group by Curso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CursoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CursoGroupByArgs['orderBy'] }
        : { orderBy?: CursoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CursoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCursoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Curso model
   */
  readonly fields: CursoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Curso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CursoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ayudantes<T extends Curso$ayudantesArgs<ExtArgs> = {}>(args?: Subset<T, Curso$ayudantesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    profesor<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    materia<T extends MateriaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MateriaDefaultArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    division<T extends DivisionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DivisionDefaultArgs<ExtArgs>>): Prisma__DivisionClient<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reservaLaboratorioCerrado<T extends Curso$reservaLaboratorioCerradoArgs<ExtArgs> = {}>(args?: Subset<T, Curso$reservaLaboratorioCerradoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Curso model
   */
  interface CursoFieldRefs {
    readonly id: FieldRef<"Curso", 'Int'>
    readonly horaInicio1: FieldRef<"Curso", 'String'>
    readonly duracion1: FieldRef<"Curso", 'String'>
    readonly horaInicio2: FieldRef<"Curso", 'String'>
    readonly duracion2: FieldRef<"Curso", 'String'>
    readonly dia1: FieldRef<"Curso", 'CursoDia'>
    readonly dia2: FieldRef<"Curso", 'CursoDia'>
    readonly profesorId: FieldRef<"Curso", 'String'>
    readonly anioDeCarrera: FieldRef<"Curso", 'Int'>
    readonly activo: FieldRef<"Curso", 'Boolean'>
    readonly ac: FieldRef<"Curso", 'String'>
    readonly sedeId: FieldRef<"Curso", 'Int'>
    readonly materiaId: FieldRef<"Curso", 'Int'>
    readonly divisionId: FieldRef<"Curso", 'Int'>
    readonly turno: FieldRef<"Curso", 'TurnoCurso'>
    readonly fechaCreacion: FieldRef<"Curso", 'DateTime'>
    readonly fechaModificacion: FieldRef<"Curso", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Curso", 'String'>
    readonly usuarioModificadorId: FieldRef<"Curso", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Curso findUnique
   */
  export type CursoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso findUniqueOrThrow
   */
  export type CursoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso findFirst
   */
  export type CursoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cursos.
     */
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso findFirstOrThrow
   */
  export type CursoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cursos.
     */
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso findMany
   */
  export type CursoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Cursos to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso create
   */
  export type CursoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * The data needed to create a Curso.
     */
    data: XOR<CursoCreateInput, CursoUncheckedCreateInput>
  }

  /**
   * Curso createMany
   */
  export type CursoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cursos.
     */
    data: CursoCreateManyInput | CursoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Curso createManyAndReturn
   */
  export type CursoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * The data used to create many Cursos.
     */
    data: CursoCreateManyInput | CursoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Curso update
   */
  export type CursoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * The data needed to update a Curso.
     */
    data: XOR<CursoUpdateInput, CursoUncheckedUpdateInput>
    /**
     * Choose, which Curso to update.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso updateMany
   */
  export type CursoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cursos.
     */
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyInput>
    /**
     * Filter which Cursos to update
     */
    where?: CursoWhereInput
    /**
     * Limit how many Cursos to update.
     */
    limit?: number
  }

  /**
   * Curso updateManyAndReturn
   */
  export type CursoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * The data used to update Cursos.
     */
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyInput>
    /**
     * Filter which Cursos to update
     */
    where?: CursoWhereInput
    /**
     * Limit how many Cursos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Curso upsert
   */
  export type CursoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * The filter to search for the Curso to update in case it exists.
     */
    where: CursoWhereUniqueInput
    /**
     * In case the Curso found by the `where` argument doesn't exist, create a new Curso with this data.
     */
    create: XOR<CursoCreateInput, CursoUncheckedCreateInput>
    /**
     * In case the Curso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CursoUpdateInput, CursoUncheckedUpdateInput>
  }

  /**
   * Curso delete
   */
  export type CursoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter which Curso to delete.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso deleteMany
   */
  export type CursoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cursos to delete
     */
    where?: CursoWhereInput
    /**
     * Limit how many Cursos to delete.
     */
    limit?: number
  }

  /**
   * Curso.ayudantes
   */
  export type Curso$ayudantesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
    where?: CursoAyudanteWhereInput
    orderBy?: CursoAyudanteOrderByWithRelationInput | CursoAyudanteOrderByWithRelationInput[]
    cursor?: CursoAyudanteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CursoAyudanteScalarFieldEnum | CursoAyudanteScalarFieldEnum[]
  }

  /**
   * Curso.reservaLaboratorioCerrado
   */
  export type Curso$reservaLaboratorioCerradoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    where?: ReservaLaboratorioCerradoWhereInput
    orderBy?: ReservaLaboratorioCerradoOrderByWithRelationInput | ReservaLaboratorioCerradoOrderByWithRelationInput[]
    cursor?: ReservaLaboratorioCerradoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLaboratorioCerradoScalarFieldEnum | ReservaLaboratorioCerradoScalarFieldEnum[]
  }

  /**
   * Curso without action
   */
  export type CursoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
  }


  /**
   * Model CursoAyudante
   */

  export type AggregateCursoAyudante = {
    _count: CursoAyudanteCountAggregateOutputType | null
    _avg: CursoAyudanteAvgAggregateOutputType | null
    _sum: CursoAyudanteSumAggregateOutputType | null
    _min: CursoAyudanteMinAggregateOutputType | null
    _max: CursoAyudanteMaxAggregateOutputType | null
  }

  export type CursoAyudanteAvgAggregateOutputType = {
    cursoId: number | null
  }

  export type CursoAyudanteSumAggregateOutputType = {
    cursoId: number | null
  }

  export type CursoAyudanteMinAggregateOutputType = {
    cursoId: number | null
    userId: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
    fechaModificacion: Date | null
    usuarioModificadorId: string | null
  }

  export type CursoAyudanteMaxAggregateOutputType = {
    cursoId: number | null
    userId: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
    fechaModificacion: Date | null
    usuarioModificadorId: string | null
  }

  export type CursoAyudanteCountAggregateOutputType = {
    cursoId: number
    userId: number
    fechaCreacion: number
    usuarioCreadorId: number
    fechaModificacion: number
    usuarioModificadorId: number
    _all: number
  }


  export type CursoAyudanteAvgAggregateInputType = {
    cursoId?: true
  }

  export type CursoAyudanteSumAggregateInputType = {
    cursoId?: true
  }

  export type CursoAyudanteMinAggregateInputType = {
    cursoId?: true
    userId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    fechaModificacion?: true
    usuarioModificadorId?: true
  }

  export type CursoAyudanteMaxAggregateInputType = {
    cursoId?: true
    userId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    fechaModificacion?: true
    usuarioModificadorId?: true
  }

  export type CursoAyudanteCountAggregateInputType = {
    cursoId?: true
    userId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    fechaModificacion?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type CursoAyudanteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CursoAyudante to aggregate.
     */
    where?: CursoAyudanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoAyudantes to fetch.
     */
    orderBy?: CursoAyudanteOrderByWithRelationInput | CursoAyudanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CursoAyudanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoAyudantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoAyudantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CursoAyudantes
    **/
    _count?: true | CursoAyudanteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CursoAyudanteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CursoAyudanteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CursoAyudanteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CursoAyudanteMaxAggregateInputType
  }

  export type GetCursoAyudanteAggregateType<T extends CursoAyudanteAggregateArgs> = {
        [P in keyof T & keyof AggregateCursoAyudante]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCursoAyudante[P]>
      : GetScalarType<T[P], AggregateCursoAyudante[P]>
  }




  export type CursoAyudanteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoAyudanteWhereInput
    orderBy?: CursoAyudanteOrderByWithAggregationInput | CursoAyudanteOrderByWithAggregationInput[]
    by: CursoAyudanteScalarFieldEnum[] | CursoAyudanteScalarFieldEnum
    having?: CursoAyudanteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CursoAyudanteCountAggregateInputType | true
    _avg?: CursoAyudanteAvgAggregateInputType
    _sum?: CursoAyudanteSumAggregateInputType
    _min?: CursoAyudanteMinAggregateInputType
    _max?: CursoAyudanteMaxAggregateInputType
  }

  export type CursoAyudanteGroupByOutputType = {
    cursoId: number
    userId: string
    fechaCreacion: Date
    usuarioCreadorId: string
    fechaModificacion: Date
    usuarioModificadorId: string
    _count: CursoAyudanteCountAggregateOutputType | null
    _avg: CursoAyudanteAvgAggregateOutputType | null
    _sum: CursoAyudanteSumAggregateOutputType | null
    _min: CursoAyudanteMinAggregateOutputType | null
    _max: CursoAyudanteMaxAggregateOutputType | null
  }

  type GetCursoAyudanteGroupByPayload<T extends CursoAyudanteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CursoAyudanteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CursoAyudanteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CursoAyudanteGroupByOutputType[P]>
            : GetScalarType<T[P], CursoAyudanteGroupByOutputType[P]>
        }
      >
    >


  export type CursoAyudanteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    cursoId?: boolean
    userId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    fechaModificacion?: boolean
    usuarioModificadorId?: boolean
    curso?: boolean | CursoDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cursoAyudante"]>

  export type CursoAyudanteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    cursoId?: boolean
    userId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    fechaModificacion?: boolean
    usuarioModificadorId?: boolean
    curso?: boolean | CursoDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cursoAyudante"]>

  export type CursoAyudanteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    cursoId?: boolean
    userId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    fechaModificacion?: boolean
    usuarioModificadorId?: boolean
    curso?: boolean | CursoDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cursoAyudante"]>

  export type CursoAyudanteSelectScalar = {
    cursoId?: boolean
    userId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    fechaModificacion?: boolean
    usuarioModificadorId?: boolean
  }

  export type CursoAyudanteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"cursoId" | "userId" | "fechaCreacion" | "usuarioCreadorId" | "fechaModificacion" | "usuarioModificadorId", ExtArgs["result"]["cursoAyudante"]>
  export type CursoAyudanteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    curso?: boolean | CursoDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CursoAyudanteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    curso?: boolean | CursoDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CursoAyudanteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    curso?: boolean | CursoDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CursoAyudantePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CursoAyudante"
    objects: {
      curso: Prisma.$CursoPayload<ExtArgs>
      usuario: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      cursoId: number
      userId: string
      fechaCreacion: Date
      usuarioCreadorId: string
      fechaModificacion: Date
      usuarioModificadorId: string
    }, ExtArgs["result"]["cursoAyudante"]>
    composites: {}
  }

  type CursoAyudanteGetPayload<S extends boolean | null | undefined | CursoAyudanteDefaultArgs> = $Result.GetResult<Prisma.$CursoAyudantePayload, S>

  type CursoAyudanteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CursoAyudanteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CursoAyudanteCountAggregateInputType | true
    }

  export interface CursoAyudanteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CursoAyudante'], meta: { name: 'CursoAyudante' } }
    /**
     * Find zero or one CursoAyudante that matches the filter.
     * @param {CursoAyudanteFindUniqueArgs} args - Arguments to find a CursoAyudante
     * @example
     * // Get one CursoAyudante
     * const cursoAyudante = await prisma.cursoAyudante.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CursoAyudanteFindUniqueArgs>(args: SelectSubset<T, CursoAyudanteFindUniqueArgs<ExtArgs>>): Prisma__CursoAyudanteClient<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CursoAyudante that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CursoAyudanteFindUniqueOrThrowArgs} args - Arguments to find a CursoAyudante
     * @example
     * // Get one CursoAyudante
     * const cursoAyudante = await prisma.cursoAyudante.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CursoAyudanteFindUniqueOrThrowArgs>(args: SelectSubset<T, CursoAyudanteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CursoAyudanteClient<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CursoAyudante that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoAyudanteFindFirstArgs} args - Arguments to find a CursoAyudante
     * @example
     * // Get one CursoAyudante
     * const cursoAyudante = await prisma.cursoAyudante.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CursoAyudanteFindFirstArgs>(args?: SelectSubset<T, CursoAyudanteFindFirstArgs<ExtArgs>>): Prisma__CursoAyudanteClient<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CursoAyudante that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoAyudanteFindFirstOrThrowArgs} args - Arguments to find a CursoAyudante
     * @example
     * // Get one CursoAyudante
     * const cursoAyudante = await prisma.cursoAyudante.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CursoAyudanteFindFirstOrThrowArgs>(args?: SelectSubset<T, CursoAyudanteFindFirstOrThrowArgs<ExtArgs>>): Prisma__CursoAyudanteClient<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CursoAyudantes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoAyudanteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CursoAyudantes
     * const cursoAyudantes = await prisma.cursoAyudante.findMany()
     * 
     * // Get first 10 CursoAyudantes
     * const cursoAyudantes = await prisma.cursoAyudante.findMany({ take: 10 })
     * 
     * // Only select the `cursoId`
     * const cursoAyudanteWithCursoIdOnly = await prisma.cursoAyudante.findMany({ select: { cursoId: true } })
     * 
     */
    findMany<T extends CursoAyudanteFindManyArgs>(args?: SelectSubset<T, CursoAyudanteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CursoAyudante.
     * @param {CursoAyudanteCreateArgs} args - Arguments to create a CursoAyudante.
     * @example
     * // Create one CursoAyudante
     * const CursoAyudante = await prisma.cursoAyudante.create({
     *   data: {
     *     // ... data to create a CursoAyudante
     *   }
     * })
     * 
     */
    create<T extends CursoAyudanteCreateArgs>(args: SelectSubset<T, CursoAyudanteCreateArgs<ExtArgs>>): Prisma__CursoAyudanteClient<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CursoAyudantes.
     * @param {CursoAyudanteCreateManyArgs} args - Arguments to create many CursoAyudantes.
     * @example
     * // Create many CursoAyudantes
     * const cursoAyudante = await prisma.cursoAyudante.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CursoAyudanteCreateManyArgs>(args?: SelectSubset<T, CursoAyudanteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CursoAyudantes and returns the data saved in the database.
     * @param {CursoAyudanteCreateManyAndReturnArgs} args - Arguments to create many CursoAyudantes.
     * @example
     * // Create many CursoAyudantes
     * const cursoAyudante = await prisma.cursoAyudante.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CursoAyudantes and only return the `cursoId`
     * const cursoAyudanteWithCursoIdOnly = await prisma.cursoAyudante.createManyAndReturn({
     *   select: { cursoId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CursoAyudanteCreateManyAndReturnArgs>(args?: SelectSubset<T, CursoAyudanteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CursoAyudante.
     * @param {CursoAyudanteDeleteArgs} args - Arguments to delete one CursoAyudante.
     * @example
     * // Delete one CursoAyudante
     * const CursoAyudante = await prisma.cursoAyudante.delete({
     *   where: {
     *     // ... filter to delete one CursoAyudante
     *   }
     * })
     * 
     */
    delete<T extends CursoAyudanteDeleteArgs>(args: SelectSubset<T, CursoAyudanteDeleteArgs<ExtArgs>>): Prisma__CursoAyudanteClient<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CursoAyudante.
     * @param {CursoAyudanteUpdateArgs} args - Arguments to update one CursoAyudante.
     * @example
     * // Update one CursoAyudante
     * const cursoAyudante = await prisma.cursoAyudante.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CursoAyudanteUpdateArgs>(args: SelectSubset<T, CursoAyudanteUpdateArgs<ExtArgs>>): Prisma__CursoAyudanteClient<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CursoAyudantes.
     * @param {CursoAyudanteDeleteManyArgs} args - Arguments to filter CursoAyudantes to delete.
     * @example
     * // Delete a few CursoAyudantes
     * const { count } = await prisma.cursoAyudante.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CursoAyudanteDeleteManyArgs>(args?: SelectSubset<T, CursoAyudanteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CursoAyudantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoAyudanteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CursoAyudantes
     * const cursoAyudante = await prisma.cursoAyudante.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CursoAyudanteUpdateManyArgs>(args: SelectSubset<T, CursoAyudanteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CursoAyudantes and returns the data updated in the database.
     * @param {CursoAyudanteUpdateManyAndReturnArgs} args - Arguments to update many CursoAyudantes.
     * @example
     * // Update many CursoAyudantes
     * const cursoAyudante = await prisma.cursoAyudante.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CursoAyudantes and only return the `cursoId`
     * const cursoAyudanteWithCursoIdOnly = await prisma.cursoAyudante.updateManyAndReturn({
     *   select: { cursoId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CursoAyudanteUpdateManyAndReturnArgs>(args: SelectSubset<T, CursoAyudanteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CursoAyudante.
     * @param {CursoAyudanteUpsertArgs} args - Arguments to update or create a CursoAyudante.
     * @example
     * // Update or create a CursoAyudante
     * const cursoAyudante = await prisma.cursoAyudante.upsert({
     *   create: {
     *     // ... data to create a CursoAyudante
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CursoAyudante we want to update
     *   }
     * })
     */
    upsert<T extends CursoAyudanteUpsertArgs>(args: SelectSubset<T, CursoAyudanteUpsertArgs<ExtArgs>>): Prisma__CursoAyudanteClient<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CursoAyudantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoAyudanteCountArgs} args - Arguments to filter CursoAyudantes to count.
     * @example
     * // Count the number of CursoAyudantes
     * const count = await prisma.cursoAyudante.count({
     *   where: {
     *     // ... the filter for the CursoAyudantes we want to count
     *   }
     * })
    **/
    count<T extends CursoAyudanteCountArgs>(
      args?: Subset<T, CursoAyudanteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CursoAyudanteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CursoAyudante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoAyudanteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CursoAyudanteAggregateArgs>(args: Subset<T, CursoAyudanteAggregateArgs>): Prisma.PrismaPromise<GetCursoAyudanteAggregateType<T>>

    /**
     * Group by CursoAyudante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoAyudanteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CursoAyudanteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CursoAyudanteGroupByArgs['orderBy'] }
        : { orderBy?: CursoAyudanteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CursoAyudanteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCursoAyudanteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CursoAyudante model
   */
  readonly fields: CursoAyudanteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CursoAyudante.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CursoAyudanteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    curso<T extends CursoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CursoDefaultArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CursoAyudante model
   */
  interface CursoAyudanteFieldRefs {
    readonly cursoId: FieldRef<"CursoAyudante", 'Int'>
    readonly userId: FieldRef<"CursoAyudante", 'String'>
    readonly fechaCreacion: FieldRef<"CursoAyudante", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"CursoAyudante", 'String'>
    readonly fechaModificacion: FieldRef<"CursoAyudante", 'DateTime'>
    readonly usuarioModificadorId: FieldRef<"CursoAyudante", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CursoAyudante findUnique
   */
  export type CursoAyudanteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
    /**
     * Filter, which CursoAyudante to fetch.
     */
    where: CursoAyudanteWhereUniqueInput
  }

  /**
   * CursoAyudante findUniqueOrThrow
   */
  export type CursoAyudanteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
    /**
     * Filter, which CursoAyudante to fetch.
     */
    where: CursoAyudanteWhereUniqueInput
  }

  /**
   * CursoAyudante findFirst
   */
  export type CursoAyudanteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
    /**
     * Filter, which CursoAyudante to fetch.
     */
    where?: CursoAyudanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoAyudantes to fetch.
     */
    orderBy?: CursoAyudanteOrderByWithRelationInput | CursoAyudanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CursoAyudantes.
     */
    cursor?: CursoAyudanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoAyudantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoAyudantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CursoAyudantes.
     */
    distinct?: CursoAyudanteScalarFieldEnum | CursoAyudanteScalarFieldEnum[]
  }

  /**
   * CursoAyudante findFirstOrThrow
   */
  export type CursoAyudanteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
    /**
     * Filter, which CursoAyudante to fetch.
     */
    where?: CursoAyudanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoAyudantes to fetch.
     */
    orderBy?: CursoAyudanteOrderByWithRelationInput | CursoAyudanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CursoAyudantes.
     */
    cursor?: CursoAyudanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoAyudantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoAyudantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CursoAyudantes.
     */
    distinct?: CursoAyudanteScalarFieldEnum | CursoAyudanteScalarFieldEnum[]
  }

  /**
   * CursoAyudante findMany
   */
  export type CursoAyudanteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
    /**
     * Filter, which CursoAyudantes to fetch.
     */
    where?: CursoAyudanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoAyudantes to fetch.
     */
    orderBy?: CursoAyudanteOrderByWithRelationInput | CursoAyudanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CursoAyudantes.
     */
    cursor?: CursoAyudanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoAyudantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoAyudantes.
     */
    skip?: number
    distinct?: CursoAyudanteScalarFieldEnum | CursoAyudanteScalarFieldEnum[]
  }

  /**
   * CursoAyudante create
   */
  export type CursoAyudanteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
    /**
     * The data needed to create a CursoAyudante.
     */
    data: XOR<CursoAyudanteCreateInput, CursoAyudanteUncheckedCreateInput>
  }

  /**
   * CursoAyudante createMany
   */
  export type CursoAyudanteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CursoAyudantes.
     */
    data: CursoAyudanteCreateManyInput | CursoAyudanteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CursoAyudante createManyAndReturn
   */
  export type CursoAyudanteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * The data used to create many CursoAyudantes.
     */
    data: CursoAyudanteCreateManyInput | CursoAyudanteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CursoAyudante update
   */
  export type CursoAyudanteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
    /**
     * The data needed to update a CursoAyudante.
     */
    data: XOR<CursoAyudanteUpdateInput, CursoAyudanteUncheckedUpdateInput>
    /**
     * Choose, which CursoAyudante to update.
     */
    where: CursoAyudanteWhereUniqueInput
  }

  /**
   * CursoAyudante updateMany
   */
  export type CursoAyudanteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CursoAyudantes.
     */
    data: XOR<CursoAyudanteUpdateManyMutationInput, CursoAyudanteUncheckedUpdateManyInput>
    /**
     * Filter which CursoAyudantes to update
     */
    where?: CursoAyudanteWhereInput
    /**
     * Limit how many CursoAyudantes to update.
     */
    limit?: number
  }

  /**
   * CursoAyudante updateManyAndReturn
   */
  export type CursoAyudanteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * The data used to update CursoAyudantes.
     */
    data: XOR<CursoAyudanteUpdateManyMutationInput, CursoAyudanteUncheckedUpdateManyInput>
    /**
     * Filter which CursoAyudantes to update
     */
    where?: CursoAyudanteWhereInput
    /**
     * Limit how many CursoAyudantes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CursoAyudante upsert
   */
  export type CursoAyudanteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
    /**
     * The filter to search for the CursoAyudante to update in case it exists.
     */
    where: CursoAyudanteWhereUniqueInput
    /**
     * In case the CursoAyudante found by the `where` argument doesn't exist, create a new CursoAyudante with this data.
     */
    create: XOR<CursoAyudanteCreateInput, CursoAyudanteUncheckedCreateInput>
    /**
     * In case the CursoAyudante was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CursoAyudanteUpdateInput, CursoAyudanteUncheckedUpdateInput>
  }

  /**
   * CursoAyudante delete
   */
  export type CursoAyudanteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
    /**
     * Filter which CursoAyudante to delete.
     */
    where: CursoAyudanteWhereUniqueInput
  }

  /**
   * CursoAyudante deleteMany
   */
  export type CursoAyudanteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CursoAyudantes to delete
     */
    where?: CursoAyudanteWhereInput
    /**
     * Limit how many CursoAyudantes to delete.
     */
    limit?: number
  }

  /**
   * CursoAyudante without action
   */
  export type CursoAyudanteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
  }


  /**
   * Model Division
   */

  export type AggregateDivision = {
    _count: DivisionCountAggregateOutputType | null
    _avg: DivisionAvgAggregateOutputType | null
    _sum: DivisionSumAggregateOutputType | null
    _min: DivisionMinAggregateOutputType | null
    _max: DivisionMaxAggregateOutputType | null
  }

  export type DivisionAvgAggregateOutputType = {
    id: number | null
    anio: number | null
  }

  export type DivisionSumAggregateOutputType = {
    id: number | null
    anio: number | null
  }

  export type DivisionMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    anio: number | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
    fechaModificacion: Date | null
    usuarioModificadorId: string | null
  }

  export type DivisionMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    anio: number | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
    fechaModificacion: Date | null
    usuarioModificadorId: string | null
  }

  export type DivisionCountAggregateOutputType = {
    id: number
    nombre: number
    anio: number
    fechaCreacion: number
    usuarioCreadorId: number
    fechaModificacion: number
    usuarioModificadorId: number
    _all: number
  }


  export type DivisionAvgAggregateInputType = {
    id?: true
    anio?: true
  }

  export type DivisionSumAggregateInputType = {
    id?: true
    anio?: true
  }

  export type DivisionMinAggregateInputType = {
    id?: true
    nombre?: true
    anio?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    fechaModificacion?: true
    usuarioModificadorId?: true
  }

  export type DivisionMaxAggregateInputType = {
    id?: true
    nombre?: true
    anio?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    fechaModificacion?: true
    usuarioModificadorId?: true
  }

  export type DivisionCountAggregateInputType = {
    id?: true
    nombre?: true
    anio?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    fechaModificacion?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type DivisionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Division to aggregate.
     */
    where?: DivisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Divisions to fetch.
     */
    orderBy?: DivisionOrderByWithRelationInput | DivisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DivisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Divisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Divisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Divisions
    **/
    _count?: true | DivisionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DivisionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DivisionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DivisionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DivisionMaxAggregateInputType
  }

  export type GetDivisionAggregateType<T extends DivisionAggregateArgs> = {
        [P in keyof T & keyof AggregateDivision]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDivision[P]>
      : GetScalarType<T[P], AggregateDivision[P]>
  }




  export type DivisionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DivisionWhereInput
    orderBy?: DivisionOrderByWithAggregationInput | DivisionOrderByWithAggregationInput[]
    by: DivisionScalarFieldEnum[] | DivisionScalarFieldEnum
    having?: DivisionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DivisionCountAggregateInputType | true
    _avg?: DivisionAvgAggregateInputType
    _sum?: DivisionSumAggregateInputType
    _min?: DivisionMinAggregateInputType
    _max?: DivisionMaxAggregateInputType
  }

  export type DivisionGroupByOutputType = {
    id: number
    nombre: string
    anio: number
    fechaCreacion: Date
    usuarioCreadorId: string
    fechaModificacion: Date
    usuarioModificadorId: string
    _count: DivisionCountAggregateOutputType | null
    _avg: DivisionAvgAggregateOutputType | null
    _sum: DivisionSumAggregateOutputType | null
    _min: DivisionMinAggregateOutputType | null
    _max: DivisionMaxAggregateOutputType | null
  }

  type GetDivisionGroupByPayload<T extends DivisionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DivisionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DivisionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DivisionGroupByOutputType[P]>
            : GetScalarType<T[P], DivisionGroupByOutputType[P]>
        }
      >
    >


  export type DivisionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    anio?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    fechaModificacion?: boolean
    usuarioModificadorId?: boolean
    cursos?: boolean | Division$cursosArgs<ExtArgs>
    _count?: boolean | DivisionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["division"]>

  export type DivisionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    anio?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    fechaModificacion?: boolean
    usuarioModificadorId?: boolean
  }, ExtArgs["result"]["division"]>

  export type DivisionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    anio?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    fechaModificacion?: boolean
    usuarioModificadorId?: boolean
  }, ExtArgs["result"]["division"]>

  export type DivisionSelectScalar = {
    id?: boolean
    nombre?: boolean
    anio?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    fechaModificacion?: boolean
    usuarioModificadorId?: boolean
  }

  export type DivisionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "anio" | "fechaCreacion" | "usuarioCreadorId" | "fechaModificacion" | "usuarioModificadorId", ExtArgs["result"]["division"]>
  export type DivisionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | Division$cursosArgs<ExtArgs>
    _count?: boolean | DivisionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DivisionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type DivisionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DivisionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Division"
    objects: {
      cursos: Prisma.$CursoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      anio: number
      fechaCreacion: Date
      usuarioCreadorId: string
      fechaModificacion: Date
      usuarioModificadorId: string
    }, ExtArgs["result"]["division"]>
    composites: {}
  }

  type DivisionGetPayload<S extends boolean | null | undefined | DivisionDefaultArgs> = $Result.GetResult<Prisma.$DivisionPayload, S>

  type DivisionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DivisionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DivisionCountAggregateInputType | true
    }

  export interface DivisionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Division'], meta: { name: 'Division' } }
    /**
     * Find zero or one Division that matches the filter.
     * @param {DivisionFindUniqueArgs} args - Arguments to find a Division
     * @example
     * // Get one Division
     * const division = await prisma.division.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DivisionFindUniqueArgs>(args: SelectSubset<T, DivisionFindUniqueArgs<ExtArgs>>): Prisma__DivisionClient<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Division that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DivisionFindUniqueOrThrowArgs} args - Arguments to find a Division
     * @example
     * // Get one Division
     * const division = await prisma.division.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DivisionFindUniqueOrThrowArgs>(args: SelectSubset<T, DivisionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DivisionClient<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Division that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DivisionFindFirstArgs} args - Arguments to find a Division
     * @example
     * // Get one Division
     * const division = await prisma.division.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DivisionFindFirstArgs>(args?: SelectSubset<T, DivisionFindFirstArgs<ExtArgs>>): Prisma__DivisionClient<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Division that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DivisionFindFirstOrThrowArgs} args - Arguments to find a Division
     * @example
     * // Get one Division
     * const division = await prisma.division.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DivisionFindFirstOrThrowArgs>(args?: SelectSubset<T, DivisionFindFirstOrThrowArgs<ExtArgs>>): Prisma__DivisionClient<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Divisions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DivisionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Divisions
     * const divisions = await prisma.division.findMany()
     * 
     * // Get first 10 Divisions
     * const divisions = await prisma.division.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const divisionWithIdOnly = await prisma.division.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DivisionFindManyArgs>(args?: SelectSubset<T, DivisionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Division.
     * @param {DivisionCreateArgs} args - Arguments to create a Division.
     * @example
     * // Create one Division
     * const Division = await prisma.division.create({
     *   data: {
     *     // ... data to create a Division
     *   }
     * })
     * 
     */
    create<T extends DivisionCreateArgs>(args: SelectSubset<T, DivisionCreateArgs<ExtArgs>>): Prisma__DivisionClient<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Divisions.
     * @param {DivisionCreateManyArgs} args - Arguments to create many Divisions.
     * @example
     * // Create many Divisions
     * const division = await prisma.division.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DivisionCreateManyArgs>(args?: SelectSubset<T, DivisionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Divisions and returns the data saved in the database.
     * @param {DivisionCreateManyAndReturnArgs} args - Arguments to create many Divisions.
     * @example
     * // Create many Divisions
     * const division = await prisma.division.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Divisions and only return the `id`
     * const divisionWithIdOnly = await prisma.division.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DivisionCreateManyAndReturnArgs>(args?: SelectSubset<T, DivisionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Division.
     * @param {DivisionDeleteArgs} args - Arguments to delete one Division.
     * @example
     * // Delete one Division
     * const Division = await prisma.division.delete({
     *   where: {
     *     // ... filter to delete one Division
     *   }
     * })
     * 
     */
    delete<T extends DivisionDeleteArgs>(args: SelectSubset<T, DivisionDeleteArgs<ExtArgs>>): Prisma__DivisionClient<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Division.
     * @param {DivisionUpdateArgs} args - Arguments to update one Division.
     * @example
     * // Update one Division
     * const division = await prisma.division.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DivisionUpdateArgs>(args: SelectSubset<T, DivisionUpdateArgs<ExtArgs>>): Prisma__DivisionClient<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Divisions.
     * @param {DivisionDeleteManyArgs} args - Arguments to filter Divisions to delete.
     * @example
     * // Delete a few Divisions
     * const { count } = await prisma.division.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DivisionDeleteManyArgs>(args?: SelectSubset<T, DivisionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Divisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DivisionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Divisions
     * const division = await prisma.division.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DivisionUpdateManyArgs>(args: SelectSubset<T, DivisionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Divisions and returns the data updated in the database.
     * @param {DivisionUpdateManyAndReturnArgs} args - Arguments to update many Divisions.
     * @example
     * // Update many Divisions
     * const division = await prisma.division.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Divisions and only return the `id`
     * const divisionWithIdOnly = await prisma.division.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DivisionUpdateManyAndReturnArgs>(args: SelectSubset<T, DivisionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Division.
     * @param {DivisionUpsertArgs} args - Arguments to update or create a Division.
     * @example
     * // Update or create a Division
     * const division = await prisma.division.upsert({
     *   create: {
     *     // ... data to create a Division
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Division we want to update
     *   }
     * })
     */
    upsert<T extends DivisionUpsertArgs>(args: SelectSubset<T, DivisionUpsertArgs<ExtArgs>>): Prisma__DivisionClient<$Result.GetResult<Prisma.$DivisionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Divisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DivisionCountArgs} args - Arguments to filter Divisions to count.
     * @example
     * // Count the number of Divisions
     * const count = await prisma.division.count({
     *   where: {
     *     // ... the filter for the Divisions we want to count
     *   }
     * })
    **/
    count<T extends DivisionCountArgs>(
      args?: Subset<T, DivisionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DivisionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Division.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DivisionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DivisionAggregateArgs>(args: Subset<T, DivisionAggregateArgs>): Prisma.PrismaPromise<GetDivisionAggregateType<T>>

    /**
     * Group by Division.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DivisionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DivisionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DivisionGroupByArgs['orderBy'] }
        : { orderBy?: DivisionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DivisionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDivisionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Division model
   */
  readonly fields: DivisionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Division.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DivisionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cursos<T extends Division$cursosArgs<ExtArgs> = {}>(args?: Subset<T, Division$cursosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Division model
   */
  interface DivisionFieldRefs {
    readonly id: FieldRef<"Division", 'Int'>
    readonly nombre: FieldRef<"Division", 'String'>
    readonly anio: FieldRef<"Division", 'Int'>
    readonly fechaCreacion: FieldRef<"Division", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Division", 'String'>
    readonly fechaModificacion: FieldRef<"Division", 'DateTime'>
    readonly usuarioModificadorId: FieldRef<"Division", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Division findUnique
   */
  export type DivisionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DivisionInclude<ExtArgs> | null
    /**
     * Filter, which Division to fetch.
     */
    where: DivisionWhereUniqueInput
  }

  /**
   * Division findUniqueOrThrow
   */
  export type DivisionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DivisionInclude<ExtArgs> | null
    /**
     * Filter, which Division to fetch.
     */
    where: DivisionWhereUniqueInput
  }

  /**
   * Division findFirst
   */
  export type DivisionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DivisionInclude<ExtArgs> | null
    /**
     * Filter, which Division to fetch.
     */
    where?: DivisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Divisions to fetch.
     */
    orderBy?: DivisionOrderByWithRelationInput | DivisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Divisions.
     */
    cursor?: DivisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Divisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Divisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Divisions.
     */
    distinct?: DivisionScalarFieldEnum | DivisionScalarFieldEnum[]
  }

  /**
   * Division findFirstOrThrow
   */
  export type DivisionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DivisionInclude<ExtArgs> | null
    /**
     * Filter, which Division to fetch.
     */
    where?: DivisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Divisions to fetch.
     */
    orderBy?: DivisionOrderByWithRelationInput | DivisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Divisions.
     */
    cursor?: DivisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Divisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Divisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Divisions.
     */
    distinct?: DivisionScalarFieldEnum | DivisionScalarFieldEnum[]
  }

  /**
   * Division findMany
   */
  export type DivisionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DivisionInclude<ExtArgs> | null
    /**
     * Filter, which Divisions to fetch.
     */
    where?: DivisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Divisions to fetch.
     */
    orderBy?: DivisionOrderByWithRelationInput | DivisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Divisions.
     */
    cursor?: DivisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Divisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Divisions.
     */
    skip?: number
    distinct?: DivisionScalarFieldEnum | DivisionScalarFieldEnum[]
  }

  /**
   * Division create
   */
  export type DivisionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DivisionInclude<ExtArgs> | null
    /**
     * The data needed to create a Division.
     */
    data: XOR<DivisionCreateInput, DivisionUncheckedCreateInput>
  }

  /**
   * Division createMany
   */
  export type DivisionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Divisions.
     */
    data: DivisionCreateManyInput | DivisionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Division createManyAndReturn
   */
  export type DivisionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * The data used to create many Divisions.
     */
    data: DivisionCreateManyInput | DivisionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Division update
   */
  export type DivisionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DivisionInclude<ExtArgs> | null
    /**
     * The data needed to update a Division.
     */
    data: XOR<DivisionUpdateInput, DivisionUncheckedUpdateInput>
    /**
     * Choose, which Division to update.
     */
    where: DivisionWhereUniqueInput
  }

  /**
   * Division updateMany
   */
  export type DivisionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Divisions.
     */
    data: XOR<DivisionUpdateManyMutationInput, DivisionUncheckedUpdateManyInput>
    /**
     * Filter which Divisions to update
     */
    where?: DivisionWhereInput
    /**
     * Limit how many Divisions to update.
     */
    limit?: number
  }

  /**
   * Division updateManyAndReturn
   */
  export type DivisionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * The data used to update Divisions.
     */
    data: XOR<DivisionUpdateManyMutationInput, DivisionUncheckedUpdateManyInput>
    /**
     * Filter which Divisions to update
     */
    where?: DivisionWhereInput
    /**
     * Limit how many Divisions to update.
     */
    limit?: number
  }

  /**
   * Division upsert
   */
  export type DivisionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DivisionInclude<ExtArgs> | null
    /**
     * The filter to search for the Division to update in case it exists.
     */
    where: DivisionWhereUniqueInput
    /**
     * In case the Division found by the `where` argument doesn't exist, create a new Division with this data.
     */
    create: XOR<DivisionCreateInput, DivisionUncheckedCreateInput>
    /**
     * In case the Division was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DivisionUpdateInput, DivisionUncheckedUpdateInput>
  }

  /**
   * Division delete
   */
  export type DivisionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DivisionInclude<ExtArgs> | null
    /**
     * Filter which Division to delete.
     */
    where: DivisionWhereUniqueInput
  }

  /**
   * Division deleteMany
   */
  export type DivisionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Divisions to delete
     */
    where?: DivisionWhereInput
    /**
     * Limit how many Divisions to delete.
     */
    limit?: number
  }

  /**
   * Division.cursos
   */
  export type Division$cursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    where?: CursoWhereInput
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    cursor?: CursoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Division without action
   */
  export type DivisionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Division
     */
    select?: DivisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Division
     */
    omit?: DivisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DivisionInclude<ExtArgs> | null
  }


  /**
   * Model Equipo
   */

  export type AggregateEquipo = {
    _count: EquipoCountAggregateOutputType | null
    _avg: EquipoAvgAggregateOutputType | null
    _sum: EquipoSumAggregateOutputType | null
    _min: EquipoMinAggregateOutputType | null
    _max: EquipoMaxAggregateOutputType | null
  }

  export type EquipoAvgAggregateOutputType = {
    id: number | null
    tipoId: number | null
    marcaId: number | null
    sedeId: number | null
    laboratorioId: number | null
    armarioId: number | null
    estanteId: number | null
    estadoId: number | null
  }

  export type EquipoSumAggregateOutputType = {
    id: number | null
    tipoId: number | null
    marcaId: number | null
    sedeId: number | null
    laboratorioId: number | null
    armarioId: number | null
    estanteId: number | null
    estadoId: number | null
  }

  export type EquipoMinAggregateOutputType = {
    id: number | null
    inventarioId: string | null
    modelo: string | null
    numeroSerie: string | null
    observaciones: string | null
    palabrasClave: string | null
    imagen: string | null
    tipoId: number | null
    marcaId: number | null
    sedeId: number | null
    laboratorioId: number | null
    armarioId: number | null
    estanteId: number | null
    estadoId: number | null
    disponible: boolean | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type EquipoMaxAggregateOutputType = {
    id: number | null
    inventarioId: string | null
    modelo: string | null
    numeroSerie: string | null
    observaciones: string | null
    palabrasClave: string | null
    imagen: string | null
    tipoId: number | null
    marcaId: number | null
    sedeId: number | null
    laboratorioId: number | null
    armarioId: number | null
    estanteId: number | null
    estadoId: number | null
    disponible: boolean | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type EquipoCountAggregateOutputType = {
    id: number
    inventarioId: number
    modelo: number
    numeroSerie: number
    observaciones: number
    palabrasClave: number
    imagen: number
    tipoId: number
    marcaId: number
    sedeId: number
    laboratorioId: number
    armarioId: number
    estanteId: number
    estadoId: number
    disponible: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type EquipoAvgAggregateInputType = {
    id?: true
    tipoId?: true
    marcaId?: true
    sedeId?: true
    laboratorioId?: true
    armarioId?: true
    estanteId?: true
    estadoId?: true
  }

  export type EquipoSumAggregateInputType = {
    id?: true
    tipoId?: true
    marcaId?: true
    sedeId?: true
    laboratorioId?: true
    armarioId?: true
    estanteId?: true
    estadoId?: true
  }

  export type EquipoMinAggregateInputType = {
    id?: true
    inventarioId?: true
    modelo?: true
    numeroSerie?: true
    observaciones?: true
    palabrasClave?: true
    imagen?: true
    tipoId?: true
    marcaId?: true
    sedeId?: true
    laboratorioId?: true
    armarioId?: true
    estanteId?: true
    estadoId?: true
    disponible?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type EquipoMaxAggregateInputType = {
    id?: true
    inventarioId?: true
    modelo?: true
    numeroSerie?: true
    observaciones?: true
    palabrasClave?: true
    imagen?: true
    tipoId?: true
    marcaId?: true
    sedeId?: true
    laboratorioId?: true
    armarioId?: true
    estanteId?: true
    estadoId?: true
    disponible?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type EquipoCountAggregateInputType = {
    id?: true
    inventarioId?: true
    modelo?: true
    numeroSerie?: true
    observaciones?: true
    palabrasClave?: true
    imagen?: true
    tipoId?: true
    marcaId?: true
    sedeId?: true
    laboratorioId?: true
    armarioId?: true
    estanteId?: true
    estadoId?: true
    disponible?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type EquipoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Equipo to aggregate.
     */
    where?: EquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipos to fetch.
     */
    orderBy?: EquipoOrderByWithRelationInput | EquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Equipos
    **/
    _count?: true | EquipoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipoMaxAggregateInputType
  }

  export type GetEquipoAggregateType<T extends EquipoAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipo[P]>
      : GetScalarType<T[P], AggregateEquipo[P]>
  }




  export type EquipoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipoWhereInput
    orderBy?: EquipoOrderByWithAggregationInput | EquipoOrderByWithAggregationInput[]
    by: EquipoScalarFieldEnum[] | EquipoScalarFieldEnum
    having?: EquipoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipoCountAggregateInputType | true
    _avg?: EquipoAvgAggregateInputType
    _sum?: EquipoSumAggregateInputType
    _min?: EquipoMinAggregateInputType
    _max?: EquipoMaxAggregateInputType
  }

  export type EquipoGroupByOutputType = {
    id: number
    inventarioId: string
    modelo: string | null
    numeroSerie: string | null
    observaciones: string | null
    palabrasClave: string | null
    imagen: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    laboratorioId: number
    armarioId: number | null
    estanteId: number | null
    estadoId: number
    disponible: boolean
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: EquipoCountAggregateOutputType | null
    _avg: EquipoAvgAggregateOutputType | null
    _sum: EquipoSumAggregateOutputType | null
    _min: EquipoMinAggregateOutputType | null
    _max: EquipoMaxAggregateOutputType | null
  }

  type GetEquipoGroupByPayload<T extends EquipoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EquipoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipoGroupByOutputType[P]>
            : GetScalarType<T[P], EquipoGroupByOutputType[P]>
        }
      >
    >


  export type EquipoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inventarioId?: boolean
    modelo?: boolean
    numeroSerie?: boolean
    observaciones?: boolean
    palabrasClave?: boolean
    imagen?: boolean
    tipoId?: boolean
    marcaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    armarioId?: boolean
    estanteId?: boolean
    estadoId?: boolean
    disponible?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    tipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
    marca?: boolean | EquipoMarcaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Equipo$armarioArgs<ExtArgs>
    estante?: boolean | Equipo$estanteArgs<ExtArgs>
    estado?: boolean | EquipoEstadoDefaultArgs<ExtArgs>
    reservas?: boolean | Equipo$reservasArgs<ExtArgs>
    _count?: boolean | EquipoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipo"]>

  export type EquipoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inventarioId?: boolean
    modelo?: boolean
    numeroSerie?: boolean
    observaciones?: boolean
    palabrasClave?: boolean
    imagen?: boolean
    tipoId?: boolean
    marcaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    armarioId?: boolean
    estanteId?: boolean
    estadoId?: boolean
    disponible?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    tipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
    marca?: boolean | EquipoMarcaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Equipo$armarioArgs<ExtArgs>
    estante?: boolean | Equipo$estanteArgs<ExtArgs>
    estado?: boolean | EquipoEstadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipo"]>

  export type EquipoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inventarioId?: boolean
    modelo?: boolean
    numeroSerie?: boolean
    observaciones?: boolean
    palabrasClave?: boolean
    imagen?: boolean
    tipoId?: boolean
    marcaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    armarioId?: boolean
    estanteId?: boolean
    estadoId?: boolean
    disponible?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    tipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
    marca?: boolean | EquipoMarcaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Equipo$armarioArgs<ExtArgs>
    estante?: boolean | Equipo$estanteArgs<ExtArgs>
    estado?: boolean | EquipoEstadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipo"]>

  export type EquipoSelectScalar = {
    id?: boolean
    inventarioId?: boolean
    modelo?: boolean
    numeroSerie?: boolean
    observaciones?: boolean
    palabrasClave?: boolean
    imagen?: boolean
    tipoId?: boolean
    marcaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    armarioId?: boolean
    estanteId?: boolean
    estadoId?: boolean
    disponible?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type EquipoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "inventarioId" | "modelo" | "numeroSerie" | "observaciones" | "palabrasClave" | "imagen" | "tipoId" | "marcaId" | "sedeId" | "laboratorioId" | "armarioId" | "estanteId" | "estadoId" | "disponible" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["equipo"]>
  export type EquipoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
    marca?: boolean | EquipoMarcaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Equipo$armarioArgs<ExtArgs>
    estante?: boolean | Equipo$estanteArgs<ExtArgs>
    estado?: boolean | EquipoEstadoDefaultArgs<ExtArgs>
    reservas?: boolean | Equipo$reservasArgs<ExtArgs>
    _count?: boolean | EquipoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EquipoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
    marca?: boolean | EquipoMarcaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Equipo$armarioArgs<ExtArgs>
    estante?: boolean | Equipo$estanteArgs<ExtArgs>
    estado?: boolean | EquipoEstadoDefaultArgs<ExtArgs>
  }
  export type EquipoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
    marca?: boolean | EquipoMarcaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    armario?: boolean | Equipo$armarioArgs<ExtArgs>
    estante?: boolean | Equipo$estanteArgs<ExtArgs>
    estado?: boolean | EquipoEstadoDefaultArgs<ExtArgs>
  }

  export type $EquipoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Equipo"
    objects: {
      tipo: Prisma.$EquipoTipoPayload<ExtArgs>
      marca: Prisma.$EquipoMarcaPayload<ExtArgs>
      sede: Prisma.$SedePayload<ExtArgs>
      laboratorio: Prisma.$LaboratorioPayload<ExtArgs>
      armario: Prisma.$ArmarioPayload<ExtArgs> | null
      estante: Prisma.$EstantePayload<ExtArgs> | null
      estado: Prisma.$EquipoEstadoPayload<ExtArgs>
      reservas: Prisma.$ReservaEquipoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      inventarioId: string
      modelo: string | null
      numeroSerie: string | null
      observaciones: string | null
      palabrasClave: string | null
      imagen: string | null
      tipoId: number
      marcaId: number
      sedeId: number
      laboratorioId: number
      armarioId: number | null
      estanteId: number | null
      estadoId: number
      disponible: boolean
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["equipo"]>
    composites: {}
  }

  type EquipoGetPayload<S extends boolean | null | undefined | EquipoDefaultArgs> = $Result.GetResult<Prisma.$EquipoPayload, S>

  type EquipoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EquipoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EquipoCountAggregateInputType | true
    }

  export interface EquipoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Equipo'], meta: { name: 'Equipo' } }
    /**
     * Find zero or one Equipo that matches the filter.
     * @param {EquipoFindUniqueArgs} args - Arguments to find a Equipo
     * @example
     * // Get one Equipo
     * const equipo = await prisma.equipo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EquipoFindUniqueArgs>(args: SelectSubset<T, EquipoFindUniqueArgs<ExtArgs>>): Prisma__EquipoClient<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Equipo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EquipoFindUniqueOrThrowArgs} args - Arguments to find a Equipo
     * @example
     * // Get one Equipo
     * const equipo = await prisma.equipo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EquipoFindUniqueOrThrowArgs>(args: SelectSubset<T, EquipoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EquipoClient<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Equipo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoFindFirstArgs} args - Arguments to find a Equipo
     * @example
     * // Get one Equipo
     * const equipo = await prisma.equipo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EquipoFindFirstArgs>(args?: SelectSubset<T, EquipoFindFirstArgs<ExtArgs>>): Prisma__EquipoClient<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Equipo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoFindFirstOrThrowArgs} args - Arguments to find a Equipo
     * @example
     * // Get one Equipo
     * const equipo = await prisma.equipo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EquipoFindFirstOrThrowArgs>(args?: SelectSubset<T, EquipoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EquipoClient<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Equipos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Equipos
     * const equipos = await prisma.equipo.findMany()
     * 
     * // Get first 10 Equipos
     * const equipos = await prisma.equipo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipoWithIdOnly = await prisma.equipo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EquipoFindManyArgs>(args?: SelectSubset<T, EquipoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Equipo.
     * @param {EquipoCreateArgs} args - Arguments to create a Equipo.
     * @example
     * // Create one Equipo
     * const Equipo = await prisma.equipo.create({
     *   data: {
     *     // ... data to create a Equipo
     *   }
     * })
     * 
     */
    create<T extends EquipoCreateArgs>(args: SelectSubset<T, EquipoCreateArgs<ExtArgs>>): Prisma__EquipoClient<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Equipos.
     * @param {EquipoCreateManyArgs} args - Arguments to create many Equipos.
     * @example
     * // Create many Equipos
     * const equipo = await prisma.equipo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EquipoCreateManyArgs>(args?: SelectSubset<T, EquipoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Equipos and returns the data saved in the database.
     * @param {EquipoCreateManyAndReturnArgs} args - Arguments to create many Equipos.
     * @example
     * // Create many Equipos
     * const equipo = await prisma.equipo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Equipos and only return the `id`
     * const equipoWithIdOnly = await prisma.equipo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EquipoCreateManyAndReturnArgs>(args?: SelectSubset<T, EquipoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Equipo.
     * @param {EquipoDeleteArgs} args - Arguments to delete one Equipo.
     * @example
     * // Delete one Equipo
     * const Equipo = await prisma.equipo.delete({
     *   where: {
     *     // ... filter to delete one Equipo
     *   }
     * })
     * 
     */
    delete<T extends EquipoDeleteArgs>(args: SelectSubset<T, EquipoDeleteArgs<ExtArgs>>): Prisma__EquipoClient<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Equipo.
     * @param {EquipoUpdateArgs} args - Arguments to update one Equipo.
     * @example
     * // Update one Equipo
     * const equipo = await prisma.equipo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EquipoUpdateArgs>(args: SelectSubset<T, EquipoUpdateArgs<ExtArgs>>): Prisma__EquipoClient<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Equipos.
     * @param {EquipoDeleteManyArgs} args - Arguments to filter Equipos to delete.
     * @example
     * // Delete a few Equipos
     * const { count } = await prisma.equipo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EquipoDeleteManyArgs>(args?: SelectSubset<T, EquipoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Equipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Equipos
     * const equipo = await prisma.equipo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EquipoUpdateManyArgs>(args: SelectSubset<T, EquipoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Equipos and returns the data updated in the database.
     * @param {EquipoUpdateManyAndReturnArgs} args - Arguments to update many Equipos.
     * @example
     * // Update many Equipos
     * const equipo = await prisma.equipo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Equipos and only return the `id`
     * const equipoWithIdOnly = await prisma.equipo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EquipoUpdateManyAndReturnArgs>(args: SelectSubset<T, EquipoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Equipo.
     * @param {EquipoUpsertArgs} args - Arguments to update or create a Equipo.
     * @example
     * // Update or create a Equipo
     * const equipo = await prisma.equipo.upsert({
     *   create: {
     *     // ... data to create a Equipo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Equipo we want to update
     *   }
     * })
     */
    upsert<T extends EquipoUpsertArgs>(args: SelectSubset<T, EquipoUpsertArgs<ExtArgs>>): Prisma__EquipoClient<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Equipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoCountArgs} args - Arguments to filter Equipos to count.
     * @example
     * // Count the number of Equipos
     * const count = await prisma.equipo.count({
     *   where: {
     *     // ... the filter for the Equipos we want to count
     *   }
     * })
    **/
    count<T extends EquipoCountArgs>(
      args?: Subset<T, EquipoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Equipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipoAggregateArgs>(args: Subset<T, EquipoAggregateArgs>): Prisma.PrismaPromise<GetEquipoAggregateType<T>>

    /**
     * Group by Equipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipoGroupByArgs['orderBy'] }
        : { orderBy?: EquipoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Equipo model
   */
  readonly fields: EquipoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Equipo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EquipoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tipo<T extends EquipoTipoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipoTipoDefaultArgs<ExtArgs>>): Prisma__EquipoTipoClient<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    marca<T extends EquipoMarcaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipoMarcaDefaultArgs<ExtArgs>>): Prisma__EquipoMarcaClient<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    laboratorio<T extends LaboratorioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LaboratorioDefaultArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    armario<T extends Equipo$armarioArgs<ExtArgs> = {}>(args?: Subset<T, Equipo$armarioArgs<ExtArgs>>): Prisma__ArmarioClient<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    estante<T extends Equipo$estanteArgs<ExtArgs> = {}>(args?: Subset<T, Equipo$estanteArgs<ExtArgs>>): Prisma__EstanteClient<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    estado<T extends EquipoEstadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipoEstadoDefaultArgs<ExtArgs>>): Prisma__EquipoEstadoClient<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reservas<T extends Equipo$reservasArgs<ExtArgs> = {}>(args?: Subset<T, Equipo$reservasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Equipo model
   */
  interface EquipoFieldRefs {
    readonly id: FieldRef<"Equipo", 'Int'>
    readonly inventarioId: FieldRef<"Equipo", 'String'>
    readonly modelo: FieldRef<"Equipo", 'String'>
    readonly numeroSerie: FieldRef<"Equipo", 'String'>
    readonly observaciones: FieldRef<"Equipo", 'String'>
    readonly palabrasClave: FieldRef<"Equipo", 'String'>
    readonly imagen: FieldRef<"Equipo", 'String'>
    readonly tipoId: FieldRef<"Equipo", 'Int'>
    readonly marcaId: FieldRef<"Equipo", 'Int'>
    readonly sedeId: FieldRef<"Equipo", 'Int'>
    readonly laboratorioId: FieldRef<"Equipo", 'Int'>
    readonly armarioId: FieldRef<"Equipo", 'Int'>
    readonly estanteId: FieldRef<"Equipo", 'Int'>
    readonly estadoId: FieldRef<"Equipo", 'Int'>
    readonly disponible: FieldRef<"Equipo", 'Boolean'>
    readonly fechaCreacion: FieldRef<"Equipo", 'DateTime'>
    readonly fechaModificacion: FieldRef<"Equipo", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Equipo", 'String'>
    readonly usuarioModificadorId: FieldRef<"Equipo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Equipo findUnique
   */
  export type EquipoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    /**
     * Filter, which Equipo to fetch.
     */
    where: EquipoWhereUniqueInput
  }

  /**
   * Equipo findUniqueOrThrow
   */
  export type EquipoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    /**
     * Filter, which Equipo to fetch.
     */
    where: EquipoWhereUniqueInput
  }

  /**
   * Equipo findFirst
   */
  export type EquipoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    /**
     * Filter, which Equipo to fetch.
     */
    where?: EquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipos to fetch.
     */
    orderBy?: EquipoOrderByWithRelationInput | EquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Equipos.
     */
    cursor?: EquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Equipos.
     */
    distinct?: EquipoScalarFieldEnum | EquipoScalarFieldEnum[]
  }

  /**
   * Equipo findFirstOrThrow
   */
  export type EquipoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    /**
     * Filter, which Equipo to fetch.
     */
    where?: EquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipos to fetch.
     */
    orderBy?: EquipoOrderByWithRelationInput | EquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Equipos.
     */
    cursor?: EquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Equipos.
     */
    distinct?: EquipoScalarFieldEnum | EquipoScalarFieldEnum[]
  }

  /**
   * Equipo findMany
   */
  export type EquipoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    /**
     * Filter, which Equipos to fetch.
     */
    where?: EquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipos to fetch.
     */
    orderBy?: EquipoOrderByWithRelationInput | EquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Equipos.
     */
    cursor?: EquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipos.
     */
    skip?: number
    distinct?: EquipoScalarFieldEnum | EquipoScalarFieldEnum[]
  }

  /**
   * Equipo create
   */
  export type EquipoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    /**
     * The data needed to create a Equipo.
     */
    data: XOR<EquipoCreateInput, EquipoUncheckedCreateInput>
  }

  /**
   * Equipo createMany
   */
  export type EquipoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Equipos.
     */
    data: EquipoCreateManyInput | EquipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Equipo createManyAndReturn
   */
  export type EquipoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * The data used to create many Equipos.
     */
    data: EquipoCreateManyInput | EquipoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Equipo update
   */
  export type EquipoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    /**
     * The data needed to update a Equipo.
     */
    data: XOR<EquipoUpdateInput, EquipoUncheckedUpdateInput>
    /**
     * Choose, which Equipo to update.
     */
    where: EquipoWhereUniqueInput
  }

  /**
   * Equipo updateMany
   */
  export type EquipoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Equipos.
     */
    data: XOR<EquipoUpdateManyMutationInput, EquipoUncheckedUpdateManyInput>
    /**
     * Filter which Equipos to update
     */
    where?: EquipoWhereInput
    /**
     * Limit how many Equipos to update.
     */
    limit?: number
  }

  /**
   * Equipo updateManyAndReturn
   */
  export type EquipoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * The data used to update Equipos.
     */
    data: XOR<EquipoUpdateManyMutationInput, EquipoUncheckedUpdateManyInput>
    /**
     * Filter which Equipos to update
     */
    where?: EquipoWhereInput
    /**
     * Limit how many Equipos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Equipo upsert
   */
  export type EquipoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    /**
     * The filter to search for the Equipo to update in case it exists.
     */
    where: EquipoWhereUniqueInput
    /**
     * In case the Equipo found by the `where` argument doesn't exist, create a new Equipo with this data.
     */
    create: XOR<EquipoCreateInput, EquipoUncheckedCreateInput>
    /**
     * In case the Equipo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EquipoUpdateInput, EquipoUncheckedUpdateInput>
  }

  /**
   * Equipo delete
   */
  export type EquipoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    /**
     * Filter which Equipo to delete.
     */
    where: EquipoWhereUniqueInput
  }

  /**
   * Equipo deleteMany
   */
  export type EquipoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Equipos to delete
     */
    where?: EquipoWhereInput
    /**
     * Limit how many Equipos to delete.
     */
    limit?: number
  }

  /**
   * Equipo.armario
   */
  export type Equipo$armarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    where?: ArmarioWhereInput
  }

  /**
   * Equipo.estante
   */
  export type Equipo$estanteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    where?: EstanteWhereInput
  }

  /**
   * Equipo.reservas
   */
  export type Equipo$reservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
    where?: ReservaEquipoWhereInput
    orderBy?: ReservaEquipoOrderByWithRelationInput | ReservaEquipoOrderByWithRelationInput[]
    cursor?: ReservaEquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaEquipoScalarFieldEnum | ReservaEquipoScalarFieldEnum[]
  }

  /**
   * Equipo without action
   */
  export type EquipoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
  }


  /**
   * Model EquipoMarca
   */

  export type AggregateEquipoMarca = {
    _count: EquipoMarcaCountAggregateOutputType | null
    _avg: EquipoMarcaAvgAggregateOutputType | null
    _sum: EquipoMarcaSumAggregateOutputType | null
    _min: EquipoMarcaMinAggregateOutputType | null
    _max: EquipoMarcaMaxAggregateOutputType | null
  }

  export type EquipoMarcaAvgAggregateOutputType = {
    id: number | null
  }

  export type EquipoMarcaSumAggregateOutputType = {
    id: number | null
  }

  export type EquipoMarcaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type EquipoMarcaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type EquipoMarcaCountAggregateOutputType = {
    id: number
    nombre: number
    fechaCreacion: number
    usuarioCreadorId: number
    _all: number
  }


  export type EquipoMarcaAvgAggregateInputType = {
    id?: true
  }

  export type EquipoMarcaSumAggregateInputType = {
    id?: true
  }

  export type EquipoMarcaMinAggregateInputType = {
    id?: true
    nombre?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type EquipoMarcaMaxAggregateInputType = {
    id?: true
    nombre?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type EquipoMarcaCountAggregateInputType = {
    id?: true
    nombre?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    _all?: true
  }

  export type EquipoMarcaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipoMarca to aggregate.
     */
    where?: EquipoMarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoMarcas to fetch.
     */
    orderBy?: EquipoMarcaOrderByWithRelationInput | EquipoMarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EquipoMarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoMarcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoMarcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EquipoMarcas
    **/
    _count?: true | EquipoMarcaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipoMarcaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipoMarcaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipoMarcaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipoMarcaMaxAggregateInputType
  }

  export type GetEquipoMarcaAggregateType<T extends EquipoMarcaAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipoMarca]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipoMarca[P]>
      : GetScalarType<T[P], AggregateEquipoMarca[P]>
  }




  export type EquipoMarcaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipoMarcaWhereInput
    orderBy?: EquipoMarcaOrderByWithAggregationInput | EquipoMarcaOrderByWithAggregationInput[]
    by: EquipoMarcaScalarFieldEnum[] | EquipoMarcaScalarFieldEnum
    having?: EquipoMarcaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipoMarcaCountAggregateInputType | true
    _avg?: EquipoMarcaAvgAggregateInputType
    _sum?: EquipoMarcaSumAggregateInputType
    _min?: EquipoMarcaMinAggregateInputType
    _max?: EquipoMarcaMaxAggregateInputType
  }

  export type EquipoMarcaGroupByOutputType = {
    id: number
    nombre: string
    fechaCreacion: Date
    usuarioCreadorId: string
    _count: EquipoMarcaCountAggregateOutputType | null
    _avg: EquipoMarcaAvgAggregateOutputType | null
    _sum: EquipoMarcaSumAggregateOutputType | null
    _min: EquipoMarcaMinAggregateOutputType | null
    _max: EquipoMarcaMaxAggregateOutputType | null
  }

  type GetEquipoMarcaGroupByPayload<T extends EquipoMarcaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EquipoMarcaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipoMarcaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipoMarcaGroupByOutputType[P]>
            : GetScalarType<T[P], EquipoMarcaGroupByOutputType[P]>
        }
      >
    >


  export type EquipoMarcaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    equipos?: boolean | EquipoMarca$equiposArgs<ExtArgs>
    _count?: boolean | EquipoMarcaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipoMarca"]>

  export type EquipoMarcaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["equipoMarca"]>

  export type EquipoMarcaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["equipoMarca"]>

  export type EquipoMarcaSelectScalar = {
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }

  export type EquipoMarcaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "fechaCreacion" | "usuarioCreadorId", ExtArgs["result"]["equipoMarca"]>
  export type EquipoMarcaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipos?: boolean | EquipoMarca$equiposArgs<ExtArgs>
    _count?: boolean | EquipoMarcaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EquipoMarcaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EquipoMarcaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EquipoMarcaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EquipoMarca"
    objects: {
      equipos: Prisma.$EquipoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      fechaCreacion: Date
      usuarioCreadorId: string
    }, ExtArgs["result"]["equipoMarca"]>
    composites: {}
  }

  type EquipoMarcaGetPayload<S extends boolean | null | undefined | EquipoMarcaDefaultArgs> = $Result.GetResult<Prisma.$EquipoMarcaPayload, S>

  type EquipoMarcaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EquipoMarcaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EquipoMarcaCountAggregateInputType | true
    }

  export interface EquipoMarcaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EquipoMarca'], meta: { name: 'EquipoMarca' } }
    /**
     * Find zero or one EquipoMarca that matches the filter.
     * @param {EquipoMarcaFindUniqueArgs} args - Arguments to find a EquipoMarca
     * @example
     * // Get one EquipoMarca
     * const equipoMarca = await prisma.equipoMarca.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EquipoMarcaFindUniqueArgs>(args: SelectSubset<T, EquipoMarcaFindUniqueArgs<ExtArgs>>): Prisma__EquipoMarcaClient<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EquipoMarca that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EquipoMarcaFindUniqueOrThrowArgs} args - Arguments to find a EquipoMarca
     * @example
     * // Get one EquipoMarca
     * const equipoMarca = await prisma.equipoMarca.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EquipoMarcaFindUniqueOrThrowArgs>(args: SelectSubset<T, EquipoMarcaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EquipoMarcaClient<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipoMarca that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoMarcaFindFirstArgs} args - Arguments to find a EquipoMarca
     * @example
     * // Get one EquipoMarca
     * const equipoMarca = await prisma.equipoMarca.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EquipoMarcaFindFirstArgs>(args?: SelectSubset<T, EquipoMarcaFindFirstArgs<ExtArgs>>): Prisma__EquipoMarcaClient<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipoMarca that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoMarcaFindFirstOrThrowArgs} args - Arguments to find a EquipoMarca
     * @example
     * // Get one EquipoMarca
     * const equipoMarca = await prisma.equipoMarca.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EquipoMarcaFindFirstOrThrowArgs>(args?: SelectSubset<T, EquipoMarcaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EquipoMarcaClient<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EquipoMarcas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoMarcaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EquipoMarcas
     * const equipoMarcas = await prisma.equipoMarca.findMany()
     * 
     * // Get first 10 EquipoMarcas
     * const equipoMarcas = await prisma.equipoMarca.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipoMarcaWithIdOnly = await prisma.equipoMarca.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EquipoMarcaFindManyArgs>(args?: SelectSubset<T, EquipoMarcaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EquipoMarca.
     * @param {EquipoMarcaCreateArgs} args - Arguments to create a EquipoMarca.
     * @example
     * // Create one EquipoMarca
     * const EquipoMarca = await prisma.equipoMarca.create({
     *   data: {
     *     // ... data to create a EquipoMarca
     *   }
     * })
     * 
     */
    create<T extends EquipoMarcaCreateArgs>(args: SelectSubset<T, EquipoMarcaCreateArgs<ExtArgs>>): Prisma__EquipoMarcaClient<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EquipoMarcas.
     * @param {EquipoMarcaCreateManyArgs} args - Arguments to create many EquipoMarcas.
     * @example
     * // Create many EquipoMarcas
     * const equipoMarca = await prisma.equipoMarca.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EquipoMarcaCreateManyArgs>(args?: SelectSubset<T, EquipoMarcaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EquipoMarcas and returns the data saved in the database.
     * @param {EquipoMarcaCreateManyAndReturnArgs} args - Arguments to create many EquipoMarcas.
     * @example
     * // Create many EquipoMarcas
     * const equipoMarca = await prisma.equipoMarca.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EquipoMarcas and only return the `id`
     * const equipoMarcaWithIdOnly = await prisma.equipoMarca.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EquipoMarcaCreateManyAndReturnArgs>(args?: SelectSubset<T, EquipoMarcaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EquipoMarca.
     * @param {EquipoMarcaDeleteArgs} args - Arguments to delete one EquipoMarca.
     * @example
     * // Delete one EquipoMarca
     * const EquipoMarca = await prisma.equipoMarca.delete({
     *   where: {
     *     // ... filter to delete one EquipoMarca
     *   }
     * })
     * 
     */
    delete<T extends EquipoMarcaDeleteArgs>(args: SelectSubset<T, EquipoMarcaDeleteArgs<ExtArgs>>): Prisma__EquipoMarcaClient<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EquipoMarca.
     * @param {EquipoMarcaUpdateArgs} args - Arguments to update one EquipoMarca.
     * @example
     * // Update one EquipoMarca
     * const equipoMarca = await prisma.equipoMarca.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EquipoMarcaUpdateArgs>(args: SelectSubset<T, EquipoMarcaUpdateArgs<ExtArgs>>): Prisma__EquipoMarcaClient<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EquipoMarcas.
     * @param {EquipoMarcaDeleteManyArgs} args - Arguments to filter EquipoMarcas to delete.
     * @example
     * // Delete a few EquipoMarcas
     * const { count } = await prisma.equipoMarca.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EquipoMarcaDeleteManyArgs>(args?: SelectSubset<T, EquipoMarcaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipoMarcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoMarcaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EquipoMarcas
     * const equipoMarca = await prisma.equipoMarca.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EquipoMarcaUpdateManyArgs>(args: SelectSubset<T, EquipoMarcaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipoMarcas and returns the data updated in the database.
     * @param {EquipoMarcaUpdateManyAndReturnArgs} args - Arguments to update many EquipoMarcas.
     * @example
     * // Update many EquipoMarcas
     * const equipoMarca = await prisma.equipoMarca.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EquipoMarcas and only return the `id`
     * const equipoMarcaWithIdOnly = await prisma.equipoMarca.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EquipoMarcaUpdateManyAndReturnArgs>(args: SelectSubset<T, EquipoMarcaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EquipoMarca.
     * @param {EquipoMarcaUpsertArgs} args - Arguments to update or create a EquipoMarca.
     * @example
     * // Update or create a EquipoMarca
     * const equipoMarca = await prisma.equipoMarca.upsert({
     *   create: {
     *     // ... data to create a EquipoMarca
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EquipoMarca we want to update
     *   }
     * })
     */
    upsert<T extends EquipoMarcaUpsertArgs>(args: SelectSubset<T, EquipoMarcaUpsertArgs<ExtArgs>>): Prisma__EquipoMarcaClient<$Result.GetResult<Prisma.$EquipoMarcaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EquipoMarcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoMarcaCountArgs} args - Arguments to filter EquipoMarcas to count.
     * @example
     * // Count the number of EquipoMarcas
     * const count = await prisma.equipoMarca.count({
     *   where: {
     *     // ... the filter for the EquipoMarcas we want to count
     *   }
     * })
    **/
    count<T extends EquipoMarcaCountArgs>(
      args?: Subset<T, EquipoMarcaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipoMarcaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EquipoMarca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoMarcaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipoMarcaAggregateArgs>(args: Subset<T, EquipoMarcaAggregateArgs>): Prisma.PrismaPromise<GetEquipoMarcaAggregateType<T>>

    /**
     * Group by EquipoMarca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoMarcaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipoMarcaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipoMarcaGroupByArgs['orderBy'] }
        : { orderBy?: EquipoMarcaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipoMarcaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipoMarcaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EquipoMarca model
   */
  readonly fields: EquipoMarcaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EquipoMarca.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EquipoMarcaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    equipos<T extends EquipoMarca$equiposArgs<ExtArgs> = {}>(args?: Subset<T, EquipoMarca$equiposArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EquipoMarca model
   */
  interface EquipoMarcaFieldRefs {
    readonly id: FieldRef<"EquipoMarca", 'Int'>
    readonly nombre: FieldRef<"EquipoMarca", 'String'>
    readonly fechaCreacion: FieldRef<"EquipoMarca", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"EquipoMarca", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EquipoMarca findUnique
   */
  export type EquipoMarcaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoMarcaInclude<ExtArgs> | null
    /**
     * Filter, which EquipoMarca to fetch.
     */
    where: EquipoMarcaWhereUniqueInput
  }

  /**
   * EquipoMarca findUniqueOrThrow
   */
  export type EquipoMarcaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoMarcaInclude<ExtArgs> | null
    /**
     * Filter, which EquipoMarca to fetch.
     */
    where: EquipoMarcaWhereUniqueInput
  }

  /**
   * EquipoMarca findFirst
   */
  export type EquipoMarcaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoMarcaInclude<ExtArgs> | null
    /**
     * Filter, which EquipoMarca to fetch.
     */
    where?: EquipoMarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoMarcas to fetch.
     */
    orderBy?: EquipoMarcaOrderByWithRelationInput | EquipoMarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipoMarcas.
     */
    cursor?: EquipoMarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoMarcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoMarcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipoMarcas.
     */
    distinct?: EquipoMarcaScalarFieldEnum | EquipoMarcaScalarFieldEnum[]
  }

  /**
   * EquipoMarca findFirstOrThrow
   */
  export type EquipoMarcaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoMarcaInclude<ExtArgs> | null
    /**
     * Filter, which EquipoMarca to fetch.
     */
    where?: EquipoMarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoMarcas to fetch.
     */
    orderBy?: EquipoMarcaOrderByWithRelationInput | EquipoMarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipoMarcas.
     */
    cursor?: EquipoMarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoMarcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoMarcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipoMarcas.
     */
    distinct?: EquipoMarcaScalarFieldEnum | EquipoMarcaScalarFieldEnum[]
  }

  /**
   * EquipoMarca findMany
   */
  export type EquipoMarcaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoMarcaInclude<ExtArgs> | null
    /**
     * Filter, which EquipoMarcas to fetch.
     */
    where?: EquipoMarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoMarcas to fetch.
     */
    orderBy?: EquipoMarcaOrderByWithRelationInput | EquipoMarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EquipoMarcas.
     */
    cursor?: EquipoMarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoMarcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoMarcas.
     */
    skip?: number
    distinct?: EquipoMarcaScalarFieldEnum | EquipoMarcaScalarFieldEnum[]
  }

  /**
   * EquipoMarca create
   */
  export type EquipoMarcaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoMarcaInclude<ExtArgs> | null
    /**
     * The data needed to create a EquipoMarca.
     */
    data: XOR<EquipoMarcaCreateInput, EquipoMarcaUncheckedCreateInput>
  }

  /**
   * EquipoMarca createMany
   */
  export type EquipoMarcaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EquipoMarcas.
     */
    data: EquipoMarcaCreateManyInput | EquipoMarcaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EquipoMarca createManyAndReturn
   */
  export type EquipoMarcaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * The data used to create many EquipoMarcas.
     */
    data: EquipoMarcaCreateManyInput | EquipoMarcaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EquipoMarca update
   */
  export type EquipoMarcaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoMarcaInclude<ExtArgs> | null
    /**
     * The data needed to update a EquipoMarca.
     */
    data: XOR<EquipoMarcaUpdateInput, EquipoMarcaUncheckedUpdateInput>
    /**
     * Choose, which EquipoMarca to update.
     */
    where: EquipoMarcaWhereUniqueInput
  }

  /**
   * EquipoMarca updateMany
   */
  export type EquipoMarcaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EquipoMarcas.
     */
    data: XOR<EquipoMarcaUpdateManyMutationInput, EquipoMarcaUncheckedUpdateManyInput>
    /**
     * Filter which EquipoMarcas to update
     */
    where?: EquipoMarcaWhereInput
    /**
     * Limit how many EquipoMarcas to update.
     */
    limit?: number
  }

  /**
   * EquipoMarca updateManyAndReturn
   */
  export type EquipoMarcaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * The data used to update EquipoMarcas.
     */
    data: XOR<EquipoMarcaUpdateManyMutationInput, EquipoMarcaUncheckedUpdateManyInput>
    /**
     * Filter which EquipoMarcas to update
     */
    where?: EquipoMarcaWhereInput
    /**
     * Limit how many EquipoMarcas to update.
     */
    limit?: number
  }

  /**
   * EquipoMarca upsert
   */
  export type EquipoMarcaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoMarcaInclude<ExtArgs> | null
    /**
     * The filter to search for the EquipoMarca to update in case it exists.
     */
    where: EquipoMarcaWhereUniqueInput
    /**
     * In case the EquipoMarca found by the `where` argument doesn't exist, create a new EquipoMarca with this data.
     */
    create: XOR<EquipoMarcaCreateInput, EquipoMarcaUncheckedCreateInput>
    /**
     * In case the EquipoMarca was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EquipoMarcaUpdateInput, EquipoMarcaUncheckedUpdateInput>
  }

  /**
   * EquipoMarca delete
   */
  export type EquipoMarcaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoMarcaInclude<ExtArgs> | null
    /**
     * Filter which EquipoMarca to delete.
     */
    where: EquipoMarcaWhereUniqueInput
  }

  /**
   * EquipoMarca deleteMany
   */
  export type EquipoMarcaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipoMarcas to delete
     */
    where?: EquipoMarcaWhereInput
    /**
     * Limit how many EquipoMarcas to delete.
     */
    limit?: number
  }

  /**
   * EquipoMarca.equipos
   */
  export type EquipoMarca$equiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    where?: EquipoWhereInput
    orderBy?: EquipoOrderByWithRelationInput | EquipoOrderByWithRelationInput[]
    cursor?: EquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipoScalarFieldEnum | EquipoScalarFieldEnum[]
  }

  /**
   * EquipoMarca without action
   */
  export type EquipoMarcaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoMarca
     */
    select?: EquipoMarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoMarca
     */
    omit?: EquipoMarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoMarcaInclude<ExtArgs> | null
  }


  /**
   * Model EquipoTipo
   */

  export type AggregateEquipoTipo = {
    _count: EquipoTipoCountAggregateOutputType | null
    _avg: EquipoTipoAvgAggregateOutputType | null
    _sum: EquipoTipoSumAggregateOutputType | null
    _min: EquipoTipoMinAggregateOutputType | null
    _max: EquipoTipoMaxAggregateOutputType | null
  }

  export type EquipoTipoAvgAggregateOutputType = {
    id: number | null
  }

  export type EquipoTipoSumAggregateOutputType = {
    id: number | null
  }

  export type EquipoTipoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    imagen: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type EquipoTipoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    imagen: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type EquipoTipoCountAggregateOutputType = {
    id: number
    nombre: number
    imagen: number
    fechaCreacion: number
    usuarioCreadorId: number
    _all: number
  }


  export type EquipoTipoAvgAggregateInputType = {
    id?: true
  }

  export type EquipoTipoSumAggregateInputType = {
    id?: true
  }

  export type EquipoTipoMinAggregateInputType = {
    id?: true
    nombre?: true
    imagen?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type EquipoTipoMaxAggregateInputType = {
    id?: true
    nombre?: true
    imagen?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type EquipoTipoCountAggregateInputType = {
    id?: true
    nombre?: true
    imagen?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    _all?: true
  }

  export type EquipoTipoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipoTipo to aggregate.
     */
    where?: EquipoTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoTipos to fetch.
     */
    orderBy?: EquipoTipoOrderByWithRelationInput | EquipoTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EquipoTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EquipoTipos
    **/
    _count?: true | EquipoTipoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipoTipoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipoTipoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipoTipoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipoTipoMaxAggregateInputType
  }

  export type GetEquipoTipoAggregateType<T extends EquipoTipoAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipoTipo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipoTipo[P]>
      : GetScalarType<T[P], AggregateEquipoTipo[P]>
  }




  export type EquipoTipoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipoTipoWhereInput
    orderBy?: EquipoTipoOrderByWithAggregationInput | EquipoTipoOrderByWithAggregationInput[]
    by: EquipoTipoScalarFieldEnum[] | EquipoTipoScalarFieldEnum
    having?: EquipoTipoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipoTipoCountAggregateInputType | true
    _avg?: EquipoTipoAvgAggregateInputType
    _sum?: EquipoTipoSumAggregateInputType
    _min?: EquipoTipoMinAggregateInputType
    _max?: EquipoTipoMaxAggregateInputType
  }

  export type EquipoTipoGroupByOutputType = {
    id: number
    nombre: string
    imagen: string | null
    fechaCreacion: Date
    usuarioCreadorId: string
    _count: EquipoTipoCountAggregateOutputType | null
    _avg: EquipoTipoAvgAggregateOutputType | null
    _sum: EquipoTipoSumAggregateOutputType | null
    _min: EquipoTipoMinAggregateOutputType | null
    _max: EquipoTipoMaxAggregateOutputType | null
  }

  type GetEquipoTipoGroupByPayload<T extends EquipoTipoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EquipoTipoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipoTipoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipoTipoGroupByOutputType[P]>
            : GetScalarType<T[P], EquipoTipoGroupByOutputType[P]>
        }
      >
    >


  export type EquipoTipoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    imagen?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    equipos?: boolean | EquipoTipo$equiposArgs<ExtArgs>
    reservaLaboratorioCerradoEquipo?: boolean | EquipoTipo$reservaLaboratorioCerradoEquipoArgs<ExtArgs>
    reservaLaboratorioAbiertoEquipo?: boolean | EquipoTipo$reservaLaboratorioAbiertoEquipoArgs<ExtArgs>
    _count?: boolean | EquipoTipoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipoTipo"]>

  export type EquipoTipoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    imagen?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["equipoTipo"]>

  export type EquipoTipoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    imagen?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["equipoTipo"]>

  export type EquipoTipoSelectScalar = {
    id?: boolean
    nombre?: boolean
    imagen?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }

  export type EquipoTipoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "imagen" | "fechaCreacion" | "usuarioCreadorId", ExtArgs["result"]["equipoTipo"]>
  export type EquipoTipoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipos?: boolean | EquipoTipo$equiposArgs<ExtArgs>
    reservaLaboratorioCerradoEquipo?: boolean | EquipoTipo$reservaLaboratorioCerradoEquipoArgs<ExtArgs>
    reservaLaboratorioAbiertoEquipo?: boolean | EquipoTipo$reservaLaboratorioAbiertoEquipoArgs<ExtArgs>
    _count?: boolean | EquipoTipoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EquipoTipoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EquipoTipoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EquipoTipoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EquipoTipo"
    objects: {
      equipos: Prisma.$EquipoPayload<ExtArgs>[]
      reservaLaboratorioCerradoEquipo: Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>[]
      reservaLaboratorioAbiertoEquipo: Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      imagen: string | null
      fechaCreacion: Date
      usuarioCreadorId: string
    }, ExtArgs["result"]["equipoTipo"]>
    composites: {}
  }

  type EquipoTipoGetPayload<S extends boolean | null | undefined | EquipoTipoDefaultArgs> = $Result.GetResult<Prisma.$EquipoTipoPayload, S>

  type EquipoTipoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EquipoTipoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EquipoTipoCountAggregateInputType | true
    }

  export interface EquipoTipoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EquipoTipo'], meta: { name: 'EquipoTipo' } }
    /**
     * Find zero or one EquipoTipo that matches the filter.
     * @param {EquipoTipoFindUniqueArgs} args - Arguments to find a EquipoTipo
     * @example
     * // Get one EquipoTipo
     * const equipoTipo = await prisma.equipoTipo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EquipoTipoFindUniqueArgs>(args: SelectSubset<T, EquipoTipoFindUniqueArgs<ExtArgs>>): Prisma__EquipoTipoClient<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EquipoTipo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EquipoTipoFindUniqueOrThrowArgs} args - Arguments to find a EquipoTipo
     * @example
     * // Get one EquipoTipo
     * const equipoTipo = await prisma.equipoTipo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EquipoTipoFindUniqueOrThrowArgs>(args: SelectSubset<T, EquipoTipoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EquipoTipoClient<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipoTipo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoTipoFindFirstArgs} args - Arguments to find a EquipoTipo
     * @example
     * // Get one EquipoTipo
     * const equipoTipo = await prisma.equipoTipo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EquipoTipoFindFirstArgs>(args?: SelectSubset<T, EquipoTipoFindFirstArgs<ExtArgs>>): Prisma__EquipoTipoClient<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipoTipo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoTipoFindFirstOrThrowArgs} args - Arguments to find a EquipoTipo
     * @example
     * // Get one EquipoTipo
     * const equipoTipo = await prisma.equipoTipo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EquipoTipoFindFirstOrThrowArgs>(args?: SelectSubset<T, EquipoTipoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EquipoTipoClient<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EquipoTipos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoTipoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EquipoTipos
     * const equipoTipos = await prisma.equipoTipo.findMany()
     * 
     * // Get first 10 EquipoTipos
     * const equipoTipos = await prisma.equipoTipo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipoTipoWithIdOnly = await prisma.equipoTipo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EquipoTipoFindManyArgs>(args?: SelectSubset<T, EquipoTipoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EquipoTipo.
     * @param {EquipoTipoCreateArgs} args - Arguments to create a EquipoTipo.
     * @example
     * // Create one EquipoTipo
     * const EquipoTipo = await prisma.equipoTipo.create({
     *   data: {
     *     // ... data to create a EquipoTipo
     *   }
     * })
     * 
     */
    create<T extends EquipoTipoCreateArgs>(args: SelectSubset<T, EquipoTipoCreateArgs<ExtArgs>>): Prisma__EquipoTipoClient<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EquipoTipos.
     * @param {EquipoTipoCreateManyArgs} args - Arguments to create many EquipoTipos.
     * @example
     * // Create many EquipoTipos
     * const equipoTipo = await prisma.equipoTipo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EquipoTipoCreateManyArgs>(args?: SelectSubset<T, EquipoTipoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EquipoTipos and returns the data saved in the database.
     * @param {EquipoTipoCreateManyAndReturnArgs} args - Arguments to create many EquipoTipos.
     * @example
     * // Create many EquipoTipos
     * const equipoTipo = await prisma.equipoTipo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EquipoTipos and only return the `id`
     * const equipoTipoWithIdOnly = await prisma.equipoTipo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EquipoTipoCreateManyAndReturnArgs>(args?: SelectSubset<T, EquipoTipoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EquipoTipo.
     * @param {EquipoTipoDeleteArgs} args - Arguments to delete one EquipoTipo.
     * @example
     * // Delete one EquipoTipo
     * const EquipoTipo = await prisma.equipoTipo.delete({
     *   where: {
     *     // ... filter to delete one EquipoTipo
     *   }
     * })
     * 
     */
    delete<T extends EquipoTipoDeleteArgs>(args: SelectSubset<T, EquipoTipoDeleteArgs<ExtArgs>>): Prisma__EquipoTipoClient<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EquipoTipo.
     * @param {EquipoTipoUpdateArgs} args - Arguments to update one EquipoTipo.
     * @example
     * // Update one EquipoTipo
     * const equipoTipo = await prisma.equipoTipo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EquipoTipoUpdateArgs>(args: SelectSubset<T, EquipoTipoUpdateArgs<ExtArgs>>): Prisma__EquipoTipoClient<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EquipoTipos.
     * @param {EquipoTipoDeleteManyArgs} args - Arguments to filter EquipoTipos to delete.
     * @example
     * // Delete a few EquipoTipos
     * const { count } = await prisma.equipoTipo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EquipoTipoDeleteManyArgs>(args?: SelectSubset<T, EquipoTipoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipoTipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoTipoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EquipoTipos
     * const equipoTipo = await prisma.equipoTipo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EquipoTipoUpdateManyArgs>(args: SelectSubset<T, EquipoTipoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipoTipos and returns the data updated in the database.
     * @param {EquipoTipoUpdateManyAndReturnArgs} args - Arguments to update many EquipoTipos.
     * @example
     * // Update many EquipoTipos
     * const equipoTipo = await prisma.equipoTipo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EquipoTipos and only return the `id`
     * const equipoTipoWithIdOnly = await prisma.equipoTipo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EquipoTipoUpdateManyAndReturnArgs>(args: SelectSubset<T, EquipoTipoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EquipoTipo.
     * @param {EquipoTipoUpsertArgs} args - Arguments to update or create a EquipoTipo.
     * @example
     * // Update or create a EquipoTipo
     * const equipoTipo = await prisma.equipoTipo.upsert({
     *   create: {
     *     // ... data to create a EquipoTipo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EquipoTipo we want to update
     *   }
     * })
     */
    upsert<T extends EquipoTipoUpsertArgs>(args: SelectSubset<T, EquipoTipoUpsertArgs<ExtArgs>>): Prisma__EquipoTipoClient<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EquipoTipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoTipoCountArgs} args - Arguments to filter EquipoTipos to count.
     * @example
     * // Count the number of EquipoTipos
     * const count = await prisma.equipoTipo.count({
     *   where: {
     *     // ... the filter for the EquipoTipos we want to count
     *   }
     * })
    **/
    count<T extends EquipoTipoCountArgs>(
      args?: Subset<T, EquipoTipoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipoTipoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EquipoTipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoTipoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipoTipoAggregateArgs>(args: Subset<T, EquipoTipoAggregateArgs>): Prisma.PrismaPromise<GetEquipoTipoAggregateType<T>>

    /**
     * Group by EquipoTipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoTipoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipoTipoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipoTipoGroupByArgs['orderBy'] }
        : { orderBy?: EquipoTipoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipoTipoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipoTipoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EquipoTipo model
   */
  readonly fields: EquipoTipoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EquipoTipo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EquipoTipoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    equipos<T extends EquipoTipo$equiposArgs<ExtArgs> = {}>(args?: Subset<T, EquipoTipo$equiposArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservaLaboratorioCerradoEquipo<T extends EquipoTipo$reservaLaboratorioCerradoEquipoArgs<ExtArgs> = {}>(args?: Subset<T, EquipoTipo$reservaLaboratorioCerradoEquipoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservaLaboratorioAbiertoEquipo<T extends EquipoTipo$reservaLaboratorioAbiertoEquipoArgs<ExtArgs> = {}>(args?: Subset<T, EquipoTipo$reservaLaboratorioAbiertoEquipoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EquipoTipo model
   */
  interface EquipoTipoFieldRefs {
    readonly id: FieldRef<"EquipoTipo", 'Int'>
    readonly nombre: FieldRef<"EquipoTipo", 'String'>
    readonly imagen: FieldRef<"EquipoTipo", 'String'>
    readonly fechaCreacion: FieldRef<"EquipoTipo", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"EquipoTipo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EquipoTipo findUnique
   */
  export type EquipoTipoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoTipoInclude<ExtArgs> | null
    /**
     * Filter, which EquipoTipo to fetch.
     */
    where: EquipoTipoWhereUniqueInput
  }

  /**
   * EquipoTipo findUniqueOrThrow
   */
  export type EquipoTipoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoTipoInclude<ExtArgs> | null
    /**
     * Filter, which EquipoTipo to fetch.
     */
    where: EquipoTipoWhereUniqueInput
  }

  /**
   * EquipoTipo findFirst
   */
  export type EquipoTipoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoTipoInclude<ExtArgs> | null
    /**
     * Filter, which EquipoTipo to fetch.
     */
    where?: EquipoTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoTipos to fetch.
     */
    orderBy?: EquipoTipoOrderByWithRelationInput | EquipoTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipoTipos.
     */
    cursor?: EquipoTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipoTipos.
     */
    distinct?: EquipoTipoScalarFieldEnum | EquipoTipoScalarFieldEnum[]
  }

  /**
   * EquipoTipo findFirstOrThrow
   */
  export type EquipoTipoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoTipoInclude<ExtArgs> | null
    /**
     * Filter, which EquipoTipo to fetch.
     */
    where?: EquipoTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoTipos to fetch.
     */
    orderBy?: EquipoTipoOrderByWithRelationInput | EquipoTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipoTipos.
     */
    cursor?: EquipoTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipoTipos.
     */
    distinct?: EquipoTipoScalarFieldEnum | EquipoTipoScalarFieldEnum[]
  }

  /**
   * EquipoTipo findMany
   */
  export type EquipoTipoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoTipoInclude<ExtArgs> | null
    /**
     * Filter, which EquipoTipos to fetch.
     */
    where?: EquipoTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoTipos to fetch.
     */
    orderBy?: EquipoTipoOrderByWithRelationInput | EquipoTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EquipoTipos.
     */
    cursor?: EquipoTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoTipos.
     */
    skip?: number
    distinct?: EquipoTipoScalarFieldEnum | EquipoTipoScalarFieldEnum[]
  }

  /**
   * EquipoTipo create
   */
  export type EquipoTipoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoTipoInclude<ExtArgs> | null
    /**
     * The data needed to create a EquipoTipo.
     */
    data: XOR<EquipoTipoCreateInput, EquipoTipoUncheckedCreateInput>
  }

  /**
   * EquipoTipo createMany
   */
  export type EquipoTipoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EquipoTipos.
     */
    data: EquipoTipoCreateManyInput | EquipoTipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EquipoTipo createManyAndReturn
   */
  export type EquipoTipoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * The data used to create many EquipoTipos.
     */
    data: EquipoTipoCreateManyInput | EquipoTipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EquipoTipo update
   */
  export type EquipoTipoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoTipoInclude<ExtArgs> | null
    /**
     * The data needed to update a EquipoTipo.
     */
    data: XOR<EquipoTipoUpdateInput, EquipoTipoUncheckedUpdateInput>
    /**
     * Choose, which EquipoTipo to update.
     */
    where: EquipoTipoWhereUniqueInput
  }

  /**
   * EquipoTipo updateMany
   */
  export type EquipoTipoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EquipoTipos.
     */
    data: XOR<EquipoTipoUpdateManyMutationInput, EquipoTipoUncheckedUpdateManyInput>
    /**
     * Filter which EquipoTipos to update
     */
    where?: EquipoTipoWhereInput
    /**
     * Limit how many EquipoTipos to update.
     */
    limit?: number
  }

  /**
   * EquipoTipo updateManyAndReturn
   */
  export type EquipoTipoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * The data used to update EquipoTipos.
     */
    data: XOR<EquipoTipoUpdateManyMutationInput, EquipoTipoUncheckedUpdateManyInput>
    /**
     * Filter which EquipoTipos to update
     */
    where?: EquipoTipoWhereInput
    /**
     * Limit how many EquipoTipos to update.
     */
    limit?: number
  }

  /**
   * EquipoTipo upsert
   */
  export type EquipoTipoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoTipoInclude<ExtArgs> | null
    /**
     * The filter to search for the EquipoTipo to update in case it exists.
     */
    where: EquipoTipoWhereUniqueInput
    /**
     * In case the EquipoTipo found by the `where` argument doesn't exist, create a new EquipoTipo with this data.
     */
    create: XOR<EquipoTipoCreateInput, EquipoTipoUncheckedCreateInput>
    /**
     * In case the EquipoTipo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EquipoTipoUpdateInput, EquipoTipoUncheckedUpdateInput>
  }

  /**
   * EquipoTipo delete
   */
  export type EquipoTipoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoTipoInclude<ExtArgs> | null
    /**
     * Filter which EquipoTipo to delete.
     */
    where: EquipoTipoWhereUniqueInput
  }

  /**
   * EquipoTipo deleteMany
   */
  export type EquipoTipoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipoTipos to delete
     */
    where?: EquipoTipoWhereInput
    /**
     * Limit how many EquipoTipos to delete.
     */
    limit?: number
  }

  /**
   * EquipoTipo.equipos
   */
  export type EquipoTipo$equiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    where?: EquipoWhereInput
    orderBy?: EquipoOrderByWithRelationInput | EquipoOrderByWithRelationInput[]
    cursor?: EquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipoScalarFieldEnum | EquipoScalarFieldEnum[]
  }

  /**
   * EquipoTipo.reservaLaboratorioCerradoEquipo
   */
  export type EquipoTipo$reservaLaboratorioCerradoEquipoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
    where?: ReservaLaboratorioCerradoEquipoWhereInput
    orderBy?: ReservaLaboratorioCerradoEquipoOrderByWithRelationInput | ReservaLaboratorioCerradoEquipoOrderByWithRelationInput[]
    cursor?: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLaboratorioCerradoEquipoScalarFieldEnum | ReservaLaboratorioCerradoEquipoScalarFieldEnum[]
  }

  /**
   * EquipoTipo.reservaLaboratorioAbiertoEquipo
   */
  export type EquipoTipo$reservaLaboratorioAbiertoEquipoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
    orderBy?: ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput | ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput[]
    cursor?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLaboratorioAbiertoEquipoScalarFieldEnum | ReservaLaboratorioAbiertoEquipoScalarFieldEnum[]
  }

  /**
   * EquipoTipo without action
   */
  export type EquipoTipoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoTipo
     */
    select?: EquipoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoTipo
     */
    omit?: EquipoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoTipoInclude<ExtArgs> | null
  }


  /**
   * Model EquipoEstado
   */

  export type AggregateEquipoEstado = {
    _count: EquipoEstadoCountAggregateOutputType | null
    _avg: EquipoEstadoAvgAggregateOutputType | null
    _sum: EquipoEstadoSumAggregateOutputType | null
    _min: EquipoEstadoMinAggregateOutputType | null
    _max: EquipoEstadoMaxAggregateOutputType | null
  }

  export type EquipoEstadoAvgAggregateOutputType = {
    id: number | null
  }

  export type EquipoEstadoSumAggregateOutputType = {
    id: number | null
  }

  export type EquipoEstadoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type EquipoEstadoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type EquipoEstadoCountAggregateOutputType = {
    id: number
    nombre: number
    fechaCreacion: number
    usuarioCreadorId: number
    _all: number
  }


  export type EquipoEstadoAvgAggregateInputType = {
    id?: true
  }

  export type EquipoEstadoSumAggregateInputType = {
    id?: true
  }

  export type EquipoEstadoMinAggregateInputType = {
    id?: true
    nombre?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type EquipoEstadoMaxAggregateInputType = {
    id?: true
    nombre?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type EquipoEstadoCountAggregateInputType = {
    id?: true
    nombre?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    _all?: true
  }

  export type EquipoEstadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipoEstado to aggregate.
     */
    where?: EquipoEstadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoEstados to fetch.
     */
    orderBy?: EquipoEstadoOrderByWithRelationInput | EquipoEstadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EquipoEstadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoEstados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoEstados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EquipoEstados
    **/
    _count?: true | EquipoEstadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipoEstadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipoEstadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipoEstadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipoEstadoMaxAggregateInputType
  }

  export type GetEquipoEstadoAggregateType<T extends EquipoEstadoAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipoEstado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipoEstado[P]>
      : GetScalarType<T[P], AggregateEquipoEstado[P]>
  }




  export type EquipoEstadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipoEstadoWhereInput
    orderBy?: EquipoEstadoOrderByWithAggregationInput | EquipoEstadoOrderByWithAggregationInput[]
    by: EquipoEstadoScalarFieldEnum[] | EquipoEstadoScalarFieldEnum
    having?: EquipoEstadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipoEstadoCountAggregateInputType | true
    _avg?: EquipoEstadoAvgAggregateInputType
    _sum?: EquipoEstadoSumAggregateInputType
    _min?: EquipoEstadoMinAggregateInputType
    _max?: EquipoEstadoMaxAggregateInputType
  }

  export type EquipoEstadoGroupByOutputType = {
    id: number
    nombre: string
    fechaCreacion: Date
    usuarioCreadorId: string
    _count: EquipoEstadoCountAggregateOutputType | null
    _avg: EquipoEstadoAvgAggregateOutputType | null
    _sum: EquipoEstadoSumAggregateOutputType | null
    _min: EquipoEstadoMinAggregateOutputType | null
    _max: EquipoEstadoMaxAggregateOutputType | null
  }

  type GetEquipoEstadoGroupByPayload<T extends EquipoEstadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EquipoEstadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipoEstadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipoEstadoGroupByOutputType[P]>
            : GetScalarType<T[P], EquipoEstadoGroupByOutputType[P]>
        }
      >
    >


  export type EquipoEstadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    equipos?: boolean | EquipoEstado$equiposArgs<ExtArgs>
    _count?: boolean | EquipoEstadoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipoEstado"]>

  export type EquipoEstadoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["equipoEstado"]>

  export type EquipoEstadoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }, ExtArgs["result"]["equipoEstado"]>

  export type EquipoEstadoSelectScalar = {
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }

  export type EquipoEstadoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "fechaCreacion" | "usuarioCreadorId", ExtArgs["result"]["equipoEstado"]>
  export type EquipoEstadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    equipos?: boolean | EquipoEstado$equiposArgs<ExtArgs>
    _count?: boolean | EquipoEstadoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EquipoEstadoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EquipoEstadoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EquipoEstadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EquipoEstado"
    objects: {
      equipos: Prisma.$EquipoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      fechaCreacion: Date
      usuarioCreadorId: string
    }, ExtArgs["result"]["equipoEstado"]>
    composites: {}
  }

  type EquipoEstadoGetPayload<S extends boolean | null | undefined | EquipoEstadoDefaultArgs> = $Result.GetResult<Prisma.$EquipoEstadoPayload, S>

  type EquipoEstadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EquipoEstadoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EquipoEstadoCountAggregateInputType | true
    }

  export interface EquipoEstadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EquipoEstado'], meta: { name: 'EquipoEstado' } }
    /**
     * Find zero or one EquipoEstado that matches the filter.
     * @param {EquipoEstadoFindUniqueArgs} args - Arguments to find a EquipoEstado
     * @example
     * // Get one EquipoEstado
     * const equipoEstado = await prisma.equipoEstado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EquipoEstadoFindUniqueArgs>(args: SelectSubset<T, EquipoEstadoFindUniqueArgs<ExtArgs>>): Prisma__EquipoEstadoClient<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EquipoEstado that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EquipoEstadoFindUniqueOrThrowArgs} args - Arguments to find a EquipoEstado
     * @example
     * // Get one EquipoEstado
     * const equipoEstado = await prisma.equipoEstado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EquipoEstadoFindUniqueOrThrowArgs>(args: SelectSubset<T, EquipoEstadoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EquipoEstadoClient<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipoEstado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoEstadoFindFirstArgs} args - Arguments to find a EquipoEstado
     * @example
     * // Get one EquipoEstado
     * const equipoEstado = await prisma.equipoEstado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EquipoEstadoFindFirstArgs>(args?: SelectSubset<T, EquipoEstadoFindFirstArgs<ExtArgs>>): Prisma__EquipoEstadoClient<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EquipoEstado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoEstadoFindFirstOrThrowArgs} args - Arguments to find a EquipoEstado
     * @example
     * // Get one EquipoEstado
     * const equipoEstado = await prisma.equipoEstado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EquipoEstadoFindFirstOrThrowArgs>(args?: SelectSubset<T, EquipoEstadoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EquipoEstadoClient<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EquipoEstados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoEstadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EquipoEstados
     * const equipoEstados = await prisma.equipoEstado.findMany()
     * 
     * // Get first 10 EquipoEstados
     * const equipoEstados = await prisma.equipoEstado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipoEstadoWithIdOnly = await prisma.equipoEstado.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EquipoEstadoFindManyArgs>(args?: SelectSubset<T, EquipoEstadoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EquipoEstado.
     * @param {EquipoEstadoCreateArgs} args - Arguments to create a EquipoEstado.
     * @example
     * // Create one EquipoEstado
     * const EquipoEstado = await prisma.equipoEstado.create({
     *   data: {
     *     // ... data to create a EquipoEstado
     *   }
     * })
     * 
     */
    create<T extends EquipoEstadoCreateArgs>(args: SelectSubset<T, EquipoEstadoCreateArgs<ExtArgs>>): Prisma__EquipoEstadoClient<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EquipoEstados.
     * @param {EquipoEstadoCreateManyArgs} args - Arguments to create many EquipoEstados.
     * @example
     * // Create many EquipoEstados
     * const equipoEstado = await prisma.equipoEstado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EquipoEstadoCreateManyArgs>(args?: SelectSubset<T, EquipoEstadoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EquipoEstados and returns the data saved in the database.
     * @param {EquipoEstadoCreateManyAndReturnArgs} args - Arguments to create many EquipoEstados.
     * @example
     * // Create many EquipoEstados
     * const equipoEstado = await prisma.equipoEstado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EquipoEstados and only return the `id`
     * const equipoEstadoWithIdOnly = await prisma.equipoEstado.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EquipoEstadoCreateManyAndReturnArgs>(args?: SelectSubset<T, EquipoEstadoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EquipoEstado.
     * @param {EquipoEstadoDeleteArgs} args - Arguments to delete one EquipoEstado.
     * @example
     * // Delete one EquipoEstado
     * const EquipoEstado = await prisma.equipoEstado.delete({
     *   where: {
     *     // ... filter to delete one EquipoEstado
     *   }
     * })
     * 
     */
    delete<T extends EquipoEstadoDeleteArgs>(args: SelectSubset<T, EquipoEstadoDeleteArgs<ExtArgs>>): Prisma__EquipoEstadoClient<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EquipoEstado.
     * @param {EquipoEstadoUpdateArgs} args - Arguments to update one EquipoEstado.
     * @example
     * // Update one EquipoEstado
     * const equipoEstado = await prisma.equipoEstado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EquipoEstadoUpdateArgs>(args: SelectSubset<T, EquipoEstadoUpdateArgs<ExtArgs>>): Prisma__EquipoEstadoClient<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EquipoEstados.
     * @param {EquipoEstadoDeleteManyArgs} args - Arguments to filter EquipoEstados to delete.
     * @example
     * // Delete a few EquipoEstados
     * const { count } = await prisma.equipoEstado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EquipoEstadoDeleteManyArgs>(args?: SelectSubset<T, EquipoEstadoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipoEstados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoEstadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EquipoEstados
     * const equipoEstado = await prisma.equipoEstado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EquipoEstadoUpdateManyArgs>(args: SelectSubset<T, EquipoEstadoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipoEstados and returns the data updated in the database.
     * @param {EquipoEstadoUpdateManyAndReturnArgs} args - Arguments to update many EquipoEstados.
     * @example
     * // Update many EquipoEstados
     * const equipoEstado = await prisma.equipoEstado.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EquipoEstados and only return the `id`
     * const equipoEstadoWithIdOnly = await prisma.equipoEstado.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EquipoEstadoUpdateManyAndReturnArgs>(args: SelectSubset<T, EquipoEstadoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EquipoEstado.
     * @param {EquipoEstadoUpsertArgs} args - Arguments to update or create a EquipoEstado.
     * @example
     * // Update or create a EquipoEstado
     * const equipoEstado = await prisma.equipoEstado.upsert({
     *   create: {
     *     // ... data to create a EquipoEstado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EquipoEstado we want to update
     *   }
     * })
     */
    upsert<T extends EquipoEstadoUpsertArgs>(args: SelectSubset<T, EquipoEstadoUpsertArgs<ExtArgs>>): Prisma__EquipoEstadoClient<$Result.GetResult<Prisma.$EquipoEstadoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EquipoEstados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoEstadoCountArgs} args - Arguments to filter EquipoEstados to count.
     * @example
     * // Count the number of EquipoEstados
     * const count = await prisma.equipoEstado.count({
     *   where: {
     *     // ... the filter for the EquipoEstados we want to count
     *   }
     * })
    **/
    count<T extends EquipoEstadoCountArgs>(
      args?: Subset<T, EquipoEstadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipoEstadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EquipoEstado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoEstadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipoEstadoAggregateArgs>(args: Subset<T, EquipoEstadoAggregateArgs>): Prisma.PrismaPromise<GetEquipoEstadoAggregateType<T>>

    /**
     * Group by EquipoEstado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipoEstadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipoEstadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipoEstadoGroupByArgs['orderBy'] }
        : { orderBy?: EquipoEstadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipoEstadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipoEstadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EquipoEstado model
   */
  readonly fields: EquipoEstadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EquipoEstado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EquipoEstadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    equipos<T extends EquipoEstado$equiposArgs<ExtArgs> = {}>(args?: Subset<T, EquipoEstado$equiposArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EquipoEstado model
   */
  interface EquipoEstadoFieldRefs {
    readonly id: FieldRef<"EquipoEstado", 'Int'>
    readonly nombre: FieldRef<"EquipoEstado", 'String'>
    readonly fechaCreacion: FieldRef<"EquipoEstado", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"EquipoEstado", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EquipoEstado findUnique
   */
  export type EquipoEstadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoEstadoInclude<ExtArgs> | null
    /**
     * Filter, which EquipoEstado to fetch.
     */
    where: EquipoEstadoWhereUniqueInput
  }

  /**
   * EquipoEstado findUniqueOrThrow
   */
  export type EquipoEstadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoEstadoInclude<ExtArgs> | null
    /**
     * Filter, which EquipoEstado to fetch.
     */
    where: EquipoEstadoWhereUniqueInput
  }

  /**
   * EquipoEstado findFirst
   */
  export type EquipoEstadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoEstadoInclude<ExtArgs> | null
    /**
     * Filter, which EquipoEstado to fetch.
     */
    where?: EquipoEstadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoEstados to fetch.
     */
    orderBy?: EquipoEstadoOrderByWithRelationInput | EquipoEstadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipoEstados.
     */
    cursor?: EquipoEstadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoEstados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoEstados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipoEstados.
     */
    distinct?: EquipoEstadoScalarFieldEnum | EquipoEstadoScalarFieldEnum[]
  }

  /**
   * EquipoEstado findFirstOrThrow
   */
  export type EquipoEstadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoEstadoInclude<ExtArgs> | null
    /**
     * Filter, which EquipoEstado to fetch.
     */
    where?: EquipoEstadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoEstados to fetch.
     */
    orderBy?: EquipoEstadoOrderByWithRelationInput | EquipoEstadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipoEstados.
     */
    cursor?: EquipoEstadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoEstados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoEstados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipoEstados.
     */
    distinct?: EquipoEstadoScalarFieldEnum | EquipoEstadoScalarFieldEnum[]
  }

  /**
   * EquipoEstado findMany
   */
  export type EquipoEstadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoEstadoInclude<ExtArgs> | null
    /**
     * Filter, which EquipoEstados to fetch.
     */
    where?: EquipoEstadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipoEstados to fetch.
     */
    orderBy?: EquipoEstadoOrderByWithRelationInput | EquipoEstadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EquipoEstados.
     */
    cursor?: EquipoEstadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipoEstados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipoEstados.
     */
    skip?: number
    distinct?: EquipoEstadoScalarFieldEnum | EquipoEstadoScalarFieldEnum[]
  }

  /**
   * EquipoEstado create
   */
  export type EquipoEstadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoEstadoInclude<ExtArgs> | null
    /**
     * The data needed to create a EquipoEstado.
     */
    data: XOR<EquipoEstadoCreateInput, EquipoEstadoUncheckedCreateInput>
  }

  /**
   * EquipoEstado createMany
   */
  export type EquipoEstadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EquipoEstados.
     */
    data: EquipoEstadoCreateManyInput | EquipoEstadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EquipoEstado createManyAndReturn
   */
  export type EquipoEstadoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * The data used to create many EquipoEstados.
     */
    data: EquipoEstadoCreateManyInput | EquipoEstadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EquipoEstado update
   */
  export type EquipoEstadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoEstadoInclude<ExtArgs> | null
    /**
     * The data needed to update a EquipoEstado.
     */
    data: XOR<EquipoEstadoUpdateInput, EquipoEstadoUncheckedUpdateInput>
    /**
     * Choose, which EquipoEstado to update.
     */
    where: EquipoEstadoWhereUniqueInput
  }

  /**
   * EquipoEstado updateMany
   */
  export type EquipoEstadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EquipoEstados.
     */
    data: XOR<EquipoEstadoUpdateManyMutationInput, EquipoEstadoUncheckedUpdateManyInput>
    /**
     * Filter which EquipoEstados to update
     */
    where?: EquipoEstadoWhereInput
    /**
     * Limit how many EquipoEstados to update.
     */
    limit?: number
  }

  /**
   * EquipoEstado updateManyAndReturn
   */
  export type EquipoEstadoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * The data used to update EquipoEstados.
     */
    data: XOR<EquipoEstadoUpdateManyMutationInput, EquipoEstadoUncheckedUpdateManyInput>
    /**
     * Filter which EquipoEstados to update
     */
    where?: EquipoEstadoWhereInput
    /**
     * Limit how many EquipoEstados to update.
     */
    limit?: number
  }

  /**
   * EquipoEstado upsert
   */
  export type EquipoEstadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoEstadoInclude<ExtArgs> | null
    /**
     * The filter to search for the EquipoEstado to update in case it exists.
     */
    where: EquipoEstadoWhereUniqueInput
    /**
     * In case the EquipoEstado found by the `where` argument doesn't exist, create a new EquipoEstado with this data.
     */
    create: XOR<EquipoEstadoCreateInput, EquipoEstadoUncheckedCreateInput>
    /**
     * In case the EquipoEstado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EquipoEstadoUpdateInput, EquipoEstadoUncheckedUpdateInput>
  }

  /**
   * EquipoEstado delete
   */
  export type EquipoEstadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoEstadoInclude<ExtArgs> | null
    /**
     * Filter which EquipoEstado to delete.
     */
    where: EquipoEstadoWhereUniqueInput
  }

  /**
   * EquipoEstado deleteMany
   */
  export type EquipoEstadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipoEstados to delete
     */
    where?: EquipoEstadoWhereInput
    /**
     * Limit how many EquipoEstados to delete.
     */
    limit?: number
  }

  /**
   * EquipoEstado.equipos
   */
  export type EquipoEstado$equiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    where?: EquipoWhereInput
    orderBy?: EquipoOrderByWithRelationInput | EquipoOrderByWithRelationInput[]
    cursor?: EquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipoScalarFieldEnum | EquipoScalarFieldEnum[]
  }

  /**
   * EquipoEstado without action
   */
  export type EquipoEstadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipoEstado
     */
    select?: EquipoEstadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EquipoEstado
     */
    omit?: EquipoEstadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoEstadoInclude<ExtArgs> | null
  }


  /**
   * Model Laboratorio
   */

  export type AggregateLaboratorio = {
    _count: LaboratorioCountAggregateOutputType | null
    _avg: LaboratorioAvgAggregateOutputType | null
    _sum: LaboratorioSumAggregateOutputType | null
    _min: LaboratorioMinAggregateOutputType | null
    _max: LaboratorioMaxAggregateOutputType | null
  }

  export type LaboratorioAvgAggregateOutputType = {
    id: number | null
    sedeId: number | null
  }

  export type LaboratorioSumAggregateOutputType = {
    id: number | null
    sedeId: number | null
  }

  export type LaboratorioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    tienePc: boolean | null
    esReservable: boolean | null
    incluirEnReporte: boolean | null
    sedeId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type LaboratorioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    tienePc: boolean | null
    esReservable: boolean | null
    incluirEnReporte: boolean | null
    sedeId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type LaboratorioCountAggregateOutputType = {
    id: number
    nombre: number
    tienePc: number
    esReservable: number
    incluirEnReporte: number
    sedeId: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type LaboratorioAvgAggregateInputType = {
    id?: true
    sedeId?: true
  }

  export type LaboratorioSumAggregateInputType = {
    id?: true
    sedeId?: true
  }

  export type LaboratorioMinAggregateInputType = {
    id?: true
    nombre?: true
    tienePc?: true
    esReservable?: true
    incluirEnReporte?: true
    sedeId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type LaboratorioMaxAggregateInputType = {
    id?: true
    nombre?: true
    tienePc?: true
    esReservable?: true
    incluirEnReporte?: true
    sedeId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type LaboratorioCountAggregateInputType = {
    id?: true
    nombre?: true
    tienePc?: true
    esReservable?: true
    incluirEnReporte?: true
    sedeId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type LaboratorioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Laboratorio to aggregate.
     */
    where?: LaboratorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Laboratorios to fetch.
     */
    orderBy?: LaboratorioOrderByWithRelationInput | LaboratorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LaboratorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Laboratorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Laboratorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Laboratorios
    **/
    _count?: true | LaboratorioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LaboratorioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LaboratorioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LaboratorioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LaboratorioMaxAggregateInputType
  }

  export type GetLaboratorioAggregateType<T extends LaboratorioAggregateArgs> = {
        [P in keyof T & keyof AggregateLaboratorio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLaboratorio[P]>
      : GetScalarType<T[P], AggregateLaboratorio[P]>
  }




  export type LaboratorioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LaboratorioWhereInput
    orderBy?: LaboratorioOrderByWithAggregationInput | LaboratorioOrderByWithAggregationInput[]
    by: LaboratorioScalarFieldEnum[] | LaboratorioScalarFieldEnum
    having?: LaboratorioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LaboratorioCountAggregateInputType | true
    _avg?: LaboratorioAvgAggregateInputType
    _sum?: LaboratorioSumAggregateInputType
    _min?: LaboratorioMinAggregateInputType
    _max?: LaboratorioMaxAggregateInputType
  }

  export type LaboratorioGroupByOutputType = {
    id: number
    nombre: string
    tienePc: boolean
    esReservable: boolean
    incluirEnReporte: boolean
    sedeId: number
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: LaboratorioCountAggregateOutputType | null
    _avg: LaboratorioAvgAggregateOutputType | null
    _sum: LaboratorioSumAggregateOutputType | null
    _min: LaboratorioMinAggregateOutputType | null
    _max: LaboratorioMaxAggregateOutputType | null
  }

  type GetLaboratorioGroupByPayload<T extends LaboratorioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LaboratorioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LaboratorioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LaboratorioGroupByOutputType[P]>
            : GetScalarType<T[P], LaboratorioGroupByOutputType[P]>
        }
      >
    >


  export type LaboratorioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    software?: boolean | Laboratorio$softwareArgs<ExtArgs>
    armarios?: boolean | Laboratorio$armariosArgs<ExtArgs>
    equipos?: boolean | Laboratorio$equiposArgs<ExtArgs>
    libros?: boolean | Laboratorio$librosArgs<ExtArgs>
    reservaLaboratorioCerrado?: boolean | Laboratorio$reservaLaboratorioCerradoArgs<ExtArgs>
    reservaLaboratorioAbierto?: boolean | Laboratorio$reservaLaboratorioAbiertoArgs<ExtArgs>
    _count?: boolean | LaboratorioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["laboratorio"]>

  export type LaboratorioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["laboratorio"]>

  export type LaboratorioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["laboratorio"]>

  export type LaboratorioSelectScalar = {
    id?: boolean
    nombre?: boolean
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type LaboratorioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "tienePc" | "esReservable" | "incluirEnReporte" | "sedeId" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["laboratorio"]>
  export type LaboratorioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    software?: boolean | Laboratorio$softwareArgs<ExtArgs>
    armarios?: boolean | Laboratorio$armariosArgs<ExtArgs>
    equipos?: boolean | Laboratorio$equiposArgs<ExtArgs>
    libros?: boolean | Laboratorio$librosArgs<ExtArgs>
    reservaLaboratorioCerrado?: boolean | Laboratorio$reservaLaboratorioCerradoArgs<ExtArgs>
    reservaLaboratorioAbierto?: boolean | Laboratorio$reservaLaboratorioAbiertoArgs<ExtArgs>
    _count?: boolean | LaboratorioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LaboratorioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }
  export type LaboratorioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }

  export type $LaboratorioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Laboratorio"
    objects: {
      sede: Prisma.$SedePayload<ExtArgs>
      software: Prisma.$SoftwareLaboratorioPayload<ExtArgs>[]
      armarios: Prisma.$ArmarioPayload<ExtArgs>[]
      equipos: Prisma.$EquipoPayload<ExtArgs>[]
      libros: Prisma.$LibroPayload<ExtArgs>[]
      reservaLaboratorioCerrado: Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>[]
      reservaLaboratorioAbierto: Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      tienePc: boolean
      esReservable: boolean
      incluirEnReporte: boolean
      sedeId: number
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["laboratorio"]>
    composites: {}
  }

  type LaboratorioGetPayload<S extends boolean | null | undefined | LaboratorioDefaultArgs> = $Result.GetResult<Prisma.$LaboratorioPayload, S>

  type LaboratorioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LaboratorioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LaboratorioCountAggregateInputType | true
    }

  export interface LaboratorioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Laboratorio'], meta: { name: 'Laboratorio' } }
    /**
     * Find zero or one Laboratorio that matches the filter.
     * @param {LaboratorioFindUniqueArgs} args - Arguments to find a Laboratorio
     * @example
     * // Get one Laboratorio
     * const laboratorio = await prisma.laboratorio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LaboratorioFindUniqueArgs>(args: SelectSubset<T, LaboratorioFindUniqueArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Laboratorio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LaboratorioFindUniqueOrThrowArgs} args - Arguments to find a Laboratorio
     * @example
     * // Get one Laboratorio
     * const laboratorio = await prisma.laboratorio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LaboratorioFindUniqueOrThrowArgs>(args: SelectSubset<T, LaboratorioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Laboratorio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratorioFindFirstArgs} args - Arguments to find a Laboratorio
     * @example
     * // Get one Laboratorio
     * const laboratorio = await prisma.laboratorio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LaboratorioFindFirstArgs>(args?: SelectSubset<T, LaboratorioFindFirstArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Laboratorio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratorioFindFirstOrThrowArgs} args - Arguments to find a Laboratorio
     * @example
     * // Get one Laboratorio
     * const laboratorio = await prisma.laboratorio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LaboratorioFindFirstOrThrowArgs>(args?: SelectSubset<T, LaboratorioFindFirstOrThrowArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Laboratorios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratorioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Laboratorios
     * const laboratorios = await prisma.laboratorio.findMany()
     * 
     * // Get first 10 Laboratorios
     * const laboratorios = await prisma.laboratorio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const laboratorioWithIdOnly = await prisma.laboratorio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LaboratorioFindManyArgs>(args?: SelectSubset<T, LaboratorioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Laboratorio.
     * @param {LaboratorioCreateArgs} args - Arguments to create a Laboratorio.
     * @example
     * // Create one Laboratorio
     * const Laboratorio = await prisma.laboratorio.create({
     *   data: {
     *     // ... data to create a Laboratorio
     *   }
     * })
     * 
     */
    create<T extends LaboratorioCreateArgs>(args: SelectSubset<T, LaboratorioCreateArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Laboratorios.
     * @param {LaboratorioCreateManyArgs} args - Arguments to create many Laboratorios.
     * @example
     * // Create many Laboratorios
     * const laboratorio = await prisma.laboratorio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LaboratorioCreateManyArgs>(args?: SelectSubset<T, LaboratorioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Laboratorios and returns the data saved in the database.
     * @param {LaboratorioCreateManyAndReturnArgs} args - Arguments to create many Laboratorios.
     * @example
     * // Create many Laboratorios
     * const laboratorio = await prisma.laboratorio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Laboratorios and only return the `id`
     * const laboratorioWithIdOnly = await prisma.laboratorio.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LaboratorioCreateManyAndReturnArgs>(args?: SelectSubset<T, LaboratorioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Laboratorio.
     * @param {LaboratorioDeleteArgs} args - Arguments to delete one Laboratorio.
     * @example
     * // Delete one Laboratorio
     * const Laboratorio = await prisma.laboratorio.delete({
     *   where: {
     *     // ... filter to delete one Laboratorio
     *   }
     * })
     * 
     */
    delete<T extends LaboratorioDeleteArgs>(args: SelectSubset<T, LaboratorioDeleteArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Laboratorio.
     * @param {LaboratorioUpdateArgs} args - Arguments to update one Laboratorio.
     * @example
     * // Update one Laboratorio
     * const laboratorio = await prisma.laboratorio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LaboratorioUpdateArgs>(args: SelectSubset<T, LaboratorioUpdateArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Laboratorios.
     * @param {LaboratorioDeleteManyArgs} args - Arguments to filter Laboratorios to delete.
     * @example
     * // Delete a few Laboratorios
     * const { count } = await prisma.laboratorio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LaboratorioDeleteManyArgs>(args?: SelectSubset<T, LaboratorioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Laboratorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratorioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Laboratorios
     * const laboratorio = await prisma.laboratorio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LaboratorioUpdateManyArgs>(args: SelectSubset<T, LaboratorioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Laboratorios and returns the data updated in the database.
     * @param {LaboratorioUpdateManyAndReturnArgs} args - Arguments to update many Laboratorios.
     * @example
     * // Update many Laboratorios
     * const laboratorio = await prisma.laboratorio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Laboratorios and only return the `id`
     * const laboratorioWithIdOnly = await prisma.laboratorio.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LaboratorioUpdateManyAndReturnArgs>(args: SelectSubset<T, LaboratorioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Laboratorio.
     * @param {LaboratorioUpsertArgs} args - Arguments to update or create a Laboratorio.
     * @example
     * // Update or create a Laboratorio
     * const laboratorio = await prisma.laboratorio.upsert({
     *   create: {
     *     // ... data to create a Laboratorio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Laboratorio we want to update
     *   }
     * })
     */
    upsert<T extends LaboratorioUpsertArgs>(args: SelectSubset<T, LaboratorioUpsertArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Laboratorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratorioCountArgs} args - Arguments to filter Laboratorios to count.
     * @example
     * // Count the number of Laboratorios
     * const count = await prisma.laboratorio.count({
     *   where: {
     *     // ... the filter for the Laboratorios we want to count
     *   }
     * })
    **/
    count<T extends LaboratorioCountArgs>(
      args?: Subset<T, LaboratorioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LaboratorioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Laboratorio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratorioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LaboratorioAggregateArgs>(args: Subset<T, LaboratorioAggregateArgs>): Prisma.PrismaPromise<GetLaboratorioAggregateType<T>>

    /**
     * Group by Laboratorio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratorioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LaboratorioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LaboratorioGroupByArgs['orderBy'] }
        : { orderBy?: LaboratorioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LaboratorioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLaboratorioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Laboratorio model
   */
  readonly fields: LaboratorioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Laboratorio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LaboratorioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    software<T extends Laboratorio$softwareArgs<ExtArgs> = {}>(args?: Subset<T, Laboratorio$softwareArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    armarios<T extends Laboratorio$armariosArgs<ExtArgs> = {}>(args?: Subset<T, Laboratorio$armariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    equipos<T extends Laboratorio$equiposArgs<ExtArgs> = {}>(args?: Subset<T, Laboratorio$equiposArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    libros<T extends Laboratorio$librosArgs<ExtArgs> = {}>(args?: Subset<T, Laboratorio$librosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservaLaboratorioCerrado<T extends Laboratorio$reservaLaboratorioCerradoArgs<ExtArgs> = {}>(args?: Subset<T, Laboratorio$reservaLaboratorioCerradoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservaLaboratorioAbierto<T extends Laboratorio$reservaLaboratorioAbiertoArgs<ExtArgs> = {}>(args?: Subset<T, Laboratorio$reservaLaboratorioAbiertoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Laboratorio model
   */
  interface LaboratorioFieldRefs {
    readonly id: FieldRef<"Laboratorio", 'Int'>
    readonly nombre: FieldRef<"Laboratorio", 'String'>
    readonly tienePc: FieldRef<"Laboratorio", 'Boolean'>
    readonly esReservable: FieldRef<"Laboratorio", 'Boolean'>
    readonly incluirEnReporte: FieldRef<"Laboratorio", 'Boolean'>
    readonly sedeId: FieldRef<"Laboratorio", 'Int'>
    readonly fechaCreacion: FieldRef<"Laboratorio", 'DateTime'>
    readonly fechaModificacion: FieldRef<"Laboratorio", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Laboratorio", 'String'>
    readonly usuarioModificadorId: FieldRef<"Laboratorio", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Laboratorio findUnique
   */
  export type LaboratorioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    /**
     * Filter, which Laboratorio to fetch.
     */
    where: LaboratorioWhereUniqueInput
  }

  /**
   * Laboratorio findUniqueOrThrow
   */
  export type LaboratorioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    /**
     * Filter, which Laboratorio to fetch.
     */
    where: LaboratorioWhereUniqueInput
  }

  /**
   * Laboratorio findFirst
   */
  export type LaboratorioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    /**
     * Filter, which Laboratorio to fetch.
     */
    where?: LaboratorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Laboratorios to fetch.
     */
    orderBy?: LaboratorioOrderByWithRelationInput | LaboratorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Laboratorios.
     */
    cursor?: LaboratorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Laboratorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Laboratorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Laboratorios.
     */
    distinct?: LaboratorioScalarFieldEnum | LaboratorioScalarFieldEnum[]
  }

  /**
   * Laboratorio findFirstOrThrow
   */
  export type LaboratorioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    /**
     * Filter, which Laboratorio to fetch.
     */
    where?: LaboratorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Laboratorios to fetch.
     */
    orderBy?: LaboratorioOrderByWithRelationInput | LaboratorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Laboratorios.
     */
    cursor?: LaboratorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Laboratorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Laboratorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Laboratorios.
     */
    distinct?: LaboratorioScalarFieldEnum | LaboratorioScalarFieldEnum[]
  }

  /**
   * Laboratorio findMany
   */
  export type LaboratorioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    /**
     * Filter, which Laboratorios to fetch.
     */
    where?: LaboratorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Laboratorios to fetch.
     */
    orderBy?: LaboratorioOrderByWithRelationInput | LaboratorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Laboratorios.
     */
    cursor?: LaboratorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Laboratorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Laboratorios.
     */
    skip?: number
    distinct?: LaboratorioScalarFieldEnum | LaboratorioScalarFieldEnum[]
  }

  /**
   * Laboratorio create
   */
  export type LaboratorioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    /**
     * The data needed to create a Laboratorio.
     */
    data: XOR<LaboratorioCreateInput, LaboratorioUncheckedCreateInput>
  }

  /**
   * Laboratorio createMany
   */
  export type LaboratorioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Laboratorios.
     */
    data: LaboratorioCreateManyInput | LaboratorioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Laboratorio createManyAndReturn
   */
  export type LaboratorioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * The data used to create many Laboratorios.
     */
    data: LaboratorioCreateManyInput | LaboratorioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Laboratorio update
   */
  export type LaboratorioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    /**
     * The data needed to update a Laboratorio.
     */
    data: XOR<LaboratorioUpdateInput, LaboratorioUncheckedUpdateInput>
    /**
     * Choose, which Laboratorio to update.
     */
    where: LaboratorioWhereUniqueInput
  }

  /**
   * Laboratorio updateMany
   */
  export type LaboratorioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Laboratorios.
     */
    data: XOR<LaboratorioUpdateManyMutationInput, LaboratorioUncheckedUpdateManyInput>
    /**
     * Filter which Laboratorios to update
     */
    where?: LaboratorioWhereInput
    /**
     * Limit how many Laboratorios to update.
     */
    limit?: number
  }

  /**
   * Laboratorio updateManyAndReturn
   */
  export type LaboratorioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * The data used to update Laboratorios.
     */
    data: XOR<LaboratorioUpdateManyMutationInput, LaboratorioUncheckedUpdateManyInput>
    /**
     * Filter which Laboratorios to update
     */
    where?: LaboratorioWhereInput
    /**
     * Limit how many Laboratorios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Laboratorio upsert
   */
  export type LaboratorioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    /**
     * The filter to search for the Laboratorio to update in case it exists.
     */
    where: LaboratorioWhereUniqueInput
    /**
     * In case the Laboratorio found by the `where` argument doesn't exist, create a new Laboratorio with this data.
     */
    create: XOR<LaboratorioCreateInput, LaboratorioUncheckedCreateInput>
    /**
     * In case the Laboratorio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LaboratorioUpdateInput, LaboratorioUncheckedUpdateInput>
  }

  /**
   * Laboratorio delete
   */
  export type LaboratorioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    /**
     * Filter which Laboratorio to delete.
     */
    where: LaboratorioWhereUniqueInput
  }

  /**
   * Laboratorio deleteMany
   */
  export type LaboratorioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Laboratorios to delete
     */
    where?: LaboratorioWhereInput
    /**
     * Limit how many Laboratorios to delete.
     */
    limit?: number
  }

  /**
   * Laboratorio.software
   */
  export type Laboratorio$softwareArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
    where?: SoftwareLaboratorioWhereInput
    orderBy?: SoftwareLaboratorioOrderByWithRelationInput | SoftwareLaboratorioOrderByWithRelationInput[]
    cursor?: SoftwareLaboratorioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SoftwareLaboratorioScalarFieldEnum | SoftwareLaboratorioScalarFieldEnum[]
  }

  /**
   * Laboratorio.armarios
   */
  export type Laboratorio$armariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    where?: ArmarioWhereInput
    orderBy?: ArmarioOrderByWithRelationInput | ArmarioOrderByWithRelationInput[]
    cursor?: ArmarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArmarioScalarFieldEnum | ArmarioScalarFieldEnum[]
  }

  /**
   * Laboratorio.equipos
   */
  export type Laboratorio$equiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    where?: EquipoWhereInput
    orderBy?: EquipoOrderByWithRelationInput | EquipoOrderByWithRelationInput[]
    cursor?: EquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipoScalarFieldEnum | EquipoScalarFieldEnum[]
  }

  /**
   * Laboratorio.libros
   */
  export type Laboratorio$librosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    where?: LibroWhereInput
    orderBy?: LibroOrderByWithRelationInput | LibroOrderByWithRelationInput[]
    cursor?: LibroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LibroScalarFieldEnum | LibroScalarFieldEnum[]
  }

  /**
   * Laboratorio.reservaLaboratorioCerrado
   */
  export type Laboratorio$reservaLaboratorioCerradoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    where?: ReservaLaboratorioCerradoWhereInput
    orderBy?: ReservaLaboratorioCerradoOrderByWithRelationInput | ReservaLaboratorioCerradoOrderByWithRelationInput[]
    cursor?: ReservaLaboratorioCerradoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLaboratorioCerradoScalarFieldEnum | ReservaLaboratorioCerradoScalarFieldEnum[]
  }

  /**
   * Laboratorio.reservaLaboratorioAbierto
   */
  export type Laboratorio$reservaLaboratorioAbiertoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    where?: ReservaLaboratorioAbiertoWhereInput
    orderBy?: ReservaLaboratorioAbiertoOrderByWithRelationInput | ReservaLaboratorioAbiertoOrderByWithRelationInput[]
    cursor?: ReservaLaboratorioAbiertoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLaboratorioAbiertoScalarFieldEnum | ReservaLaboratorioAbiertoScalarFieldEnum[]
  }

  /**
   * Laboratorio without action
   */
  export type LaboratorioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
  }


  /**
   * Model Armario
   */

  export type AggregateArmario = {
    _count: ArmarioCountAggregateOutputType | null
    _avg: ArmarioAvgAggregateOutputType | null
    _sum: ArmarioSumAggregateOutputType | null
    _min: ArmarioMinAggregateOutputType | null
    _max: ArmarioMaxAggregateOutputType | null
  }

  export type ArmarioAvgAggregateOutputType = {
    id: number | null
    laboratorioId: number | null
  }

  export type ArmarioSumAggregateOutputType = {
    id: number | null
    laboratorioId: number | null
  }

  export type ArmarioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    laboratorioId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ArmarioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    laboratorioId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ArmarioCountAggregateOutputType = {
    id: number
    nombre: number
    laboratorioId: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type ArmarioAvgAggregateInputType = {
    id?: true
    laboratorioId?: true
  }

  export type ArmarioSumAggregateInputType = {
    id?: true
    laboratorioId?: true
  }

  export type ArmarioMinAggregateInputType = {
    id?: true
    nombre?: true
    laboratorioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ArmarioMaxAggregateInputType = {
    id?: true
    nombre?: true
    laboratorioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ArmarioCountAggregateInputType = {
    id?: true
    nombre?: true
    laboratorioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type ArmarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Armario to aggregate.
     */
    where?: ArmarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Armarios to fetch.
     */
    orderBy?: ArmarioOrderByWithRelationInput | ArmarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ArmarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Armarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Armarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Armarios
    **/
    _count?: true | ArmarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArmarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArmarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArmarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArmarioMaxAggregateInputType
  }

  export type GetArmarioAggregateType<T extends ArmarioAggregateArgs> = {
        [P in keyof T & keyof AggregateArmario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArmario[P]>
      : GetScalarType<T[P], AggregateArmario[P]>
  }




  export type ArmarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArmarioWhereInput
    orderBy?: ArmarioOrderByWithAggregationInput | ArmarioOrderByWithAggregationInput[]
    by: ArmarioScalarFieldEnum[] | ArmarioScalarFieldEnum
    having?: ArmarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArmarioCountAggregateInputType | true
    _avg?: ArmarioAvgAggregateInputType
    _sum?: ArmarioSumAggregateInputType
    _min?: ArmarioMinAggregateInputType
    _max?: ArmarioMaxAggregateInputType
  }

  export type ArmarioGroupByOutputType = {
    id: number
    nombre: string
    laboratorioId: number
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: ArmarioCountAggregateOutputType | null
    _avg: ArmarioAvgAggregateOutputType | null
    _sum: ArmarioSumAggregateOutputType | null
    _min: ArmarioMinAggregateOutputType | null
    _max: ArmarioMaxAggregateOutputType | null
  }

  type GetArmarioGroupByPayload<T extends ArmarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArmarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArmarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArmarioGroupByOutputType[P]>
            : GetScalarType<T[P], ArmarioGroupByOutputType[P]>
        }
      >
    >


  export type ArmarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    estantes?: boolean | Armario$estantesArgs<ExtArgs>
    equipos?: boolean | Armario$equiposArgs<ExtArgs>
    libros?: boolean | Armario$librosArgs<ExtArgs>
    _count?: boolean | ArmarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["armario"]>

  export type ArmarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["armario"]>

  export type ArmarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["armario"]>

  export type ArmarioSelectScalar = {
    id?: boolean
    nombre?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type ArmarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "laboratorioId" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["armario"]>
  export type ArmarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
    estantes?: boolean | Armario$estantesArgs<ExtArgs>
    equipos?: boolean | Armario$equiposArgs<ExtArgs>
    libros?: boolean | Armario$librosArgs<ExtArgs>
    _count?: boolean | ArmarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ArmarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
  }
  export type ArmarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
  }

  export type $ArmarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Armario"
    objects: {
      laboratorio: Prisma.$LaboratorioPayload<ExtArgs>
      estantes: Prisma.$EstantePayload<ExtArgs>[]
      equipos: Prisma.$EquipoPayload<ExtArgs>[]
      libros: Prisma.$LibroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      laboratorioId: number
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["armario"]>
    composites: {}
  }

  type ArmarioGetPayload<S extends boolean | null | undefined | ArmarioDefaultArgs> = $Result.GetResult<Prisma.$ArmarioPayload, S>

  type ArmarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ArmarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArmarioCountAggregateInputType | true
    }

  export interface ArmarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Armario'], meta: { name: 'Armario' } }
    /**
     * Find zero or one Armario that matches the filter.
     * @param {ArmarioFindUniqueArgs} args - Arguments to find a Armario
     * @example
     * // Get one Armario
     * const armario = await prisma.armario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ArmarioFindUniqueArgs>(args: SelectSubset<T, ArmarioFindUniqueArgs<ExtArgs>>): Prisma__ArmarioClient<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Armario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ArmarioFindUniqueOrThrowArgs} args - Arguments to find a Armario
     * @example
     * // Get one Armario
     * const armario = await prisma.armario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ArmarioFindUniqueOrThrowArgs>(args: SelectSubset<T, ArmarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ArmarioClient<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Armario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArmarioFindFirstArgs} args - Arguments to find a Armario
     * @example
     * // Get one Armario
     * const armario = await prisma.armario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ArmarioFindFirstArgs>(args?: SelectSubset<T, ArmarioFindFirstArgs<ExtArgs>>): Prisma__ArmarioClient<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Armario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArmarioFindFirstOrThrowArgs} args - Arguments to find a Armario
     * @example
     * // Get one Armario
     * const armario = await prisma.armario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ArmarioFindFirstOrThrowArgs>(args?: SelectSubset<T, ArmarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__ArmarioClient<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Armarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArmarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Armarios
     * const armarios = await prisma.armario.findMany()
     * 
     * // Get first 10 Armarios
     * const armarios = await prisma.armario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const armarioWithIdOnly = await prisma.armario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ArmarioFindManyArgs>(args?: SelectSubset<T, ArmarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Armario.
     * @param {ArmarioCreateArgs} args - Arguments to create a Armario.
     * @example
     * // Create one Armario
     * const Armario = await prisma.armario.create({
     *   data: {
     *     // ... data to create a Armario
     *   }
     * })
     * 
     */
    create<T extends ArmarioCreateArgs>(args: SelectSubset<T, ArmarioCreateArgs<ExtArgs>>): Prisma__ArmarioClient<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Armarios.
     * @param {ArmarioCreateManyArgs} args - Arguments to create many Armarios.
     * @example
     * // Create many Armarios
     * const armario = await prisma.armario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ArmarioCreateManyArgs>(args?: SelectSubset<T, ArmarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Armarios and returns the data saved in the database.
     * @param {ArmarioCreateManyAndReturnArgs} args - Arguments to create many Armarios.
     * @example
     * // Create many Armarios
     * const armario = await prisma.armario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Armarios and only return the `id`
     * const armarioWithIdOnly = await prisma.armario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ArmarioCreateManyAndReturnArgs>(args?: SelectSubset<T, ArmarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Armario.
     * @param {ArmarioDeleteArgs} args - Arguments to delete one Armario.
     * @example
     * // Delete one Armario
     * const Armario = await prisma.armario.delete({
     *   where: {
     *     // ... filter to delete one Armario
     *   }
     * })
     * 
     */
    delete<T extends ArmarioDeleteArgs>(args: SelectSubset<T, ArmarioDeleteArgs<ExtArgs>>): Prisma__ArmarioClient<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Armario.
     * @param {ArmarioUpdateArgs} args - Arguments to update one Armario.
     * @example
     * // Update one Armario
     * const armario = await prisma.armario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ArmarioUpdateArgs>(args: SelectSubset<T, ArmarioUpdateArgs<ExtArgs>>): Prisma__ArmarioClient<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Armarios.
     * @param {ArmarioDeleteManyArgs} args - Arguments to filter Armarios to delete.
     * @example
     * // Delete a few Armarios
     * const { count } = await prisma.armario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ArmarioDeleteManyArgs>(args?: SelectSubset<T, ArmarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Armarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArmarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Armarios
     * const armario = await prisma.armario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ArmarioUpdateManyArgs>(args: SelectSubset<T, ArmarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Armarios and returns the data updated in the database.
     * @param {ArmarioUpdateManyAndReturnArgs} args - Arguments to update many Armarios.
     * @example
     * // Update many Armarios
     * const armario = await prisma.armario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Armarios and only return the `id`
     * const armarioWithIdOnly = await prisma.armario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ArmarioUpdateManyAndReturnArgs>(args: SelectSubset<T, ArmarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Armario.
     * @param {ArmarioUpsertArgs} args - Arguments to update or create a Armario.
     * @example
     * // Update or create a Armario
     * const armario = await prisma.armario.upsert({
     *   create: {
     *     // ... data to create a Armario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Armario we want to update
     *   }
     * })
     */
    upsert<T extends ArmarioUpsertArgs>(args: SelectSubset<T, ArmarioUpsertArgs<ExtArgs>>): Prisma__ArmarioClient<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Armarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArmarioCountArgs} args - Arguments to filter Armarios to count.
     * @example
     * // Count the number of Armarios
     * const count = await prisma.armario.count({
     *   where: {
     *     // ... the filter for the Armarios we want to count
     *   }
     * })
    **/
    count<T extends ArmarioCountArgs>(
      args?: Subset<T, ArmarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArmarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Armario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArmarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArmarioAggregateArgs>(args: Subset<T, ArmarioAggregateArgs>): Prisma.PrismaPromise<GetArmarioAggregateType<T>>

    /**
     * Group by Armario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArmarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ArmarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ArmarioGroupByArgs['orderBy'] }
        : { orderBy?: ArmarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ArmarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArmarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Armario model
   */
  readonly fields: ArmarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Armario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ArmarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    laboratorio<T extends LaboratorioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LaboratorioDefaultArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    estantes<T extends Armario$estantesArgs<ExtArgs> = {}>(args?: Subset<T, Armario$estantesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    equipos<T extends Armario$equiposArgs<ExtArgs> = {}>(args?: Subset<T, Armario$equiposArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    libros<T extends Armario$librosArgs<ExtArgs> = {}>(args?: Subset<T, Armario$librosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Armario model
   */
  interface ArmarioFieldRefs {
    readonly id: FieldRef<"Armario", 'Int'>
    readonly nombre: FieldRef<"Armario", 'String'>
    readonly laboratorioId: FieldRef<"Armario", 'Int'>
    readonly fechaCreacion: FieldRef<"Armario", 'DateTime'>
    readonly fechaModificacion: FieldRef<"Armario", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Armario", 'String'>
    readonly usuarioModificadorId: FieldRef<"Armario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Armario findUnique
   */
  export type ArmarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    /**
     * Filter, which Armario to fetch.
     */
    where: ArmarioWhereUniqueInput
  }

  /**
   * Armario findUniqueOrThrow
   */
  export type ArmarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    /**
     * Filter, which Armario to fetch.
     */
    where: ArmarioWhereUniqueInput
  }

  /**
   * Armario findFirst
   */
  export type ArmarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    /**
     * Filter, which Armario to fetch.
     */
    where?: ArmarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Armarios to fetch.
     */
    orderBy?: ArmarioOrderByWithRelationInput | ArmarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Armarios.
     */
    cursor?: ArmarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Armarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Armarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Armarios.
     */
    distinct?: ArmarioScalarFieldEnum | ArmarioScalarFieldEnum[]
  }

  /**
   * Armario findFirstOrThrow
   */
  export type ArmarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    /**
     * Filter, which Armario to fetch.
     */
    where?: ArmarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Armarios to fetch.
     */
    orderBy?: ArmarioOrderByWithRelationInput | ArmarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Armarios.
     */
    cursor?: ArmarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Armarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Armarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Armarios.
     */
    distinct?: ArmarioScalarFieldEnum | ArmarioScalarFieldEnum[]
  }

  /**
   * Armario findMany
   */
  export type ArmarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    /**
     * Filter, which Armarios to fetch.
     */
    where?: ArmarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Armarios to fetch.
     */
    orderBy?: ArmarioOrderByWithRelationInput | ArmarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Armarios.
     */
    cursor?: ArmarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Armarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Armarios.
     */
    skip?: number
    distinct?: ArmarioScalarFieldEnum | ArmarioScalarFieldEnum[]
  }

  /**
   * Armario create
   */
  export type ArmarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Armario.
     */
    data: XOR<ArmarioCreateInput, ArmarioUncheckedCreateInput>
  }

  /**
   * Armario createMany
   */
  export type ArmarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Armarios.
     */
    data: ArmarioCreateManyInput | ArmarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Armario createManyAndReturn
   */
  export type ArmarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * The data used to create many Armarios.
     */
    data: ArmarioCreateManyInput | ArmarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Armario update
   */
  export type ArmarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Armario.
     */
    data: XOR<ArmarioUpdateInput, ArmarioUncheckedUpdateInput>
    /**
     * Choose, which Armario to update.
     */
    where: ArmarioWhereUniqueInput
  }

  /**
   * Armario updateMany
   */
  export type ArmarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Armarios.
     */
    data: XOR<ArmarioUpdateManyMutationInput, ArmarioUncheckedUpdateManyInput>
    /**
     * Filter which Armarios to update
     */
    where?: ArmarioWhereInput
    /**
     * Limit how many Armarios to update.
     */
    limit?: number
  }

  /**
   * Armario updateManyAndReturn
   */
  export type ArmarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * The data used to update Armarios.
     */
    data: XOR<ArmarioUpdateManyMutationInput, ArmarioUncheckedUpdateManyInput>
    /**
     * Filter which Armarios to update
     */
    where?: ArmarioWhereInput
    /**
     * Limit how many Armarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Armario upsert
   */
  export type ArmarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Armario to update in case it exists.
     */
    where: ArmarioWhereUniqueInput
    /**
     * In case the Armario found by the `where` argument doesn't exist, create a new Armario with this data.
     */
    create: XOR<ArmarioCreateInput, ArmarioUncheckedCreateInput>
    /**
     * In case the Armario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ArmarioUpdateInput, ArmarioUncheckedUpdateInput>
  }

  /**
   * Armario delete
   */
  export type ArmarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
    /**
     * Filter which Armario to delete.
     */
    where: ArmarioWhereUniqueInput
  }

  /**
   * Armario deleteMany
   */
  export type ArmarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Armarios to delete
     */
    where?: ArmarioWhereInput
    /**
     * Limit how many Armarios to delete.
     */
    limit?: number
  }

  /**
   * Armario.estantes
   */
  export type Armario$estantesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    where?: EstanteWhereInput
    orderBy?: EstanteOrderByWithRelationInput | EstanteOrderByWithRelationInput[]
    cursor?: EstanteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstanteScalarFieldEnum | EstanteScalarFieldEnum[]
  }

  /**
   * Armario.equipos
   */
  export type Armario$equiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    where?: EquipoWhereInput
    orderBy?: EquipoOrderByWithRelationInput | EquipoOrderByWithRelationInput[]
    cursor?: EquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipoScalarFieldEnum | EquipoScalarFieldEnum[]
  }

  /**
   * Armario.libros
   */
  export type Armario$librosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    where?: LibroWhereInput
    orderBy?: LibroOrderByWithRelationInput | LibroOrderByWithRelationInput[]
    cursor?: LibroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LibroScalarFieldEnum | LibroScalarFieldEnum[]
  }

  /**
   * Armario without action
   */
  export type ArmarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Armario
     */
    select?: ArmarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Armario
     */
    omit?: ArmarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArmarioInclude<ExtArgs> | null
  }


  /**
   * Model Estante
   */

  export type AggregateEstante = {
    _count: EstanteCountAggregateOutputType | null
    _avg: EstanteAvgAggregateOutputType | null
    _sum: EstanteSumAggregateOutputType | null
    _min: EstanteMinAggregateOutputType | null
    _max: EstanteMaxAggregateOutputType | null
  }

  export type EstanteAvgAggregateOutputType = {
    id: number | null
    armarioId: number | null
  }

  export type EstanteSumAggregateOutputType = {
    id: number | null
    armarioId: number | null
  }

  export type EstanteMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    armarioId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type EstanteMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    armarioId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type EstanteCountAggregateOutputType = {
    id: number
    nombre: number
    armarioId: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type EstanteAvgAggregateInputType = {
    id?: true
    armarioId?: true
  }

  export type EstanteSumAggregateInputType = {
    id?: true
    armarioId?: true
  }

  export type EstanteMinAggregateInputType = {
    id?: true
    nombre?: true
    armarioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type EstanteMaxAggregateInputType = {
    id?: true
    nombre?: true
    armarioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type EstanteCountAggregateInputType = {
    id?: true
    nombre?: true
    armarioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type EstanteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estante to aggregate.
     */
    where?: EstanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estantes to fetch.
     */
    orderBy?: EstanteOrderByWithRelationInput | EstanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Estantes
    **/
    _count?: true | EstanteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstanteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstanteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstanteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstanteMaxAggregateInputType
  }

  export type GetEstanteAggregateType<T extends EstanteAggregateArgs> = {
        [P in keyof T & keyof AggregateEstante]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstante[P]>
      : GetScalarType<T[P], AggregateEstante[P]>
  }




  export type EstanteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstanteWhereInput
    orderBy?: EstanteOrderByWithAggregationInput | EstanteOrderByWithAggregationInput[]
    by: EstanteScalarFieldEnum[] | EstanteScalarFieldEnum
    having?: EstanteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstanteCountAggregateInputType | true
    _avg?: EstanteAvgAggregateInputType
    _sum?: EstanteSumAggregateInputType
    _min?: EstanteMinAggregateInputType
    _max?: EstanteMaxAggregateInputType
  }

  export type EstanteGroupByOutputType = {
    id: number
    nombre: string
    armarioId: number
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: EstanteCountAggregateOutputType | null
    _avg: EstanteAvgAggregateOutputType | null
    _sum: EstanteSumAggregateOutputType | null
    _min: EstanteMinAggregateOutputType | null
    _max: EstanteMaxAggregateOutputType | null
  }

  type GetEstanteGroupByPayload<T extends EstanteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstanteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstanteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstanteGroupByOutputType[P]>
            : GetScalarType<T[P], EstanteGroupByOutputType[P]>
        }
      >
    >


  export type EstanteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    armarioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    armario?: boolean | ArmarioDefaultArgs<ExtArgs>
    equipos?: boolean | Estante$equiposArgs<ExtArgs>
    libros?: boolean | Estante$librosArgs<ExtArgs>
    _count?: boolean | EstanteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estante"]>

  export type EstanteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    armarioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    armario?: boolean | ArmarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estante"]>

  export type EstanteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    armarioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    armario?: boolean | ArmarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estante"]>

  export type EstanteSelectScalar = {
    id?: boolean
    nombre?: boolean
    armarioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type EstanteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "armarioId" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["estante"]>
  export type EstanteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    armario?: boolean | ArmarioDefaultArgs<ExtArgs>
    equipos?: boolean | Estante$equiposArgs<ExtArgs>
    libros?: boolean | Estante$librosArgs<ExtArgs>
    _count?: boolean | EstanteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstanteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    armario?: boolean | ArmarioDefaultArgs<ExtArgs>
  }
  export type EstanteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    armario?: boolean | ArmarioDefaultArgs<ExtArgs>
  }

  export type $EstantePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Estante"
    objects: {
      armario: Prisma.$ArmarioPayload<ExtArgs>
      equipos: Prisma.$EquipoPayload<ExtArgs>[]
      libros: Prisma.$LibroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      armarioId: number
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["estante"]>
    composites: {}
  }

  type EstanteGetPayload<S extends boolean | null | undefined | EstanteDefaultArgs> = $Result.GetResult<Prisma.$EstantePayload, S>

  type EstanteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstanteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstanteCountAggregateInputType | true
    }

  export interface EstanteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Estante'], meta: { name: 'Estante' } }
    /**
     * Find zero or one Estante that matches the filter.
     * @param {EstanteFindUniqueArgs} args - Arguments to find a Estante
     * @example
     * // Get one Estante
     * const estante = await prisma.estante.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstanteFindUniqueArgs>(args: SelectSubset<T, EstanteFindUniqueArgs<ExtArgs>>): Prisma__EstanteClient<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Estante that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstanteFindUniqueOrThrowArgs} args - Arguments to find a Estante
     * @example
     * // Get one Estante
     * const estante = await prisma.estante.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstanteFindUniqueOrThrowArgs>(args: SelectSubset<T, EstanteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstanteClient<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estante that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstanteFindFirstArgs} args - Arguments to find a Estante
     * @example
     * // Get one Estante
     * const estante = await prisma.estante.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstanteFindFirstArgs>(args?: SelectSubset<T, EstanteFindFirstArgs<ExtArgs>>): Prisma__EstanteClient<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estante that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstanteFindFirstOrThrowArgs} args - Arguments to find a Estante
     * @example
     * // Get one Estante
     * const estante = await prisma.estante.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstanteFindFirstOrThrowArgs>(args?: SelectSubset<T, EstanteFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstanteClient<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Estantes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstanteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estantes
     * const estantes = await prisma.estante.findMany()
     * 
     * // Get first 10 Estantes
     * const estantes = await prisma.estante.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estanteWithIdOnly = await prisma.estante.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EstanteFindManyArgs>(args?: SelectSubset<T, EstanteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Estante.
     * @param {EstanteCreateArgs} args - Arguments to create a Estante.
     * @example
     * // Create one Estante
     * const Estante = await prisma.estante.create({
     *   data: {
     *     // ... data to create a Estante
     *   }
     * })
     * 
     */
    create<T extends EstanteCreateArgs>(args: SelectSubset<T, EstanteCreateArgs<ExtArgs>>): Prisma__EstanteClient<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Estantes.
     * @param {EstanteCreateManyArgs} args - Arguments to create many Estantes.
     * @example
     * // Create many Estantes
     * const estante = await prisma.estante.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstanteCreateManyArgs>(args?: SelectSubset<T, EstanteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estantes and returns the data saved in the database.
     * @param {EstanteCreateManyAndReturnArgs} args - Arguments to create many Estantes.
     * @example
     * // Create many Estantes
     * const estante = await prisma.estante.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estantes and only return the `id`
     * const estanteWithIdOnly = await prisma.estante.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstanteCreateManyAndReturnArgs>(args?: SelectSubset<T, EstanteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Estante.
     * @param {EstanteDeleteArgs} args - Arguments to delete one Estante.
     * @example
     * // Delete one Estante
     * const Estante = await prisma.estante.delete({
     *   where: {
     *     // ... filter to delete one Estante
     *   }
     * })
     * 
     */
    delete<T extends EstanteDeleteArgs>(args: SelectSubset<T, EstanteDeleteArgs<ExtArgs>>): Prisma__EstanteClient<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Estante.
     * @param {EstanteUpdateArgs} args - Arguments to update one Estante.
     * @example
     * // Update one Estante
     * const estante = await prisma.estante.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstanteUpdateArgs>(args: SelectSubset<T, EstanteUpdateArgs<ExtArgs>>): Prisma__EstanteClient<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Estantes.
     * @param {EstanteDeleteManyArgs} args - Arguments to filter Estantes to delete.
     * @example
     * // Delete a few Estantes
     * const { count } = await prisma.estante.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstanteDeleteManyArgs>(args?: SelectSubset<T, EstanteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstanteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estantes
     * const estante = await prisma.estante.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstanteUpdateManyArgs>(args: SelectSubset<T, EstanteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estantes and returns the data updated in the database.
     * @param {EstanteUpdateManyAndReturnArgs} args - Arguments to update many Estantes.
     * @example
     * // Update many Estantes
     * const estante = await prisma.estante.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Estantes and only return the `id`
     * const estanteWithIdOnly = await prisma.estante.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstanteUpdateManyAndReturnArgs>(args: SelectSubset<T, EstanteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Estante.
     * @param {EstanteUpsertArgs} args - Arguments to update or create a Estante.
     * @example
     * // Update or create a Estante
     * const estante = await prisma.estante.upsert({
     *   create: {
     *     // ... data to create a Estante
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estante we want to update
     *   }
     * })
     */
    upsert<T extends EstanteUpsertArgs>(args: SelectSubset<T, EstanteUpsertArgs<ExtArgs>>): Prisma__EstanteClient<$Result.GetResult<Prisma.$EstantePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Estantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstanteCountArgs} args - Arguments to filter Estantes to count.
     * @example
     * // Count the number of Estantes
     * const count = await prisma.estante.count({
     *   where: {
     *     // ... the filter for the Estantes we want to count
     *   }
     * })
    **/
    count<T extends EstanteCountArgs>(
      args?: Subset<T, EstanteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstanteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstanteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstanteAggregateArgs>(args: Subset<T, EstanteAggregateArgs>): Prisma.PrismaPromise<GetEstanteAggregateType<T>>

    /**
     * Group by Estante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstanteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstanteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstanteGroupByArgs['orderBy'] }
        : { orderBy?: EstanteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstanteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstanteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Estante model
   */
  readonly fields: EstanteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Estante.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstanteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    armario<T extends ArmarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ArmarioDefaultArgs<ExtArgs>>): Prisma__ArmarioClient<$Result.GetResult<Prisma.$ArmarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    equipos<T extends Estante$equiposArgs<ExtArgs> = {}>(args?: Subset<T, Estante$equiposArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    libros<T extends Estante$librosArgs<ExtArgs> = {}>(args?: Subset<T, Estante$librosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Estante model
   */
  interface EstanteFieldRefs {
    readonly id: FieldRef<"Estante", 'Int'>
    readonly nombre: FieldRef<"Estante", 'String'>
    readonly armarioId: FieldRef<"Estante", 'Int'>
    readonly fechaCreacion: FieldRef<"Estante", 'DateTime'>
    readonly fechaModificacion: FieldRef<"Estante", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Estante", 'String'>
    readonly usuarioModificadorId: FieldRef<"Estante", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Estante findUnique
   */
  export type EstanteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    /**
     * Filter, which Estante to fetch.
     */
    where: EstanteWhereUniqueInput
  }

  /**
   * Estante findUniqueOrThrow
   */
  export type EstanteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    /**
     * Filter, which Estante to fetch.
     */
    where: EstanteWhereUniqueInput
  }

  /**
   * Estante findFirst
   */
  export type EstanteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    /**
     * Filter, which Estante to fetch.
     */
    where?: EstanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estantes to fetch.
     */
    orderBy?: EstanteOrderByWithRelationInput | EstanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estantes.
     */
    cursor?: EstanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estantes.
     */
    distinct?: EstanteScalarFieldEnum | EstanteScalarFieldEnum[]
  }

  /**
   * Estante findFirstOrThrow
   */
  export type EstanteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    /**
     * Filter, which Estante to fetch.
     */
    where?: EstanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estantes to fetch.
     */
    orderBy?: EstanteOrderByWithRelationInput | EstanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estantes.
     */
    cursor?: EstanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estantes.
     */
    distinct?: EstanteScalarFieldEnum | EstanteScalarFieldEnum[]
  }

  /**
   * Estante findMany
   */
  export type EstanteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    /**
     * Filter, which Estantes to fetch.
     */
    where?: EstanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estantes to fetch.
     */
    orderBy?: EstanteOrderByWithRelationInput | EstanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Estantes.
     */
    cursor?: EstanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estantes.
     */
    skip?: number
    distinct?: EstanteScalarFieldEnum | EstanteScalarFieldEnum[]
  }

  /**
   * Estante create
   */
  export type EstanteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    /**
     * The data needed to create a Estante.
     */
    data: XOR<EstanteCreateInput, EstanteUncheckedCreateInput>
  }

  /**
   * Estante createMany
   */
  export type EstanteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Estantes.
     */
    data: EstanteCreateManyInput | EstanteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Estante createManyAndReturn
   */
  export type EstanteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * The data used to create many Estantes.
     */
    data: EstanteCreateManyInput | EstanteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Estante update
   */
  export type EstanteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    /**
     * The data needed to update a Estante.
     */
    data: XOR<EstanteUpdateInput, EstanteUncheckedUpdateInput>
    /**
     * Choose, which Estante to update.
     */
    where: EstanteWhereUniqueInput
  }

  /**
   * Estante updateMany
   */
  export type EstanteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Estantes.
     */
    data: XOR<EstanteUpdateManyMutationInput, EstanteUncheckedUpdateManyInput>
    /**
     * Filter which Estantes to update
     */
    where?: EstanteWhereInput
    /**
     * Limit how many Estantes to update.
     */
    limit?: number
  }

  /**
   * Estante updateManyAndReturn
   */
  export type EstanteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * The data used to update Estantes.
     */
    data: XOR<EstanteUpdateManyMutationInput, EstanteUncheckedUpdateManyInput>
    /**
     * Filter which Estantes to update
     */
    where?: EstanteWhereInput
    /**
     * Limit how many Estantes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Estante upsert
   */
  export type EstanteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    /**
     * The filter to search for the Estante to update in case it exists.
     */
    where: EstanteWhereUniqueInput
    /**
     * In case the Estante found by the `where` argument doesn't exist, create a new Estante with this data.
     */
    create: XOR<EstanteCreateInput, EstanteUncheckedCreateInput>
    /**
     * In case the Estante was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstanteUpdateInput, EstanteUncheckedUpdateInput>
  }

  /**
   * Estante delete
   */
  export type EstanteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
    /**
     * Filter which Estante to delete.
     */
    where: EstanteWhereUniqueInput
  }

  /**
   * Estante deleteMany
   */
  export type EstanteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estantes to delete
     */
    where?: EstanteWhereInput
    /**
     * Limit how many Estantes to delete.
     */
    limit?: number
  }

  /**
   * Estante.equipos
   */
  export type Estante$equiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    where?: EquipoWhereInput
    orderBy?: EquipoOrderByWithRelationInput | EquipoOrderByWithRelationInput[]
    cursor?: EquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipoScalarFieldEnum | EquipoScalarFieldEnum[]
  }

  /**
   * Estante.libros
   */
  export type Estante$librosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    where?: LibroWhereInput
    orderBy?: LibroOrderByWithRelationInput | LibroOrderByWithRelationInput[]
    cursor?: LibroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LibroScalarFieldEnum | LibroScalarFieldEnum[]
  }

  /**
   * Estante without action
   */
  export type EstanteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estante
     */
    select?: EstanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estante
     */
    omit?: EstanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstanteInclude<ExtArgs> | null
  }


  /**
   * Model Software
   */

  export type AggregateSoftware = {
    _count: SoftwareCountAggregateOutputType | null
    _avg: SoftwareAvgAggregateOutputType | null
    _sum: SoftwareSumAggregateOutputType | null
    _min: SoftwareMinAggregateOutputType | null
    _max: SoftwareMaxAggregateOutputType | null
  }

  export type SoftwareAvgAggregateOutputType = {
    id: number | null
  }

  export type SoftwareSumAggregateOutputType = {
    id: number | null
  }

  export type SoftwareMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    version: string | null
    estado: string | null
    windows: boolean | null
    linux: boolean | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type SoftwareMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    version: string | null
    estado: string | null
    windows: boolean | null
    linux: boolean | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type SoftwareCountAggregateOutputType = {
    id: number
    nombre: number
    version: number
    estado: number
    windows: number
    linux: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type SoftwareAvgAggregateInputType = {
    id?: true
  }

  export type SoftwareSumAggregateInputType = {
    id?: true
  }

  export type SoftwareMinAggregateInputType = {
    id?: true
    nombre?: true
    version?: true
    estado?: true
    windows?: true
    linux?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type SoftwareMaxAggregateInputType = {
    id?: true
    nombre?: true
    version?: true
    estado?: true
    windows?: true
    linux?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type SoftwareCountAggregateInputType = {
    id?: true
    nombre?: true
    version?: true
    estado?: true
    windows?: true
    linux?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type SoftwareAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Software to aggregate.
     */
    where?: SoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Software to fetch.
     */
    orderBy?: SoftwareOrderByWithRelationInput | SoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Software from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Software.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Software
    **/
    _count?: true | SoftwareCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SoftwareAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SoftwareSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SoftwareMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SoftwareMaxAggregateInputType
  }

  export type GetSoftwareAggregateType<T extends SoftwareAggregateArgs> = {
        [P in keyof T & keyof AggregateSoftware]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSoftware[P]>
      : GetScalarType<T[P], AggregateSoftware[P]>
  }




  export type SoftwareGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareWhereInput
    orderBy?: SoftwareOrderByWithAggregationInput | SoftwareOrderByWithAggregationInput[]
    by: SoftwareScalarFieldEnum[] | SoftwareScalarFieldEnum
    having?: SoftwareScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SoftwareCountAggregateInputType | true
    _avg?: SoftwareAvgAggregateInputType
    _sum?: SoftwareSumAggregateInputType
    _min?: SoftwareMinAggregateInputType
    _max?: SoftwareMaxAggregateInputType
  }

  export type SoftwareGroupByOutputType = {
    id: number
    nombre: string
    version: string
    estado: string
    windows: boolean
    linux: boolean
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: SoftwareCountAggregateOutputType | null
    _avg: SoftwareAvgAggregateOutputType | null
    _sum: SoftwareSumAggregateOutputType | null
    _min: SoftwareMinAggregateOutputType | null
    _max: SoftwareMaxAggregateOutputType | null
  }

  type GetSoftwareGroupByPayload<T extends SoftwareGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SoftwareGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SoftwareGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SoftwareGroupByOutputType[P]>
            : GetScalarType<T[P], SoftwareGroupByOutputType[P]>
        }
      >
    >


  export type SoftwareSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    version?: boolean
    estado?: boolean
    windows?: boolean
    linux?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    laboratorios?: boolean | Software$laboratoriosArgs<ExtArgs>
    _count?: boolean | SoftwareCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["software"]>

  export type SoftwareSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    version?: boolean
    estado?: boolean
    windows?: boolean
    linux?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }, ExtArgs["result"]["software"]>

  export type SoftwareSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    version?: boolean
    estado?: boolean
    windows?: boolean
    linux?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }, ExtArgs["result"]["software"]>

  export type SoftwareSelectScalar = {
    id?: boolean
    nombre?: boolean
    version?: boolean
    estado?: boolean
    windows?: boolean
    linux?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type SoftwareOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "version" | "estado" | "windows" | "linux" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["software"]>
  export type SoftwareInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    laboratorios?: boolean | Software$laboratoriosArgs<ExtArgs>
    _count?: boolean | SoftwareCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SoftwareIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SoftwareIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SoftwarePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Software"
    objects: {
      laboratorios: Prisma.$SoftwareLaboratorioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      version: string
      estado: string
      windows: boolean
      linux: boolean
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["software"]>
    composites: {}
  }

  type SoftwareGetPayload<S extends boolean | null | undefined | SoftwareDefaultArgs> = $Result.GetResult<Prisma.$SoftwarePayload, S>

  type SoftwareCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SoftwareFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SoftwareCountAggregateInputType | true
    }

  export interface SoftwareDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Software'], meta: { name: 'Software' } }
    /**
     * Find zero or one Software that matches the filter.
     * @param {SoftwareFindUniqueArgs} args - Arguments to find a Software
     * @example
     * // Get one Software
     * const software = await prisma.software.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SoftwareFindUniqueArgs>(args: SelectSubset<T, SoftwareFindUniqueArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Software that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SoftwareFindUniqueOrThrowArgs} args - Arguments to find a Software
     * @example
     * // Get one Software
     * const software = await prisma.software.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SoftwareFindUniqueOrThrowArgs>(args: SelectSubset<T, SoftwareFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Software that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareFindFirstArgs} args - Arguments to find a Software
     * @example
     * // Get one Software
     * const software = await prisma.software.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SoftwareFindFirstArgs>(args?: SelectSubset<T, SoftwareFindFirstArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Software that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareFindFirstOrThrowArgs} args - Arguments to find a Software
     * @example
     * // Get one Software
     * const software = await prisma.software.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SoftwareFindFirstOrThrowArgs>(args?: SelectSubset<T, SoftwareFindFirstOrThrowArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Software that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Software
     * const software = await prisma.software.findMany()
     * 
     * // Get first 10 Software
     * const software = await prisma.software.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const softwareWithIdOnly = await prisma.software.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SoftwareFindManyArgs>(args?: SelectSubset<T, SoftwareFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Software.
     * @param {SoftwareCreateArgs} args - Arguments to create a Software.
     * @example
     * // Create one Software
     * const Software = await prisma.software.create({
     *   data: {
     *     // ... data to create a Software
     *   }
     * })
     * 
     */
    create<T extends SoftwareCreateArgs>(args: SelectSubset<T, SoftwareCreateArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Software.
     * @param {SoftwareCreateManyArgs} args - Arguments to create many Software.
     * @example
     * // Create many Software
     * const software = await prisma.software.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SoftwareCreateManyArgs>(args?: SelectSubset<T, SoftwareCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Software and returns the data saved in the database.
     * @param {SoftwareCreateManyAndReturnArgs} args - Arguments to create many Software.
     * @example
     * // Create many Software
     * const software = await prisma.software.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Software and only return the `id`
     * const softwareWithIdOnly = await prisma.software.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SoftwareCreateManyAndReturnArgs>(args?: SelectSubset<T, SoftwareCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Software.
     * @param {SoftwareDeleteArgs} args - Arguments to delete one Software.
     * @example
     * // Delete one Software
     * const Software = await prisma.software.delete({
     *   where: {
     *     // ... filter to delete one Software
     *   }
     * })
     * 
     */
    delete<T extends SoftwareDeleteArgs>(args: SelectSubset<T, SoftwareDeleteArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Software.
     * @param {SoftwareUpdateArgs} args - Arguments to update one Software.
     * @example
     * // Update one Software
     * const software = await prisma.software.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SoftwareUpdateArgs>(args: SelectSubset<T, SoftwareUpdateArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Software.
     * @param {SoftwareDeleteManyArgs} args - Arguments to filter Software to delete.
     * @example
     * // Delete a few Software
     * const { count } = await prisma.software.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SoftwareDeleteManyArgs>(args?: SelectSubset<T, SoftwareDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Software.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Software
     * const software = await prisma.software.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SoftwareUpdateManyArgs>(args: SelectSubset<T, SoftwareUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Software and returns the data updated in the database.
     * @param {SoftwareUpdateManyAndReturnArgs} args - Arguments to update many Software.
     * @example
     * // Update many Software
     * const software = await prisma.software.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Software and only return the `id`
     * const softwareWithIdOnly = await prisma.software.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SoftwareUpdateManyAndReturnArgs>(args: SelectSubset<T, SoftwareUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Software.
     * @param {SoftwareUpsertArgs} args - Arguments to update or create a Software.
     * @example
     * // Update or create a Software
     * const software = await prisma.software.upsert({
     *   create: {
     *     // ... data to create a Software
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Software we want to update
     *   }
     * })
     */
    upsert<T extends SoftwareUpsertArgs>(args: SelectSubset<T, SoftwareUpsertArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Software.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareCountArgs} args - Arguments to filter Software to count.
     * @example
     * // Count the number of Software
     * const count = await prisma.software.count({
     *   where: {
     *     // ... the filter for the Software we want to count
     *   }
     * })
    **/
    count<T extends SoftwareCountArgs>(
      args?: Subset<T, SoftwareCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SoftwareCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Software.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SoftwareAggregateArgs>(args: Subset<T, SoftwareAggregateArgs>): Prisma.PrismaPromise<GetSoftwareAggregateType<T>>

    /**
     * Group by Software.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SoftwareGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SoftwareGroupByArgs['orderBy'] }
        : { orderBy?: SoftwareGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SoftwareGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSoftwareGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Software model
   */
  readonly fields: SoftwareFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Software.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SoftwareClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    laboratorios<T extends Software$laboratoriosArgs<ExtArgs> = {}>(args?: Subset<T, Software$laboratoriosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Software model
   */
  interface SoftwareFieldRefs {
    readonly id: FieldRef<"Software", 'Int'>
    readonly nombre: FieldRef<"Software", 'String'>
    readonly version: FieldRef<"Software", 'String'>
    readonly estado: FieldRef<"Software", 'String'>
    readonly windows: FieldRef<"Software", 'Boolean'>
    readonly linux: FieldRef<"Software", 'Boolean'>
    readonly fechaCreacion: FieldRef<"Software", 'DateTime'>
    readonly fechaModificacion: FieldRef<"Software", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Software", 'String'>
    readonly usuarioModificadorId: FieldRef<"Software", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Software findUnique
   */
  export type SoftwareFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter, which Software to fetch.
     */
    where: SoftwareWhereUniqueInput
  }

  /**
   * Software findUniqueOrThrow
   */
  export type SoftwareFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter, which Software to fetch.
     */
    where: SoftwareWhereUniqueInput
  }

  /**
   * Software findFirst
   */
  export type SoftwareFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter, which Software to fetch.
     */
    where?: SoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Software to fetch.
     */
    orderBy?: SoftwareOrderByWithRelationInput | SoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Software.
     */
    cursor?: SoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Software from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Software.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Software.
     */
    distinct?: SoftwareScalarFieldEnum | SoftwareScalarFieldEnum[]
  }

  /**
   * Software findFirstOrThrow
   */
  export type SoftwareFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter, which Software to fetch.
     */
    where?: SoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Software to fetch.
     */
    orderBy?: SoftwareOrderByWithRelationInput | SoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Software.
     */
    cursor?: SoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Software from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Software.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Software.
     */
    distinct?: SoftwareScalarFieldEnum | SoftwareScalarFieldEnum[]
  }

  /**
   * Software findMany
   */
  export type SoftwareFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter, which Software to fetch.
     */
    where?: SoftwareWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Software to fetch.
     */
    orderBy?: SoftwareOrderByWithRelationInput | SoftwareOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Software.
     */
    cursor?: SoftwareWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Software from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Software.
     */
    skip?: number
    distinct?: SoftwareScalarFieldEnum | SoftwareScalarFieldEnum[]
  }

  /**
   * Software create
   */
  export type SoftwareCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * The data needed to create a Software.
     */
    data: XOR<SoftwareCreateInput, SoftwareUncheckedCreateInput>
  }

  /**
   * Software createMany
   */
  export type SoftwareCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Software.
     */
    data: SoftwareCreateManyInput | SoftwareCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Software createManyAndReturn
   */
  export type SoftwareCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * The data used to create many Software.
     */
    data: SoftwareCreateManyInput | SoftwareCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Software update
   */
  export type SoftwareUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * The data needed to update a Software.
     */
    data: XOR<SoftwareUpdateInput, SoftwareUncheckedUpdateInput>
    /**
     * Choose, which Software to update.
     */
    where: SoftwareWhereUniqueInput
  }

  /**
   * Software updateMany
   */
  export type SoftwareUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Software.
     */
    data: XOR<SoftwareUpdateManyMutationInput, SoftwareUncheckedUpdateManyInput>
    /**
     * Filter which Software to update
     */
    where?: SoftwareWhereInput
    /**
     * Limit how many Software to update.
     */
    limit?: number
  }

  /**
   * Software updateManyAndReturn
   */
  export type SoftwareUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * The data used to update Software.
     */
    data: XOR<SoftwareUpdateManyMutationInput, SoftwareUncheckedUpdateManyInput>
    /**
     * Filter which Software to update
     */
    where?: SoftwareWhereInput
    /**
     * Limit how many Software to update.
     */
    limit?: number
  }

  /**
   * Software upsert
   */
  export type SoftwareUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * The filter to search for the Software to update in case it exists.
     */
    where: SoftwareWhereUniqueInput
    /**
     * In case the Software found by the `where` argument doesn't exist, create a new Software with this data.
     */
    create: XOR<SoftwareCreateInput, SoftwareUncheckedCreateInput>
    /**
     * In case the Software was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SoftwareUpdateInput, SoftwareUncheckedUpdateInput>
  }

  /**
   * Software delete
   */
  export type SoftwareDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
    /**
     * Filter which Software to delete.
     */
    where: SoftwareWhereUniqueInput
  }

  /**
   * Software deleteMany
   */
  export type SoftwareDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Software to delete
     */
    where?: SoftwareWhereInput
    /**
     * Limit how many Software to delete.
     */
    limit?: number
  }

  /**
   * Software.laboratorios
   */
  export type Software$laboratoriosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
    where?: SoftwareLaboratorioWhereInput
    orderBy?: SoftwareLaboratorioOrderByWithRelationInput | SoftwareLaboratorioOrderByWithRelationInput[]
    cursor?: SoftwareLaboratorioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SoftwareLaboratorioScalarFieldEnum | SoftwareLaboratorioScalarFieldEnum[]
  }

  /**
   * Software without action
   */
  export type SoftwareDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Software
     */
    select?: SoftwareSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Software
     */
    omit?: SoftwareOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareInclude<ExtArgs> | null
  }


  /**
   * Model SoftwareLaboratorio
   */

  export type AggregateSoftwareLaboratorio = {
    _count: SoftwareLaboratorioCountAggregateOutputType | null
    _avg: SoftwareLaboratorioAvgAggregateOutputType | null
    _sum: SoftwareLaboratorioSumAggregateOutputType | null
    _min: SoftwareLaboratorioMinAggregateOutputType | null
    _max: SoftwareLaboratorioMaxAggregateOutputType | null
  }

  export type SoftwareLaboratorioAvgAggregateOutputType = {
    softwareId: number | null
    laboratorioId: number | null
  }

  export type SoftwareLaboratorioSumAggregateOutputType = {
    softwareId: number | null
    laboratorioId: number | null
  }

  export type SoftwareLaboratorioMinAggregateOutputType = {
    softwareId: number | null
    laboratorioId: number | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type SoftwareLaboratorioMaxAggregateOutputType = {
    softwareId: number | null
    laboratorioId: number | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type SoftwareLaboratorioCountAggregateOutputType = {
    softwareId: number
    laboratorioId: number
    fechaCreacion: number
    usuarioCreadorId: number
    _all: number
  }


  export type SoftwareLaboratorioAvgAggregateInputType = {
    softwareId?: true
    laboratorioId?: true
  }

  export type SoftwareLaboratorioSumAggregateInputType = {
    softwareId?: true
    laboratorioId?: true
  }

  export type SoftwareLaboratorioMinAggregateInputType = {
    softwareId?: true
    laboratorioId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type SoftwareLaboratorioMaxAggregateInputType = {
    softwareId?: true
    laboratorioId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type SoftwareLaboratorioCountAggregateInputType = {
    softwareId?: true
    laboratorioId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    _all?: true
  }

  export type SoftwareLaboratorioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SoftwareLaboratorio to aggregate.
     */
    where?: SoftwareLaboratorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareLaboratorios to fetch.
     */
    orderBy?: SoftwareLaboratorioOrderByWithRelationInput | SoftwareLaboratorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SoftwareLaboratorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareLaboratorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareLaboratorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SoftwareLaboratorios
    **/
    _count?: true | SoftwareLaboratorioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SoftwareLaboratorioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SoftwareLaboratorioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SoftwareLaboratorioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SoftwareLaboratorioMaxAggregateInputType
  }

  export type GetSoftwareLaboratorioAggregateType<T extends SoftwareLaboratorioAggregateArgs> = {
        [P in keyof T & keyof AggregateSoftwareLaboratorio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSoftwareLaboratorio[P]>
      : GetScalarType<T[P], AggregateSoftwareLaboratorio[P]>
  }




  export type SoftwareLaboratorioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareLaboratorioWhereInput
    orderBy?: SoftwareLaboratorioOrderByWithAggregationInput | SoftwareLaboratorioOrderByWithAggregationInput[]
    by: SoftwareLaboratorioScalarFieldEnum[] | SoftwareLaboratorioScalarFieldEnum
    having?: SoftwareLaboratorioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SoftwareLaboratorioCountAggregateInputType | true
    _avg?: SoftwareLaboratorioAvgAggregateInputType
    _sum?: SoftwareLaboratorioSumAggregateInputType
    _min?: SoftwareLaboratorioMinAggregateInputType
    _max?: SoftwareLaboratorioMaxAggregateInputType
  }

  export type SoftwareLaboratorioGroupByOutputType = {
    softwareId: number
    laboratorioId: number
    fechaCreacion: Date
    usuarioCreadorId: string
    _count: SoftwareLaboratorioCountAggregateOutputType | null
    _avg: SoftwareLaboratorioAvgAggregateOutputType | null
    _sum: SoftwareLaboratorioSumAggregateOutputType | null
    _min: SoftwareLaboratorioMinAggregateOutputType | null
    _max: SoftwareLaboratorioMaxAggregateOutputType | null
  }

  type GetSoftwareLaboratorioGroupByPayload<T extends SoftwareLaboratorioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SoftwareLaboratorioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SoftwareLaboratorioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SoftwareLaboratorioGroupByOutputType[P]>
            : GetScalarType<T[P], SoftwareLaboratorioGroupByOutputType[P]>
        }
      >
    >


  export type SoftwareLaboratorioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    softwareId?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareLaboratorio"]>

  export type SoftwareLaboratorioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    softwareId?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareLaboratorio"]>

  export type SoftwareLaboratorioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    softwareId?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareLaboratorio"]>

  export type SoftwareLaboratorioSelectScalar = {
    softwareId?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }

  export type SoftwareLaboratorioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"softwareId" | "laboratorioId" | "fechaCreacion" | "usuarioCreadorId", ExtArgs["result"]["softwareLaboratorio"]>
  export type SoftwareLaboratorioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
  }
  export type SoftwareLaboratorioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
  }
  export type SoftwareLaboratorioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    software?: boolean | SoftwareDefaultArgs<ExtArgs>
    laboratorio?: boolean | LaboratorioDefaultArgs<ExtArgs>
  }

  export type $SoftwareLaboratorioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SoftwareLaboratorio"
    objects: {
      software: Prisma.$SoftwarePayload<ExtArgs>
      laboratorio: Prisma.$LaboratorioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      softwareId: number
      laboratorioId: number
      fechaCreacion: Date
      usuarioCreadorId: string
    }, ExtArgs["result"]["softwareLaboratorio"]>
    composites: {}
  }

  type SoftwareLaboratorioGetPayload<S extends boolean | null | undefined | SoftwareLaboratorioDefaultArgs> = $Result.GetResult<Prisma.$SoftwareLaboratorioPayload, S>

  type SoftwareLaboratorioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SoftwareLaboratorioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SoftwareLaboratorioCountAggregateInputType | true
    }

  export interface SoftwareLaboratorioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SoftwareLaboratorio'], meta: { name: 'SoftwareLaboratorio' } }
    /**
     * Find zero or one SoftwareLaboratorio that matches the filter.
     * @param {SoftwareLaboratorioFindUniqueArgs} args - Arguments to find a SoftwareLaboratorio
     * @example
     * // Get one SoftwareLaboratorio
     * const softwareLaboratorio = await prisma.softwareLaboratorio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SoftwareLaboratorioFindUniqueArgs>(args: SelectSubset<T, SoftwareLaboratorioFindUniqueArgs<ExtArgs>>): Prisma__SoftwareLaboratorioClient<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SoftwareLaboratorio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SoftwareLaboratorioFindUniqueOrThrowArgs} args - Arguments to find a SoftwareLaboratorio
     * @example
     * // Get one SoftwareLaboratorio
     * const softwareLaboratorio = await prisma.softwareLaboratorio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SoftwareLaboratorioFindUniqueOrThrowArgs>(args: SelectSubset<T, SoftwareLaboratorioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SoftwareLaboratorioClient<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SoftwareLaboratorio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareLaboratorioFindFirstArgs} args - Arguments to find a SoftwareLaboratorio
     * @example
     * // Get one SoftwareLaboratorio
     * const softwareLaboratorio = await prisma.softwareLaboratorio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SoftwareLaboratorioFindFirstArgs>(args?: SelectSubset<T, SoftwareLaboratorioFindFirstArgs<ExtArgs>>): Prisma__SoftwareLaboratorioClient<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SoftwareLaboratorio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareLaboratorioFindFirstOrThrowArgs} args - Arguments to find a SoftwareLaboratorio
     * @example
     * // Get one SoftwareLaboratorio
     * const softwareLaboratorio = await prisma.softwareLaboratorio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SoftwareLaboratorioFindFirstOrThrowArgs>(args?: SelectSubset<T, SoftwareLaboratorioFindFirstOrThrowArgs<ExtArgs>>): Prisma__SoftwareLaboratorioClient<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SoftwareLaboratorios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareLaboratorioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SoftwareLaboratorios
     * const softwareLaboratorios = await prisma.softwareLaboratorio.findMany()
     * 
     * // Get first 10 SoftwareLaboratorios
     * const softwareLaboratorios = await prisma.softwareLaboratorio.findMany({ take: 10 })
     * 
     * // Only select the `softwareId`
     * const softwareLaboratorioWithSoftwareIdOnly = await prisma.softwareLaboratorio.findMany({ select: { softwareId: true } })
     * 
     */
    findMany<T extends SoftwareLaboratorioFindManyArgs>(args?: SelectSubset<T, SoftwareLaboratorioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SoftwareLaboratorio.
     * @param {SoftwareLaboratorioCreateArgs} args - Arguments to create a SoftwareLaboratorio.
     * @example
     * // Create one SoftwareLaboratorio
     * const SoftwareLaboratorio = await prisma.softwareLaboratorio.create({
     *   data: {
     *     // ... data to create a SoftwareLaboratorio
     *   }
     * })
     * 
     */
    create<T extends SoftwareLaboratorioCreateArgs>(args: SelectSubset<T, SoftwareLaboratorioCreateArgs<ExtArgs>>): Prisma__SoftwareLaboratorioClient<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SoftwareLaboratorios.
     * @param {SoftwareLaboratorioCreateManyArgs} args - Arguments to create many SoftwareLaboratorios.
     * @example
     * // Create many SoftwareLaboratorios
     * const softwareLaboratorio = await prisma.softwareLaboratorio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SoftwareLaboratorioCreateManyArgs>(args?: SelectSubset<T, SoftwareLaboratorioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SoftwareLaboratorios and returns the data saved in the database.
     * @param {SoftwareLaboratorioCreateManyAndReturnArgs} args - Arguments to create many SoftwareLaboratorios.
     * @example
     * // Create many SoftwareLaboratorios
     * const softwareLaboratorio = await prisma.softwareLaboratorio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SoftwareLaboratorios and only return the `softwareId`
     * const softwareLaboratorioWithSoftwareIdOnly = await prisma.softwareLaboratorio.createManyAndReturn({
     *   select: { softwareId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SoftwareLaboratorioCreateManyAndReturnArgs>(args?: SelectSubset<T, SoftwareLaboratorioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SoftwareLaboratorio.
     * @param {SoftwareLaboratorioDeleteArgs} args - Arguments to delete one SoftwareLaboratorio.
     * @example
     * // Delete one SoftwareLaboratorio
     * const SoftwareLaboratorio = await prisma.softwareLaboratorio.delete({
     *   where: {
     *     // ... filter to delete one SoftwareLaboratorio
     *   }
     * })
     * 
     */
    delete<T extends SoftwareLaboratorioDeleteArgs>(args: SelectSubset<T, SoftwareLaboratorioDeleteArgs<ExtArgs>>): Prisma__SoftwareLaboratorioClient<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SoftwareLaboratorio.
     * @param {SoftwareLaboratorioUpdateArgs} args - Arguments to update one SoftwareLaboratorio.
     * @example
     * // Update one SoftwareLaboratorio
     * const softwareLaboratorio = await prisma.softwareLaboratorio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SoftwareLaboratorioUpdateArgs>(args: SelectSubset<T, SoftwareLaboratorioUpdateArgs<ExtArgs>>): Prisma__SoftwareLaboratorioClient<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SoftwareLaboratorios.
     * @param {SoftwareLaboratorioDeleteManyArgs} args - Arguments to filter SoftwareLaboratorios to delete.
     * @example
     * // Delete a few SoftwareLaboratorios
     * const { count } = await prisma.softwareLaboratorio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SoftwareLaboratorioDeleteManyArgs>(args?: SelectSubset<T, SoftwareLaboratorioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SoftwareLaboratorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareLaboratorioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SoftwareLaboratorios
     * const softwareLaboratorio = await prisma.softwareLaboratorio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SoftwareLaboratorioUpdateManyArgs>(args: SelectSubset<T, SoftwareLaboratorioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SoftwareLaboratorios and returns the data updated in the database.
     * @param {SoftwareLaboratorioUpdateManyAndReturnArgs} args - Arguments to update many SoftwareLaboratorios.
     * @example
     * // Update many SoftwareLaboratorios
     * const softwareLaboratorio = await prisma.softwareLaboratorio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SoftwareLaboratorios and only return the `softwareId`
     * const softwareLaboratorioWithSoftwareIdOnly = await prisma.softwareLaboratorio.updateManyAndReturn({
     *   select: { softwareId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SoftwareLaboratorioUpdateManyAndReturnArgs>(args: SelectSubset<T, SoftwareLaboratorioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SoftwareLaboratorio.
     * @param {SoftwareLaboratorioUpsertArgs} args - Arguments to update or create a SoftwareLaboratorio.
     * @example
     * // Update or create a SoftwareLaboratorio
     * const softwareLaboratorio = await prisma.softwareLaboratorio.upsert({
     *   create: {
     *     // ... data to create a SoftwareLaboratorio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SoftwareLaboratorio we want to update
     *   }
     * })
     */
    upsert<T extends SoftwareLaboratorioUpsertArgs>(args: SelectSubset<T, SoftwareLaboratorioUpsertArgs<ExtArgs>>): Prisma__SoftwareLaboratorioClient<$Result.GetResult<Prisma.$SoftwareLaboratorioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SoftwareLaboratorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareLaboratorioCountArgs} args - Arguments to filter SoftwareLaboratorios to count.
     * @example
     * // Count the number of SoftwareLaboratorios
     * const count = await prisma.softwareLaboratorio.count({
     *   where: {
     *     // ... the filter for the SoftwareLaboratorios we want to count
     *   }
     * })
    **/
    count<T extends SoftwareLaboratorioCountArgs>(
      args?: Subset<T, SoftwareLaboratorioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SoftwareLaboratorioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SoftwareLaboratorio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareLaboratorioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SoftwareLaboratorioAggregateArgs>(args: Subset<T, SoftwareLaboratorioAggregateArgs>): Prisma.PrismaPromise<GetSoftwareLaboratorioAggregateType<T>>

    /**
     * Group by SoftwareLaboratorio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareLaboratorioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SoftwareLaboratorioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SoftwareLaboratorioGroupByArgs['orderBy'] }
        : { orderBy?: SoftwareLaboratorioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SoftwareLaboratorioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSoftwareLaboratorioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SoftwareLaboratorio model
   */
  readonly fields: SoftwareLaboratorioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SoftwareLaboratorio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SoftwareLaboratorioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    software<T extends SoftwareDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SoftwareDefaultArgs<ExtArgs>>): Prisma__SoftwareClient<$Result.GetResult<Prisma.$SoftwarePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    laboratorio<T extends LaboratorioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LaboratorioDefaultArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SoftwareLaboratorio model
   */
  interface SoftwareLaboratorioFieldRefs {
    readonly softwareId: FieldRef<"SoftwareLaboratorio", 'Int'>
    readonly laboratorioId: FieldRef<"SoftwareLaboratorio", 'Int'>
    readonly fechaCreacion: FieldRef<"SoftwareLaboratorio", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"SoftwareLaboratorio", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SoftwareLaboratorio findUnique
   */
  export type SoftwareLaboratorioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareLaboratorio to fetch.
     */
    where: SoftwareLaboratorioWhereUniqueInput
  }

  /**
   * SoftwareLaboratorio findUniqueOrThrow
   */
  export type SoftwareLaboratorioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareLaboratorio to fetch.
     */
    where: SoftwareLaboratorioWhereUniqueInput
  }

  /**
   * SoftwareLaboratorio findFirst
   */
  export type SoftwareLaboratorioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareLaboratorio to fetch.
     */
    where?: SoftwareLaboratorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareLaboratorios to fetch.
     */
    orderBy?: SoftwareLaboratorioOrderByWithRelationInput | SoftwareLaboratorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SoftwareLaboratorios.
     */
    cursor?: SoftwareLaboratorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareLaboratorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareLaboratorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SoftwareLaboratorios.
     */
    distinct?: SoftwareLaboratorioScalarFieldEnum | SoftwareLaboratorioScalarFieldEnum[]
  }

  /**
   * SoftwareLaboratorio findFirstOrThrow
   */
  export type SoftwareLaboratorioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareLaboratorio to fetch.
     */
    where?: SoftwareLaboratorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareLaboratorios to fetch.
     */
    orderBy?: SoftwareLaboratorioOrderByWithRelationInput | SoftwareLaboratorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SoftwareLaboratorios.
     */
    cursor?: SoftwareLaboratorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareLaboratorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareLaboratorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SoftwareLaboratorios.
     */
    distinct?: SoftwareLaboratorioScalarFieldEnum | SoftwareLaboratorioScalarFieldEnum[]
  }

  /**
   * SoftwareLaboratorio findMany
   */
  export type SoftwareLaboratorioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareLaboratorios to fetch.
     */
    where?: SoftwareLaboratorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareLaboratorios to fetch.
     */
    orderBy?: SoftwareLaboratorioOrderByWithRelationInput | SoftwareLaboratorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SoftwareLaboratorios.
     */
    cursor?: SoftwareLaboratorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareLaboratorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareLaboratorios.
     */
    skip?: number
    distinct?: SoftwareLaboratorioScalarFieldEnum | SoftwareLaboratorioScalarFieldEnum[]
  }

  /**
   * SoftwareLaboratorio create
   */
  export type SoftwareLaboratorioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
    /**
     * The data needed to create a SoftwareLaboratorio.
     */
    data: XOR<SoftwareLaboratorioCreateInput, SoftwareLaboratorioUncheckedCreateInput>
  }

  /**
   * SoftwareLaboratorio createMany
   */
  export type SoftwareLaboratorioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SoftwareLaboratorios.
     */
    data: SoftwareLaboratorioCreateManyInput | SoftwareLaboratorioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SoftwareLaboratorio createManyAndReturn
   */
  export type SoftwareLaboratorioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * The data used to create many SoftwareLaboratorios.
     */
    data: SoftwareLaboratorioCreateManyInput | SoftwareLaboratorioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SoftwareLaboratorio update
   */
  export type SoftwareLaboratorioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
    /**
     * The data needed to update a SoftwareLaboratorio.
     */
    data: XOR<SoftwareLaboratorioUpdateInput, SoftwareLaboratorioUncheckedUpdateInput>
    /**
     * Choose, which SoftwareLaboratorio to update.
     */
    where: SoftwareLaboratorioWhereUniqueInput
  }

  /**
   * SoftwareLaboratorio updateMany
   */
  export type SoftwareLaboratorioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SoftwareLaboratorios.
     */
    data: XOR<SoftwareLaboratorioUpdateManyMutationInput, SoftwareLaboratorioUncheckedUpdateManyInput>
    /**
     * Filter which SoftwareLaboratorios to update
     */
    where?: SoftwareLaboratorioWhereInput
    /**
     * Limit how many SoftwareLaboratorios to update.
     */
    limit?: number
  }

  /**
   * SoftwareLaboratorio updateManyAndReturn
   */
  export type SoftwareLaboratorioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * The data used to update SoftwareLaboratorios.
     */
    data: XOR<SoftwareLaboratorioUpdateManyMutationInput, SoftwareLaboratorioUncheckedUpdateManyInput>
    /**
     * Filter which SoftwareLaboratorios to update
     */
    where?: SoftwareLaboratorioWhereInput
    /**
     * Limit how many SoftwareLaboratorios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SoftwareLaboratorio upsert
   */
  export type SoftwareLaboratorioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
    /**
     * The filter to search for the SoftwareLaboratorio to update in case it exists.
     */
    where: SoftwareLaboratorioWhereUniqueInput
    /**
     * In case the SoftwareLaboratorio found by the `where` argument doesn't exist, create a new SoftwareLaboratorio with this data.
     */
    create: XOR<SoftwareLaboratorioCreateInput, SoftwareLaboratorioUncheckedCreateInput>
    /**
     * In case the SoftwareLaboratorio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SoftwareLaboratorioUpdateInput, SoftwareLaboratorioUncheckedUpdateInput>
  }

  /**
   * SoftwareLaboratorio delete
   */
  export type SoftwareLaboratorioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
    /**
     * Filter which SoftwareLaboratorio to delete.
     */
    where: SoftwareLaboratorioWhereUniqueInput
  }

  /**
   * SoftwareLaboratorio deleteMany
   */
  export type SoftwareLaboratorioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SoftwareLaboratorios to delete
     */
    where?: SoftwareLaboratorioWhereInput
    /**
     * Limit how many SoftwareLaboratorios to delete.
     */
    limit?: number
  }

  /**
   * SoftwareLaboratorio without action
   */
  export type SoftwareLaboratorioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareLaboratorio
     */
    select?: SoftwareLaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareLaboratorio
     */
    omit?: SoftwareLaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareLaboratorioInclude<ExtArgs> | null
  }


  /**
   * Model Mails
   */

  export type AggregateMails = {
    _count: MailsCountAggregateOutputType | null
    _avg: MailsAvgAggregateOutputType | null
    _sum: MailsSumAggregateOutputType | null
    _min: MailsMinAggregateOutputType | null
    _max: MailsMaxAggregateOutputType | null
  }

  export type MailsAvgAggregateOutputType = {
    id: number | null
  }

  export type MailsSumAggregateOutputType = {
    id: number | null
  }

  export type MailsMinAggregateOutputType = {
    id: number | null
    emisor: string | null
    para: string | null
    cc: string | null
    cco: string | null
    asunto: string | null
    fechaEnvio: Date | null
  }

  export type MailsMaxAggregateOutputType = {
    id: number | null
    emisor: string | null
    para: string | null
    cc: string | null
    cco: string | null
    asunto: string | null
    fechaEnvio: Date | null
  }

  export type MailsCountAggregateOutputType = {
    id: number
    emisor: number
    para: number
    cc: number
    cco: number
    contenido: number
    asunto: number
    fechaEnvio: number
    _all: number
  }


  export type MailsAvgAggregateInputType = {
    id?: true
  }

  export type MailsSumAggregateInputType = {
    id?: true
  }

  export type MailsMinAggregateInputType = {
    id?: true
    emisor?: true
    para?: true
    cc?: true
    cco?: true
    asunto?: true
    fechaEnvio?: true
  }

  export type MailsMaxAggregateInputType = {
    id?: true
    emisor?: true
    para?: true
    cc?: true
    cco?: true
    asunto?: true
    fechaEnvio?: true
  }

  export type MailsCountAggregateInputType = {
    id?: true
    emisor?: true
    para?: true
    cc?: true
    cco?: true
    contenido?: true
    asunto?: true
    fechaEnvio?: true
    _all?: true
  }

  export type MailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mails to aggregate.
     */
    where?: MailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mails to fetch.
     */
    orderBy?: MailsOrderByWithRelationInput | MailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mails
    **/
    _count?: true | MailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MailsMaxAggregateInputType
  }

  export type GetMailsAggregateType<T extends MailsAggregateArgs> = {
        [P in keyof T & keyof AggregateMails]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMails[P]>
      : GetScalarType<T[P], AggregateMails[P]>
  }




  export type MailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MailsWhereInput
    orderBy?: MailsOrderByWithAggregationInput | MailsOrderByWithAggregationInput[]
    by: MailsScalarFieldEnum[] | MailsScalarFieldEnum
    having?: MailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MailsCountAggregateInputType | true
    _avg?: MailsAvgAggregateInputType
    _sum?: MailsSumAggregateInputType
    _min?: MailsMinAggregateInputType
    _max?: MailsMaxAggregateInputType
  }

  export type MailsGroupByOutputType = {
    id: number
    emisor: string
    para: string
    cc: string
    cco: string
    contenido: JsonValue
    asunto: string
    fechaEnvio: Date
    _count: MailsCountAggregateOutputType | null
    _avg: MailsAvgAggregateOutputType | null
    _sum: MailsSumAggregateOutputType | null
    _min: MailsMinAggregateOutputType | null
    _max: MailsMaxAggregateOutputType | null
  }

  type GetMailsGroupByPayload<T extends MailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MailsGroupByOutputType[P]>
            : GetScalarType<T[P], MailsGroupByOutputType[P]>
        }
      >
    >


  export type MailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    emisor?: boolean
    para?: boolean
    cc?: boolean
    cco?: boolean
    contenido?: boolean
    asunto?: boolean
    fechaEnvio?: boolean
  }, ExtArgs["result"]["mails"]>

  export type MailsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    emisor?: boolean
    para?: boolean
    cc?: boolean
    cco?: boolean
    contenido?: boolean
    asunto?: boolean
    fechaEnvio?: boolean
  }, ExtArgs["result"]["mails"]>

  export type MailsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    emisor?: boolean
    para?: boolean
    cc?: boolean
    cco?: boolean
    contenido?: boolean
    asunto?: boolean
    fechaEnvio?: boolean
  }, ExtArgs["result"]["mails"]>

  export type MailsSelectScalar = {
    id?: boolean
    emisor?: boolean
    para?: boolean
    cc?: boolean
    cco?: boolean
    contenido?: boolean
    asunto?: boolean
    fechaEnvio?: boolean
  }

  export type MailsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "emisor" | "para" | "cc" | "cco" | "contenido" | "asunto" | "fechaEnvio", ExtArgs["result"]["mails"]>

  export type $MailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mails"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      emisor: string
      para: string
      cc: string
      cco: string
      contenido: Prisma.JsonValue
      asunto: string
      fechaEnvio: Date
    }, ExtArgs["result"]["mails"]>
    composites: {}
  }

  type MailsGetPayload<S extends boolean | null | undefined | MailsDefaultArgs> = $Result.GetResult<Prisma.$MailsPayload, S>

  type MailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MailsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MailsCountAggregateInputType | true
    }

  export interface MailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mails'], meta: { name: 'Mails' } }
    /**
     * Find zero or one Mails that matches the filter.
     * @param {MailsFindUniqueArgs} args - Arguments to find a Mails
     * @example
     * // Get one Mails
     * const mails = await prisma.mails.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MailsFindUniqueArgs>(args: SelectSubset<T, MailsFindUniqueArgs<ExtArgs>>): Prisma__MailsClient<$Result.GetResult<Prisma.$MailsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mails that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MailsFindUniqueOrThrowArgs} args - Arguments to find a Mails
     * @example
     * // Get one Mails
     * const mails = await prisma.mails.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MailsFindUniqueOrThrowArgs>(args: SelectSubset<T, MailsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MailsClient<$Result.GetResult<Prisma.$MailsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MailsFindFirstArgs} args - Arguments to find a Mails
     * @example
     * // Get one Mails
     * const mails = await prisma.mails.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MailsFindFirstArgs>(args?: SelectSubset<T, MailsFindFirstArgs<ExtArgs>>): Prisma__MailsClient<$Result.GetResult<Prisma.$MailsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mails that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MailsFindFirstOrThrowArgs} args - Arguments to find a Mails
     * @example
     * // Get one Mails
     * const mails = await prisma.mails.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MailsFindFirstOrThrowArgs>(args?: SelectSubset<T, MailsFindFirstOrThrowArgs<ExtArgs>>): Prisma__MailsClient<$Result.GetResult<Prisma.$MailsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mails
     * const mails = await prisma.mails.findMany()
     * 
     * // Get first 10 Mails
     * const mails = await prisma.mails.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mailsWithIdOnly = await prisma.mails.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MailsFindManyArgs>(args?: SelectSubset<T, MailsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MailsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mails.
     * @param {MailsCreateArgs} args - Arguments to create a Mails.
     * @example
     * // Create one Mails
     * const Mails = await prisma.mails.create({
     *   data: {
     *     // ... data to create a Mails
     *   }
     * })
     * 
     */
    create<T extends MailsCreateArgs>(args: SelectSubset<T, MailsCreateArgs<ExtArgs>>): Prisma__MailsClient<$Result.GetResult<Prisma.$MailsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mails.
     * @param {MailsCreateManyArgs} args - Arguments to create many Mails.
     * @example
     * // Create many Mails
     * const mails = await prisma.mails.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MailsCreateManyArgs>(args?: SelectSubset<T, MailsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mails and returns the data saved in the database.
     * @param {MailsCreateManyAndReturnArgs} args - Arguments to create many Mails.
     * @example
     * // Create many Mails
     * const mails = await prisma.mails.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mails and only return the `id`
     * const mailsWithIdOnly = await prisma.mails.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MailsCreateManyAndReturnArgs>(args?: SelectSubset<T, MailsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MailsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mails.
     * @param {MailsDeleteArgs} args - Arguments to delete one Mails.
     * @example
     * // Delete one Mails
     * const Mails = await prisma.mails.delete({
     *   where: {
     *     // ... filter to delete one Mails
     *   }
     * })
     * 
     */
    delete<T extends MailsDeleteArgs>(args: SelectSubset<T, MailsDeleteArgs<ExtArgs>>): Prisma__MailsClient<$Result.GetResult<Prisma.$MailsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mails.
     * @param {MailsUpdateArgs} args - Arguments to update one Mails.
     * @example
     * // Update one Mails
     * const mails = await prisma.mails.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MailsUpdateArgs>(args: SelectSubset<T, MailsUpdateArgs<ExtArgs>>): Prisma__MailsClient<$Result.GetResult<Prisma.$MailsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mails.
     * @param {MailsDeleteManyArgs} args - Arguments to filter Mails to delete.
     * @example
     * // Delete a few Mails
     * const { count } = await prisma.mails.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MailsDeleteManyArgs>(args?: SelectSubset<T, MailsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mails
     * const mails = await prisma.mails.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MailsUpdateManyArgs>(args: SelectSubset<T, MailsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mails and returns the data updated in the database.
     * @param {MailsUpdateManyAndReturnArgs} args - Arguments to update many Mails.
     * @example
     * // Update many Mails
     * const mails = await prisma.mails.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mails and only return the `id`
     * const mailsWithIdOnly = await prisma.mails.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MailsUpdateManyAndReturnArgs>(args: SelectSubset<T, MailsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MailsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mails.
     * @param {MailsUpsertArgs} args - Arguments to update or create a Mails.
     * @example
     * // Update or create a Mails
     * const mails = await prisma.mails.upsert({
     *   create: {
     *     // ... data to create a Mails
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mails we want to update
     *   }
     * })
     */
    upsert<T extends MailsUpsertArgs>(args: SelectSubset<T, MailsUpsertArgs<ExtArgs>>): Prisma__MailsClient<$Result.GetResult<Prisma.$MailsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MailsCountArgs} args - Arguments to filter Mails to count.
     * @example
     * // Count the number of Mails
     * const count = await prisma.mails.count({
     *   where: {
     *     // ... the filter for the Mails we want to count
     *   }
     * })
    **/
    count<T extends MailsCountArgs>(
      args?: Subset<T, MailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MailsAggregateArgs>(args: Subset<T, MailsAggregateArgs>): Prisma.PrismaPromise<GetMailsAggregateType<T>>

    /**
     * Group by Mails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MailsGroupByArgs['orderBy'] }
        : { orderBy?: MailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mails model
   */
  readonly fields: MailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mails.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mails model
   */
  interface MailsFieldRefs {
    readonly id: FieldRef<"Mails", 'Int'>
    readonly emisor: FieldRef<"Mails", 'String'>
    readonly para: FieldRef<"Mails", 'String'>
    readonly cc: FieldRef<"Mails", 'String'>
    readonly cco: FieldRef<"Mails", 'String'>
    readonly contenido: FieldRef<"Mails", 'Json'>
    readonly asunto: FieldRef<"Mails", 'String'>
    readonly fechaEnvio: FieldRef<"Mails", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Mails findUnique
   */
  export type MailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
    /**
     * Filter, which Mails to fetch.
     */
    where: MailsWhereUniqueInput
  }

  /**
   * Mails findUniqueOrThrow
   */
  export type MailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
    /**
     * Filter, which Mails to fetch.
     */
    where: MailsWhereUniqueInput
  }

  /**
   * Mails findFirst
   */
  export type MailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
    /**
     * Filter, which Mails to fetch.
     */
    where?: MailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mails to fetch.
     */
    orderBy?: MailsOrderByWithRelationInput | MailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mails.
     */
    cursor?: MailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mails.
     */
    distinct?: MailsScalarFieldEnum | MailsScalarFieldEnum[]
  }

  /**
   * Mails findFirstOrThrow
   */
  export type MailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
    /**
     * Filter, which Mails to fetch.
     */
    where?: MailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mails to fetch.
     */
    orderBy?: MailsOrderByWithRelationInput | MailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mails.
     */
    cursor?: MailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mails.
     */
    distinct?: MailsScalarFieldEnum | MailsScalarFieldEnum[]
  }

  /**
   * Mails findMany
   */
  export type MailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
    /**
     * Filter, which Mails to fetch.
     */
    where?: MailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mails to fetch.
     */
    orderBy?: MailsOrderByWithRelationInput | MailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mails.
     */
    cursor?: MailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mails.
     */
    skip?: number
    distinct?: MailsScalarFieldEnum | MailsScalarFieldEnum[]
  }

  /**
   * Mails create
   */
  export type MailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
    /**
     * The data needed to create a Mails.
     */
    data: XOR<MailsCreateInput, MailsUncheckedCreateInput>
  }

  /**
   * Mails createMany
   */
  export type MailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mails.
     */
    data: MailsCreateManyInput | MailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Mails createManyAndReturn
   */
  export type MailsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
    /**
     * The data used to create many Mails.
     */
    data: MailsCreateManyInput | MailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Mails update
   */
  export type MailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
    /**
     * The data needed to update a Mails.
     */
    data: XOR<MailsUpdateInput, MailsUncheckedUpdateInput>
    /**
     * Choose, which Mails to update.
     */
    where: MailsWhereUniqueInput
  }

  /**
   * Mails updateMany
   */
  export type MailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mails.
     */
    data: XOR<MailsUpdateManyMutationInput, MailsUncheckedUpdateManyInput>
    /**
     * Filter which Mails to update
     */
    where?: MailsWhereInput
    /**
     * Limit how many Mails to update.
     */
    limit?: number
  }

  /**
   * Mails updateManyAndReturn
   */
  export type MailsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
    /**
     * The data used to update Mails.
     */
    data: XOR<MailsUpdateManyMutationInput, MailsUncheckedUpdateManyInput>
    /**
     * Filter which Mails to update
     */
    where?: MailsWhereInput
    /**
     * Limit how many Mails to update.
     */
    limit?: number
  }

  /**
   * Mails upsert
   */
  export type MailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
    /**
     * The filter to search for the Mails to update in case it exists.
     */
    where: MailsWhereUniqueInput
    /**
     * In case the Mails found by the `where` argument doesn't exist, create a new Mails with this data.
     */
    create: XOR<MailsCreateInput, MailsUncheckedCreateInput>
    /**
     * In case the Mails was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MailsUpdateInput, MailsUncheckedUpdateInput>
  }

  /**
   * Mails delete
   */
  export type MailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
    /**
     * Filter which Mails to delete.
     */
    where: MailsWhereUniqueInput
  }

  /**
   * Mails deleteMany
   */
  export type MailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mails to delete
     */
    where?: MailsWhereInput
    /**
     * Limit how many Mails to delete.
     */
    limit?: number
  }

  /**
   * Mails without action
   */
  export type MailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mails
     */
    select?: MailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mails
     */
    omit?: MailsOmit<ExtArgs> | null
  }


  /**
   * Model Materia
   */

  export type AggregateMateria = {
    _count: MateriaCountAggregateOutputType | null
    _avg: MateriaAvgAggregateOutputType | null
    _sum: MateriaSumAggregateOutputType | null
    _min: MateriaMinAggregateOutputType | null
    _max: MateriaMaxAggregateOutputType | null
  }

  export type MateriaAvgAggregateOutputType = {
    id: number | null
    anio: number | null
  }

  export type MateriaSumAggregateOutputType = {
    id: number | null
    anio: number | null
  }

  export type MateriaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    codigo: string | null
    anio: number | null
    duracion: $Enums.MateriaDuracion | null
    tipo: $Enums.MateriaTipo | null
    directorUsuarioId: string | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type MateriaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    codigo: string | null
    anio: number | null
    duracion: $Enums.MateriaDuracion | null
    tipo: $Enums.MateriaTipo | null
    directorUsuarioId: string | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type MateriaCountAggregateOutputType = {
    id: number
    nombre: number
    codigo: number
    anio: number
    duracion: number
    tipo: number
    directorUsuarioId: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type MateriaAvgAggregateInputType = {
    id?: true
    anio?: true
  }

  export type MateriaSumAggregateInputType = {
    id?: true
    anio?: true
  }

  export type MateriaMinAggregateInputType = {
    id?: true
    nombre?: true
    codigo?: true
    anio?: true
    duracion?: true
    tipo?: true
    directorUsuarioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type MateriaMaxAggregateInputType = {
    id?: true
    nombre?: true
    codigo?: true
    anio?: true
    duracion?: true
    tipo?: true
    directorUsuarioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type MateriaCountAggregateInputType = {
    id?: true
    nombre?: true
    codigo?: true
    anio?: true
    duracion?: true
    tipo?: true
    directorUsuarioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type MateriaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Materia to aggregate.
     */
    where?: MateriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materias to fetch.
     */
    orderBy?: MateriaOrderByWithRelationInput | MateriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MateriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Materias
    **/
    _count?: true | MateriaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MateriaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MateriaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MateriaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MateriaMaxAggregateInputType
  }

  export type GetMateriaAggregateType<T extends MateriaAggregateArgs> = {
        [P in keyof T & keyof AggregateMateria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMateria[P]>
      : GetScalarType<T[P], AggregateMateria[P]>
  }




  export type MateriaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MateriaWhereInput
    orderBy?: MateriaOrderByWithAggregationInput | MateriaOrderByWithAggregationInput[]
    by: MateriaScalarFieldEnum[] | MateriaScalarFieldEnum
    having?: MateriaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MateriaCountAggregateInputType | true
    _avg?: MateriaAvgAggregateInputType
    _sum?: MateriaSumAggregateInputType
    _min?: MateriaMinAggregateInputType
    _max?: MateriaMaxAggregateInputType
  }

  export type MateriaGroupByOutputType = {
    id: number
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    directorUsuarioId: string | null
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: MateriaCountAggregateOutputType | null
    _avg: MateriaAvgAggregateOutputType | null
    _sum: MateriaSumAggregateOutputType | null
    _min: MateriaMinAggregateOutputType | null
    _max: MateriaMaxAggregateOutputType | null
  }

  type GetMateriaGroupByPayload<T extends MateriaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MateriaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MateriaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MateriaGroupByOutputType[P]>
            : GetScalarType<T[P], MateriaGroupByOutputType[P]>
        }
      >
    >


  export type MateriaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    codigo?: boolean
    anio?: boolean
    duracion?: boolean
    tipo?: boolean
    directorUsuarioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    directorUsuario?: boolean | Materia$directorUsuarioArgs<ExtArgs>
    jefeTrabajoPracticos?: boolean | Materia$jefeTrabajoPracticosArgs<ExtArgs>
    cursos?: boolean | Materia$cursosArgs<ExtArgs>
    libros?: boolean | Materia$librosArgs<ExtArgs>
    materiaPrerequisito?: boolean | Materia$materiaPrerequisitoArgs<ExtArgs>
    correlativa?: boolean | Materia$correlativaArgs<ExtArgs>
    reservaLaboratorioCerrado?: boolean | Materia$reservaLaboratorioCerradoArgs<ExtArgs>
    _count?: boolean | MateriaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materia"]>

  export type MateriaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    codigo?: boolean
    anio?: boolean
    duracion?: boolean
    tipo?: boolean
    directorUsuarioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    directorUsuario?: boolean | Materia$directorUsuarioArgs<ExtArgs>
  }, ExtArgs["result"]["materia"]>

  export type MateriaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    codigo?: boolean
    anio?: boolean
    duracion?: boolean
    tipo?: boolean
    directorUsuarioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    directorUsuario?: boolean | Materia$directorUsuarioArgs<ExtArgs>
  }, ExtArgs["result"]["materia"]>

  export type MateriaSelectScalar = {
    id?: boolean
    nombre?: boolean
    codigo?: boolean
    anio?: boolean
    duracion?: boolean
    tipo?: boolean
    directorUsuarioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type MateriaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "codigo" | "anio" | "duracion" | "tipo" | "directorUsuarioId" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["materia"]>
  export type MateriaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    directorUsuario?: boolean | Materia$directorUsuarioArgs<ExtArgs>
    jefeTrabajoPracticos?: boolean | Materia$jefeTrabajoPracticosArgs<ExtArgs>
    cursos?: boolean | Materia$cursosArgs<ExtArgs>
    libros?: boolean | Materia$librosArgs<ExtArgs>
    materiaPrerequisito?: boolean | Materia$materiaPrerequisitoArgs<ExtArgs>
    correlativa?: boolean | Materia$correlativaArgs<ExtArgs>
    reservaLaboratorioCerrado?: boolean | Materia$reservaLaboratorioCerradoArgs<ExtArgs>
    _count?: boolean | MateriaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MateriaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    directorUsuario?: boolean | Materia$directorUsuarioArgs<ExtArgs>
  }
  export type MateriaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    directorUsuario?: boolean | Materia$directorUsuarioArgs<ExtArgs>
  }

  export type $MateriaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Materia"
    objects: {
      directorUsuario: Prisma.$UserPayload<ExtArgs> | null
      jefeTrabajoPracticos: Prisma.$MateriaJefeTpPayload<ExtArgs>[]
      cursos: Prisma.$CursoPayload<ExtArgs>[]
      libros: Prisma.$LibroMateriaPayload<ExtArgs>[]
      materiaPrerequisito: Prisma.$MateriaCorrelativaPayload<ExtArgs>[]
      correlativa: Prisma.$MateriaCorrelativaPayload<ExtArgs>[]
      reservaLaboratorioCerrado: Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      codigo: string
      anio: number
      duracion: $Enums.MateriaDuracion
      tipo: $Enums.MateriaTipo
      directorUsuarioId: string | null
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["materia"]>
    composites: {}
  }

  type MateriaGetPayload<S extends boolean | null | undefined | MateriaDefaultArgs> = $Result.GetResult<Prisma.$MateriaPayload, S>

  type MateriaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MateriaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MateriaCountAggregateInputType | true
    }

  export interface MateriaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Materia'], meta: { name: 'Materia' } }
    /**
     * Find zero or one Materia that matches the filter.
     * @param {MateriaFindUniqueArgs} args - Arguments to find a Materia
     * @example
     * // Get one Materia
     * const materia = await prisma.materia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MateriaFindUniqueArgs>(args: SelectSubset<T, MateriaFindUniqueArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Materia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MateriaFindUniqueOrThrowArgs} args - Arguments to find a Materia
     * @example
     * // Get one Materia
     * const materia = await prisma.materia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MateriaFindUniqueOrThrowArgs>(args: SelectSubset<T, MateriaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Materia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaFindFirstArgs} args - Arguments to find a Materia
     * @example
     * // Get one Materia
     * const materia = await prisma.materia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MateriaFindFirstArgs>(args?: SelectSubset<T, MateriaFindFirstArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Materia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaFindFirstOrThrowArgs} args - Arguments to find a Materia
     * @example
     * // Get one Materia
     * const materia = await prisma.materia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MateriaFindFirstOrThrowArgs>(args?: SelectSubset<T, MateriaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Materias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Materias
     * const materias = await prisma.materia.findMany()
     * 
     * // Get first 10 Materias
     * const materias = await prisma.materia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const materiaWithIdOnly = await prisma.materia.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MateriaFindManyArgs>(args?: SelectSubset<T, MateriaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Materia.
     * @param {MateriaCreateArgs} args - Arguments to create a Materia.
     * @example
     * // Create one Materia
     * const Materia = await prisma.materia.create({
     *   data: {
     *     // ... data to create a Materia
     *   }
     * })
     * 
     */
    create<T extends MateriaCreateArgs>(args: SelectSubset<T, MateriaCreateArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Materias.
     * @param {MateriaCreateManyArgs} args - Arguments to create many Materias.
     * @example
     * // Create many Materias
     * const materia = await prisma.materia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MateriaCreateManyArgs>(args?: SelectSubset<T, MateriaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Materias and returns the data saved in the database.
     * @param {MateriaCreateManyAndReturnArgs} args - Arguments to create many Materias.
     * @example
     * // Create many Materias
     * const materia = await prisma.materia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Materias and only return the `id`
     * const materiaWithIdOnly = await prisma.materia.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MateriaCreateManyAndReturnArgs>(args?: SelectSubset<T, MateriaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Materia.
     * @param {MateriaDeleteArgs} args - Arguments to delete one Materia.
     * @example
     * // Delete one Materia
     * const Materia = await prisma.materia.delete({
     *   where: {
     *     // ... filter to delete one Materia
     *   }
     * })
     * 
     */
    delete<T extends MateriaDeleteArgs>(args: SelectSubset<T, MateriaDeleteArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Materia.
     * @param {MateriaUpdateArgs} args - Arguments to update one Materia.
     * @example
     * // Update one Materia
     * const materia = await prisma.materia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MateriaUpdateArgs>(args: SelectSubset<T, MateriaUpdateArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Materias.
     * @param {MateriaDeleteManyArgs} args - Arguments to filter Materias to delete.
     * @example
     * // Delete a few Materias
     * const { count } = await prisma.materia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MateriaDeleteManyArgs>(args?: SelectSubset<T, MateriaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Materias
     * const materia = await prisma.materia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MateriaUpdateManyArgs>(args: SelectSubset<T, MateriaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materias and returns the data updated in the database.
     * @param {MateriaUpdateManyAndReturnArgs} args - Arguments to update many Materias.
     * @example
     * // Update many Materias
     * const materia = await prisma.materia.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Materias and only return the `id`
     * const materiaWithIdOnly = await prisma.materia.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MateriaUpdateManyAndReturnArgs>(args: SelectSubset<T, MateriaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Materia.
     * @param {MateriaUpsertArgs} args - Arguments to update or create a Materia.
     * @example
     * // Update or create a Materia
     * const materia = await prisma.materia.upsert({
     *   create: {
     *     // ... data to create a Materia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Materia we want to update
     *   }
     * })
     */
    upsert<T extends MateriaUpsertArgs>(args: SelectSubset<T, MateriaUpsertArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Materias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaCountArgs} args - Arguments to filter Materias to count.
     * @example
     * // Count the number of Materias
     * const count = await prisma.materia.count({
     *   where: {
     *     // ... the filter for the Materias we want to count
     *   }
     * })
    **/
    count<T extends MateriaCountArgs>(
      args?: Subset<T, MateriaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MateriaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Materia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MateriaAggregateArgs>(args: Subset<T, MateriaAggregateArgs>): Prisma.PrismaPromise<GetMateriaAggregateType<T>>

    /**
     * Group by Materia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MateriaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MateriaGroupByArgs['orderBy'] }
        : { orderBy?: MateriaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MateriaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMateriaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Materia model
   */
  readonly fields: MateriaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Materia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MateriaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    directorUsuario<T extends Materia$directorUsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Materia$directorUsuarioArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    jefeTrabajoPracticos<T extends Materia$jefeTrabajoPracticosArgs<ExtArgs> = {}>(args?: Subset<T, Materia$jefeTrabajoPracticosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cursos<T extends Materia$cursosArgs<ExtArgs> = {}>(args?: Subset<T, Materia$cursosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    libros<T extends Materia$librosArgs<ExtArgs> = {}>(args?: Subset<T, Materia$librosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroMateriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    materiaPrerequisito<T extends Materia$materiaPrerequisitoArgs<ExtArgs> = {}>(args?: Subset<T, Materia$materiaPrerequisitoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    correlativa<T extends Materia$correlativaArgs<ExtArgs> = {}>(args?: Subset<T, Materia$correlativaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservaLaboratorioCerrado<T extends Materia$reservaLaboratorioCerradoArgs<ExtArgs> = {}>(args?: Subset<T, Materia$reservaLaboratorioCerradoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Materia model
   */
  interface MateriaFieldRefs {
    readonly id: FieldRef<"Materia", 'Int'>
    readonly nombre: FieldRef<"Materia", 'String'>
    readonly codigo: FieldRef<"Materia", 'String'>
    readonly anio: FieldRef<"Materia", 'Int'>
    readonly duracion: FieldRef<"Materia", 'MateriaDuracion'>
    readonly tipo: FieldRef<"Materia", 'MateriaTipo'>
    readonly directorUsuarioId: FieldRef<"Materia", 'String'>
    readonly fechaCreacion: FieldRef<"Materia", 'DateTime'>
    readonly fechaModificacion: FieldRef<"Materia", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Materia", 'String'>
    readonly usuarioModificadorId: FieldRef<"Materia", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Materia findUnique
   */
  export type MateriaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
    /**
     * Filter, which Materia to fetch.
     */
    where: MateriaWhereUniqueInput
  }

  /**
   * Materia findUniqueOrThrow
   */
  export type MateriaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
    /**
     * Filter, which Materia to fetch.
     */
    where: MateriaWhereUniqueInput
  }

  /**
   * Materia findFirst
   */
  export type MateriaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
    /**
     * Filter, which Materia to fetch.
     */
    where?: MateriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materias to fetch.
     */
    orderBy?: MateriaOrderByWithRelationInput | MateriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materias.
     */
    cursor?: MateriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materias.
     */
    distinct?: MateriaScalarFieldEnum | MateriaScalarFieldEnum[]
  }

  /**
   * Materia findFirstOrThrow
   */
  export type MateriaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
    /**
     * Filter, which Materia to fetch.
     */
    where?: MateriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materias to fetch.
     */
    orderBy?: MateriaOrderByWithRelationInput | MateriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materias.
     */
    cursor?: MateriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materias.
     */
    distinct?: MateriaScalarFieldEnum | MateriaScalarFieldEnum[]
  }

  /**
   * Materia findMany
   */
  export type MateriaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
    /**
     * Filter, which Materias to fetch.
     */
    where?: MateriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materias to fetch.
     */
    orderBy?: MateriaOrderByWithRelationInput | MateriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Materias.
     */
    cursor?: MateriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materias.
     */
    skip?: number
    distinct?: MateriaScalarFieldEnum | MateriaScalarFieldEnum[]
  }

  /**
   * Materia create
   */
  export type MateriaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
    /**
     * The data needed to create a Materia.
     */
    data: XOR<MateriaCreateInput, MateriaUncheckedCreateInput>
  }

  /**
   * Materia createMany
   */
  export type MateriaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Materias.
     */
    data: MateriaCreateManyInput | MateriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Materia createManyAndReturn
   */
  export type MateriaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * The data used to create many Materias.
     */
    data: MateriaCreateManyInput | MateriaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Materia update
   */
  export type MateriaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
    /**
     * The data needed to update a Materia.
     */
    data: XOR<MateriaUpdateInput, MateriaUncheckedUpdateInput>
    /**
     * Choose, which Materia to update.
     */
    where: MateriaWhereUniqueInput
  }

  /**
   * Materia updateMany
   */
  export type MateriaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Materias.
     */
    data: XOR<MateriaUpdateManyMutationInput, MateriaUncheckedUpdateManyInput>
    /**
     * Filter which Materias to update
     */
    where?: MateriaWhereInput
    /**
     * Limit how many Materias to update.
     */
    limit?: number
  }

  /**
   * Materia updateManyAndReturn
   */
  export type MateriaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * The data used to update Materias.
     */
    data: XOR<MateriaUpdateManyMutationInput, MateriaUncheckedUpdateManyInput>
    /**
     * Filter which Materias to update
     */
    where?: MateriaWhereInput
    /**
     * Limit how many Materias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Materia upsert
   */
  export type MateriaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
    /**
     * The filter to search for the Materia to update in case it exists.
     */
    where: MateriaWhereUniqueInput
    /**
     * In case the Materia found by the `where` argument doesn't exist, create a new Materia with this data.
     */
    create: XOR<MateriaCreateInput, MateriaUncheckedCreateInput>
    /**
     * In case the Materia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MateriaUpdateInput, MateriaUncheckedUpdateInput>
  }

  /**
   * Materia delete
   */
  export type MateriaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
    /**
     * Filter which Materia to delete.
     */
    where: MateriaWhereUniqueInput
  }

  /**
   * Materia deleteMany
   */
  export type MateriaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Materias to delete
     */
    where?: MateriaWhereInput
    /**
     * Limit how many Materias to delete.
     */
    limit?: number
  }

  /**
   * Materia.directorUsuario
   */
  export type Materia$directorUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Materia.jefeTrabajoPracticos
   */
  export type Materia$jefeTrabajoPracticosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
    where?: MateriaJefeTpWhereInput
    orderBy?: MateriaJefeTpOrderByWithRelationInput | MateriaJefeTpOrderByWithRelationInput[]
    cursor?: MateriaJefeTpWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MateriaJefeTpScalarFieldEnum | MateriaJefeTpScalarFieldEnum[]
  }

  /**
   * Materia.cursos
   */
  export type Materia$cursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    where?: CursoWhereInput
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    cursor?: CursoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Materia.libros
   */
  export type Materia$librosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LibroMateria
     */
    select?: LibroMateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LibroMateria
     */
    omit?: LibroMateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroMateriaInclude<ExtArgs> | null
    where?: LibroMateriaWhereInput
    orderBy?: LibroMateriaOrderByWithRelationInput | LibroMateriaOrderByWithRelationInput[]
    cursor?: LibroMateriaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LibroMateriaScalarFieldEnum | LibroMateriaScalarFieldEnum[]
  }

  /**
   * Materia.materiaPrerequisito
   */
  export type Materia$materiaPrerequisitoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
    where?: MateriaCorrelativaWhereInput
    orderBy?: MateriaCorrelativaOrderByWithRelationInput | MateriaCorrelativaOrderByWithRelationInput[]
    cursor?: MateriaCorrelativaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MateriaCorrelativaScalarFieldEnum | MateriaCorrelativaScalarFieldEnum[]
  }

  /**
   * Materia.correlativa
   */
  export type Materia$correlativaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
    where?: MateriaCorrelativaWhereInput
    orderBy?: MateriaCorrelativaOrderByWithRelationInput | MateriaCorrelativaOrderByWithRelationInput[]
    cursor?: MateriaCorrelativaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MateriaCorrelativaScalarFieldEnum | MateriaCorrelativaScalarFieldEnum[]
  }

  /**
   * Materia.reservaLaboratorioCerrado
   */
  export type Materia$reservaLaboratorioCerradoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    where?: ReservaLaboratorioCerradoWhereInput
    orderBy?: ReservaLaboratorioCerradoOrderByWithRelationInput | ReservaLaboratorioCerradoOrderByWithRelationInput[]
    cursor?: ReservaLaboratorioCerradoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLaboratorioCerradoScalarFieldEnum | ReservaLaboratorioCerradoScalarFieldEnum[]
  }

  /**
   * Materia without action
   */
  export type MateriaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
  }


  /**
   * Model MateriaJefeTp
   */

  export type AggregateMateriaJefeTp = {
    _count: MateriaJefeTpCountAggregateOutputType | null
    _avg: MateriaJefeTpAvgAggregateOutputType | null
    _sum: MateriaJefeTpSumAggregateOutputType | null
    _min: MateriaJefeTpMinAggregateOutputType | null
    _max: MateriaJefeTpMaxAggregateOutputType | null
  }

  export type MateriaJefeTpAvgAggregateOutputType = {
    materiaId: number | null
  }

  export type MateriaJefeTpSumAggregateOutputType = {
    materiaId: number | null
  }

  export type MateriaJefeTpMinAggregateOutputType = {
    materiaId: number | null
    userId: string | null
  }

  export type MateriaJefeTpMaxAggregateOutputType = {
    materiaId: number | null
    userId: string | null
  }

  export type MateriaJefeTpCountAggregateOutputType = {
    materiaId: number
    userId: number
    _all: number
  }


  export type MateriaJefeTpAvgAggregateInputType = {
    materiaId?: true
  }

  export type MateriaJefeTpSumAggregateInputType = {
    materiaId?: true
  }

  export type MateriaJefeTpMinAggregateInputType = {
    materiaId?: true
    userId?: true
  }

  export type MateriaJefeTpMaxAggregateInputType = {
    materiaId?: true
    userId?: true
  }

  export type MateriaJefeTpCountAggregateInputType = {
    materiaId?: true
    userId?: true
    _all?: true
  }

  export type MateriaJefeTpAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MateriaJefeTp to aggregate.
     */
    where?: MateriaJefeTpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MateriaJefeTps to fetch.
     */
    orderBy?: MateriaJefeTpOrderByWithRelationInput | MateriaJefeTpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MateriaJefeTpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MateriaJefeTps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MateriaJefeTps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MateriaJefeTps
    **/
    _count?: true | MateriaJefeTpCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MateriaJefeTpAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MateriaJefeTpSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MateriaJefeTpMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MateriaJefeTpMaxAggregateInputType
  }

  export type GetMateriaJefeTpAggregateType<T extends MateriaJefeTpAggregateArgs> = {
        [P in keyof T & keyof AggregateMateriaJefeTp]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMateriaJefeTp[P]>
      : GetScalarType<T[P], AggregateMateriaJefeTp[P]>
  }




  export type MateriaJefeTpGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MateriaJefeTpWhereInput
    orderBy?: MateriaJefeTpOrderByWithAggregationInput | MateriaJefeTpOrderByWithAggregationInput[]
    by: MateriaJefeTpScalarFieldEnum[] | MateriaJefeTpScalarFieldEnum
    having?: MateriaJefeTpScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MateriaJefeTpCountAggregateInputType | true
    _avg?: MateriaJefeTpAvgAggregateInputType
    _sum?: MateriaJefeTpSumAggregateInputType
    _min?: MateriaJefeTpMinAggregateInputType
    _max?: MateriaJefeTpMaxAggregateInputType
  }

  export type MateriaJefeTpGroupByOutputType = {
    materiaId: number
    userId: string
    _count: MateriaJefeTpCountAggregateOutputType | null
    _avg: MateriaJefeTpAvgAggregateOutputType | null
    _sum: MateriaJefeTpSumAggregateOutputType | null
    _min: MateriaJefeTpMinAggregateOutputType | null
    _max: MateriaJefeTpMaxAggregateOutputType | null
  }

  type GetMateriaJefeTpGroupByPayload<T extends MateriaJefeTpGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MateriaJefeTpGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MateriaJefeTpGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MateriaJefeTpGroupByOutputType[P]>
            : GetScalarType<T[P], MateriaJefeTpGroupByOutputType[P]>
        }
      >
    >


  export type MateriaJefeTpSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    materiaId?: boolean
    userId?: boolean
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiaJefeTp"]>

  export type MateriaJefeTpSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    materiaId?: boolean
    userId?: boolean
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiaJefeTp"]>

  export type MateriaJefeTpSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    materiaId?: boolean
    userId?: boolean
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiaJefeTp"]>

  export type MateriaJefeTpSelectScalar = {
    materiaId?: boolean
    userId?: boolean
  }

  export type MateriaJefeTpOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"materiaId" | "userId", ExtArgs["result"]["materiaJefeTp"]>
  export type MateriaJefeTpInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MateriaJefeTpIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MateriaJefeTpIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materia?: boolean | MateriaDefaultArgs<ExtArgs>
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MateriaJefeTpPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MateriaJefeTp"
    objects: {
      materia: Prisma.$MateriaPayload<ExtArgs>
      usuario: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      materiaId: number
      userId: string
    }, ExtArgs["result"]["materiaJefeTp"]>
    composites: {}
  }

  type MateriaJefeTpGetPayload<S extends boolean | null | undefined | MateriaJefeTpDefaultArgs> = $Result.GetResult<Prisma.$MateriaJefeTpPayload, S>

  type MateriaJefeTpCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MateriaJefeTpFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MateriaJefeTpCountAggregateInputType | true
    }

  export interface MateriaJefeTpDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MateriaJefeTp'], meta: { name: 'MateriaJefeTp' } }
    /**
     * Find zero or one MateriaJefeTp that matches the filter.
     * @param {MateriaJefeTpFindUniqueArgs} args - Arguments to find a MateriaJefeTp
     * @example
     * // Get one MateriaJefeTp
     * const materiaJefeTp = await prisma.materiaJefeTp.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MateriaJefeTpFindUniqueArgs>(args: SelectSubset<T, MateriaJefeTpFindUniqueArgs<ExtArgs>>): Prisma__MateriaJefeTpClient<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MateriaJefeTp that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MateriaJefeTpFindUniqueOrThrowArgs} args - Arguments to find a MateriaJefeTp
     * @example
     * // Get one MateriaJefeTp
     * const materiaJefeTp = await prisma.materiaJefeTp.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MateriaJefeTpFindUniqueOrThrowArgs>(args: SelectSubset<T, MateriaJefeTpFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MateriaJefeTpClient<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MateriaJefeTp that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaJefeTpFindFirstArgs} args - Arguments to find a MateriaJefeTp
     * @example
     * // Get one MateriaJefeTp
     * const materiaJefeTp = await prisma.materiaJefeTp.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MateriaJefeTpFindFirstArgs>(args?: SelectSubset<T, MateriaJefeTpFindFirstArgs<ExtArgs>>): Prisma__MateriaJefeTpClient<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MateriaJefeTp that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaJefeTpFindFirstOrThrowArgs} args - Arguments to find a MateriaJefeTp
     * @example
     * // Get one MateriaJefeTp
     * const materiaJefeTp = await prisma.materiaJefeTp.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MateriaJefeTpFindFirstOrThrowArgs>(args?: SelectSubset<T, MateriaJefeTpFindFirstOrThrowArgs<ExtArgs>>): Prisma__MateriaJefeTpClient<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MateriaJefeTps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaJefeTpFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MateriaJefeTps
     * const materiaJefeTps = await prisma.materiaJefeTp.findMany()
     * 
     * // Get first 10 MateriaJefeTps
     * const materiaJefeTps = await prisma.materiaJefeTp.findMany({ take: 10 })
     * 
     * // Only select the `materiaId`
     * const materiaJefeTpWithMateriaIdOnly = await prisma.materiaJefeTp.findMany({ select: { materiaId: true } })
     * 
     */
    findMany<T extends MateriaJefeTpFindManyArgs>(args?: SelectSubset<T, MateriaJefeTpFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MateriaJefeTp.
     * @param {MateriaJefeTpCreateArgs} args - Arguments to create a MateriaJefeTp.
     * @example
     * // Create one MateriaJefeTp
     * const MateriaJefeTp = await prisma.materiaJefeTp.create({
     *   data: {
     *     // ... data to create a MateriaJefeTp
     *   }
     * })
     * 
     */
    create<T extends MateriaJefeTpCreateArgs>(args: SelectSubset<T, MateriaJefeTpCreateArgs<ExtArgs>>): Prisma__MateriaJefeTpClient<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MateriaJefeTps.
     * @param {MateriaJefeTpCreateManyArgs} args - Arguments to create many MateriaJefeTps.
     * @example
     * // Create many MateriaJefeTps
     * const materiaJefeTp = await prisma.materiaJefeTp.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MateriaJefeTpCreateManyArgs>(args?: SelectSubset<T, MateriaJefeTpCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MateriaJefeTps and returns the data saved in the database.
     * @param {MateriaJefeTpCreateManyAndReturnArgs} args - Arguments to create many MateriaJefeTps.
     * @example
     * // Create many MateriaJefeTps
     * const materiaJefeTp = await prisma.materiaJefeTp.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MateriaJefeTps and only return the `materiaId`
     * const materiaJefeTpWithMateriaIdOnly = await prisma.materiaJefeTp.createManyAndReturn({
     *   select: { materiaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MateriaJefeTpCreateManyAndReturnArgs>(args?: SelectSubset<T, MateriaJefeTpCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MateriaJefeTp.
     * @param {MateriaJefeTpDeleteArgs} args - Arguments to delete one MateriaJefeTp.
     * @example
     * // Delete one MateriaJefeTp
     * const MateriaJefeTp = await prisma.materiaJefeTp.delete({
     *   where: {
     *     // ... filter to delete one MateriaJefeTp
     *   }
     * })
     * 
     */
    delete<T extends MateriaJefeTpDeleteArgs>(args: SelectSubset<T, MateriaJefeTpDeleteArgs<ExtArgs>>): Prisma__MateriaJefeTpClient<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MateriaJefeTp.
     * @param {MateriaJefeTpUpdateArgs} args - Arguments to update one MateriaJefeTp.
     * @example
     * // Update one MateriaJefeTp
     * const materiaJefeTp = await prisma.materiaJefeTp.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MateriaJefeTpUpdateArgs>(args: SelectSubset<T, MateriaJefeTpUpdateArgs<ExtArgs>>): Prisma__MateriaJefeTpClient<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MateriaJefeTps.
     * @param {MateriaJefeTpDeleteManyArgs} args - Arguments to filter MateriaJefeTps to delete.
     * @example
     * // Delete a few MateriaJefeTps
     * const { count } = await prisma.materiaJefeTp.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MateriaJefeTpDeleteManyArgs>(args?: SelectSubset<T, MateriaJefeTpDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MateriaJefeTps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaJefeTpUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MateriaJefeTps
     * const materiaJefeTp = await prisma.materiaJefeTp.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MateriaJefeTpUpdateManyArgs>(args: SelectSubset<T, MateriaJefeTpUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MateriaJefeTps and returns the data updated in the database.
     * @param {MateriaJefeTpUpdateManyAndReturnArgs} args - Arguments to update many MateriaJefeTps.
     * @example
     * // Update many MateriaJefeTps
     * const materiaJefeTp = await prisma.materiaJefeTp.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MateriaJefeTps and only return the `materiaId`
     * const materiaJefeTpWithMateriaIdOnly = await prisma.materiaJefeTp.updateManyAndReturn({
     *   select: { materiaId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MateriaJefeTpUpdateManyAndReturnArgs>(args: SelectSubset<T, MateriaJefeTpUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MateriaJefeTp.
     * @param {MateriaJefeTpUpsertArgs} args - Arguments to update or create a MateriaJefeTp.
     * @example
     * // Update or create a MateriaJefeTp
     * const materiaJefeTp = await prisma.materiaJefeTp.upsert({
     *   create: {
     *     // ... data to create a MateriaJefeTp
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MateriaJefeTp we want to update
     *   }
     * })
     */
    upsert<T extends MateriaJefeTpUpsertArgs>(args: SelectSubset<T, MateriaJefeTpUpsertArgs<ExtArgs>>): Prisma__MateriaJefeTpClient<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MateriaJefeTps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaJefeTpCountArgs} args - Arguments to filter MateriaJefeTps to count.
     * @example
     * // Count the number of MateriaJefeTps
     * const count = await prisma.materiaJefeTp.count({
     *   where: {
     *     // ... the filter for the MateriaJefeTps we want to count
     *   }
     * })
    **/
    count<T extends MateriaJefeTpCountArgs>(
      args?: Subset<T, MateriaJefeTpCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MateriaJefeTpCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MateriaJefeTp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaJefeTpAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MateriaJefeTpAggregateArgs>(args: Subset<T, MateriaJefeTpAggregateArgs>): Prisma.PrismaPromise<GetMateriaJefeTpAggregateType<T>>

    /**
     * Group by MateriaJefeTp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaJefeTpGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MateriaJefeTpGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MateriaJefeTpGroupByArgs['orderBy'] }
        : { orderBy?: MateriaJefeTpGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MateriaJefeTpGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMateriaJefeTpGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MateriaJefeTp model
   */
  readonly fields: MateriaJefeTpFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MateriaJefeTp.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MateriaJefeTpClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    materia<T extends MateriaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MateriaDefaultArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MateriaJefeTp model
   */
  interface MateriaJefeTpFieldRefs {
    readonly materiaId: FieldRef<"MateriaJefeTp", 'Int'>
    readonly userId: FieldRef<"MateriaJefeTp", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MateriaJefeTp findUnique
   */
  export type MateriaJefeTpFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
    /**
     * Filter, which MateriaJefeTp to fetch.
     */
    where: MateriaJefeTpWhereUniqueInput
  }

  /**
   * MateriaJefeTp findUniqueOrThrow
   */
  export type MateriaJefeTpFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
    /**
     * Filter, which MateriaJefeTp to fetch.
     */
    where: MateriaJefeTpWhereUniqueInput
  }

  /**
   * MateriaJefeTp findFirst
   */
  export type MateriaJefeTpFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
    /**
     * Filter, which MateriaJefeTp to fetch.
     */
    where?: MateriaJefeTpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MateriaJefeTps to fetch.
     */
    orderBy?: MateriaJefeTpOrderByWithRelationInput | MateriaJefeTpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MateriaJefeTps.
     */
    cursor?: MateriaJefeTpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MateriaJefeTps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MateriaJefeTps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MateriaJefeTps.
     */
    distinct?: MateriaJefeTpScalarFieldEnum | MateriaJefeTpScalarFieldEnum[]
  }

  /**
   * MateriaJefeTp findFirstOrThrow
   */
  export type MateriaJefeTpFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
    /**
     * Filter, which MateriaJefeTp to fetch.
     */
    where?: MateriaJefeTpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MateriaJefeTps to fetch.
     */
    orderBy?: MateriaJefeTpOrderByWithRelationInput | MateriaJefeTpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MateriaJefeTps.
     */
    cursor?: MateriaJefeTpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MateriaJefeTps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MateriaJefeTps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MateriaJefeTps.
     */
    distinct?: MateriaJefeTpScalarFieldEnum | MateriaJefeTpScalarFieldEnum[]
  }

  /**
   * MateriaJefeTp findMany
   */
  export type MateriaJefeTpFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
    /**
     * Filter, which MateriaJefeTps to fetch.
     */
    where?: MateriaJefeTpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MateriaJefeTps to fetch.
     */
    orderBy?: MateriaJefeTpOrderByWithRelationInput | MateriaJefeTpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MateriaJefeTps.
     */
    cursor?: MateriaJefeTpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MateriaJefeTps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MateriaJefeTps.
     */
    skip?: number
    distinct?: MateriaJefeTpScalarFieldEnum | MateriaJefeTpScalarFieldEnum[]
  }

  /**
   * MateriaJefeTp create
   */
  export type MateriaJefeTpCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
    /**
     * The data needed to create a MateriaJefeTp.
     */
    data: XOR<MateriaJefeTpCreateInput, MateriaJefeTpUncheckedCreateInput>
  }

  /**
   * MateriaJefeTp createMany
   */
  export type MateriaJefeTpCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MateriaJefeTps.
     */
    data: MateriaJefeTpCreateManyInput | MateriaJefeTpCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MateriaJefeTp createManyAndReturn
   */
  export type MateriaJefeTpCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * The data used to create many MateriaJefeTps.
     */
    data: MateriaJefeTpCreateManyInput | MateriaJefeTpCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MateriaJefeTp update
   */
  export type MateriaJefeTpUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
    /**
     * The data needed to update a MateriaJefeTp.
     */
    data: XOR<MateriaJefeTpUpdateInput, MateriaJefeTpUncheckedUpdateInput>
    /**
     * Choose, which MateriaJefeTp to update.
     */
    where: MateriaJefeTpWhereUniqueInput
  }

  /**
   * MateriaJefeTp updateMany
   */
  export type MateriaJefeTpUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MateriaJefeTps.
     */
    data: XOR<MateriaJefeTpUpdateManyMutationInput, MateriaJefeTpUncheckedUpdateManyInput>
    /**
     * Filter which MateriaJefeTps to update
     */
    where?: MateriaJefeTpWhereInput
    /**
     * Limit how many MateriaJefeTps to update.
     */
    limit?: number
  }

  /**
   * MateriaJefeTp updateManyAndReturn
   */
  export type MateriaJefeTpUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * The data used to update MateriaJefeTps.
     */
    data: XOR<MateriaJefeTpUpdateManyMutationInput, MateriaJefeTpUncheckedUpdateManyInput>
    /**
     * Filter which MateriaJefeTps to update
     */
    where?: MateriaJefeTpWhereInput
    /**
     * Limit how many MateriaJefeTps to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MateriaJefeTp upsert
   */
  export type MateriaJefeTpUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
    /**
     * The filter to search for the MateriaJefeTp to update in case it exists.
     */
    where: MateriaJefeTpWhereUniqueInput
    /**
     * In case the MateriaJefeTp found by the `where` argument doesn't exist, create a new MateriaJefeTp with this data.
     */
    create: XOR<MateriaJefeTpCreateInput, MateriaJefeTpUncheckedCreateInput>
    /**
     * In case the MateriaJefeTp was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MateriaJefeTpUpdateInput, MateriaJefeTpUncheckedUpdateInput>
  }

  /**
   * MateriaJefeTp delete
   */
  export type MateriaJefeTpDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
    /**
     * Filter which MateriaJefeTp to delete.
     */
    where: MateriaJefeTpWhereUniqueInput
  }

  /**
   * MateriaJefeTp deleteMany
   */
  export type MateriaJefeTpDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MateriaJefeTps to delete
     */
    where?: MateriaJefeTpWhereInput
    /**
     * Limit how many MateriaJefeTps to delete.
     */
    limit?: number
  }

  /**
   * MateriaJefeTp without action
   */
  export type MateriaJefeTpDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
  }


  /**
   * Model MateriaCorrelativa
   */

  export type AggregateMateriaCorrelativa = {
    _count: MateriaCorrelativaCountAggregateOutputType | null
    _avg: MateriaCorrelativaAvgAggregateOutputType | null
    _sum: MateriaCorrelativaSumAggregateOutputType | null
    _min: MateriaCorrelativaMinAggregateOutputType | null
    _max: MateriaCorrelativaMaxAggregateOutputType | null
  }

  export type MateriaCorrelativaAvgAggregateOutputType = {
    materiaPrerequisitoId: number | null
    correlativaId: number | null
  }

  export type MateriaCorrelativaSumAggregateOutputType = {
    materiaPrerequisitoId: number | null
    correlativaId: number | null
  }

  export type MateriaCorrelativaMinAggregateOutputType = {
    materiaPrerequisitoId: number | null
    correlativaId: number | null
    estatusCorrelativa: $Enums.EstatusCorrelativa | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type MateriaCorrelativaMaxAggregateOutputType = {
    materiaPrerequisitoId: number | null
    correlativaId: number | null
    estatusCorrelativa: $Enums.EstatusCorrelativa | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type MateriaCorrelativaCountAggregateOutputType = {
    materiaPrerequisitoId: number
    correlativaId: number
    estatusCorrelativa: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type MateriaCorrelativaAvgAggregateInputType = {
    materiaPrerequisitoId?: true
    correlativaId?: true
  }

  export type MateriaCorrelativaSumAggregateInputType = {
    materiaPrerequisitoId?: true
    correlativaId?: true
  }

  export type MateriaCorrelativaMinAggregateInputType = {
    materiaPrerequisitoId?: true
    correlativaId?: true
    estatusCorrelativa?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type MateriaCorrelativaMaxAggregateInputType = {
    materiaPrerequisitoId?: true
    correlativaId?: true
    estatusCorrelativa?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type MateriaCorrelativaCountAggregateInputType = {
    materiaPrerequisitoId?: true
    correlativaId?: true
    estatusCorrelativa?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type MateriaCorrelativaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MateriaCorrelativa to aggregate.
     */
    where?: MateriaCorrelativaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MateriaCorrelativas to fetch.
     */
    orderBy?: MateriaCorrelativaOrderByWithRelationInput | MateriaCorrelativaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MateriaCorrelativaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MateriaCorrelativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MateriaCorrelativas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MateriaCorrelativas
    **/
    _count?: true | MateriaCorrelativaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MateriaCorrelativaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MateriaCorrelativaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MateriaCorrelativaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MateriaCorrelativaMaxAggregateInputType
  }

  export type GetMateriaCorrelativaAggregateType<T extends MateriaCorrelativaAggregateArgs> = {
        [P in keyof T & keyof AggregateMateriaCorrelativa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMateriaCorrelativa[P]>
      : GetScalarType<T[P], AggregateMateriaCorrelativa[P]>
  }




  export type MateriaCorrelativaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MateriaCorrelativaWhereInput
    orderBy?: MateriaCorrelativaOrderByWithAggregationInput | MateriaCorrelativaOrderByWithAggregationInput[]
    by: MateriaCorrelativaScalarFieldEnum[] | MateriaCorrelativaScalarFieldEnum
    having?: MateriaCorrelativaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MateriaCorrelativaCountAggregateInputType | true
    _avg?: MateriaCorrelativaAvgAggregateInputType
    _sum?: MateriaCorrelativaSumAggregateInputType
    _min?: MateriaCorrelativaMinAggregateInputType
    _max?: MateriaCorrelativaMaxAggregateInputType
  }

  export type MateriaCorrelativaGroupByOutputType = {
    materiaPrerequisitoId: number
    correlativaId: number
    estatusCorrelativa: $Enums.EstatusCorrelativa
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: MateriaCorrelativaCountAggregateOutputType | null
    _avg: MateriaCorrelativaAvgAggregateOutputType | null
    _sum: MateriaCorrelativaSumAggregateOutputType | null
    _min: MateriaCorrelativaMinAggregateOutputType | null
    _max: MateriaCorrelativaMaxAggregateOutputType | null
  }

  type GetMateriaCorrelativaGroupByPayload<T extends MateriaCorrelativaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MateriaCorrelativaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MateriaCorrelativaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MateriaCorrelativaGroupByOutputType[P]>
            : GetScalarType<T[P], MateriaCorrelativaGroupByOutputType[P]>
        }
      >
    >


  export type MateriaCorrelativaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    materiaPrerequisitoId?: boolean
    correlativaId?: boolean
    estatusCorrelativa?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    materiaPrerequisito?: boolean | MateriaDefaultArgs<ExtArgs>
    correlativa?: boolean | MateriaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiaCorrelativa"]>

  export type MateriaCorrelativaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    materiaPrerequisitoId?: boolean
    correlativaId?: boolean
    estatusCorrelativa?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    materiaPrerequisito?: boolean | MateriaDefaultArgs<ExtArgs>
    correlativa?: boolean | MateriaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiaCorrelativa"]>

  export type MateriaCorrelativaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    materiaPrerequisitoId?: boolean
    correlativaId?: boolean
    estatusCorrelativa?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    materiaPrerequisito?: boolean | MateriaDefaultArgs<ExtArgs>
    correlativa?: boolean | MateriaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiaCorrelativa"]>

  export type MateriaCorrelativaSelectScalar = {
    materiaPrerequisitoId?: boolean
    correlativaId?: boolean
    estatusCorrelativa?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type MateriaCorrelativaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"materiaPrerequisitoId" | "correlativaId" | "estatusCorrelativa" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["materiaCorrelativa"]>
  export type MateriaCorrelativaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materiaPrerequisito?: boolean | MateriaDefaultArgs<ExtArgs>
    correlativa?: boolean | MateriaDefaultArgs<ExtArgs>
  }
  export type MateriaCorrelativaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materiaPrerequisito?: boolean | MateriaDefaultArgs<ExtArgs>
    correlativa?: boolean | MateriaDefaultArgs<ExtArgs>
  }
  export type MateriaCorrelativaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materiaPrerequisito?: boolean | MateriaDefaultArgs<ExtArgs>
    correlativa?: boolean | MateriaDefaultArgs<ExtArgs>
  }

  export type $MateriaCorrelativaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MateriaCorrelativa"
    objects: {
      materiaPrerequisito: Prisma.$MateriaPayload<ExtArgs>
      correlativa: Prisma.$MateriaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      materiaPrerequisitoId: number
      correlativaId: number
      estatusCorrelativa: $Enums.EstatusCorrelativa
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["materiaCorrelativa"]>
    composites: {}
  }

  type MateriaCorrelativaGetPayload<S extends boolean | null | undefined | MateriaCorrelativaDefaultArgs> = $Result.GetResult<Prisma.$MateriaCorrelativaPayload, S>

  type MateriaCorrelativaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MateriaCorrelativaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MateriaCorrelativaCountAggregateInputType | true
    }

  export interface MateriaCorrelativaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MateriaCorrelativa'], meta: { name: 'MateriaCorrelativa' } }
    /**
     * Find zero or one MateriaCorrelativa that matches the filter.
     * @param {MateriaCorrelativaFindUniqueArgs} args - Arguments to find a MateriaCorrelativa
     * @example
     * // Get one MateriaCorrelativa
     * const materiaCorrelativa = await prisma.materiaCorrelativa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MateriaCorrelativaFindUniqueArgs>(args: SelectSubset<T, MateriaCorrelativaFindUniqueArgs<ExtArgs>>): Prisma__MateriaCorrelativaClient<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MateriaCorrelativa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MateriaCorrelativaFindUniqueOrThrowArgs} args - Arguments to find a MateriaCorrelativa
     * @example
     * // Get one MateriaCorrelativa
     * const materiaCorrelativa = await prisma.materiaCorrelativa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MateriaCorrelativaFindUniqueOrThrowArgs>(args: SelectSubset<T, MateriaCorrelativaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MateriaCorrelativaClient<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MateriaCorrelativa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaCorrelativaFindFirstArgs} args - Arguments to find a MateriaCorrelativa
     * @example
     * // Get one MateriaCorrelativa
     * const materiaCorrelativa = await prisma.materiaCorrelativa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MateriaCorrelativaFindFirstArgs>(args?: SelectSubset<T, MateriaCorrelativaFindFirstArgs<ExtArgs>>): Prisma__MateriaCorrelativaClient<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MateriaCorrelativa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaCorrelativaFindFirstOrThrowArgs} args - Arguments to find a MateriaCorrelativa
     * @example
     * // Get one MateriaCorrelativa
     * const materiaCorrelativa = await prisma.materiaCorrelativa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MateriaCorrelativaFindFirstOrThrowArgs>(args?: SelectSubset<T, MateriaCorrelativaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MateriaCorrelativaClient<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MateriaCorrelativas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaCorrelativaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MateriaCorrelativas
     * const materiaCorrelativas = await prisma.materiaCorrelativa.findMany()
     * 
     * // Get first 10 MateriaCorrelativas
     * const materiaCorrelativas = await prisma.materiaCorrelativa.findMany({ take: 10 })
     * 
     * // Only select the `materiaPrerequisitoId`
     * const materiaCorrelativaWithMateriaPrerequisitoIdOnly = await prisma.materiaCorrelativa.findMany({ select: { materiaPrerequisitoId: true } })
     * 
     */
    findMany<T extends MateriaCorrelativaFindManyArgs>(args?: SelectSubset<T, MateriaCorrelativaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MateriaCorrelativa.
     * @param {MateriaCorrelativaCreateArgs} args - Arguments to create a MateriaCorrelativa.
     * @example
     * // Create one MateriaCorrelativa
     * const MateriaCorrelativa = await prisma.materiaCorrelativa.create({
     *   data: {
     *     // ... data to create a MateriaCorrelativa
     *   }
     * })
     * 
     */
    create<T extends MateriaCorrelativaCreateArgs>(args: SelectSubset<T, MateriaCorrelativaCreateArgs<ExtArgs>>): Prisma__MateriaCorrelativaClient<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MateriaCorrelativas.
     * @param {MateriaCorrelativaCreateManyArgs} args - Arguments to create many MateriaCorrelativas.
     * @example
     * // Create many MateriaCorrelativas
     * const materiaCorrelativa = await prisma.materiaCorrelativa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MateriaCorrelativaCreateManyArgs>(args?: SelectSubset<T, MateriaCorrelativaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MateriaCorrelativas and returns the data saved in the database.
     * @param {MateriaCorrelativaCreateManyAndReturnArgs} args - Arguments to create many MateriaCorrelativas.
     * @example
     * // Create many MateriaCorrelativas
     * const materiaCorrelativa = await prisma.materiaCorrelativa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MateriaCorrelativas and only return the `materiaPrerequisitoId`
     * const materiaCorrelativaWithMateriaPrerequisitoIdOnly = await prisma.materiaCorrelativa.createManyAndReturn({
     *   select: { materiaPrerequisitoId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MateriaCorrelativaCreateManyAndReturnArgs>(args?: SelectSubset<T, MateriaCorrelativaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MateriaCorrelativa.
     * @param {MateriaCorrelativaDeleteArgs} args - Arguments to delete one MateriaCorrelativa.
     * @example
     * // Delete one MateriaCorrelativa
     * const MateriaCorrelativa = await prisma.materiaCorrelativa.delete({
     *   where: {
     *     // ... filter to delete one MateriaCorrelativa
     *   }
     * })
     * 
     */
    delete<T extends MateriaCorrelativaDeleteArgs>(args: SelectSubset<T, MateriaCorrelativaDeleteArgs<ExtArgs>>): Prisma__MateriaCorrelativaClient<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MateriaCorrelativa.
     * @param {MateriaCorrelativaUpdateArgs} args - Arguments to update one MateriaCorrelativa.
     * @example
     * // Update one MateriaCorrelativa
     * const materiaCorrelativa = await prisma.materiaCorrelativa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MateriaCorrelativaUpdateArgs>(args: SelectSubset<T, MateriaCorrelativaUpdateArgs<ExtArgs>>): Prisma__MateriaCorrelativaClient<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MateriaCorrelativas.
     * @param {MateriaCorrelativaDeleteManyArgs} args - Arguments to filter MateriaCorrelativas to delete.
     * @example
     * // Delete a few MateriaCorrelativas
     * const { count } = await prisma.materiaCorrelativa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MateriaCorrelativaDeleteManyArgs>(args?: SelectSubset<T, MateriaCorrelativaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MateriaCorrelativas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaCorrelativaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MateriaCorrelativas
     * const materiaCorrelativa = await prisma.materiaCorrelativa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MateriaCorrelativaUpdateManyArgs>(args: SelectSubset<T, MateriaCorrelativaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MateriaCorrelativas and returns the data updated in the database.
     * @param {MateriaCorrelativaUpdateManyAndReturnArgs} args - Arguments to update many MateriaCorrelativas.
     * @example
     * // Update many MateriaCorrelativas
     * const materiaCorrelativa = await prisma.materiaCorrelativa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MateriaCorrelativas and only return the `materiaPrerequisitoId`
     * const materiaCorrelativaWithMateriaPrerequisitoIdOnly = await prisma.materiaCorrelativa.updateManyAndReturn({
     *   select: { materiaPrerequisitoId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MateriaCorrelativaUpdateManyAndReturnArgs>(args: SelectSubset<T, MateriaCorrelativaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MateriaCorrelativa.
     * @param {MateriaCorrelativaUpsertArgs} args - Arguments to update or create a MateriaCorrelativa.
     * @example
     * // Update or create a MateriaCorrelativa
     * const materiaCorrelativa = await prisma.materiaCorrelativa.upsert({
     *   create: {
     *     // ... data to create a MateriaCorrelativa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MateriaCorrelativa we want to update
     *   }
     * })
     */
    upsert<T extends MateriaCorrelativaUpsertArgs>(args: SelectSubset<T, MateriaCorrelativaUpsertArgs<ExtArgs>>): Prisma__MateriaCorrelativaClient<$Result.GetResult<Prisma.$MateriaCorrelativaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MateriaCorrelativas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaCorrelativaCountArgs} args - Arguments to filter MateriaCorrelativas to count.
     * @example
     * // Count the number of MateriaCorrelativas
     * const count = await prisma.materiaCorrelativa.count({
     *   where: {
     *     // ... the filter for the MateriaCorrelativas we want to count
     *   }
     * })
    **/
    count<T extends MateriaCorrelativaCountArgs>(
      args?: Subset<T, MateriaCorrelativaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MateriaCorrelativaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MateriaCorrelativa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaCorrelativaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MateriaCorrelativaAggregateArgs>(args: Subset<T, MateriaCorrelativaAggregateArgs>): Prisma.PrismaPromise<GetMateriaCorrelativaAggregateType<T>>

    /**
     * Group by MateriaCorrelativa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MateriaCorrelativaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MateriaCorrelativaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MateriaCorrelativaGroupByArgs['orderBy'] }
        : { orderBy?: MateriaCorrelativaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MateriaCorrelativaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMateriaCorrelativaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MateriaCorrelativa model
   */
  readonly fields: MateriaCorrelativaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MateriaCorrelativa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MateriaCorrelativaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    materiaPrerequisito<T extends MateriaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MateriaDefaultArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    correlativa<T extends MateriaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MateriaDefaultArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MateriaCorrelativa model
   */
  interface MateriaCorrelativaFieldRefs {
    readonly materiaPrerequisitoId: FieldRef<"MateriaCorrelativa", 'Int'>
    readonly correlativaId: FieldRef<"MateriaCorrelativa", 'Int'>
    readonly estatusCorrelativa: FieldRef<"MateriaCorrelativa", 'EstatusCorrelativa'>
    readonly fechaCreacion: FieldRef<"MateriaCorrelativa", 'DateTime'>
    readonly fechaModificacion: FieldRef<"MateriaCorrelativa", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"MateriaCorrelativa", 'String'>
    readonly usuarioModificadorId: FieldRef<"MateriaCorrelativa", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MateriaCorrelativa findUnique
   */
  export type MateriaCorrelativaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
    /**
     * Filter, which MateriaCorrelativa to fetch.
     */
    where: MateriaCorrelativaWhereUniqueInput
  }

  /**
   * MateriaCorrelativa findUniqueOrThrow
   */
  export type MateriaCorrelativaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
    /**
     * Filter, which MateriaCorrelativa to fetch.
     */
    where: MateriaCorrelativaWhereUniqueInput
  }

  /**
   * MateriaCorrelativa findFirst
   */
  export type MateriaCorrelativaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
    /**
     * Filter, which MateriaCorrelativa to fetch.
     */
    where?: MateriaCorrelativaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MateriaCorrelativas to fetch.
     */
    orderBy?: MateriaCorrelativaOrderByWithRelationInput | MateriaCorrelativaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MateriaCorrelativas.
     */
    cursor?: MateriaCorrelativaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MateriaCorrelativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MateriaCorrelativas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MateriaCorrelativas.
     */
    distinct?: MateriaCorrelativaScalarFieldEnum | MateriaCorrelativaScalarFieldEnum[]
  }

  /**
   * MateriaCorrelativa findFirstOrThrow
   */
  export type MateriaCorrelativaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
    /**
     * Filter, which MateriaCorrelativa to fetch.
     */
    where?: MateriaCorrelativaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MateriaCorrelativas to fetch.
     */
    orderBy?: MateriaCorrelativaOrderByWithRelationInput | MateriaCorrelativaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MateriaCorrelativas.
     */
    cursor?: MateriaCorrelativaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MateriaCorrelativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MateriaCorrelativas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MateriaCorrelativas.
     */
    distinct?: MateriaCorrelativaScalarFieldEnum | MateriaCorrelativaScalarFieldEnum[]
  }

  /**
   * MateriaCorrelativa findMany
   */
  export type MateriaCorrelativaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
    /**
     * Filter, which MateriaCorrelativas to fetch.
     */
    where?: MateriaCorrelativaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MateriaCorrelativas to fetch.
     */
    orderBy?: MateriaCorrelativaOrderByWithRelationInput | MateriaCorrelativaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MateriaCorrelativas.
     */
    cursor?: MateriaCorrelativaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MateriaCorrelativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MateriaCorrelativas.
     */
    skip?: number
    distinct?: MateriaCorrelativaScalarFieldEnum | MateriaCorrelativaScalarFieldEnum[]
  }

  /**
   * MateriaCorrelativa create
   */
  export type MateriaCorrelativaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
    /**
     * The data needed to create a MateriaCorrelativa.
     */
    data: XOR<MateriaCorrelativaCreateInput, MateriaCorrelativaUncheckedCreateInput>
  }

  /**
   * MateriaCorrelativa createMany
   */
  export type MateriaCorrelativaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MateriaCorrelativas.
     */
    data: MateriaCorrelativaCreateManyInput | MateriaCorrelativaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MateriaCorrelativa createManyAndReturn
   */
  export type MateriaCorrelativaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * The data used to create many MateriaCorrelativas.
     */
    data: MateriaCorrelativaCreateManyInput | MateriaCorrelativaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MateriaCorrelativa update
   */
  export type MateriaCorrelativaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
    /**
     * The data needed to update a MateriaCorrelativa.
     */
    data: XOR<MateriaCorrelativaUpdateInput, MateriaCorrelativaUncheckedUpdateInput>
    /**
     * Choose, which MateriaCorrelativa to update.
     */
    where: MateriaCorrelativaWhereUniqueInput
  }

  /**
   * MateriaCorrelativa updateMany
   */
  export type MateriaCorrelativaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MateriaCorrelativas.
     */
    data: XOR<MateriaCorrelativaUpdateManyMutationInput, MateriaCorrelativaUncheckedUpdateManyInput>
    /**
     * Filter which MateriaCorrelativas to update
     */
    where?: MateriaCorrelativaWhereInput
    /**
     * Limit how many MateriaCorrelativas to update.
     */
    limit?: number
  }

  /**
   * MateriaCorrelativa updateManyAndReturn
   */
  export type MateriaCorrelativaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * The data used to update MateriaCorrelativas.
     */
    data: XOR<MateriaCorrelativaUpdateManyMutationInput, MateriaCorrelativaUncheckedUpdateManyInput>
    /**
     * Filter which MateriaCorrelativas to update
     */
    where?: MateriaCorrelativaWhereInput
    /**
     * Limit how many MateriaCorrelativas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MateriaCorrelativa upsert
   */
  export type MateriaCorrelativaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
    /**
     * The filter to search for the MateriaCorrelativa to update in case it exists.
     */
    where: MateriaCorrelativaWhereUniqueInput
    /**
     * In case the MateriaCorrelativa found by the `where` argument doesn't exist, create a new MateriaCorrelativa with this data.
     */
    create: XOR<MateriaCorrelativaCreateInput, MateriaCorrelativaUncheckedCreateInput>
    /**
     * In case the MateriaCorrelativa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MateriaCorrelativaUpdateInput, MateriaCorrelativaUncheckedUpdateInput>
  }

  /**
   * MateriaCorrelativa delete
   */
  export type MateriaCorrelativaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
    /**
     * Filter which MateriaCorrelativa to delete.
     */
    where: MateriaCorrelativaWhereUniqueInput
  }

  /**
   * MateriaCorrelativa deleteMany
   */
  export type MateriaCorrelativaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MateriaCorrelativas to delete
     */
    where?: MateriaCorrelativaWhereInput
    /**
     * Limit how many MateriaCorrelativas to delete.
     */
    limit?: number
  }

  /**
   * MateriaCorrelativa without action
   */
  export type MateriaCorrelativaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaCorrelativa
     */
    select?: MateriaCorrelativaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaCorrelativa
     */
    omit?: MateriaCorrelativaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaCorrelativaInclude<ExtArgs> | null
  }


  /**
   * Model Reserva
   */

  export type AggregateReserva = {
    _count: ReservaCountAggregateOutputType | null
    _avg: ReservaAvgAggregateOutputType | null
    _sum: ReservaSumAggregateOutputType | null
    _min: ReservaMinAggregateOutputType | null
    _max: ReservaMaxAggregateOutputType | null
  }

  export type ReservaAvgAggregateOutputType = {
    id: number | null
  }

  export type ReservaSumAggregateOutputType = {
    id: number | null
  }

  export type ReservaMinAggregateOutputType = {
    id: number | null
    estatus: $Enums.ReservaEstatus | null
    fechaHoraInicio: Date | null
    fechaHoraFin: Date | null
    tipo: $Enums.ReservaTipo | null
    asistio: boolean | null
    motivoRechazo: string | null
    usuarioSolicitoId: string | null
    usuarioAprobadorId: string | null
    usuarioRechazadoId: string | null
    usuarioRenovoId: string | null
    usuarioRecibioId: string | null
    usuarioTutorId: string | null
    fechaRenovacion: Date | null
    fechaAprobacion: Date | null
    fechaRechazo: Date | null
    fechaRecibido: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    mostrarEnPantalla: boolean | null
  }

  export type ReservaMaxAggregateOutputType = {
    id: number | null
    estatus: $Enums.ReservaEstatus | null
    fechaHoraInicio: Date | null
    fechaHoraFin: Date | null
    tipo: $Enums.ReservaTipo | null
    asistio: boolean | null
    motivoRechazo: string | null
    usuarioSolicitoId: string | null
    usuarioAprobadorId: string | null
    usuarioRechazadoId: string | null
    usuarioRenovoId: string | null
    usuarioRecibioId: string | null
    usuarioTutorId: string | null
    fechaRenovacion: Date | null
    fechaAprobacion: Date | null
    fechaRechazo: Date | null
    fechaRecibido: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    mostrarEnPantalla: boolean | null
  }

  export type ReservaCountAggregateOutputType = {
    id: number
    estatus: number
    fechaHoraInicio: number
    fechaHoraFin: number
    tipo: number
    asistio: number
    motivoRechazo: number
    usuarioSolicitoId: number
    usuarioAprobadorId: number
    usuarioRechazadoId: number
    usuarioRenovoId: number
    usuarioRecibioId: number
    usuarioTutorId: number
    fechaRenovacion: number
    fechaAprobacion: number
    fechaRechazo: number
    fechaRecibido: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    fechaCreacion: number
    fechaModificacion: number
    mostrarEnPantalla: number
    _all: number
  }


  export type ReservaAvgAggregateInputType = {
    id?: true
  }

  export type ReservaSumAggregateInputType = {
    id?: true
  }

  export type ReservaMinAggregateInputType = {
    id?: true
    estatus?: true
    fechaHoraInicio?: true
    fechaHoraFin?: true
    tipo?: true
    asistio?: true
    motivoRechazo?: true
    usuarioSolicitoId?: true
    usuarioAprobadorId?: true
    usuarioRechazadoId?: true
    usuarioRenovoId?: true
    usuarioRecibioId?: true
    usuarioTutorId?: true
    fechaRenovacion?: true
    fechaAprobacion?: true
    fechaRechazo?: true
    fechaRecibido?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    mostrarEnPantalla?: true
  }

  export type ReservaMaxAggregateInputType = {
    id?: true
    estatus?: true
    fechaHoraInicio?: true
    fechaHoraFin?: true
    tipo?: true
    asistio?: true
    motivoRechazo?: true
    usuarioSolicitoId?: true
    usuarioAprobadorId?: true
    usuarioRechazadoId?: true
    usuarioRenovoId?: true
    usuarioRecibioId?: true
    usuarioTutorId?: true
    fechaRenovacion?: true
    fechaAprobacion?: true
    fechaRechazo?: true
    fechaRecibido?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    mostrarEnPantalla?: true
  }

  export type ReservaCountAggregateInputType = {
    id?: true
    estatus?: true
    fechaHoraInicio?: true
    fechaHoraFin?: true
    tipo?: true
    asistio?: true
    motivoRechazo?: true
    usuarioSolicitoId?: true
    usuarioAprobadorId?: true
    usuarioRechazadoId?: true
    usuarioRenovoId?: true
    usuarioRecibioId?: true
    usuarioTutorId?: true
    fechaRenovacion?: true
    fechaAprobacion?: true
    fechaRechazo?: true
    fechaRecibido?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    mostrarEnPantalla?: true
    _all?: true
  }

  export type ReservaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reserva to aggregate.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservas
    **/
    _count?: true | ReservaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservaMaxAggregateInputType
  }

  export type GetReservaAggregateType<T extends ReservaAggregateArgs> = {
        [P in keyof T & keyof AggregateReserva]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReserva[P]>
      : GetScalarType<T[P], AggregateReserva[P]>
  }




  export type ReservaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithAggregationInput | ReservaOrderByWithAggregationInput[]
    by: ReservaScalarFieldEnum[] | ReservaScalarFieldEnum
    having?: ReservaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservaCountAggregateInputType | true
    _avg?: ReservaAvgAggregateInputType
    _sum?: ReservaSumAggregateInputType
    _min?: ReservaMinAggregateInputType
    _max?: ReservaMaxAggregateInputType
  }

  export type ReservaGroupByOutputType = {
    id: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date
    fechaHoraFin: Date
    tipo: $Enums.ReservaTipo
    asistio: boolean
    motivoRechazo: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId: string | null
    usuarioRechazadoId: string | null
    usuarioRenovoId: string | null
    usuarioRecibioId: string | null
    usuarioTutorId: string | null
    fechaRenovacion: Date | null
    fechaAprobacion: Date | null
    fechaRechazo: Date | null
    fechaRecibido: Date | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion: Date
    fechaModificacion: Date
    mostrarEnPantalla: boolean
    _count: ReservaCountAggregateOutputType | null
    _avg: ReservaAvgAggregateOutputType | null
    _sum: ReservaSumAggregateOutputType | null
    _min: ReservaMinAggregateOutputType | null
    _max: ReservaMaxAggregateOutputType | null
  }

  type GetReservaGroupByPayload<T extends ReservaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservaGroupByOutputType[P]>
            : GetScalarType<T[P], ReservaGroupByOutputType[P]>
        }
      >
    >


  export type ReservaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estatus?: boolean
    fechaHoraInicio?: boolean
    fechaHoraFin?: boolean
    tipo?: boolean
    asistio?: boolean
    motivoRechazo?: boolean
    usuarioSolicitoId?: boolean
    usuarioAprobadorId?: boolean
    usuarioRechazadoId?: boolean
    usuarioRenovoId?: boolean
    usuarioRecibioId?: boolean
    usuarioTutorId?: boolean
    fechaRenovacion?: boolean
    fechaAprobacion?: boolean
    fechaRechazo?: boolean
    fechaRecibido?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    mostrarEnPantalla?: boolean
    usuarioSolicito?: boolean | UserDefaultArgs<ExtArgs>
    usuarioAprobador?: boolean | Reserva$usuarioAprobadorArgs<ExtArgs>
    usuarioRechazado?: boolean | Reserva$usuarioRechazadoArgs<ExtArgs>
    usuarioRenovo?: boolean | Reserva$usuarioRenovoArgs<ExtArgs>
    usuarioRecibio?: boolean | Reserva$usuarioRecibioArgs<ExtArgs>
    usuarioTutor?: boolean | Reserva$usuarioTutorArgs<ExtArgs>
    reservaEquipo?: boolean | Reserva$reservaEquipoArgs<ExtArgs>
    reservaLibro?: boolean | Reserva$reservaLibroArgs<ExtArgs>
    reservaLaboratorioCerrado?: boolean | Reserva$reservaLaboratorioCerradoArgs<ExtArgs>
    reservaLaboratorioAbierto?: boolean | Reserva$reservaLaboratorioAbiertoArgs<ExtArgs>
  }, ExtArgs["result"]["reserva"]>

  export type ReservaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estatus?: boolean
    fechaHoraInicio?: boolean
    fechaHoraFin?: boolean
    tipo?: boolean
    asistio?: boolean
    motivoRechazo?: boolean
    usuarioSolicitoId?: boolean
    usuarioAprobadorId?: boolean
    usuarioRechazadoId?: boolean
    usuarioRenovoId?: boolean
    usuarioRecibioId?: boolean
    usuarioTutorId?: boolean
    fechaRenovacion?: boolean
    fechaAprobacion?: boolean
    fechaRechazo?: boolean
    fechaRecibido?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    mostrarEnPantalla?: boolean
    usuarioSolicito?: boolean | UserDefaultArgs<ExtArgs>
    usuarioAprobador?: boolean | Reserva$usuarioAprobadorArgs<ExtArgs>
    usuarioRechazado?: boolean | Reserva$usuarioRechazadoArgs<ExtArgs>
    usuarioRenovo?: boolean | Reserva$usuarioRenovoArgs<ExtArgs>
    usuarioRecibio?: boolean | Reserva$usuarioRecibioArgs<ExtArgs>
    usuarioTutor?: boolean | Reserva$usuarioTutorArgs<ExtArgs>
  }, ExtArgs["result"]["reserva"]>

  export type ReservaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estatus?: boolean
    fechaHoraInicio?: boolean
    fechaHoraFin?: boolean
    tipo?: boolean
    asistio?: boolean
    motivoRechazo?: boolean
    usuarioSolicitoId?: boolean
    usuarioAprobadorId?: boolean
    usuarioRechazadoId?: boolean
    usuarioRenovoId?: boolean
    usuarioRecibioId?: boolean
    usuarioTutorId?: boolean
    fechaRenovacion?: boolean
    fechaAprobacion?: boolean
    fechaRechazo?: boolean
    fechaRecibido?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    mostrarEnPantalla?: boolean
    usuarioSolicito?: boolean | UserDefaultArgs<ExtArgs>
    usuarioAprobador?: boolean | Reserva$usuarioAprobadorArgs<ExtArgs>
    usuarioRechazado?: boolean | Reserva$usuarioRechazadoArgs<ExtArgs>
    usuarioRenovo?: boolean | Reserva$usuarioRenovoArgs<ExtArgs>
    usuarioRecibio?: boolean | Reserva$usuarioRecibioArgs<ExtArgs>
    usuarioTutor?: boolean | Reserva$usuarioTutorArgs<ExtArgs>
  }, ExtArgs["result"]["reserva"]>

  export type ReservaSelectScalar = {
    id?: boolean
    estatus?: boolean
    fechaHoraInicio?: boolean
    fechaHoraFin?: boolean
    tipo?: boolean
    asistio?: boolean
    motivoRechazo?: boolean
    usuarioSolicitoId?: boolean
    usuarioAprobadorId?: boolean
    usuarioRechazadoId?: boolean
    usuarioRenovoId?: boolean
    usuarioRecibioId?: boolean
    usuarioTutorId?: boolean
    fechaRenovacion?: boolean
    fechaAprobacion?: boolean
    fechaRechazo?: boolean
    fechaRecibido?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    mostrarEnPantalla?: boolean
  }

  export type ReservaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "estatus" | "fechaHoraInicio" | "fechaHoraFin" | "tipo" | "asistio" | "motivoRechazo" | "usuarioSolicitoId" | "usuarioAprobadorId" | "usuarioRechazadoId" | "usuarioRenovoId" | "usuarioRecibioId" | "usuarioTutorId" | "fechaRenovacion" | "fechaAprobacion" | "fechaRechazo" | "fechaRecibido" | "usuarioCreadorId" | "usuarioModificadorId" | "fechaCreacion" | "fechaModificacion" | "mostrarEnPantalla", ExtArgs["result"]["reserva"]>
  export type ReservaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarioSolicito?: boolean | UserDefaultArgs<ExtArgs>
    usuarioAprobador?: boolean | Reserva$usuarioAprobadorArgs<ExtArgs>
    usuarioRechazado?: boolean | Reserva$usuarioRechazadoArgs<ExtArgs>
    usuarioRenovo?: boolean | Reserva$usuarioRenovoArgs<ExtArgs>
    usuarioRecibio?: boolean | Reserva$usuarioRecibioArgs<ExtArgs>
    usuarioTutor?: boolean | Reserva$usuarioTutorArgs<ExtArgs>
    reservaEquipo?: boolean | Reserva$reservaEquipoArgs<ExtArgs>
    reservaLibro?: boolean | Reserva$reservaLibroArgs<ExtArgs>
    reservaLaboratorioCerrado?: boolean | Reserva$reservaLaboratorioCerradoArgs<ExtArgs>
    reservaLaboratorioAbierto?: boolean | Reserva$reservaLaboratorioAbiertoArgs<ExtArgs>
  }
  export type ReservaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarioSolicito?: boolean | UserDefaultArgs<ExtArgs>
    usuarioAprobador?: boolean | Reserva$usuarioAprobadorArgs<ExtArgs>
    usuarioRechazado?: boolean | Reserva$usuarioRechazadoArgs<ExtArgs>
    usuarioRenovo?: boolean | Reserva$usuarioRenovoArgs<ExtArgs>
    usuarioRecibio?: boolean | Reserva$usuarioRecibioArgs<ExtArgs>
    usuarioTutor?: boolean | Reserva$usuarioTutorArgs<ExtArgs>
  }
  export type ReservaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarioSolicito?: boolean | UserDefaultArgs<ExtArgs>
    usuarioAprobador?: boolean | Reserva$usuarioAprobadorArgs<ExtArgs>
    usuarioRechazado?: boolean | Reserva$usuarioRechazadoArgs<ExtArgs>
    usuarioRenovo?: boolean | Reserva$usuarioRenovoArgs<ExtArgs>
    usuarioRecibio?: boolean | Reserva$usuarioRecibioArgs<ExtArgs>
    usuarioTutor?: boolean | Reserva$usuarioTutorArgs<ExtArgs>
  }

  export type $ReservaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reserva"
    objects: {
      usuarioSolicito: Prisma.$UserPayload<ExtArgs>
      usuarioAprobador: Prisma.$UserPayload<ExtArgs> | null
      usuarioRechazado: Prisma.$UserPayload<ExtArgs> | null
      usuarioRenovo: Prisma.$UserPayload<ExtArgs> | null
      usuarioRecibio: Prisma.$UserPayload<ExtArgs> | null
      usuarioTutor: Prisma.$UserPayload<ExtArgs> | null
      reservaEquipo: Prisma.$ReservaEquipoPayload<ExtArgs> | null
      reservaLibro: Prisma.$ReservaLibroPayload<ExtArgs> | null
      reservaLaboratorioCerrado: Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs> | null
      reservaLaboratorioAbierto: Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      estatus: $Enums.ReservaEstatus
      fechaHoraInicio: Date
      fechaHoraFin: Date
      tipo: $Enums.ReservaTipo
      asistio: boolean
      motivoRechazo: string | null
      usuarioSolicitoId: string
      usuarioAprobadorId: string | null
      usuarioRechazadoId: string | null
      usuarioRenovoId: string | null
      usuarioRecibioId: string | null
      usuarioTutorId: string | null
      fechaRenovacion: Date | null
      fechaAprobacion: Date | null
      fechaRechazo: Date | null
      fechaRecibido: Date | null
      usuarioCreadorId: string
      usuarioModificadorId: string
      fechaCreacion: Date
      fechaModificacion: Date
      mostrarEnPantalla: boolean
    }, ExtArgs["result"]["reserva"]>
    composites: {}
  }

  type ReservaGetPayload<S extends boolean | null | undefined | ReservaDefaultArgs> = $Result.GetResult<Prisma.$ReservaPayload, S>

  type ReservaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservaCountAggregateInputType | true
    }

  export interface ReservaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reserva'], meta: { name: 'Reserva' } }
    /**
     * Find zero or one Reserva that matches the filter.
     * @param {ReservaFindUniqueArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservaFindUniqueArgs>(args: SelectSubset<T, ReservaFindUniqueArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reserva that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservaFindUniqueOrThrowArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservaFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reserva that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindFirstArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservaFindFirstArgs>(args?: SelectSubset<T, ReservaFindFirstArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reserva that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindFirstOrThrowArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservaFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservas
     * const reservas = await prisma.reserva.findMany()
     * 
     * // Get first 10 Reservas
     * const reservas = await prisma.reserva.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservaWithIdOnly = await prisma.reserva.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservaFindManyArgs>(args?: SelectSubset<T, ReservaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reserva.
     * @param {ReservaCreateArgs} args - Arguments to create a Reserva.
     * @example
     * // Create one Reserva
     * const Reserva = await prisma.reserva.create({
     *   data: {
     *     // ... data to create a Reserva
     *   }
     * })
     * 
     */
    create<T extends ReservaCreateArgs>(args: SelectSubset<T, ReservaCreateArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reservas.
     * @param {ReservaCreateManyArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reserva = await prisma.reserva.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservaCreateManyArgs>(args?: SelectSubset<T, ReservaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reservas and returns the data saved in the database.
     * @param {ReservaCreateManyAndReturnArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reserva = await prisma.reserva.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reservas and only return the `id`
     * const reservaWithIdOnly = await prisma.reserva.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservaCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reserva.
     * @param {ReservaDeleteArgs} args - Arguments to delete one Reserva.
     * @example
     * // Delete one Reserva
     * const Reserva = await prisma.reserva.delete({
     *   where: {
     *     // ... filter to delete one Reserva
     *   }
     * })
     * 
     */
    delete<T extends ReservaDeleteArgs>(args: SelectSubset<T, ReservaDeleteArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reserva.
     * @param {ReservaUpdateArgs} args - Arguments to update one Reserva.
     * @example
     * // Update one Reserva
     * const reserva = await prisma.reserva.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservaUpdateArgs>(args: SelectSubset<T, ReservaUpdateArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reservas.
     * @param {ReservaDeleteManyArgs} args - Arguments to filter Reservas to delete.
     * @example
     * // Delete a few Reservas
     * const { count } = await prisma.reserva.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservaDeleteManyArgs>(args?: SelectSubset<T, ReservaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservas
     * const reserva = await prisma.reserva.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservaUpdateManyArgs>(args: SelectSubset<T, ReservaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas and returns the data updated in the database.
     * @param {ReservaUpdateManyAndReturnArgs} args - Arguments to update many Reservas.
     * @example
     * // Update many Reservas
     * const reserva = await prisma.reserva.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reservas and only return the `id`
     * const reservaWithIdOnly = await prisma.reserva.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservaUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reserva.
     * @param {ReservaUpsertArgs} args - Arguments to update or create a Reserva.
     * @example
     * // Update or create a Reserva
     * const reserva = await prisma.reserva.upsert({
     *   create: {
     *     // ... data to create a Reserva
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reserva we want to update
     *   }
     * })
     */
    upsert<T extends ReservaUpsertArgs>(args: SelectSubset<T, ReservaUpsertArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaCountArgs} args - Arguments to filter Reservas to count.
     * @example
     * // Count the number of Reservas
     * const count = await prisma.reserva.count({
     *   where: {
     *     // ... the filter for the Reservas we want to count
     *   }
     * })
    **/
    count<T extends ReservaCountArgs>(
      args?: Subset<T, ReservaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reserva.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservaAggregateArgs>(args: Subset<T, ReservaAggregateArgs>): Prisma.PrismaPromise<GetReservaAggregateType<T>>

    /**
     * Group by Reserva.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservaGroupByArgs['orderBy'] }
        : { orderBy?: ReservaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reserva model
   */
  readonly fields: ReservaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reserva.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarioSolicito<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarioAprobador<T extends Reserva$usuarioAprobadorArgs<ExtArgs> = {}>(args?: Subset<T, Reserva$usuarioAprobadorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuarioRechazado<T extends Reserva$usuarioRechazadoArgs<ExtArgs> = {}>(args?: Subset<T, Reserva$usuarioRechazadoArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuarioRenovo<T extends Reserva$usuarioRenovoArgs<ExtArgs> = {}>(args?: Subset<T, Reserva$usuarioRenovoArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuarioRecibio<T extends Reserva$usuarioRecibioArgs<ExtArgs> = {}>(args?: Subset<T, Reserva$usuarioRecibioArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuarioTutor<T extends Reserva$usuarioTutorArgs<ExtArgs> = {}>(args?: Subset<T, Reserva$usuarioTutorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    reservaEquipo<T extends Reserva$reservaEquipoArgs<ExtArgs> = {}>(args?: Subset<T, Reserva$reservaEquipoArgs<ExtArgs>>): Prisma__ReservaEquipoClient<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    reservaLibro<T extends Reserva$reservaLibroArgs<ExtArgs> = {}>(args?: Subset<T, Reserva$reservaLibroArgs<ExtArgs>>): Prisma__ReservaLibroClient<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    reservaLaboratorioCerrado<T extends Reserva$reservaLaboratorioCerradoArgs<ExtArgs> = {}>(args?: Subset<T, Reserva$reservaLaboratorioCerradoArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    reservaLaboratorioAbierto<T extends Reserva$reservaLaboratorioAbiertoArgs<ExtArgs> = {}>(args?: Subset<T, Reserva$reservaLaboratorioAbiertoArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reserva model
   */
  interface ReservaFieldRefs {
    readonly id: FieldRef<"Reserva", 'Int'>
    readonly estatus: FieldRef<"Reserva", 'ReservaEstatus'>
    readonly fechaHoraInicio: FieldRef<"Reserva", 'DateTime'>
    readonly fechaHoraFin: FieldRef<"Reserva", 'DateTime'>
    readonly tipo: FieldRef<"Reserva", 'ReservaTipo'>
    readonly asistio: FieldRef<"Reserva", 'Boolean'>
    readonly motivoRechazo: FieldRef<"Reserva", 'String'>
    readonly usuarioSolicitoId: FieldRef<"Reserva", 'String'>
    readonly usuarioAprobadorId: FieldRef<"Reserva", 'String'>
    readonly usuarioRechazadoId: FieldRef<"Reserva", 'String'>
    readonly usuarioRenovoId: FieldRef<"Reserva", 'String'>
    readonly usuarioRecibioId: FieldRef<"Reserva", 'String'>
    readonly usuarioTutorId: FieldRef<"Reserva", 'String'>
    readonly fechaRenovacion: FieldRef<"Reserva", 'DateTime'>
    readonly fechaAprobacion: FieldRef<"Reserva", 'DateTime'>
    readonly fechaRechazo: FieldRef<"Reserva", 'DateTime'>
    readonly fechaRecibido: FieldRef<"Reserva", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Reserva", 'String'>
    readonly usuarioModificadorId: FieldRef<"Reserva", 'String'>
    readonly fechaCreacion: FieldRef<"Reserva", 'DateTime'>
    readonly fechaModificacion: FieldRef<"Reserva", 'DateTime'>
    readonly mostrarEnPantalla: FieldRef<"Reserva", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Reserva findUnique
   */
  export type ReservaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva findUniqueOrThrow
   */
  export type ReservaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva findFirst
   */
  export type ReservaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva findFirstOrThrow
   */
  export type ReservaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva findMany
   */
  export type ReservaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva create
   */
  export type ReservaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The data needed to create a Reserva.
     */
    data: XOR<ReservaCreateInput, ReservaUncheckedCreateInput>
  }

  /**
   * Reserva createMany
   */
  export type ReservaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservas.
     */
    data: ReservaCreateManyInput | ReservaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reserva createManyAndReturn
   */
  export type ReservaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * The data used to create many Reservas.
     */
    data: ReservaCreateManyInput | ReservaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reserva update
   */
  export type ReservaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The data needed to update a Reserva.
     */
    data: XOR<ReservaUpdateInput, ReservaUncheckedUpdateInput>
    /**
     * Choose, which Reserva to update.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva updateMany
   */
  export type ReservaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservaWhereInput
    /**
     * Limit how many Reservas to update.
     */
    limit?: number
  }

  /**
   * Reserva updateManyAndReturn
   */
  export type ReservaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservaWhereInput
    /**
     * Limit how many Reservas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reserva upsert
   */
  export type ReservaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The filter to search for the Reserva to update in case it exists.
     */
    where: ReservaWhereUniqueInput
    /**
     * In case the Reserva found by the `where` argument doesn't exist, create a new Reserva with this data.
     */
    create: XOR<ReservaCreateInput, ReservaUncheckedCreateInput>
    /**
     * In case the Reserva was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservaUpdateInput, ReservaUncheckedUpdateInput>
  }

  /**
   * Reserva delete
   */
  export type ReservaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter which Reserva to delete.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva deleteMany
   */
  export type ReservaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to delete
     */
    where?: ReservaWhereInput
    /**
     * Limit how many Reservas to delete.
     */
    limit?: number
  }

  /**
   * Reserva.usuarioAprobador
   */
  export type Reserva$usuarioAprobadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Reserva.usuarioRechazado
   */
  export type Reserva$usuarioRechazadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Reserva.usuarioRenovo
   */
  export type Reserva$usuarioRenovoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Reserva.usuarioRecibio
   */
  export type Reserva$usuarioRecibioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Reserva.usuarioTutor
   */
  export type Reserva$usuarioTutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Reserva.reservaEquipo
   */
  export type Reserva$reservaEquipoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
    where?: ReservaEquipoWhereInput
  }

  /**
   * Reserva.reservaLibro
   */
  export type Reserva$reservaLibroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
    where?: ReservaLibroWhereInput
  }

  /**
   * Reserva.reservaLaboratorioCerrado
   */
  export type Reserva$reservaLaboratorioCerradoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    where?: ReservaLaboratorioCerradoWhereInput
  }

  /**
   * Reserva.reservaLaboratorioAbierto
   */
  export type Reserva$reservaLaboratorioAbiertoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    where?: ReservaLaboratorioAbiertoWhereInput
  }

  /**
   * Reserva without action
   */
  export type ReservaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
  }


  /**
   * Model ReservaEquipo
   */

  export type AggregateReservaEquipo = {
    _count: ReservaEquipoCountAggregateOutputType | null
    _avg: ReservaEquipoAvgAggregateOutputType | null
    _sum: ReservaEquipoSumAggregateOutputType | null
    _min: ReservaEquipoMinAggregateOutputType | null
    _max: ReservaEquipoMaxAggregateOutputType | null
  }

  export type ReservaEquipoAvgAggregateOutputType = {
    id: number | null
    reservaId: number | null
    equipoId: number | null
  }

  export type ReservaEquipoSumAggregateOutputType = {
    id: number | null
    reservaId: number | null
    equipoId: number | null
  }

  export type ReservaEquipoMinAggregateOutputType = {
    id: number | null
    fechaEntregado: Date | null
    reservaId: number | null
    equipoId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaEquipoMaxAggregateOutputType = {
    id: number | null
    fechaEntregado: Date | null
    reservaId: number | null
    equipoId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaEquipoCountAggregateOutputType = {
    id: number
    fechaEntregado: number
    reservaId: number
    equipoId: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type ReservaEquipoAvgAggregateInputType = {
    id?: true
    reservaId?: true
    equipoId?: true
  }

  export type ReservaEquipoSumAggregateInputType = {
    id?: true
    reservaId?: true
    equipoId?: true
  }

  export type ReservaEquipoMinAggregateInputType = {
    id?: true
    fechaEntregado?: true
    reservaId?: true
    equipoId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaEquipoMaxAggregateInputType = {
    id?: true
    fechaEntregado?: true
    reservaId?: true
    equipoId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaEquipoCountAggregateInputType = {
    id?: true
    fechaEntregado?: true
    reservaId?: true
    equipoId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type ReservaEquipoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaEquipo to aggregate.
     */
    where?: ReservaEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaEquipos to fetch.
     */
    orderBy?: ReservaEquipoOrderByWithRelationInput | ReservaEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservaEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaEquipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReservaEquipos
    **/
    _count?: true | ReservaEquipoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservaEquipoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservaEquipoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservaEquipoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservaEquipoMaxAggregateInputType
  }

  export type GetReservaEquipoAggregateType<T extends ReservaEquipoAggregateArgs> = {
        [P in keyof T & keyof AggregateReservaEquipo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservaEquipo[P]>
      : GetScalarType<T[P], AggregateReservaEquipo[P]>
  }




  export type ReservaEquipoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaEquipoWhereInput
    orderBy?: ReservaEquipoOrderByWithAggregationInput | ReservaEquipoOrderByWithAggregationInput[]
    by: ReservaEquipoScalarFieldEnum[] | ReservaEquipoScalarFieldEnum
    having?: ReservaEquipoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservaEquipoCountAggregateInputType | true
    _avg?: ReservaEquipoAvgAggregateInputType
    _sum?: ReservaEquipoSumAggregateInputType
    _min?: ReservaEquipoMinAggregateInputType
    _max?: ReservaEquipoMaxAggregateInputType
  }

  export type ReservaEquipoGroupByOutputType = {
    id: number
    fechaEntregado: Date
    reservaId: number
    equipoId: number
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: ReservaEquipoCountAggregateOutputType | null
    _avg: ReservaEquipoAvgAggregateOutputType | null
    _sum: ReservaEquipoSumAggregateOutputType | null
    _min: ReservaEquipoMinAggregateOutputType | null
    _max: ReservaEquipoMaxAggregateOutputType | null
  }

  type GetReservaEquipoGroupByPayload<T extends ReservaEquipoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservaEquipoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservaEquipoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservaEquipoGroupByOutputType[P]>
            : GetScalarType<T[P], ReservaEquipoGroupByOutputType[P]>
        }
      >
    >


  export type ReservaEquipoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaEntregado?: boolean
    reservaId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    equipo?: boolean | EquipoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaEquipo"]>

  export type ReservaEquipoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaEntregado?: boolean
    reservaId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    equipo?: boolean | EquipoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaEquipo"]>

  export type ReservaEquipoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaEntregado?: boolean
    reservaId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    equipo?: boolean | EquipoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaEquipo"]>

  export type ReservaEquipoSelectScalar = {
    id?: boolean
    fechaEntregado?: boolean
    reservaId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type ReservaEquipoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fechaEntregado" | "reservaId" | "equipoId" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["reservaEquipo"]>
  export type ReservaEquipoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    equipo?: boolean | EquipoDefaultArgs<ExtArgs>
  }
  export type ReservaEquipoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    equipo?: boolean | EquipoDefaultArgs<ExtArgs>
  }
  export type ReservaEquipoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    equipo?: boolean | EquipoDefaultArgs<ExtArgs>
  }

  export type $ReservaEquipoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReservaEquipo"
    objects: {
      reserva: Prisma.$ReservaPayload<ExtArgs>
      equipo: Prisma.$EquipoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fechaEntregado: Date
      reservaId: number
      equipoId: number
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["reservaEquipo"]>
    composites: {}
  }

  type ReservaEquipoGetPayload<S extends boolean | null | undefined | ReservaEquipoDefaultArgs> = $Result.GetResult<Prisma.$ReservaEquipoPayload, S>

  type ReservaEquipoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservaEquipoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservaEquipoCountAggregateInputType | true
    }

  export interface ReservaEquipoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReservaEquipo'], meta: { name: 'ReservaEquipo' } }
    /**
     * Find zero or one ReservaEquipo that matches the filter.
     * @param {ReservaEquipoFindUniqueArgs} args - Arguments to find a ReservaEquipo
     * @example
     * // Get one ReservaEquipo
     * const reservaEquipo = await prisma.reservaEquipo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservaEquipoFindUniqueArgs>(args: SelectSubset<T, ReservaEquipoFindUniqueArgs<ExtArgs>>): Prisma__ReservaEquipoClient<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReservaEquipo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservaEquipoFindUniqueOrThrowArgs} args - Arguments to find a ReservaEquipo
     * @example
     * // Get one ReservaEquipo
     * const reservaEquipo = await prisma.reservaEquipo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservaEquipoFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservaEquipoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservaEquipoClient<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaEquipo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEquipoFindFirstArgs} args - Arguments to find a ReservaEquipo
     * @example
     * // Get one ReservaEquipo
     * const reservaEquipo = await prisma.reservaEquipo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservaEquipoFindFirstArgs>(args?: SelectSubset<T, ReservaEquipoFindFirstArgs<ExtArgs>>): Prisma__ReservaEquipoClient<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaEquipo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEquipoFindFirstOrThrowArgs} args - Arguments to find a ReservaEquipo
     * @example
     * // Get one ReservaEquipo
     * const reservaEquipo = await prisma.reservaEquipo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservaEquipoFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservaEquipoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservaEquipoClient<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReservaEquipos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEquipoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReservaEquipos
     * const reservaEquipos = await prisma.reservaEquipo.findMany()
     * 
     * // Get first 10 ReservaEquipos
     * const reservaEquipos = await prisma.reservaEquipo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservaEquipoWithIdOnly = await prisma.reservaEquipo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservaEquipoFindManyArgs>(args?: SelectSubset<T, ReservaEquipoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReservaEquipo.
     * @param {ReservaEquipoCreateArgs} args - Arguments to create a ReservaEquipo.
     * @example
     * // Create one ReservaEquipo
     * const ReservaEquipo = await prisma.reservaEquipo.create({
     *   data: {
     *     // ... data to create a ReservaEquipo
     *   }
     * })
     * 
     */
    create<T extends ReservaEquipoCreateArgs>(args: SelectSubset<T, ReservaEquipoCreateArgs<ExtArgs>>): Prisma__ReservaEquipoClient<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReservaEquipos.
     * @param {ReservaEquipoCreateManyArgs} args - Arguments to create many ReservaEquipos.
     * @example
     * // Create many ReservaEquipos
     * const reservaEquipo = await prisma.reservaEquipo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservaEquipoCreateManyArgs>(args?: SelectSubset<T, ReservaEquipoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReservaEquipos and returns the data saved in the database.
     * @param {ReservaEquipoCreateManyAndReturnArgs} args - Arguments to create many ReservaEquipos.
     * @example
     * // Create many ReservaEquipos
     * const reservaEquipo = await prisma.reservaEquipo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReservaEquipos and only return the `id`
     * const reservaEquipoWithIdOnly = await prisma.reservaEquipo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservaEquipoCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservaEquipoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReservaEquipo.
     * @param {ReservaEquipoDeleteArgs} args - Arguments to delete one ReservaEquipo.
     * @example
     * // Delete one ReservaEquipo
     * const ReservaEquipo = await prisma.reservaEquipo.delete({
     *   where: {
     *     // ... filter to delete one ReservaEquipo
     *   }
     * })
     * 
     */
    delete<T extends ReservaEquipoDeleteArgs>(args: SelectSubset<T, ReservaEquipoDeleteArgs<ExtArgs>>): Prisma__ReservaEquipoClient<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReservaEquipo.
     * @param {ReservaEquipoUpdateArgs} args - Arguments to update one ReservaEquipo.
     * @example
     * // Update one ReservaEquipo
     * const reservaEquipo = await prisma.reservaEquipo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservaEquipoUpdateArgs>(args: SelectSubset<T, ReservaEquipoUpdateArgs<ExtArgs>>): Prisma__ReservaEquipoClient<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReservaEquipos.
     * @param {ReservaEquipoDeleteManyArgs} args - Arguments to filter ReservaEquipos to delete.
     * @example
     * // Delete a few ReservaEquipos
     * const { count } = await prisma.reservaEquipo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservaEquipoDeleteManyArgs>(args?: SelectSubset<T, ReservaEquipoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaEquipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEquipoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReservaEquipos
     * const reservaEquipo = await prisma.reservaEquipo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservaEquipoUpdateManyArgs>(args: SelectSubset<T, ReservaEquipoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaEquipos and returns the data updated in the database.
     * @param {ReservaEquipoUpdateManyAndReturnArgs} args - Arguments to update many ReservaEquipos.
     * @example
     * // Update many ReservaEquipos
     * const reservaEquipo = await prisma.reservaEquipo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReservaEquipos and only return the `id`
     * const reservaEquipoWithIdOnly = await prisma.reservaEquipo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservaEquipoUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservaEquipoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReservaEquipo.
     * @param {ReservaEquipoUpsertArgs} args - Arguments to update or create a ReservaEquipo.
     * @example
     * // Update or create a ReservaEquipo
     * const reservaEquipo = await prisma.reservaEquipo.upsert({
     *   create: {
     *     // ... data to create a ReservaEquipo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReservaEquipo we want to update
     *   }
     * })
     */
    upsert<T extends ReservaEquipoUpsertArgs>(args: SelectSubset<T, ReservaEquipoUpsertArgs<ExtArgs>>): Prisma__ReservaEquipoClient<$Result.GetResult<Prisma.$ReservaEquipoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReservaEquipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEquipoCountArgs} args - Arguments to filter ReservaEquipos to count.
     * @example
     * // Count the number of ReservaEquipos
     * const count = await prisma.reservaEquipo.count({
     *   where: {
     *     // ... the filter for the ReservaEquipos we want to count
     *   }
     * })
    **/
    count<T extends ReservaEquipoCountArgs>(
      args?: Subset<T, ReservaEquipoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservaEquipoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReservaEquipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEquipoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservaEquipoAggregateArgs>(args: Subset<T, ReservaEquipoAggregateArgs>): Prisma.PrismaPromise<GetReservaEquipoAggregateType<T>>

    /**
     * Group by ReservaEquipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEquipoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservaEquipoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservaEquipoGroupByArgs['orderBy'] }
        : { orderBy?: ReservaEquipoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservaEquipoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaEquipoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReservaEquipo model
   */
  readonly fields: ReservaEquipoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReservaEquipo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservaEquipoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reserva<T extends ReservaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservaDefaultArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    equipo<T extends EquipoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipoDefaultArgs<ExtArgs>>): Prisma__EquipoClient<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReservaEquipo model
   */
  interface ReservaEquipoFieldRefs {
    readonly id: FieldRef<"ReservaEquipo", 'Int'>
    readonly fechaEntregado: FieldRef<"ReservaEquipo", 'DateTime'>
    readonly reservaId: FieldRef<"ReservaEquipo", 'Int'>
    readonly equipoId: FieldRef<"ReservaEquipo", 'Int'>
    readonly fechaCreacion: FieldRef<"ReservaEquipo", 'DateTime'>
    readonly fechaModificacion: FieldRef<"ReservaEquipo", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"ReservaEquipo", 'String'>
    readonly usuarioModificadorId: FieldRef<"ReservaEquipo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ReservaEquipo findUnique
   */
  export type ReservaEquipoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaEquipo to fetch.
     */
    where: ReservaEquipoWhereUniqueInput
  }

  /**
   * ReservaEquipo findUniqueOrThrow
   */
  export type ReservaEquipoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaEquipo to fetch.
     */
    where: ReservaEquipoWhereUniqueInput
  }

  /**
   * ReservaEquipo findFirst
   */
  export type ReservaEquipoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaEquipo to fetch.
     */
    where?: ReservaEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaEquipos to fetch.
     */
    orderBy?: ReservaEquipoOrderByWithRelationInput | ReservaEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaEquipos.
     */
    cursor?: ReservaEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaEquipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaEquipos.
     */
    distinct?: ReservaEquipoScalarFieldEnum | ReservaEquipoScalarFieldEnum[]
  }

  /**
   * ReservaEquipo findFirstOrThrow
   */
  export type ReservaEquipoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaEquipo to fetch.
     */
    where?: ReservaEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaEquipos to fetch.
     */
    orderBy?: ReservaEquipoOrderByWithRelationInput | ReservaEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaEquipos.
     */
    cursor?: ReservaEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaEquipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaEquipos.
     */
    distinct?: ReservaEquipoScalarFieldEnum | ReservaEquipoScalarFieldEnum[]
  }

  /**
   * ReservaEquipo findMany
   */
  export type ReservaEquipoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaEquipos to fetch.
     */
    where?: ReservaEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaEquipos to fetch.
     */
    orderBy?: ReservaEquipoOrderByWithRelationInput | ReservaEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReservaEquipos.
     */
    cursor?: ReservaEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaEquipos.
     */
    skip?: number
    distinct?: ReservaEquipoScalarFieldEnum | ReservaEquipoScalarFieldEnum[]
  }

  /**
   * ReservaEquipo create
   */
  export type ReservaEquipoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
    /**
     * The data needed to create a ReservaEquipo.
     */
    data: XOR<ReservaEquipoCreateInput, ReservaEquipoUncheckedCreateInput>
  }

  /**
   * ReservaEquipo createMany
   */
  export type ReservaEquipoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReservaEquipos.
     */
    data: ReservaEquipoCreateManyInput | ReservaEquipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReservaEquipo createManyAndReturn
   */
  export type ReservaEquipoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * The data used to create many ReservaEquipos.
     */
    data: ReservaEquipoCreateManyInput | ReservaEquipoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaEquipo update
   */
  export type ReservaEquipoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
    /**
     * The data needed to update a ReservaEquipo.
     */
    data: XOR<ReservaEquipoUpdateInput, ReservaEquipoUncheckedUpdateInput>
    /**
     * Choose, which ReservaEquipo to update.
     */
    where: ReservaEquipoWhereUniqueInput
  }

  /**
   * ReservaEquipo updateMany
   */
  export type ReservaEquipoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReservaEquipos.
     */
    data: XOR<ReservaEquipoUpdateManyMutationInput, ReservaEquipoUncheckedUpdateManyInput>
    /**
     * Filter which ReservaEquipos to update
     */
    where?: ReservaEquipoWhereInput
    /**
     * Limit how many ReservaEquipos to update.
     */
    limit?: number
  }

  /**
   * ReservaEquipo updateManyAndReturn
   */
  export type ReservaEquipoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * The data used to update ReservaEquipos.
     */
    data: XOR<ReservaEquipoUpdateManyMutationInput, ReservaEquipoUncheckedUpdateManyInput>
    /**
     * Filter which ReservaEquipos to update
     */
    where?: ReservaEquipoWhereInput
    /**
     * Limit how many ReservaEquipos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaEquipo upsert
   */
  export type ReservaEquipoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
    /**
     * The filter to search for the ReservaEquipo to update in case it exists.
     */
    where: ReservaEquipoWhereUniqueInput
    /**
     * In case the ReservaEquipo found by the `where` argument doesn't exist, create a new ReservaEquipo with this data.
     */
    create: XOR<ReservaEquipoCreateInput, ReservaEquipoUncheckedCreateInput>
    /**
     * In case the ReservaEquipo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservaEquipoUpdateInput, ReservaEquipoUncheckedUpdateInput>
  }

  /**
   * ReservaEquipo delete
   */
  export type ReservaEquipoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
    /**
     * Filter which ReservaEquipo to delete.
     */
    where: ReservaEquipoWhereUniqueInput
  }

  /**
   * ReservaEquipo deleteMany
   */
  export type ReservaEquipoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaEquipos to delete
     */
    where?: ReservaEquipoWhereInput
    /**
     * Limit how many ReservaEquipos to delete.
     */
    limit?: number
  }

  /**
   * ReservaEquipo without action
   */
  export type ReservaEquipoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEquipo
     */
    select?: ReservaEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaEquipo
     */
    omit?: ReservaEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEquipoInclude<ExtArgs> | null
  }


  /**
   * Model ReservaLibro
   */

  export type AggregateReservaLibro = {
    _count: ReservaLibroCountAggregateOutputType | null
    _avg: ReservaLibroAvgAggregateOutputType | null
    _sum: ReservaLibroSumAggregateOutputType | null
    _min: ReservaLibroMinAggregateOutputType | null
    _max: ReservaLibroMaxAggregateOutputType | null
  }

  export type ReservaLibroAvgAggregateOutputType = {
    id: number | null
    reservaId: number | null
    libroId: number | null
  }

  export type ReservaLibroSumAggregateOutputType = {
    id: number | null
    reservaId: number | null
    libroId: number | null
  }

  export type ReservaLibroMinAggregateOutputType = {
    id: number | null
    fechaEntregado: Date | null
    reservaId: number | null
    libroId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaLibroMaxAggregateOutputType = {
    id: number | null
    fechaEntregado: Date | null
    reservaId: number | null
    libroId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaLibroCountAggregateOutputType = {
    id: number
    fechaEntregado: number
    reservaId: number
    libroId: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type ReservaLibroAvgAggregateInputType = {
    id?: true
    reservaId?: true
    libroId?: true
  }

  export type ReservaLibroSumAggregateInputType = {
    id?: true
    reservaId?: true
    libroId?: true
  }

  export type ReservaLibroMinAggregateInputType = {
    id?: true
    fechaEntregado?: true
    reservaId?: true
    libroId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaLibroMaxAggregateInputType = {
    id?: true
    fechaEntregado?: true
    reservaId?: true
    libroId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaLibroCountAggregateInputType = {
    id?: true
    fechaEntregado?: true
    reservaId?: true
    libroId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type ReservaLibroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaLibro to aggregate.
     */
    where?: ReservaLibroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLibros to fetch.
     */
    orderBy?: ReservaLibroOrderByWithRelationInput | ReservaLibroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservaLibroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLibros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLibros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReservaLibros
    **/
    _count?: true | ReservaLibroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservaLibroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservaLibroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservaLibroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservaLibroMaxAggregateInputType
  }

  export type GetReservaLibroAggregateType<T extends ReservaLibroAggregateArgs> = {
        [P in keyof T & keyof AggregateReservaLibro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservaLibro[P]>
      : GetScalarType<T[P], AggregateReservaLibro[P]>
  }




  export type ReservaLibroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLibroWhereInput
    orderBy?: ReservaLibroOrderByWithAggregationInput | ReservaLibroOrderByWithAggregationInput[]
    by: ReservaLibroScalarFieldEnum[] | ReservaLibroScalarFieldEnum
    having?: ReservaLibroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservaLibroCountAggregateInputType | true
    _avg?: ReservaLibroAvgAggregateInputType
    _sum?: ReservaLibroSumAggregateInputType
    _min?: ReservaLibroMinAggregateInputType
    _max?: ReservaLibroMaxAggregateInputType
  }

  export type ReservaLibroGroupByOutputType = {
    id: number
    fechaEntregado: Date
    reservaId: number
    libroId: number
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: ReservaLibroCountAggregateOutputType | null
    _avg: ReservaLibroAvgAggregateOutputType | null
    _sum: ReservaLibroSumAggregateOutputType | null
    _min: ReservaLibroMinAggregateOutputType | null
    _max: ReservaLibroMaxAggregateOutputType | null
  }

  type GetReservaLibroGroupByPayload<T extends ReservaLibroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservaLibroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservaLibroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservaLibroGroupByOutputType[P]>
            : GetScalarType<T[P], ReservaLibroGroupByOutputType[P]>
        }
      >
    >


  export type ReservaLibroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaEntregado?: boolean
    reservaId?: boolean
    libroId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    libro?: boolean | LibroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLibro"]>

  export type ReservaLibroSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaEntregado?: boolean
    reservaId?: boolean
    libroId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    libro?: boolean | LibroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLibro"]>

  export type ReservaLibroSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaEntregado?: boolean
    reservaId?: boolean
    libroId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    libro?: boolean | LibroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLibro"]>

  export type ReservaLibroSelectScalar = {
    id?: boolean
    fechaEntregado?: boolean
    reservaId?: boolean
    libroId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type ReservaLibroOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fechaEntregado" | "reservaId" | "libroId" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["reservaLibro"]>
  export type ReservaLibroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    libro?: boolean | LibroDefaultArgs<ExtArgs>
  }
  export type ReservaLibroIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    libro?: boolean | LibroDefaultArgs<ExtArgs>
  }
  export type ReservaLibroIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    libro?: boolean | LibroDefaultArgs<ExtArgs>
  }

  export type $ReservaLibroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReservaLibro"
    objects: {
      reserva: Prisma.$ReservaPayload<ExtArgs>
      libro: Prisma.$LibroPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fechaEntregado: Date
      reservaId: number
      libroId: number
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["reservaLibro"]>
    composites: {}
  }

  type ReservaLibroGetPayload<S extends boolean | null | undefined | ReservaLibroDefaultArgs> = $Result.GetResult<Prisma.$ReservaLibroPayload, S>

  type ReservaLibroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservaLibroFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservaLibroCountAggregateInputType | true
    }

  export interface ReservaLibroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReservaLibro'], meta: { name: 'ReservaLibro' } }
    /**
     * Find zero or one ReservaLibro that matches the filter.
     * @param {ReservaLibroFindUniqueArgs} args - Arguments to find a ReservaLibro
     * @example
     * // Get one ReservaLibro
     * const reservaLibro = await prisma.reservaLibro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservaLibroFindUniqueArgs>(args: SelectSubset<T, ReservaLibroFindUniqueArgs<ExtArgs>>): Prisma__ReservaLibroClient<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReservaLibro that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservaLibroFindUniqueOrThrowArgs} args - Arguments to find a ReservaLibro
     * @example
     * // Get one ReservaLibro
     * const reservaLibro = await prisma.reservaLibro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservaLibroFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservaLibroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservaLibroClient<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaLibro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLibroFindFirstArgs} args - Arguments to find a ReservaLibro
     * @example
     * // Get one ReservaLibro
     * const reservaLibro = await prisma.reservaLibro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservaLibroFindFirstArgs>(args?: SelectSubset<T, ReservaLibroFindFirstArgs<ExtArgs>>): Prisma__ReservaLibroClient<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaLibro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLibroFindFirstOrThrowArgs} args - Arguments to find a ReservaLibro
     * @example
     * // Get one ReservaLibro
     * const reservaLibro = await prisma.reservaLibro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservaLibroFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservaLibroFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservaLibroClient<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReservaLibros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLibroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReservaLibros
     * const reservaLibros = await prisma.reservaLibro.findMany()
     * 
     * // Get first 10 ReservaLibros
     * const reservaLibros = await prisma.reservaLibro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservaLibroWithIdOnly = await prisma.reservaLibro.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservaLibroFindManyArgs>(args?: SelectSubset<T, ReservaLibroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReservaLibro.
     * @param {ReservaLibroCreateArgs} args - Arguments to create a ReservaLibro.
     * @example
     * // Create one ReservaLibro
     * const ReservaLibro = await prisma.reservaLibro.create({
     *   data: {
     *     // ... data to create a ReservaLibro
     *   }
     * })
     * 
     */
    create<T extends ReservaLibroCreateArgs>(args: SelectSubset<T, ReservaLibroCreateArgs<ExtArgs>>): Prisma__ReservaLibroClient<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReservaLibros.
     * @param {ReservaLibroCreateManyArgs} args - Arguments to create many ReservaLibros.
     * @example
     * // Create many ReservaLibros
     * const reservaLibro = await prisma.reservaLibro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservaLibroCreateManyArgs>(args?: SelectSubset<T, ReservaLibroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReservaLibros and returns the data saved in the database.
     * @param {ReservaLibroCreateManyAndReturnArgs} args - Arguments to create many ReservaLibros.
     * @example
     * // Create many ReservaLibros
     * const reservaLibro = await prisma.reservaLibro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReservaLibros and only return the `id`
     * const reservaLibroWithIdOnly = await prisma.reservaLibro.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservaLibroCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservaLibroCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReservaLibro.
     * @param {ReservaLibroDeleteArgs} args - Arguments to delete one ReservaLibro.
     * @example
     * // Delete one ReservaLibro
     * const ReservaLibro = await prisma.reservaLibro.delete({
     *   where: {
     *     // ... filter to delete one ReservaLibro
     *   }
     * })
     * 
     */
    delete<T extends ReservaLibroDeleteArgs>(args: SelectSubset<T, ReservaLibroDeleteArgs<ExtArgs>>): Prisma__ReservaLibroClient<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReservaLibro.
     * @param {ReservaLibroUpdateArgs} args - Arguments to update one ReservaLibro.
     * @example
     * // Update one ReservaLibro
     * const reservaLibro = await prisma.reservaLibro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservaLibroUpdateArgs>(args: SelectSubset<T, ReservaLibroUpdateArgs<ExtArgs>>): Prisma__ReservaLibroClient<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReservaLibros.
     * @param {ReservaLibroDeleteManyArgs} args - Arguments to filter ReservaLibros to delete.
     * @example
     * // Delete a few ReservaLibros
     * const { count } = await prisma.reservaLibro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservaLibroDeleteManyArgs>(args?: SelectSubset<T, ReservaLibroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaLibros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLibroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReservaLibros
     * const reservaLibro = await prisma.reservaLibro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservaLibroUpdateManyArgs>(args: SelectSubset<T, ReservaLibroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaLibros and returns the data updated in the database.
     * @param {ReservaLibroUpdateManyAndReturnArgs} args - Arguments to update many ReservaLibros.
     * @example
     * // Update many ReservaLibros
     * const reservaLibro = await prisma.reservaLibro.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReservaLibros and only return the `id`
     * const reservaLibroWithIdOnly = await prisma.reservaLibro.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservaLibroUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservaLibroUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReservaLibro.
     * @param {ReservaLibroUpsertArgs} args - Arguments to update or create a ReservaLibro.
     * @example
     * // Update or create a ReservaLibro
     * const reservaLibro = await prisma.reservaLibro.upsert({
     *   create: {
     *     // ... data to create a ReservaLibro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReservaLibro we want to update
     *   }
     * })
     */
    upsert<T extends ReservaLibroUpsertArgs>(args: SelectSubset<T, ReservaLibroUpsertArgs<ExtArgs>>): Prisma__ReservaLibroClient<$Result.GetResult<Prisma.$ReservaLibroPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReservaLibros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLibroCountArgs} args - Arguments to filter ReservaLibros to count.
     * @example
     * // Count the number of ReservaLibros
     * const count = await prisma.reservaLibro.count({
     *   where: {
     *     // ... the filter for the ReservaLibros we want to count
     *   }
     * })
    **/
    count<T extends ReservaLibroCountArgs>(
      args?: Subset<T, ReservaLibroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservaLibroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReservaLibro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLibroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservaLibroAggregateArgs>(args: Subset<T, ReservaLibroAggregateArgs>): Prisma.PrismaPromise<GetReservaLibroAggregateType<T>>

    /**
     * Group by ReservaLibro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLibroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservaLibroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservaLibroGroupByArgs['orderBy'] }
        : { orderBy?: ReservaLibroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservaLibroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaLibroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReservaLibro model
   */
  readonly fields: ReservaLibroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReservaLibro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservaLibroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reserva<T extends ReservaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservaDefaultArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    libro<T extends LibroDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LibroDefaultArgs<ExtArgs>>): Prisma__LibroClient<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReservaLibro model
   */
  interface ReservaLibroFieldRefs {
    readonly id: FieldRef<"ReservaLibro", 'Int'>
    readonly fechaEntregado: FieldRef<"ReservaLibro", 'DateTime'>
    readonly reservaId: FieldRef<"ReservaLibro", 'Int'>
    readonly libroId: FieldRef<"ReservaLibro", 'Int'>
    readonly fechaCreacion: FieldRef<"ReservaLibro", 'DateTime'>
    readonly fechaModificacion: FieldRef<"ReservaLibro", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"ReservaLibro", 'String'>
    readonly usuarioModificadorId: FieldRef<"ReservaLibro", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ReservaLibro findUnique
   */
  export type ReservaLibroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLibro to fetch.
     */
    where: ReservaLibroWhereUniqueInput
  }

  /**
   * ReservaLibro findUniqueOrThrow
   */
  export type ReservaLibroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLibro to fetch.
     */
    where: ReservaLibroWhereUniqueInput
  }

  /**
   * ReservaLibro findFirst
   */
  export type ReservaLibroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLibro to fetch.
     */
    where?: ReservaLibroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLibros to fetch.
     */
    orderBy?: ReservaLibroOrderByWithRelationInput | ReservaLibroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaLibros.
     */
    cursor?: ReservaLibroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLibros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLibros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaLibros.
     */
    distinct?: ReservaLibroScalarFieldEnum | ReservaLibroScalarFieldEnum[]
  }

  /**
   * ReservaLibro findFirstOrThrow
   */
  export type ReservaLibroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLibro to fetch.
     */
    where?: ReservaLibroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLibros to fetch.
     */
    orderBy?: ReservaLibroOrderByWithRelationInput | ReservaLibroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaLibros.
     */
    cursor?: ReservaLibroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLibros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLibros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaLibros.
     */
    distinct?: ReservaLibroScalarFieldEnum | ReservaLibroScalarFieldEnum[]
  }

  /**
   * ReservaLibro findMany
   */
  export type ReservaLibroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLibros to fetch.
     */
    where?: ReservaLibroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLibros to fetch.
     */
    orderBy?: ReservaLibroOrderByWithRelationInput | ReservaLibroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReservaLibros.
     */
    cursor?: ReservaLibroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLibros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLibros.
     */
    skip?: number
    distinct?: ReservaLibroScalarFieldEnum | ReservaLibroScalarFieldEnum[]
  }

  /**
   * ReservaLibro create
   */
  export type ReservaLibroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
    /**
     * The data needed to create a ReservaLibro.
     */
    data: XOR<ReservaLibroCreateInput, ReservaLibroUncheckedCreateInput>
  }

  /**
   * ReservaLibro createMany
   */
  export type ReservaLibroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReservaLibros.
     */
    data: ReservaLibroCreateManyInput | ReservaLibroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReservaLibro createManyAndReturn
   */
  export type ReservaLibroCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * The data used to create many ReservaLibros.
     */
    data: ReservaLibroCreateManyInput | ReservaLibroCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaLibro update
   */
  export type ReservaLibroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
    /**
     * The data needed to update a ReservaLibro.
     */
    data: XOR<ReservaLibroUpdateInput, ReservaLibroUncheckedUpdateInput>
    /**
     * Choose, which ReservaLibro to update.
     */
    where: ReservaLibroWhereUniqueInput
  }

  /**
   * ReservaLibro updateMany
   */
  export type ReservaLibroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReservaLibros.
     */
    data: XOR<ReservaLibroUpdateManyMutationInput, ReservaLibroUncheckedUpdateManyInput>
    /**
     * Filter which ReservaLibros to update
     */
    where?: ReservaLibroWhereInput
    /**
     * Limit how many ReservaLibros to update.
     */
    limit?: number
  }

  /**
   * ReservaLibro updateManyAndReturn
   */
  export type ReservaLibroUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * The data used to update ReservaLibros.
     */
    data: XOR<ReservaLibroUpdateManyMutationInput, ReservaLibroUncheckedUpdateManyInput>
    /**
     * Filter which ReservaLibros to update
     */
    where?: ReservaLibroWhereInput
    /**
     * Limit how many ReservaLibros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaLibro upsert
   */
  export type ReservaLibroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
    /**
     * The filter to search for the ReservaLibro to update in case it exists.
     */
    where: ReservaLibroWhereUniqueInput
    /**
     * In case the ReservaLibro found by the `where` argument doesn't exist, create a new ReservaLibro with this data.
     */
    create: XOR<ReservaLibroCreateInput, ReservaLibroUncheckedCreateInput>
    /**
     * In case the ReservaLibro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservaLibroUpdateInput, ReservaLibroUncheckedUpdateInput>
  }

  /**
   * ReservaLibro delete
   */
  export type ReservaLibroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
    /**
     * Filter which ReservaLibro to delete.
     */
    where: ReservaLibroWhereUniqueInput
  }

  /**
   * ReservaLibro deleteMany
   */
  export type ReservaLibroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaLibros to delete
     */
    where?: ReservaLibroWhereInput
    /**
     * Limit how many ReservaLibros to delete.
     */
    limit?: number
  }

  /**
   * ReservaLibro without action
   */
  export type ReservaLibroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLibro
     */
    select?: ReservaLibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLibro
     */
    omit?: ReservaLibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLibroInclude<ExtArgs> | null
  }


  /**
   * Model ReservaLaboratorioCerrado
   */

  export type AggregateReservaLaboratorioCerrado = {
    _count: ReservaLaboratorioCerradoCountAggregateOutputType | null
    _avg: ReservaLaboratorioCerradoAvgAggregateOutputType | null
    _sum: ReservaLaboratorioCerradoSumAggregateOutputType | null
    _min: ReservaLaboratorioCerradoMinAggregateOutputType | null
    _max: ReservaLaboratorioCerradoMaxAggregateOutputType | null
  }

  export type ReservaLaboratorioCerradoAvgAggregateOutputType = {
    id: number | null
    reservaId: number | null
    sedeId: number | null
    laboratorioId: number | null
    cursoId: number | null
    discrecionalMateriaId: number | null
  }

  export type ReservaLaboratorioCerradoSumAggregateOutputType = {
    id: number | null
    reservaId: number | null
    sedeId: number | null
    laboratorioId: number | null
    cursoId: number | null
    discrecionalMateriaId: number | null
  }

  export type ReservaLaboratorioCerradoMinAggregateOutputType = {
    id: number | null
    descripcion: string | null
    requierePC: boolean | null
    requiereProyector: boolean | null
    reservaId: number | null
    sedeId: number | null
    laboratorioId: number | null
    cursoId: number | null
    esDiscrecional: boolean | null
    discrecionalTitulo: string | null
    discrecionalMateriaId: number | null
    discrecionalDocenteId: string | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaLaboratorioCerradoMaxAggregateOutputType = {
    id: number | null
    descripcion: string | null
    requierePC: boolean | null
    requiereProyector: boolean | null
    reservaId: number | null
    sedeId: number | null
    laboratorioId: number | null
    cursoId: number | null
    esDiscrecional: boolean | null
    discrecionalTitulo: string | null
    discrecionalMateriaId: number | null
    discrecionalDocenteId: string | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaLaboratorioCerradoCountAggregateOutputType = {
    id: number
    descripcion: number
    requierePC: number
    requiereProyector: number
    reservaId: number
    sedeId: number
    laboratorioId: number
    cursoId: number
    esDiscrecional: number
    discrecionalTitulo: number
    discrecionalMateriaId: number
    discrecionalDocenteId: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type ReservaLaboratorioCerradoAvgAggregateInputType = {
    id?: true
    reservaId?: true
    sedeId?: true
    laboratorioId?: true
    cursoId?: true
    discrecionalMateriaId?: true
  }

  export type ReservaLaboratorioCerradoSumAggregateInputType = {
    id?: true
    reservaId?: true
    sedeId?: true
    laboratorioId?: true
    cursoId?: true
    discrecionalMateriaId?: true
  }

  export type ReservaLaboratorioCerradoMinAggregateInputType = {
    id?: true
    descripcion?: true
    requierePC?: true
    requiereProyector?: true
    reservaId?: true
    sedeId?: true
    laboratorioId?: true
    cursoId?: true
    esDiscrecional?: true
    discrecionalTitulo?: true
    discrecionalMateriaId?: true
    discrecionalDocenteId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaLaboratorioCerradoMaxAggregateInputType = {
    id?: true
    descripcion?: true
    requierePC?: true
    requiereProyector?: true
    reservaId?: true
    sedeId?: true
    laboratorioId?: true
    cursoId?: true
    esDiscrecional?: true
    discrecionalTitulo?: true
    discrecionalMateriaId?: true
    discrecionalDocenteId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaLaboratorioCerradoCountAggregateInputType = {
    id?: true
    descripcion?: true
    requierePC?: true
    requiereProyector?: true
    reservaId?: true
    sedeId?: true
    laboratorioId?: true
    cursoId?: true
    esDiscrecional?: true
    discrecionalTitulo?: true
    discrecionalMateriaId?: true
    discrecionalDocenteId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type ReservaLaboratorioCerradoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaLaboratorioCerrado to aggregate.
     */
    where?: ReservaLaboratorioCerradoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioCerrados to fetch.
     */
    orderBy?: ReservaLaboratorioCerradoOrderByWithRelationInput | ReservaLaboratorioCerradoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservaLaboratorioCerradoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioCerrados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioCerrados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReservaLaboratorioCerrados
    **/
    _count?: true | ReservaLaboratorioCerradoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservaLaboratorioCerradoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservaLaboratorioCerradoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservaLaboratorioCerradoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservaLaboratorioCerradoMaxAggregateInputType
  }

  export type GetReservaLaboratorioCerradoAggregateType<T extends ReservaLaboratorioCerradoAggregateArgs> = {
        [P in keyof T & keyof AggregateReservaLaboratorioCerrado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservaLaboratorioCerrado[P]>
      : GetScalarType<T[P], AggregateReservaLaboratorioCerrado[P]>
  }




  export type ReservaLaboratorioCerradoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioCerradoWhereInput
    orderBy?: ReservaLaboratorioCerradoOrderByWithAggregationInput | ReservaLaboratorioCerradoOrderByWithAggregationInput[]
    by: ReservaLaboratorioCerradoScalarFieldEnum[] | ReservaLaboratorioCerradoScalarFieldEnum
    having?: ReservaLaboratorioCerradoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservaLaboratorioCerradoCountAggregateInputType | true
    _avg?: ReservaLaboratorioCerradoAvgAggregateInputType
    _sum?: ReservaLaboratorioCerradoSumAggregateInputType
    _min?: ReservaLaboratorioCerradoMinAggregateInputType
    _max?: ReservaLaboratorioCerradoMaxAggregateInputType
  }

  export type ReservaLaboratorioCerradoGroupByOutputType = {
    id: number
    descripcion: string
    requierePC: boolean
    requiereProyector: boolean
    reservaId: number
    sedeId: number
    laboratorioId: number | null
    cursoId: number | null
    esDiscrecional: boolean
    discrecionalTitulo: string
    discrecionalMateriaId: number | null
    discrecionalDocenteId: string | null
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: ReservaLaboratorioCerradoCountAggregateOutputType | null
    _avg: ReservaLaboratorioCerradoAvgAggregateOutputType | null
    _sum: ReservaLaboratorioCerradoSumAggregateOutputType | null
    _min: ReservaLaboratorioCerradoMinAggregateOutputType | null
    _max: ReservaLaboratorioCerradoMaxAggregateOutputType | null
  }

  type GetReservaLaboratorioCerradoGroupByPayload<T extends ReservaLaboratorioCerradoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservaLaboratorioCerradoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservaLaboratorioCerradoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservaLaboratorioCerradoGroupByOutputType[P]>
            : GetScalarType<T[P], ReservaLaboratorioCerradoGroupByOutputType[P]>
        }
      >
    >


  export type ReservaLaboratorioCerradoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descripcion?: boolean
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    cursoId?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: boolean
    discrecionalMateriaId?: boolean
    discrecionalDocenteId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioCerrado$laboratorioArgs<ExtArgs>
    curso?: boolean | ReservaLaboratorioCerrado$cursoArgs<ExtArgs>
    discrecionalMateria?: boolean | ReservaLaboratorioCerrado$discrecionalMateriaArgs<ExtArgs>
    discrecionalDocente?: boolean | ReservaLaboratorioCerrado$discrecionalDocenteArgs<ExtArgs>
    equipoReservado?: boolean | ReservaLaboratorioCerrado$equipoReservadoArgs<ExtArgs>
    _count?: boolean | ReservaLaboratorioCerradoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioCerrado"]>

  export type ReservaLaboratorioCerradoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descripcion?: boolean
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    cursoId?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: boolean
    discrecionalMateriaId?: boolean
    discrecionalDocenteId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioCerrado$laboratorioArgs<ExtArgs>
    curso?: boolean | ReservaLaboratorioCerrado$cursoArgs<ExtArgs>
    discrecionalMateria?: boolean | ReservaLaboratorioCerrado$discrecionalMateriaArgs<ExtArgs>
    discrecionalDocente?: boolean | ReservaLaboratorioCerrado$discrecionalDocenteArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioCerrado"]>

  export type ReservaLaboratorioCerradoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descripcion?: boolean
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    cursoId?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: boolean
    discrecionalMateriaId?: boolean
    discrecionalDocenteId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioCerrado$laboratorioArgs<ExtArgs>
    curso?: boolean | ReservaLaboratorioCerrado$cursoArgs<ExtArgs>
    discrecionalMateria?: boolean | ReservaLaboratorioCerrado$discrecionalMateriaArgs<ExtArgs>
    discrecionalDocente?: boolean | ReservaLaboratorioCerrado$discrecionalDocenteArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioCerrado"]>

  export type ReservaLaboratorioCerradoSelectScalar = {
    id?: boolean
    descripcion?: boolean
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    cursoId?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: boolean
    discrecionalMateriaId?: boolean
    discrecionalDocenteId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type ReservaLaboratorioCerradoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "descripcion" | "requierePC" | "requiereProyector" | "reservaId" | "sedeId" | "laboratorioId" | "cursoId" | "esDiscrecional" | "discrecionalTitulo" | "discrecionalMateriaId" | "discrecionalDocenteId" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["reservaLaboratorioCerrado"]>
  export type ReservaLaboratorioCerradoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioCerrado$laboratorioArgs<ExtArgs>
    curso?: boolean | ReservaLaboratorioCerrado$cursoArgs<ExtArgs>
    discrecionalMateria?: boolean | ReservaLaboratorioCerrado$discrecionalMateriaArgs<ExtArgs>
    discrecionalDocente?: boolean | ReservaLaboratorioCerrado$discrecionalDocenteArgs<ExtArgs>
    equipoReservado?: boolean | ReservaLaboratorioCerrado$equipoReservadoArgs<ExtArgs>
    _count?: boolean | ReservaLaboratorioCerradoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ReservaLaboratorioCerradoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioCerrado$laboratorioArgs<ExtArgs>
    curso?: boolean | ReservaLaboratorioCerrado$cursoArgs<ExtArgs>
    discrecionalMateria?: boolean | ReservaLaboratorioCerrado$discrecionalMateriaArgs<ExtArgs>
    discrecionalDocente?: boolean | ReservaLaboratorioCerrado$discrecionalDocenteArgs<ExtArgs>
  }
  export type ReservaLaboratorioCerradoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioCerrado$laboratorioArgs<ExtArgs>
    curso?: boolean | ReservaLaboratorioCerrado$cursoArgs<ExtArgs>
    discrecionalMateria?: boolean | ReservaLaboratorioCerrado$discrecionalMateriaArgs<ExtArgs>
    discrecionalDocente?: boolean | ReservaLaboratorioCerrado$discrecionalDocenteArgs<ExtArgs>
  }

  export type $ReservaLaboratorioCerradoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReservaLaboratorioCerrado"
    objects: {
      reserva: Prisma.$ReservaPayload<ExtArgs>
      sede: Prisma.$SedePayload<ExtArgs>
      laboratorio: Prisma.$LaboratorioPayload<ExtArgs> | null
      curso: Prisma.$CursoPayload<ExtArgs> | null
      discrecionalMateria: Prisma.$MateriaPayload<ExtArgs> | null
      discrecionalDocente: Prisma.$UserPayload<ExtArgs> | null
      equipoReservado: Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descripcion: string
      requierePC: boolean
      requiereProyector: boolean
      reservaId: number
      sedeId: number
      laboratorioId: number | null
      cursoId: number | null
      esDiscrecional: boolean
      discrecionalTitulo: string
      discrecionalMateriaId: number | null
      discrecionalDocenteId: string | null
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["reservaLaboratorioCerrado"]>
    composites: {}
  }

  type ReservaLaboratorioCerradoGetPayload<S extends boolean | null | undefined | ReservaLaboratorioCerradoDefaultArgs> = $Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload, S>

  type ReservaLaboratorioCerradoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservaLaboratorioCerradoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservaLaboratorioCerradoCountAggregateInputType | true
    }

  export interface ReservaLaboratorioCerradoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReservaLaboratorioCerrado'], meta: { name: 'ReservaLaboratorioCerrado' } }
    /**
     * Find zero or one ReservaLaboratorioCerrado that matches the filter.
     * @param {ReservaLaboratorioCerradoFindUniqueArgs} args - Arguments to find a ReservaLaboratorioCerrado
     * @example
     * // Get one ReservaLaboratorioCerrado
     * const reservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservaLaboratorioCerradoFindUniqueArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoFindUniqueArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReservaLaboratorioCerrado that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservaLaboratorioCerradoFindUniqueOrThrowArgs} args - Arguments to find a ReservaLaboratorioCerrado
     * @example
     * // Get one ReservaLaboratorioCerrado
     * const reservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservaLaboratorioCerradoFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaLaboratorioCerrado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoFindFirstArgs} args - Arguments to find a ReservaLaboratorioCerrado
     * @example
     * // Get one ReservaLaboratorioCerrado
     * const reservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservaLaboratorioCerradoFindFirstArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoFindFirstArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaLaboratorioCerrado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoFindFirstOrThrowArgs} args - Arguments to find a ReservaLaboratorioCerrado
     * @example
     * // Get one ReservaLaboratorioCerrado
     * const reservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservaLaboratorioCerradoFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReservaLaboratorioCerrados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReservaLaboratorioCerrados
     * const reservaLaboratorioCerrados = await prisma.reservaLaboratorioCerrado.findMany()
     * 
     * // Get first 10 ReservaLaboratorioCerrados
     * const reservaLaboratorioCerrados = await prisma.reservaLaboratorioCerrado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservaLaboratorioCerradoWithIdOnly = await prisma.reservaLaboratorioCerrado.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservaLaboratorioCerradoFindManyArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReservaLaboratorioCerrado.
     * @param {ReservaLaboratorioCerradoCreateArgs} args - Arguments to create a ReservaLaboratorioCerrado.
     * @example
     * // Create one ReservaLaboratorioCerrado
     * const ReservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.create({
     *   data: {
     *     // ... data to create a ReservaLaboratorioCerrado
     *   }
     * })
     * 
     */
    create<T extends ReservaLaboratorioCerradoCreateArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoCreateArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReservaLaboratorioCerrados.
     * @param {ReservaLaboratorioCerradoCreateManyArgs} args - Arguments to create many ReservaLaboratorioCerrados.
     * @example
     * // Create many ReservaLaboratorioCerrados
     * const reservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservaLaboratorioCerradoCreateManyArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReservaLaboratorioCerrados and returns the data saved in the database.
     * @param {ReservaLaboratorioCerradoCreateManyAndReturnArgs} args - Arguments to create many ReservaLaboratorioCerrados.
     * @example
     * // Create many ReservaLaboratorioCerrados
     * const reservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReservaLaboratorioCerrados and only return the `id`
     * const reservaLaboratorioCerradoWithIdOnly = await prisma.reservaLaboratorioCerrado.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservaLaboratorioCerradoCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReservaLaboratorioCerrado.
     * @param {ReservaLaboratorioCerradoDeleteArgs} args - Arguments to delete one ReservaLaboratorioCerrado.
     * @example
     * // Delete one ReservaLaboratorioCerrado
     * const ReservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.delete({
     *   where: {
     *     // ... filter to delete one ReservaLaboratorioCerrado
     *   }
     * })
     * 
     */
    delete<T extends ReservaLaboratorioCerradoDeleteArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoDeleteArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReservaLaboratorioCerrado.
     * @param {ReservaLaboratorioCerradoUpdateArgs} args - Arguments to update one ReservaLaboratorioCerrado.
     * @example
     * // Update one ReservaLaboratorioCerrado
     * const reservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservaLaboratorioCerradoUpdateArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoUpdateArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReservaLaboratorioCerrados.
     * @param {ReservaLaboratorioCerradoDeleteManyArgs} args - Arguments to filter ReservaLaboratorioCerrados to delete.
     * @example
     * // Delete a few ReservaLaboratorioCerrados
     * const { count } = await prisma.reservaLaboratorioCerrado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservaLaboratorioCerradoDeleteManyArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaLaboratorioCerrados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReservaLaboratorioCerrados
     * const reservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservaLaboratorioCerradoUpdateManyArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaLaboratorioCerrados and returns the data updated in the database.
     * @param {ReservaLaboratorioCerradoUpdateManyAndReturnArgs} args - Arguments to update many ReservaLaboratorioCerrados.
     * @example
     * // Update many ReservaLaboratorioCerrados
     * const reservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReservaLaboratorioCerrados and only return the `id`
     * const reservaLaboratorioCerradoWithIdOnly = await prisma.reservaLaboratorioCerrado.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservaLaboratorioCerradoUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReservaLaboratorioCerrado.
     * @param {ReservaLaboratorioCerradoUpsertArgs} args - Arguments to update or create a ReservaLaboratorioCerrado.
     * @example
     * // Update or create a ReservaLaboratorioCerrado
     * const reservaLaboratorioCerrado = await prisma.reservaLaboratorioCerrado.upsert({
     *   create: {
     *     // ... data to create a ReservaLaboratorioCerrado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReservaLaboratorioCerrado we want to update
     *   }
     * })
     */
    upsert<T extends ReservaLaboratorioCerradoUpsertArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoUpsertArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReservaLaboratorioCerrados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoCountArgs} args - Arguments to filter ReservaLaboratorioCerrados to count.
     * @example
     * // Count the number of ReservaLaboratorioCerrados
     * const count = await prisma.reservaLaboratorioCerrado.count({
     *   where: {
     *     // ... the filter for the ReservaLaboratorioCerrados we want to count
     *   }
     * })
    **/
    count<T extends ReservaLaboratorioCerradoCountArgs>(
      args?: Subset<T, ReservaLaboratorioCerradoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservaLaboratorioCerradoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReservaLaboratorioCerrado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservaLaboratorioCerradoAggregateArgs>(args: Subset<T, ReservaLaboratorioCerradoAggregateArgs>): Prisma.PrismaPromise<GetReservaLaboratorioCerradoAggregateType<T>>

    /**
     * Group by ReservaLaboratorioCerrado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservaLaboratorioCerradoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservaLaboratorioCerradoGroupByArgs['orderBy'] }
        : { orderBy?: ReservaLaboratorioCerradoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservaLaboratorioCerradoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaLaboratorioCerradoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReservaLaboratorioCerrado model
   */
  readonly fields: ReservaLaboratorioCerradoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReservaLaboratorioCerrado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservaLaboratorioCerradoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reserva<T extends ReservaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservaDefaultArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    laboratorio<T extends ReservaLaboratorioCerrado$laboratorioArgs<ExtArgs> = {}>(args?: Subset<T, ReservaLaboratorioCerrado$laboratorioArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    curso<T extends ReservaLaboratorioCerrado$cursoArgs<ExtArgs> = {}>(args?: Subset<T, ReservaLaboratorioCerrado$cursoArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    discrecionalMateria<T extends ReservaLaboratorioCerrado$discrecionalMateriaArgs<ExtArgs> = {}>(args?: Subset<T, ReservaLaboratorioCerrado$discrecionalMateriaArgs<ExtArgs>>): Prisma__MateriaClient<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    discrecionalDocente<T extends ReservaLaboratorioCerrado$discrecionalDocenteArgs<ExtArgs> = {}>(args?: Subset<T, ReservaLaboratorioCerrado$discrecionalDocenteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    equipoReservado<T extends ReservaLaboratorioCerrado$equipoReservadoArgs<ExtArgs> = {}>(args?: Subset<T, ReservaLaboratorioCerrado$equipoReservadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReservaLaboratorioCerrado model
   */
  interface ReservaLaboratorioCerradoFieldRefs {
    readonly id: FieldRef<"ReservaLaboratorioCerrado", 'Int'>
    readonly descripcion: FieldRef<"ReservaLaboratorioCerrado", 'String'>
    readonly requierePC: FieldRef<"ReservaLaboratorioCerrado", 'Boolean'>
    readonly requiereProyector: FieldRef<"ReservaLaboratorioCerrado", 'Boolean'>
    readonly reservaId: FieldRef<"ReservaLaboratorioCerrado", 'Int'>
    readonly sedeId: FieldRef<"ReservaLaboratorioCerrado", 'Int'>
    readonly laboratorioId: FieldRef<"ReservaLaboratorioCerrado", 'Int'>
    readonly cursoId: FieldRef<"ReservaLaboratorioCerrado", 'Int'>
    readonly esDiscrecional: FieldRef<"ReservaLaboratorioCerrado", 'Boolean'>
    readonly discrecionalTitulo: FieldRef<"ReservaLaboratorioCerrado", 'String'>
    readonly discrecionalMateriaId: FieldRef<"ReservaLaboratorioCerrado", 'Int'>
    readonly discrecionalDocenteId: FieldRef<"ReservaLaboratorioCerrado", 'String'>
    readonly fechaCreacion: FieldRef<"ReservaLaboratorioCerrado", 'DateTime'>
    readonly fechaModificacion: FieldRef<"ReservaLaboratorioCerrado", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"ReservaLaboratorioCerrado", 'String'>
    readonly usuarioModificadorId: FieldRef<"ReservaLaboratorioCerrado", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ReservaLaboratorioCerrado findUnique
   */
  export type ReservaLaboratorioCerradoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioCerrado to fetch.
     */
    where: ReservaLaboratorioCerradoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioCerrado findUniqueOrThrow
   */
  export type ReservaLaboratorioCerradoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioCerrado to fetch.
     */
    where: ReservaLaboratorioCerradoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioCerrado findFirst
   */
  export type ReservaLaboratorioCerradoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioCerrado to fetch.
     */
    where?: ReservaLaboratorioCerradoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioCerrados to fetch.
     */
    orderBy?: ReservaLaboratorioCerradoOrderByWithRelationInput | ReservaLaboratorioCerradoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaLaboratorioCerrados.
     */
    cursor?: ReservaLaboratorioCerradoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioCerrados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioCerrados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaLaboratorioCerrados.
     */
    distinct?: ReservaLaboratorioCerradoScalarFieldEnum | ReservaLaboratorioCerradoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioCerrado findFirstOrThrow
   */
  export type ReservaLaboratorioCerradoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioCerrado to fetch.
     */
    where?: ReservaLaboratorioCerradoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioCerrados to fetch.
     */
    orderBy?: ReservaLaboratorioCerradoOrderByWithRelationInput | ReservaLaboratorioCerradoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaLaboratorioCerrados.
     */
    cursor?: ReservaLaboratorioCerradoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioCerrados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioCerrados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaLaboratorioCerrados.
     */
    distinct?: ReservaLaboratorioCerradoScalarFieldEnum | ReservaLaboratorioCerradoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioCerrado findMany
   */
  export type ReservaLaboratorioCerradoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioCerrados to fetch.
     */
    where?: ReservaLaboratorioCerradoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioCerrados to fetch.
     */
    orderBy?: ReservaLaboratorioCerradoOrderByWithRelationInput | ReservaLaboratorioCerradoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReservaLaboratorioCerrados.
     */
    cursor?: ReservaLaboratorioCerradoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioCerrados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioCerrados.
     */
    skip?: number
    distinct?: ReservaLaboratorioCerradoScalarFieldEnum | ReservaLaboratorioCerradoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioCerrado create
   */
  export type ReservaLaboratorioCerradoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    /**
     * The data needed to create a ReservaLaboratorioCerrado.
     */
    data: XOR<ReservaLaboratorioCerradoCreateInput, ReservaLaboratorioCerradoUncheckedCreateInput>
  }

  /**
   * ReservaLaboratorioCerrado createMany
   */
  export type ReservaLaboratorioCerradoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReservaLaboratorioCerrados.
     */
    data: ReservaLaboratorioCerradoCreateManyInput | ReservaLaboratorioCerradoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReservaLaboratorioCerrado createManyAndReturn
   */
  export type ReservaLaboratorioCerradoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * The data used to create many ReservaLaboratorioCerrados.
     */
    data: ReservaLaboratorioCerradoCreateManyInput | ReservaLaboratorioCerradoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaLaboratorioCerrado update
   */
  export type ReservaLaboratorioCerradoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    /**
     * The data needed to update a ReservaLaboratorioCerrado.
     */
    data: XOR<ReservaLaboratorioCerradoUpdateInput, ReservaLaboratorioCerradoUncheckedUpdateInput>
    /**
     * Choose, which ReservaLaboratorioCerrado to update.
     */
    where: ReservaLaboratorioCerradoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioCerrado updateMany
   */
  export type ReservaLaboratorioCerradoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReservaLaboratorioCerrados.
     */
    data: XOR<ReservaLaboratorioCerradoUpdateManyMutationInput, ReservaLaboratorioCerradoUncheckedUpdateManyInput>
    /**
     * Filter which ReservaLaboratorioCerrados to update
     */
    where?: ReservaLaboratorioCerradoWhereInput
    /**
     * Limit how many ReservaLaboratorioCerrados to update.
     */
    limit?: number
  }

  /**
   * ReservaLaboratorioCerrado updateManyAndReturn
   */
  export type ReservaLaboratorioCerradoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * The data used to update ReservaLaboratorioCerrados.
     */
    data: XOR<ReservaLaboratorioCerradoUpdateManyMutationInput, ReservaLaboratorioCerradoUncheckedUpdateManyInput>
    /**
     * Filter which ReservaLaboratorioCerrados to update
     */
    where?: ReservaLaboratorioCerradoWhereInput
    /**
     * Limit how many ReservaLaboratorioCerrados to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaLaboratorioCerrado upsert
   */
  export type ReservaLaboratorioCerradoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    /**
     * The filter to search for the ReservaLaboratorioCerrado to update in case it exists.
     */
    where: ReservaLaboratorioCerradoWhereUniqueInput
    /**
     * In case the ReservaLaboratorioCerrado found by the `where` argument doesn't exist, create a new ReservaLaboratorioCerrado with this data.
     */
    create: XOR<ReservaLaboratorioCerradoCreateInput, ReservaLaboratorioCerradoUncheckedCreateInput>
    /**
     * In case the ReservaLaboratorioCerrado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservaLaboratorioCerradoUpdateInput, ReservaLaboratorioCerradoUncheckedUpdateInput>
  }

  /**
   * ReservaLaboratorioCerrado delete
   */
  export type ReservaLaboratorioCerradoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    /**
     * Filter which ReservaLaboratorioCerrado to delete.
     */
    where: ReservaLaboratorioCerradoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioCerrado deleteMany
   */
  export type ReservaLaboratorioCerradoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaLaboratorioCerrados to delete
     */
    where?: ReservaLaboratorioCerradoWhereInput
    /**
     * Limit how many ReservaLaboratorioCerrados to delete.
     */
    limit?: number
  }

  /**
   * ReservaLaboratorioCerrado.laboratorio
   */
  export type ReservaLaboratorioCerrado$laboratorioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    where?: LaboratorioWhereInput
  }

  /**
   * ReservaLaboratorioCerrado.curso
   */
  export type ReservaLaboratorioCerrado$cursoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    where?: CursoWhereInput
  }

  /**
   * ReservaLaboratorioCerrado.discrecionalMateria
   */
  export type ReservaLaboratorioCerrado$discrecionalMateriaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
    where?: MateriaWhereInput
  }

  /**
   * ReservaLaboratorioCerrado.discrecionalDocente
   */
  export type ReservaLaboratorioCerrado$discrecionalDocenteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ReservaLaboratorioCerrado.equipoReservado
   */
  export type ReservaLaboratorioCerrado$equipoReservadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
    where?: ReservaLaboratorioCerradoEquipoWhereInput
    orderBy?: ReservaLaboratorioCerradoEquipoOrderByWithRelationInput | ReservaLaboratorioCerradoEquipoOrderByWithRelationInput[]
    cursor?: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLaboratorioCerradoEquipoScalarFieldEnum | ReservaLaboratorioCerradoEquipoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioCerrado without action
   */
  export type ReservaLaboratorioCerradoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
  }


  /**
   * Model ReservaLaboratorioCerradoEquipo
   */

  export type AggregateReservaLaboratorioCerradoEquipo = {
    _count: ReservaLaboratorioCerradoEquipoCountAggregateOutputType | null
    _avg: ReservaLaboratorioCerradoEquipoAvgAggregateOutputType | null
    _sum: ReservaLaboratorioCerradoEquipoSumAggregateOutputType | null
    _min: ReservaLaboratorioCerradoEquipoMinAggregateOutputType | null
    _max: ReservaLaboratorioCerradoEquipoMaxAggregateOutputType | null
  }

  export type ReservaLaboratorioCerradoEquipoAvgAggregateOutputType = {
    id: number | null
    cantidad: number | null
    reservaLaboratorioCerradoId: number | null
    equipoId: number | null
  }

  export type ReservaLaboratorioCerradoEquipoSumAggregateOutputType = {
    id: number | null
    cantidad: number | null
    reservaLaboratorioCerradoId: number | null
    equipoId: number | null
  }

  export type ReservaLaboratorioCerradoEquipoMinAggregateOutputType = {
    id: number | null
    cantidad: number | null
    reservaLaboratorioCerradoId: number | null
    equipoId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaLaboratorioCerradoEquipoMaxAggregateOutputType = {
    id: number | null
    cantidad: number | null
    reservaLaboratorioCerradoId: number | null
    equipoId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaLaboratorioCerradoEquipoCountAggregateOutputType = {
    id: number
    cantidad: number
    reservaLaboratorioCerradoId: number
    equipoId: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type ReservaLaboratorioCerradoEquipoAvgAggregateInputType = {
    id?: true
    cantidad?: true
    reservaLaboratorioCerradoId?: true
    equipoId?: true
  }

  export type ReservaLaboratorioCerradoEquipoSumAggregateInputType = {
    id?: true
    cantidad?: true
    reservaLaboratorioCerradoId?: true
    equipoId?: true
  }

  export type ReservaLaboratorioCerradoEquipoMinAggregateInputType = {
    id?: true
    cantidad?: true
    reservaLaboratorioCerradoId?: true
    equipoId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaLaboratorioCerradoEquipoMaxAggregateInputType = {
    id?: true
    cantidad?: true
    reservaLaboratorioCerradoId?: true
    equipoId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaLaboratorioCerradoEquipoCountAggregateInputType = {
    id?: true
    cantidad?: true
    reservaLaboratorioCerradoId?: true
    equipoId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type ReservaLaboratorioCerradoEquipoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaLaboratorioCerradoEquipo to aggregate.
     */
    where?: ReservaLaboratorioCerradoEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioCerradoEquipos to fetch.
     */
    orderBy?: ReservaLaboratorioCerradoEquipoOrderByWithRelationInput | ReservaLaboratorioCerradoEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioCerradoEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioCerradoEquipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReservaLaboratorioCerradoEquipos
    **/
    _count?: true | ReservaLaboratorioCerradoEquipoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservaLaboratorioCerradoEquipoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservaLaboratorioCerradoEquipoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservaLaboratorioCerradoEquipoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservaLaboratorioCerradoEquipoMaxAggregateInputType
  }

  export type GetReservaLaboratorioCerradoEquipoAggregateType<T extends ReservaLaboratorioCerradoEquipoAggregateArgs> = {
        [P in keyof T & keyof AggregateReservaLaboratorioCerradoEquipo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservaLaboratorioCerradoEquipo[P]>
      : GetScalarType<T[P], AggregateReservaLaboratorioCerradoEquipo[P]>
  }




  export type ReservaLaboratorioCerradoEquipoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioCerradoEquipoWhereInput
    orderBy?: ReservaLaboratorioCerradoEquipoOrderByWithAggregationInput | ReservaLaboratorioCerradoEquipoOrderByWithAggregationInput[]
    by: ReservaLaboratorioCerradoEquipoScalarFieldEnum[] | ReservaLaboratorioCerradoEquipoScalarFieldEnum
    having?: ReservaLaboratorioCerradoEquipoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservaLaboratorioCerradoEquipoCountAggregateInputType | true
    _avg?: ReservaLaboratorioCerradoEquipoAvgAggregateInputType
    _sum?: ReservaLaboratorioCerradoEquipoSumAggregateInputType
    _min?: ReservaLaboratorioCerradoEquipoMinAggregateInputType
    _max?: ReservaLaboratorioCerradoEquipoMaxAggregateInputType
  }

  export type ReservaLaboratorioCerradoEquipoGroupByOutputType = {
    id: number
    cantidad: number
    reservaLaboratorioCerradoId: number
    equipoId: number
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: ReservaLaboratorioCerradoEquipoCountAggregateOutputType | null
    _avg: ReservaLaboratorioCerradoEquipoAvgAggregateOutputType | null
    _sum: ReservaLaboratorioCerradoEquipoSumAggregateOutputType | null
    _min: ReservaLaboratorioCerradoEquipoMinAggregateOutputType | null
    _max: ReservaLaboratorioCerradoEquipoMaxAggregateOutputType | null
  }

  type GetReservaLaboratorioCerradoEquipoGroupByPayload<T extends ReservaLaboratorioCerradoEquipoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservaLaboratorioCerradoEquipoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservaLaboratorioCerradoEquipoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservaLaboratorioCerradoEquipoGroupByOutputType[P]>
            : GetScalarType<T[P], ReservaLaboratorioCerradoEquipoGroupByOutputType[P]>
        }
      >
    >


  export type ReservaLaboratorioCerradoEquipoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    reservaLaboratorioCerradoId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reservaLaboratorioCerrado?: boolean | ReservaLaboratorioCerradoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioCerradoEquipo"]>

  export type ReservaLaboratorioCerradoEquipoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    reservaLaboratorioCerradoId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reservaLaboratorioCerrado?: boolean | ReservaLaboratorioCerradoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioCerradoEquipo"]>

  export type ReservaLaboratorioCerradoEquipoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    reservaLaboratorioCerradoId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reservaLaboratorioCerrado?: boolean | ReservaLaboratorioCerradoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioCerradoEquipo"]>

  export type ReservaLaboratorioCerradoEquipoSelectScalar = {
    id?: boolean
    cantidad?: boolean
    reservaLaboratorioCerradoId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type ReservaLaboratorioCerradoEquipoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cantidad" | "reservaLaboratorioCerradoId" | "equipoId" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["reservaLaboratorioCerradoEquipo"]>
  export type ReservaLaboratorioCerradoEquipoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservaLaboratorioCerrado?: boolean | ReservaLaboratorioCerradoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }
  export type ReservaLaboratorioCerradoEquipoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservaLaboratorioCerrado?: boolean | ReservaLaboratorioCerradoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }
  export type ReservaLaboratorioCerradoEquipoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservaLaboratorioCerrado?: boolean | ReservaLaboratorioCerradoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }

  export type $ReservaLaboratorioCerradoEquipoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReservaLaboratorioCerradoEquipo"
    objects: {
      reservaLaboratorioCerrado: Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>
      equipoTipo: Prisma.$EquipoTipoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      cantidad: number
      reservaLaboratorioCerradoId: number
      equipoId: number
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["reservaLaboratorioCerradoEquipo"]>
    composites: {}
  }

  type ReservaLaboratorioCerradoEquipoGetPayload<S extends boolean | null | undefined | ReservaLaboratorioCerradoEquipoDefaultArgs> = $Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload, S>

  type ReservaLaboratorioCerradoEquipoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservaLaboratorioCerradoEquipoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservaLaboratorioCerradoEquipoCountAggregateInputType | true
    }

  export interface ReservaLaboratorioCerradoEquipoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReservaLaboratorioCerradoEquipo'], meta: { name: 'ReservaLaboratorioCerradoEquipo' } }
    /**
     * Find zero or one ReservaLaboratorioCerradoEquipo that matches the filter.
     * @param {ReservaLaboratorioCerradoEquipoFindUniqueArgs} args - Arguments to find a ReservaLaboratorioCerradoEquipo
     * @example
     * // Get one ReservaLaboratorioCerradoEquipo
     * const reservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservaLaboratorioCerradoEquipoFindUniqueArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoEquipoFindUniqueArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReservaLaboratorioCerradoEquipo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservaLaboratorioCerradoEquipoFindUniqueOrThrowArgs} args - Arguments to find a ReservaLaboratorioCerradoEquipo
     * @example
     * // Get one ReservaLaboratorioCerradoEquipo
     * const reservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservaLaboratorioCerradoEquipoFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoEquipoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaLaboratorioCerradoEquipo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoEquipoFindFirstArgs} args - Arguments to find a ReservaLaboratorioCerradoEquipo
     * @example
     * // Get one ReservaLaboratorioCerradoEquipo
     * const reservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservaLaboratorioCerradoEquipoFindFirstArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoEquipoFindFirstArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaLaboratorioCerradoEquipo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoEquipoFindFirstOrThrowArgs} args - Arguments to find a ReservaLaboratorioCerradoEquipo
     * @example
     * // Get one ReservaLaboratorioCerradoEquipo
     * const reservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservaLaboratorioCerradoEquipoFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoEquipoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReservaLaboratorioCerradoEquipos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoEquipoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReservaLaboratorioCerradoEquipos
     * const reservaLaboratorioCerradoEquipos = await prisma.reservaLaboratorioCerradoEquipo.findMany()
     * 
     * // Get first 10 ReservaLaboratorioCerradoEquipos
     * const reservaLaboratorioCerradoEquipos = await prisma.reservaLaboratorioCerradoEquipo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservaLaboratorioCerradoEquipoWithIdOnly = await prisma.reservaLaboratorioCerradoEquipo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservaLaboratorioCerradoEquipoFindManyArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoEquipoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReservaLaboratorioCerradoEquipo.
     * @param {ReservaLaboratorioCerradoEquipoCreateArgs} args - Arguments to create a ReservaLaboratorioCerradoEquipo.
     * @example
     * // Create one ReservaLaboratorioCerradoEquipo
     * const ReservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.create({
     *   data: {
     *     // ... data to create a ReservaLaboratorioCerradoEquipo
     *   }
     * })
     * 
     */
    create<T extends ReservaLaboratorioCerradoEquipoCreateArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoEquipoCreateArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReservaLaboratorioCerradoEquipos.
     * @param {ReservaLaboratorioCerradoEquipoCreateManyArgs} args - Arguments to create many ReservaLaboratorioCerradoEquipos.
     * @example
     * // Create many ReservaLaboratorioCerradoEquipos
     * const reservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservaLaboratorioCerradoEquipoCreateManyArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoEquipoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReservaLaboratorioCerradoEquipos and returns the data saved in the database.
     * @param {ReservaLaboratorioCerradoEquipoCreateManyAndReturnArgs} args - Arguments to create many ReservaLaboratorioCerradoEquipos.
     * @example
     * // Create many ReservaLaboratorioCerradoEquipos
     * const reservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReservaLaboratorioCerradoEquipos and only return the `id`
     * const reservaLaboratorioCerradoEquipoWithIdOnly = await prisma.reservaLaboratorioCerradoEquipo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservaLaboratorioCerradoEquipoCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoEquipoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReservaLaboratorioCerradoEquipo.
     * @param {ReservaLaboratorioCerradoEquipoDeleteArgs} args - Arguments to delete one ReservaLaboratorioCerradoEquipo.
     * @example
     * // Delete one ReservaLaboratorioCerradoEquipo
     * const ReservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.delete({
     *   where: {
     *     // ... filter to delete one ReservaLaboratorioCerradoEquipo
     *   }
     * })
     * 
     */
    delete<T extends ReservaLaboratorioCerradoEquipoDeleteArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoEquipoDeleteArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReservaLaboratorioCerradoEquipo.
     * @param {ReservaLaboratorioCerradoEquipoUpdateArgs} args - Arguments to update one ReservaLaboratorioCerradoEquipo.
     * @example
     * // Update one ReservaLaboratorioCerradoEquipo
     * const reservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservaLaboratorioCerradoEquipoUpdateArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoEquipoUpdateArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReservaLaboratorioCerradoEquipos.
     * @param {ReservaLaboratorioCerradoEquipoDeleteManyArgs} args - Arguments to filter ReservaLaboratorioCerradoEquipos to delete.
     * @example
     * // Delete a few ReservaLaboratorioCerradoEquipos
     * const { count } = await prisma.reservaLaboratorioCerradoEquipo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservaLaboratorioCerradoEquipoDeleteManyArgs>(args?: SelectSubset<T, ReservaLaboratorioCerradoEquipoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaLaboratorioCerradoEquipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoEquipoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReservaLaboratorioCerradoEquipos
     * const reservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservaLaboratorioCerradoEquipoUpdateManyArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoEquipoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaLaboratorioCerradoEquipos and returns the data updated in the database.
     * @param {ReservaLaboratorioCerradoEquipoUpdateManyAndReturnArgs} args - Arguments to update many ReservaLaboratorioCerradoEquipos.
     * @example
     * // Update many ReservaLaboratorioCerradoEquipos
     * const reservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReservaLaboratorioCerradoEquipos and only return the `id`
     * const reservaLaboratorioCerradoEquipoWithIdOnly = await prisma.reservaLaboratorioCerradoEquipo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservaLaboratorioCerradoEquipoUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoEquipoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReservaLaboratorioCerradoEquipo.
     * @param {ReservaLaboratorioCerradoEquipoUpsertArgs} args - Arguments to update or create a ReservaLaboratorioCerradoEquipo.
     * @example
     * // Update or create a ReservaLaboratorioCerradoEquipo
     * const reservaLaboratorioCerradoEquipo = await prisma.reservaLaboratorioCerradoEquipo.upsert({
     *   create: {
     *     // ... data to create a ReservaLaboratorioCerradoEquipo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReservaLaboratorioCerradoEquipo we want to update
     *   }
     * })
     */
    upsert<T extends ReservaLaboratorioCerradoEquipoUpsertArgs>(args: SelectSubset<T, ReservaLaboratorioCerradoEquipoUpsertArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoEquipoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReservaLaboratorioCerradoEquipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoEquipoCountArgs} args - Arguments to filter ReservaLaboratorioCerradoEquipos to count.
     * @example
     * // Count the number of ReservaLaboratorioCerradoEquipos
     * const count = await prisma.reservaLaboratorioCerradoEquipo.count({
     *   where: {
     *     // ... the filter for the ReservaLaboratorioCerradoEquipos we want to count
     *   }
     * })
    **/
    count<T extends ReservaLaboratorioCerradoEquipoCountArgs>(
      args?: Subset<T, ReservaLaboratorioCerradoEquipoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservaLaboratorioCerradoEquipoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReservaLaboratorioCerradoEquipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoEquipoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservaLaboratorioCerradoEquipoAggregateArgs>(args: Subset<T, ReservaLaboratorioCerradoEquipoAggregateArgs>): Prisma.PrismaPromise<GetReservaLaboratorioCerradoEquipoAggregateType<T>>

    /**
     * Group by ReservaLaboratorioCerradoEquipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioCerradoEquipoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservaLaboratorioCerradoEquipoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservaLaboratorioCerradoEquipoGroupByArgs['orderBy'] }
        : { orderBy?: ReservaLaboratorioCerradoEquipoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservaLaboratorioCerradoEquipoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaLaboratorioCerradoEquipoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReservaLaboratorioCerradoEquipo model
   */
  readonly fields: ReservaLaboratorioCerradoEquipoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReservaLaboratorioCerradoEquipo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservaLaboratorioCerradoEquipoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reservaLaboratorioCerrado<T extends ReservaLaboratorioCerradoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservaLaboratorioCerradoDefaultArgs<ExtArgs>>): Prisma__ReservaLaboratorioCerradoClient<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    equipoTipo<T extends EquipoTipoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipoTipoDefaultArgs<ExtArgs>>): Prisma__EquipoTipoClient<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReservaLaboratorioCerradoEquipo model
   */
  interface ReservaLaboratorioCerradoEquipoFieldRefs {
    readonly id: FieldRef<"ReservaLaboratorioCerradoEquipo", 'Int'>
    readonly cantidad: FieldRef<"ReservaLaboratorioCerradoEquipo", 'Int'>
    readonly reservaLaboratorioCerradoId: FieldRef<"ReservaLaboratorioCerradoEquipo", 'Int'>
    readonly equipoId: FieldRef<"ReservaLaboratorioCerradoEquipo", 'Int'>
    readonly fechaCreacion: FieldRef<"ReservaLaboratorioCerradoEquipo", 'DateTime'>
    readonly fechaModificacion: FieldRef<"ReservaLaboratorioCerradoEquipo", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"ReservaLaboratorioCerradoEquipo", 'String'>
    readonly usuarioModificadorId: FieldRef<"ReservaLaboratorioCerradoEquipo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ReservaLaboratorioCerradoEquipo findUnique
   */
  export type ReservaLaboratorioCerradoEquipoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioCerradoEquipo to fetch.
     */
    where: ReservaLaboratorioCerradoEquipoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioCerradoEquipo findUniqueOrThrow
   */
  export type ReservaLaboratorioCerradoEquipoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioCerradoEquipo to fetch.
     */
    where: ReservaLaboratorioCerradoEquipoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioCerradoEquipo findFirst
   */
  export type ReservaLaboratorioCerradoEquipoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioCerradoEquipo to fetch.
     */
    where?: ReservaLaboratorioCerradoEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioCerradoEquipos to fetch.
     */
    orderBy?: ReservaLaboratorioCerradoEquipoOrderByWithRelationInput | ReservaLaboratorioCerradoEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaLaboratorioCerradoEquipos.
     */
    cursor?: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioCerradoEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioCerradoEquipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaLaboratorioCerradoEquipos.
     */
    distinct?: ReservaLaboratorioCerradoEquipoScalarFieldEnum | ReservaLaboratorioCerradoEquipoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioCerradoEquipo findFirstOrThrow
   */
  export type ReservaLaboratorioCerradoEquipoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioCerradoEquipo to fetch.
     */
    where?: ReservaLaboratorioCerradoEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioCerradoEquipos to fetch.
     */
    orderBy?: ReservaLaboratorioCerradoEquipoOrderByWithRelationInput | ReservaLaboratorioCerradoEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaLaboratorioCerradoEquipos.
     */
    cursor?: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioCerradoEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioCerradoEquipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaLaboratorioCerradoEquipos.
     */
    distinct?: ReservaLaboratorioCerradoEquipoScalarFieldEnum | ReservaLaboratorioCerradoEquipoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioCerradoEquipo findMany
   */
  export type ReservaLaboratorioCerradoEquipoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioCerradoEquipos to fetch.
     */
    where?: ReservaLaboratorioCerradoEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioCerradoEquipos to fetch.
     */
    orderBy?: ReservaLaboratorioCerradoEquipoOrderByWithRelationInput | ReservaLaboratorioCerradoEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReservaLaboratorioCerradoEquipos.
     */
    cursor?: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioCerradoEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioCerradoEquipos.
     */
    skip?: number
    distinct?: ReservaLaboratorioCerradoEquipoScalarFieldEnum | ReservaLaboratorioCerradoEquipoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioCerradoEquipo create
   */
  export type ReservaLaboratorioCerradoEquipoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
    /**
     * The data needed to create a ReservaLaboratorioCerradoEquipo.
     */
    data: XOR<ReservaLaboratorioCerradoEquipoCreateInput, ReservaLaboratorioCerradoEquipoUncheckedCreateInput>
  }

  /**
   * ReservaLaboratorioCerradoEquipo createMany
   */
  export type ReservaLaboratorioCerradoEquipoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReservaLaboratorioCerradoEquipos.
     */
    data: ReservaLaboratorioCerradoEquipoCreateManyInput | ReservaLaboratorioCerradoEquipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReservaLaboratorioCerradoEquipo createManyAndReturn
   */
  export type ReservaLaboratorioCerradoEquipoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * The data used to create many ReservaLaboratorioCerradoEquipos.
     */
    data: ReservaLaboratorioCerradoEquipoCreateManyInput | ReservaLaboratorioCerradoEquipoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaLaboratorioCerradoEquipo update
   */
  export type ReservaLaboratorioCerradoEquipoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
    /**
     * The data needed to update a ReservaLaboratorioCerradoEquipo.
     */
    data: XOR<ReservaLaboratorioCerradoEquipoUpdateInput, ReservaLaboratorioCerradoEquipoUncheckedUpdateInput>
    /**
     * Choose, which ReservaLaboratorioCerradoEquipo to update.
     */
    where: ReservaLaboratorioCerradoEquipoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioCerradoEquipo updateMany
   */
  export type ReservaLaboratorioCerradoEquipoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReservaLaboratorioCerradoEquipos.
     */
    data: XOR<ReservaLaboratorioCerradoEquipoUpdateManyMutationInput, ReservaLaboratorioCerradoEquipoUncheckedUpdateManyInput>
    /**
     * Filter which ReservaLaboratorioCerradoEquipos to update
     */
    where?: ReservaLaboratorioCerradoEquipoWhereInput
    /**
     * Limit how many ReservaLaboratorioCerradoEquipos to update.
     */
    limit?: number
  }

  /**
   * ReservaLaboratorioCerradoEquipo updateManyAndReturn
   */
  export type ReservaLaboratorioCerradoEquipoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * The data used to update ReservaLaboratorioCerradoEquipos.
     */
    data: XOR<ReservaLaboratorioCerradoEquipoUpdateManyMutationInput, ReservaLaboratorioCerradoEquipoUncheckedUpdateManyInput>
    /**
     * Filter which ReservaLaboratorioCerradoEquipos to update
     */
    where?: ReservaLaboratorioCerradoEquipoWhereInput
    /**
     * Limit how many ReservaLaboratorioCerradoEquipos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaLaboratorioCerradoEquipo upsert
   */
  export type ReservaLaboratorioCerradoEquipoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
    /**
     * The filter to search for the ReservaLaboratorioCerradoEquipo to update in case it exists.
     */
    where: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    /**
     * In case the ReservaLaboratorioCerradoEquipo found by the `where` argument doesn't exist, create a new ReservaLaboratorioCerradoEquipo with this data.
     */
    create: XOR<ReservaLaboratorioCerradoEquipoCreateInput, ReservaLaboratorioCerradoEquipoUncheckedCreateInput>
    /**
     * In case the ReservaLaboratorioCerradoEquipo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservaLaboratorioCerradoEquipoUpdateInput, ReservaLaboratorioCerradoEquipoUncheckedUpdateInput>
  }

  /**
   * ReservaLaboratorioCerradoEquipo delete
   */
  export type ReservaLaboratorioCerradoEquipoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
    /**
     * Filter which ReservaLaboratorioCerradoEquipo to delete.
     */
    where: ReservaLaboratorioCerradoEquipoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioCerradoEquipo deleteMany
   */
  export type ReservaLaboratorioCerradoEquipoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaLaboratorioCerradoEquipos to delete
     */
    where?: ReservaLaboratorioCerradoEquipoWhereInput
    /**
     * Limit how many ReservaLaboratorioCerradoEquipos to delete.
     */
    limit?: number
  }

  /**
   * ReservaLaboratorioCerradoEquipo without action
   */
  export type ReservaLaboratorioCerradoEquipoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerradoEquipo
     */
    select?: ReservaLaboratorioCerradoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerradoEquipo
     */
    omit?: ReservaLaboratorioCerradoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoEquipoInclude<ExtArgs> | null
  }


  /**
   * Model ReservaLaboratorioAbierto
   */

  export type AggregateReservaLaboratorioAbierto = {
    _count: ReservaLaboratorioAbiertoCountAggregateOutputType | null
    _avg: ReservaLaboratorioAbiertoAvgAggregateOutputType | null
    _sum: ReservaLaboratorioAbiertoSumAggregateOutputType | null
    _min: ReservaLaboratorioAbiertoMinAggregateOutputType | null
    _max: ReservaLaboratorioAbiertoMaxAggregateOutputType | null
  }

  export type ReservaLaboratorioAbiertoAvgAggregateOutputType = {
    id: number | null
    concurrentes: number | null
    reservaId: number | null
    sedeId: number | null
    laboratorioId: number | null
  }

  export type ReservaLaboratorioAbiertoSumAggregateOutputType = {
    id: number | null
    concurrentes: number | null
    reservaId: number | null
    sedeId: number | null
    laboratorioId: number | null
  }

  export type ReservaLaboratorioAbiertoMinAggregateOutputType = {
    id: number | null
    especialidad: string | null
    descripcion: string | null
    concurrentes: number | null
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo | null
    reservaId: number | null
    sedeId: number | null
    laboratorioId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaLaboratorioAbiertoMaxAggregateOutputType = {
    id: number | null
    especialidad: string | null
    descripcion: string | null
    concurrentes: number | null
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo | null
    reservaId: number | null
    sedeId: number | null
    laboratorioId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaLaboratorioAbiertoCountAggregateOutputType = {
    id: number
    especialidad: number
    descripcion: number
    concurrentes: number
    laboratorioAbiertoTipo: number
    reservaId: number
    sedeId: number
    laboratorioId: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type ReservaLaboratorioAbiertoAvgAggregateInputType = {
    id?: true
    concurrentes?: true
    reservaId?: true
    sedeId?: true
    laboratorioId?: true
  }

  export type ReservaLaboratorioAbiertoSumAggregateInputType = {
    id?: true
    concurrentes?: true
    reservaId?: true
    sedeId?: true
    laboratorioId?: true
  }

  export type ReservaLaboratorioAbiertoMinAggregateInputType = {
    id?: true
    especialidad?: true
    descripcion?: true
    concurrentes?: true
    laboratorioAbiertoTipo?: true
    reservaId?: true
    sedeId?: true
    laboratorioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaLaboratorioAbiertoMaxAggregateInputType = {
    id?: true
    especialidad?: true
    descripcion?: true
    concurrentes?: true
    laboratorioAbiertoTipo?: true
    reservaId?: true
    sedeId?: true
    laboratorioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaLaboratorioAbiertoCountAggregateInputType = {
    id?: true
    especialidad?: true
    descripcion?: true
    concurrentes?: true
    laboratorioAbiertoTipo?: true
    reservaId?: true
    sedeId?: true
    laboratorioId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type ReservaLaboratorioAbiertoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaLaboratorioAbierto to aggregate.
     */
    where?: ReservaLaboratorioAbiertoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioAbiertos to fetch.
     */
    orderBy?: ReservaLaboratorioAbiertoOrderByWithRelationInput | ReservaLaboratorioAbiertoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservaLaboratorioAbiertoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioAbiertos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioAbiertos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReservaLaboratorioAbiertos
    **/
    _count?: true | ReservaLaboratorioAbiertoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservaLaboratorioAbiertoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservaLaboratorioAbiertoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservaLaboratorioAbiertoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservaLaboratorioAbiertoMaxAggregateInputType
  }

  export type GetReservaLaboratorioAbiertoAggregateType<T extends ReservaLaboratorioAbiertoAggregateArgs> = {
        [P in keyof T & keyof AggregateReservaLaboratorioAbierto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservaLaboratorioAbierto[P]>
      : GetScalarType<T[P], AggregateReservaLaboratorioAbierto[P]>
  }




  export type ReservaLaboratorioAbiertoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioAbiertoWhereInput
    orderBy?: ReservaLaboratorioAbiertoOrderByWithAggregationInput | ReservaLaboratorioAbiertoOrderByWithAggregationInput[]
    by: ReservaLaboratorioAbiertoScalarFieldEnum[] | ReservaLaboratorioAbiertoScalarFieldEnum
    having?: ReservaLaboratorioAbiertoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservaLaboratorioAbiertoCountAggregateInputType | true
    _avg?: ReservaLaboratorioAbiertoAvgAggregateInputType
    _sum?: ReservaLaboratorioAbiertoSumAggregateInputType
    _min?: ReservaLaboratorioAbiertoMinAggregateInputType
    _max?: ReservaLaboratorioAbiertoMaxAggregateInputType
  }

  export type ReservaLaboratorioAbiertoGroupByOutputType = {
    id: number
    especialidad: string
    descripcion: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    reservaId: number
    sedeId: number
    laboratorioId: number | null
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: ReservaLaboratorioAbiertoCountAggregateOutputType | null
    _avg: ReservaLaboratorioAbiertoAvgAggregateOutputType | null
    _sum: ReservaLaboratorioAbiertoSumAggregateOutputType | null
    _min: ReservaLaboratorioAbiertoMinAggregateOutputType | null
    _max: ReservaLaboratorioAbiertoMaxAggregateOutputType | null
  }

  type GetReservaLaboratorioAbiertoGroupByPayload<T extends ReservaLaboratorioAbiertoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservaLaboratorioAbiertoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservaLaboratorioAbiertoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservaLaboratorioAbiertoGroupByOutputType[P]>
            : GetScalarType<T[P], ReservaLaboratorioAbiertoGroupByOutputType[P]>
        }
      >
    >


  export type ReservaLaboratorioAbiertoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    especialidad?: boolean
    descripcion?: boolean
    concurrentes?: boolean
    laboratorioAbiertoTipo?: boolean
    reservaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioAbierto$laboratorioArgs<ExtArgs>
    equipoReservado?: boolean | ReservaLaboratorioAbierto$equipoReservadoArgs<ExtArgs>
    _count?: boolean | ReservaLaboratorioAbiertoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioAbierto"]>

  export type ReservaLaboratorioAbiertoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    especialidad?: boolean
    descripcion?: boolean
    concurrentes?: boolean
    laboratorioAbiertoTipo?: boolean
    reservaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioAbierto$laboratorioArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioAbierto"]>

  export type ReservaLaboratorioAbiertoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    especialidad?: boolean
    descripcion?: boolean
    concurrentes?: boolean
    laboratorioAbiertoTipo?: boolean
    reservaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioAbierto$laboratorioArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioAbierto"]>

  export type ReservaLaboratorioAbiertoSelectScalar = {
    id?: boolean
    especialidad?: boolean
    descripcion?: boolean
    concurrentes?: boolean
    laboratorioAbiertoTipo?: boolean
    reservaId?: boolean
    sedeId?: boolean
    laboratorioId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type ReservaLaboratorioAbiertoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "especialidad" | "descripcion" | "concurrentes" | "laboratorioAbiertoTipo" | "reservaId" | "sedeId" | "laboratorioId" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["reservaLaboratorioAbierto"]>
  export type ReservaLaboratorioAbiertoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioAbierto$laboratorioArgs<ExtArgs>
    equipoReservado?: boolean | ReservaLaboratorioAbierto$equipoReservadoArgs<ExtArgs>
    _count?: boolean | ReservaLaboratorioAbiertoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ReservaLaboratorioAbiertoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioAbierto$laboratorioArgs<ExtArgs>
  }
  export type ReservaLaboratorioAbiertoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    sede?: boolean | SedeDefaultArgs<ExtArgs>
    laboratorio?: boolean | ReservaLaboratorioAbierto$laboratorioArgs<ExtArgs>
  }

  export type $ReservaLaboratorioAbiertoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReservaLaboratorioAbierto"
    objects: {
      reserva: Prisma.$ReservaPayload<ExtArgs>
      sede: Prisma.$SedePayload<ExtArgs>
      laboratorio: Prisma.$LaboratorioPayload<ExtArgs> | null
      equipoReservado: Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      especialidad: string
      descripcion: string
      concurrentes: number
      laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
      reservaId: number
      sedeId: number
      laboratorioId: number | null
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["reservaLaboratorioAbierto"]>
    composites: {}
  }

  type ReservaLaboratorioAbiertoGetPayload<S extends boolean | null | undefined | ReservaLaboratorioAbiertoDefaultArgs> = $Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload, S>

  type ReservaLaboratorioAbiertoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservaLaboratorioAbiertoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservaLaboratorioAbiertoCountAggregateInputType | true
    }

  export interface ReservaLaboratorioAbiertoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReservaLaboratorioAbierto'], meta: { name: 'ReservaLaboratorioAbierto' } }
    /**
     * Find zero or one ReservaLaboratorioAbierto that matches the filter.
     * @param {ReservaLaboratorioAbiertoFindUniqueArgs} args - Arguments to find a ReservaLaboratorioAbierto
     * @example
     * // Get one ReservaLaboratorioAbierto
     * const reservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservaLaboratorioAbiertoFindUniqueArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoFindUniqueArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReservaLaboratorioAbierto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservaLaboratorioAbiertoFindUniqueOrThrowArgs} args - Arguments to find a ReservaLaboratorioAbierto
     * @example
     * // Get one ReservaLaboratorioAbierto
     * const reservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservaLaboratorioAbiertoFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaLaboratorioAbierto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoFindFirstArgs} args - Arguments to find a ReservaLaboratorioAbierto
     * @example
     * // Get one ReservaLaboratorioAbierto
     * const reservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservaLaboratorioAbiertoFindFirstArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoFindFirstArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaLaboratorioAbierto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoFindFirstOrThrowArgs} args - Arguments to find a ReservaLaboratorioAbierto
     * @example
     * // Get one ReservaLaboratorioAbierto
     * const reservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservaLaboratorioAbiertoFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReservaLaboratorioAbiertos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReservaLaboratorioAbiertos
     * const reservaLaboratorioAbiertos = await prisma.reservaLaboratorioAbierto.findMany()
     * 
     * // Get first 10 ReservaLaboratorioAbiertos
     * const reservaLaboratorioAbiertos = await prisma.reservaLaboratorioAbierto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservaLaboratorioAbiertoWithIdOnly = await prisma.reservaLaboratorioAbierto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservaLaboratorioAbiertoFindManyArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReservaLaboratorioAbierto.
     * @param {ReservaLaboratorioAbiertoCreateArgs} args - Arguments to create a ReservaLaboratorioAbierto.
     * @example
     * // Create one ReservaLaboratorioAbierto
     * const ReservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.create({
     *   data: {
     *     // ... data to create a ReservaLaboratorioAbierto
     *   }
     * })
     * 
     */
    create<T extends ReservaLaboratorioAbiertoCreateArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoCreateArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReservaLaboratorioAbiertos.
     * @param {ReservaLaboratorioAbiertoCreateManyArgs} args - Arguments to create many ReservaLaboratorioAbiertos.
     * @example
     * // Create many ReservaLaboratorioAbiertos
     * const reservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservaLaboratorioAbiertoCreateManyArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReservaLaboratorioAbiertos and returns the data saved in the database.
     * @param {ReservaLaboratorioAbiertoCreateManyAndReturnArgs} args - Arguments to create many ReservaLaboratorioAbiertos.
     * @example
     * // Create many ReservaLaboratorioAbiertos
     * const reservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReservaLaboratorioAbiertos and only return the `id`
     * const reservaLaboratorioAbiertoWithIdOnly = await prisma.reservaLaboratorioAbierto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservaLaboratorioAbiertoCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReservaLaboratorioAbierto.
     * @param {ReservaLaboratorioAbiertoDeleteArgs} args - Arguments to delete one ReservaLaboratorioAbierto.
     * @example
     * // Delete one ReservaLaboratorioAbierto
     * const ReservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.delete({
     *   where: {
     *     // ... filter to delete one ReservaLaboratorioAbierto
     *   }
     * })
     * 
     */
    delete<T extends ReservaLaboratorioAbiertoDeleteArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoDeleteArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReservaLaboratorioAbierto.
     * @param {ReservaLaboratorioAbiertoUpdateArgs} args - Arguments to update one ReservaLaboratorioAbierto.
     * @example
     * // Update one ReservaLaboratorioAbierto
     * const reservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservaLaboratorioAbiertoUpdateArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoUpdateArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReservaLaboratorioAbiertos.
     * @param {ReservaLaboratorioAbiertoDeleteManyArgs} args - Arguments to filter ReservaLaboratorioAbiertos to delete.
     * @example
     * // Delete a few ReservaLaboratorioAbiertos
     * const { count } = await prisma.reservaLaboratorioAbierto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservaLaboratorioAbiertoDeleteManyArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaLaboratorioAbiertos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReservaLaboratorioAbiertos
     * const reservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservaLaboratorioAbiertoUpdateManyArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaLaboratorioAbiertos and returns the data updated in the database.
     * @param {ReservaLaboratorioAbiertoUpdateManyAndReturnArgs} args - Arguments to update many ReservaLaboratorioAbiertos.
     * @example
     * // Update many ReservaLaboratorioAbiertos
     * const reservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReservaLaboratorioAbiertos and only return the `id`
     * const reservaLaboratorioAbiertoWithIdOnly = await prisma.reservaLaboratorioAbierto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservaLaboratorioAbiertoUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReservaLaboratorioAbierto.
     * @param {ReservaLaboratorioAbiertoUpsertArgs} args - Arguments to update or create a ReservaLaboratorioAbierto.
     * @example
     * // Update or create a ReservaLaboratorioAbierto
     * const reservaLaboratorioAbierto = await prisma.reservaLaboratorioAbierto.upsert({
     *   create: {
     *     // ... data to create a ReservaLaboratorioAbierto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReservaLaboratorioAbierto we want to update
     *   }
     * })
     */
    upsert<T extends ReservaLaboratorioAbiertoUpsertArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoUpsertArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReservaLaboratorioAbiertos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoCountArgs} args - Arguments to filter ReservaLaboratorioAbiertos to count.
     * @example
     * // Count the number of ReservaLaboratorioAbiertos
     * const count = await prisma.reservaLaboratorioAbierto.count({
     *   where: {
     *     // ... the filter for the ReservaLaboratorioAbiertos we want to count
     *   }
     * })
    **/
    count<T extends ReservaLaboratorioAbiertoCountArgs>(
      args?: Subset<T, ReservaLaboratorioAbiertoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservaLaboratorioAbiertoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReservaLaboratorioAbierto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservaLaboratorioAbiertoAggregateArgs>(args: Subset<T, ReservaLaboratorioAbiertoAggregateArgs>): Prisma.PrismaPromise<GetReservaLaboratorioAbiertoAggregateType<T>>

    /**
     * Group by ReservaLaboratorioAbierto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservaLaboratorioAbiertoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservaLaboratorioAbiertoGroupByArgs['orderBy'] }
        : { orderBy?: ReservaLaboratorioAbiertoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservaLaboratorioAbiertoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaLaboratorioAbiertoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReservaLaboratorioAbierto model
   */
  readonly fields: ReservaLaboratorioAbiertoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReservaLaboratorioAbierto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservaLaboratorioAbiertoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reserva<T extends ReservaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservaDefaultArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    laboratorio<T extends ReservaLaboratorioAbierto$laboratorioArgs<ExtArgs> = {}>(args?: Subset<T, ReservaLaboratorioAbierto$laboratorioArgs<ExtArgs>>): Prisma__LaboratorioClient<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    equipoReservado<T extends ReservaLaboratorioAbierto$equipoReservadoArgs<ExtArgs> = {}>(args?: Subset<T, ReservaLaboratorioAbierto$equipoReservadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReservaLaboratorioAbierto model
   */
  interface ReservaLaboratorioAbiertoFieldRefs {
    readonly id: FieldRef<"ReservaLaboratorioAbierto", 'Int'>
    readonly especialidad: FieldRef<"ReservaLaboratorioAbierto", 'String'>
    readonly descripcion: FieldRef<"ReservaLaboratorioAbierto", 'String'>
    readonly concurrentes: FieldRef<"ReservaLaboratorioAbierto", 'Int'>
    readonly laboratorioAbiertoTipo: FieldRef<"ReservaLaboratorioAbierto", 'LaboratorioAbiertoTipo'>
    readonly reservaId: FieldRef<"ReservaLaboratorioAbierto", 'Int'>
    readonly sedeId: FieldRef<"ReservaLaboratorioAbierto", 'Int'>
    readonly laboratorioId: FieldRef<"ReservaLaboratorioAbierto", 'Int'>
    readonly fechaCreacion: FieldRef<"ReservaLaboratorioAbierto", 'DateTime'>
    readonly fechaModificacion: FieldRef<"ReservaLaboratorioAbierto", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"ReservaLaboratorioAbierto", 'String'>
    readonly usuarioModificadorId: FieldRef<"ReservaLaboratorioAbierto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ReservaLaboratorioAbierto findUnique
   */
  export type ReservaLaboratorioAbiertoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioAbierto to fetch.
     */
    where: ReservaLaboratorioAbiertoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioAbierto findUniqueOrThrow
   */
  export type ReservaLaboratorioAbiertoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioAbierto to fetch.
     */
    where: ReservaLaboratorioAbiertoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioAbierto findFirst
   */
  export type ReservaLaboratorioAbiertoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioAbierto to fetch.
     */
    where?: ReservaLaboratorioAbiertoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioAbiertos to fetch.
     */
    orderBy?: ReservaLaboratorioAbiertoOrderByWithRelationInput | ReservaLaboratorioAbiertoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaLaboratorioAbiertos.
     */
    cursor?: ReservaLaboratorioAbiertoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioAbiertos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioAbiertos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaLaboratorioAbiertos.
     */
    distinct?: ReservaLaboratorioAbiertoScalarFieldEnum | ReservaLaboratorioAbiertoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioAbierto findFirstOrThrow
   */
  export type ReservaLaboratorioAbiertoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioAbierto to fetch.
     */
    where?: ReservaLaboratorioAbiertoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioAbiertos to fetch.
     */
    orderBy?: ReservaLaboratorioAbiertoOrderByWithRelationInput | ReservaLaboratorioAbiertoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaLaboratorioAbiertos.
     */
    cursor?: ReservaLaboratorioAbiertoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioAbiertos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioAbiertos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaLaboratorioAbiertos.
     */
    distinct?: ReservaLaboratorioAbiertoScalarFieldEnum | ReservaLaboratorioAbiertoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioAbierto findMany
   */
  export type ReservaLaboratorioAbiertoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioAbiertos to fetch.
     */
    where?: ReservaLaboratorioAbiertoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioAbiertos to fetch.
     */
    orderBy?: ReservaLaboratorioAbiertoOrderByWithRelationInput | ReservaLaboratorioAbiertoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReservaLaboratorioAbiertos.
     */
    cursor?: ReservaLaboratorioAbiertoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioAbiertos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioAbiertos.
     */
    skip?: number
    distinct?: ReservaLaboratorioAbiertoScalarFieldEnum | ReservaLaboratorioAbiertoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioAbierto create
   */
  export type ReservaLaboratorioAbiertoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    /**
     * The data needed to create a ReservaLaboratorioAbierto.
     */
    data: XOR<ReservaLaboratorioAbiertoCreateInput, ReservaLaboratorioAbiertoUncheckedCreateInput>
  }

  /**
   * ReservaLaboratorioAbierto createMany
   */
  export type ReservaLaboratorioAbiertoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReservaLaboratorioAbiertos.
     */
    data: ReservaLaboratorioAbiertoCreateManyInput | ReservaLaboratorioAbiertoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReservaLaboratorioAbierto createManyAndReturn
   */
  export type ReservaLaboratorioAbiertoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * The data used to create many ReservaLaboratorioAbiertos.
     */
    data: ReservaLaboratorioAbiertoCreateManyInput | ReservaLaboratorioAbiertoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaLaboratorioAbierto update
   */
  export type ReservaLaboratorioAbiertoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    /**
     * The data needed to update a ReservaLaboratorioAbierto.
     */
    data: XOR<ReservaLaboratorioAbiertoUpdateInput, ReservaLaboratorioAbiertoUncheckedUpdateInput>
    /**
     * Choose, which ReservaLaboratorioAbierto to update.
     */
    where: ReservaLaboratorioAbiertoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioAbierto updateMany
   */
  export type ReservaLaboratorioAbiertoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReservaLaboratorioAbiertos.
     */
    data: XOR<ReservaLaboratorioAbiertoUpdateManyMutationInput, ReservaLaboratorioAbiertoUncheckedUpdateManyInput>
    /**
     * Filter which ReservaLaboratorioAbiertos to update
     */
    where?: ReservaLaboratorioAbiertoWhereInput
    /**
     * Limit how many ReservaLaboratorioAbiertos to update.
     */
    limit?: number
  }

  /**
   * ReservaLaboratorioAbierto updateManyAndReturn
   */
  export type ReservaLaboratorioAbiertoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * The data used to update ReservaLaboratorioAbiertos.
     */
    data: XOR<ReservaLaboratorioAbiertoUpdateManyMutationInput, ReservaLaboratorioAbiertoUncheckedUpdateManyInput>
    /**
     * Filter which ReservaLaboratorioAbiertos to update
     */
    where?: ReservaLaboratorioAbiertoWhereInput
    /**
     * Limit how many ReservaLaboratorioAbiertos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaLaboratorioAbierto upsert
   */
  export type ReservaLaboratorioAbiertoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    /**
     * The filter to search for the ReservaLaboratorioAbierto to update in case it exists.
     */
    where: ReservaLaboratorioAbiertoWhereUniqueInput
    /**
     * In case the ReservaLaboratorioAbierto found by the `where` argument doesn't exist, create a new ReservaLaboratorioAbierto with this data.
     */
    create: XOR<ReservaLaboratorioAbiertoCreateInput, ReservaLaboratorioAbiertoUncheckedCreateInput>
    /**
     * In case the ReservaLaboratorioAbierto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservaLaboratorioAbiertoUpdateInput, ReservaLaboratorioAbiertoUncheckedUpdateInput>
  }

  /**
   * ReservaLaboratorioAbierto delete
   */
  export type ReservaLaboratorioAbiertoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    /**
     * Filter which ReservaLaboratorioAbierto to delete.
     */
    where: ReservaLaboratorioAbiertoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioAbierto deleteMany
   */
  export type ReservaLaboratorioAbiertoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaLaboratorioAbiertos to delete
     */
    where?: ReservaLaboratorioAbiertoWhereInput
    /**
     * Limit how many ReservaLaboratorioAbiertos to delete.
     */
    limit?: number
  }

  /**
   * ReservaLaboratorioAbierto.laboratorio
   */
  export type ReservaLaboratorioAbierto$laboratorioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    where?: LaboratorioWhereInput
  }

  /**
   * ReservaLaboratorioAbierto.equipoReservado
   */
  export type ReservaLaboratorioAbierto$equipoReservadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
    orderBy?: ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput | ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput[]
    cursor?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLaboratorioAbiertoEquipoScalarFieldEnum | ReservaLaboratorioAbiertoEquipoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioAbierto without action
   */
  export type ReservaLaboratorioAbiertoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
  }


  /**
   * Model ReservaLaboratorioAbiertoEquipo
   */

  export type AggregateReservaLaboratorioAbiertoEquipo = {
    _count: ReservaLaboratorioAbiertoEquipoCountAggregateOutputType | null
    _avg: ReservaLaboratorioAbiertoEquipoAvgAggregateOutputType | null
    _sum: ReservaLaboratorioAbiertoEquipoSumAggregateOutputType | null
    _min: ReservaLaboratorioAbiertoEquipoMinAggregateOutputType | null
    _max: ReservaLaboratorioAbiertoEquipoMaxAggregateOutputType | null
  }

  export type ReservaLaboratorioAbiertoEquipoAvgAggregateOutputType = {
    id: number | null
    cantidad: number | null
    reservaLaboratorioAbiertoId: number | null
    equipoId: number | null
  }

  export type ReservaLaboratorioAbiertoEquipoSumAggregateOutputType = {
    id: number | null
    cantidad: number | null
    reservaLaboratorioAbiertoId: number | null
    equipoId: number | null
  }

  export type ReservaLaboratorioAbiertoEquipoMinAggregateOutputType = {
    id: number | null
    cantidad: number | null
    reservaLaboratorioAbiertoId: number | null
    equipoId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaLaboratorioAbiertoEquipoMaxAggregateOutputType = {
    id: number | null
    cantidad: number | null
    reservaLaboratorioAbiertoId: number | null
    equipoId: number | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type ReservaLaboratorioAbiertoEquipoCountAggregateOutputType = {
    id: number
    cantidad: number
    reservaLaboratorioAbiertoId: number
    equipoId: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type ReservaLaboratorioAbiertoEquipoAvgAggregateInputType = {
    id?: true
    cantidad?: true
    reservaLaboratorioAbiertoId?: true
    equipoId?: true
  }

  export type ReservaLaboratorioAbiertoEquipoSumAggregateInputType = {
    id?: true
    cantidad?: true
    reservaLaboratorioAbiertoId?: true
    equipoId?: true
  }

  export type ReservaLaboratorioAbiertoEquipoMinAggregateInputType = {
    id?: true
    cantidad?: true
    reservaLaboratorioAbiertoId?: true
    equipoId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaLaboratorioAbiertoEquipoMaxAggregateInputType = {
    id?: true
    cantidad?: true
    reservaLaboratorioAbiertoId?: true
    equipoId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type ReservaLaboratorioAbiertoEquipoCountAggregateInputType = {
    id?: true
    cantidad?: true
    reservaLaboratorioAbiertoId?: true
    equipoId?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type ReservaLaboratorioAbiertoEquipoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaLaboratorioAbiertoEquipo to aggregate.
     */
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioAbiertoEquipos to fetch.
     */
    orderBy?: ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput | ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioAbiertoEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioAbiertoEquipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReservaLaboratorioAbiertoEquipos
    **/
    _count?: true | ReservaLaboratorioAbiertoEquipoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservaLaboratorioAbiertoEquipoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservaLaboratorioAbiertoEquipoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservaLaboratorioAbiertoEquipoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservaLaboratorioAbiertoEquipoMaxAggregateInputType
  }

  export type GetReservaLaboratorioAbiertoEquipoAggregateType<T extends ReservaLaboratorioAbiertoEquipoAggregateArgs> = {
        [P in keyof T & keyof AggregateReservaLaboratorioAbiertoEquipo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservaLaboratorioAbiertoEquipo[P]>
      : GetScalarType<T[P], AggregateReservaLaboratorioAbiertoEquipo[P]>
  }




  export type ReservaLaboratorioAbiertoEquipoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
    orderBy?: ReservaLaboratorioAbiertoEquipoOrderByWithAggregationInput | ReservaLaboratorioAbiertoEquipoOrderByWithAggregationInput[]
    by: ReservaLaboratorioAbiertoEquipoScalarFieldEnum[] | ReservaLaboratorioAbiertoEquipoScalarFieldEnum
    having?: ReservaLaboratorioAbiertoEquipoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservaLaboratorioAbiertoEquipoCountAggregateInputType | true
    _avg?: ReservaLaboratorioAbiertoEquipoAvgAggregateInputType
    _sum?: ReservaLaboratorioAbiertoEquipoSumAggregateInputType
    _min?: ReservaLaboratorioAbiertoEquipoMinAggregateInputType
    _max?: ReservaLaboratorioAbiertoEquipoMaxAggregateInputType
  }

  export type ReservaLaboratorioAbiertoEquipoGroupByOutputType = {
    id: number
    cantidad: number
    reservaLaboratorioAbiertoId: number
    equipoId: number
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: ReservaLaboratorioAbiertoEquipoCountAggregateOutputType | null
    _avg: ReservaLaboratorioAbiertoEquipoAvgAggregateOutputType | null
    _sum: ReservaLaboratorioAbiertoEquipoSumAggregateOutputType | null
    _min: ReservaLaboratorioAbiertoEquipoMinAggregateOutputType | null
    _max: ReservaLaboratorioAbiertoEquipoMaxAggregateOutputType | null
  }

  type GetReservaLaboratorioAbiertoEquipoGroupByPayload<T extends ReservaLaboratorioAbiertoEquipoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservaLaboratorioAbiertoEquipoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservaLaboratorioAbiertoEquipoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservaLaboratorioAbiertoEquipoGroupByOutputType[P]>
            : GetScalarType<T[P], ReservaLaboratorioAbiertoEquipoGroupByOutputType[P]>
        }
      >
    >


  export type ReservaLaboratorioAbiertoEquipoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    reservaLaboratorioAbiertoId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reservaLaboratorioAbierto?: boolean | ReservaLaboratorioAbiertoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioAbiertoEquipo"]>

  export type ReservaLaboratorioAbiertoEquipoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    reservaLaboratorioAbiertoId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reservaLaboratorioAbierto?: boolean | ReservaLaboratorioAbiertoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioAbiertoEquipo"]>

  export type ReservaLaboratorioAbiertoEquipoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    reservaLaboratorioAbiertoId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    reservaLaboratorioAbierto?: boolean | ReservaLaboratorioAbiertoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaLaboratorioAbiertoEquipo"]>

  export type ReservaLaboratorioAbiertoEquipoSelectScalar = {
    id?: boolean
    cantidad?: boolean
    reservaLaboratorioAbiertoId?: boolean
    equipoId?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type ReservaLaboratorioAbiertoEquipoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cantidad" | "reservaLaboratorioAbiertoId" | "equipoId" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["reservaLaboratorioAbiertoEquipo"]>
  export type ReservaLaboratorioAbiertoEquipoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservaLaboratorioAbierto?: boolean | ReservaLaboratorioAbiertoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }
  export type ReservaLaboratorioAbiertoEquipoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservaLaboratorioAbierto?: boolean | ReservaLaboratorioAbiertoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }
  export type ReservaLaboratorioAbiertoEquipoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservaLaboratorioAbierto?: boolean | ReservaLaboratorioAbiertoDefaultArgs<ExtArgs>
    equipoTipo?: boolean | EquipoTipoDefaultArgs<ExtArgs>
  }

  export type $ReservaLaboratorioAbiertoEquipoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReservaLaboratorioAbiertoEquipo"
    objects: {
      reservaLaboratorioAbierto: Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>
      equipoTipo: Prisma.$EquipoTipoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      cantidad: number
      reservaLaboratorioAbiertoId: number
      equipoId: number
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["reservaLaboratorioAbiertoEquipo"]>
    composites: {}
  }

  type ReservaLaboratorioAbiertoEquipoGetPayload<S extends boolean | null | undefined | ReservaLaboratorioAbiertoEquipoDefaultArgs> = $Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload, S>

  type ReservaLaboratorioAbiertoEquipoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservaLaboratorioAbiertoEquipoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservaLaboratorioAbiertoEquipoCountAggregateInputType | true
    }

  export interface ReservaLaboratorioAbiertoEquipoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReservaLaboratorioAbiertoEquipo'], meta: { name: 'ReservaLaboratorioAbiertoEquipo' } }
    /**
     * Find zero or one ReservaLaboratorioAbiertoEquipo that matches the filter.
     * @param {ReservaLaboratorioAbiertoEquipoFindUniqueArgs} args - Arguments to find a ReservaLaboratorioAbiertoEquipo
     * @example
     * // Get one ReservaLaboratorioAbiertoEquipo
     * const reservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservaLaboratorioAbiertoEquipoFindUniqueArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoEquipoFindUniqueArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReservaLaboratorioAbiertoEquipo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservaLaboratorioAbiertoEquipoFindUniqueOrThrowArgs} args - Arguments to find a ReservaLaboratorioAbiertoEquipo
     * @example
     * // Get one ReservaLaboratorioAbiertoEquipo
     * const reservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservaLaboratorioAbiertoEquipoFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoEquipoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaLaboratorioAbiertoEquipo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoEquipoFindFirstArgs} args - Arguments to find a ReservaLaboratorioAbiertoEquipo
     * @example
     * // Get one ReservaLaboratorioAbiertoEquipo
     * const reservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservaLaboratorioAbiertoEquipoFindFirstArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoEquipoFindFirstArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReservaLaboratorioAbiertoEquipo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoEquipoFindFirstOrThrowArgs} args - Arguments to find a ReservaLaboratorioAbiertoEquipo
     * @example
     * // Get one ReservaLaboratorioAbiertoEquipo
     * const reservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservaLaboratorioAbiertoEquipoFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoEquipoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReservaLaboratorioAbiertoEquipos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoEquipoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReservaLaboratorioAbiertoEquipos
     * const reservaLaboratorioAbiertoEquipos = await prisma.reservaLaboratorioAbiertoEquipo.findMany()
     * 
     * // Get first 10 ReservaLaboratorioAbiertoEquipos
     * const reservaLaboratorioAbiertoEquipos = await prisma.reservaLaboratorioAbiertoEquipo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservaLaboratorioAbiertoEquipoWithIdOnly = await prisma.reservaLaboratorioAbiertoEquipo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservaLaboratorioAbiertoEquipoFindManyArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoEquipoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReservaLaboratorioAbiertoEquipo.
     * @param {ReservaLaboratorioAbiertoEquipoCreateArgs} args - Arguments to create a ReservaLaboratorioAbiertoEquipo.
     * @example
     * // Create one ReservaLaboratorioAbiertoEquipo
     * const ReservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.create({
     *   data: {
     *     // ... data to create a ReservaLaboratorioAbiertoEquipo
     *   }
     * })
     * 
     */
    create<T extends ReservaLaboratorioAbiertoEquipoCreateArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoEquipoCreateArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReservaLaboratorioAbiertoEquipos.
     * @param {ReservaLaboratorioAbiertoEquipoCreateManyArgs} args - Arguments to create many ReservaLaboratorioAbiertoEquipos.
     * @example
     * // Create many ReservaLaboratorioAbiertoEquipos
     * const reservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservaLaboratorioAbiertoEquipoCreateManyArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoEquipoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReservaLaboratorioAbiertoEquipos and returns the data saved in the database.
     * @param {ReservaLaboratorioAbiertoEquipoCreateManyAndReturnArgs} args - Arguments to create many ReservaLaboratorioAbiertoEquipos.
     * @example
     * // Create many ReservaLaboratorioAbiertoEquipos
     * const reservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReservaLaboratorioAbiertoEquipos and only return the `id`
     * const reservaLaboratorioAbiertoEquipoWithIdOnly = await prisma.reservaLaboratorioAbiertoEquipo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservaLaboratorioAbiertoEquipoCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoEquipoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReservaLaboratorioAbiertoEquipo.
     * @param {ReservaLaboratorioAbiertoEquipoDeleteArgs} args - Arguments to delete one ReservaLaboratorioAbiertoEquipo.
     * @example
     * // Delete one ReservaLaboratorioAbiertoEquipo
     * const ReservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.delete({
     *   where: {
     *     // ... filter to delete one ReservaLaboratorioAbiertoEquipo
     *   }
     * })
     * 
     */
    delete<T extends ReservaLaboratorioAbiertoEquipoDeleteArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoEquipoDeleteArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReservaLaboratorioAbiertoEquipo.
     * @param {ReservaLaboratorioAbiertoEquipoUpdateArgs} args - Arguments to update one ReservaLaboratorioAbiertoEquipo.
     * @example
     * // Update one ReservaLaboratorioAbiertoEquipo
     * const reservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservaLaboratorioAbiertoEquipoUpdateArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoEquipoUpdateArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReservaLaboratorioAbiertoEquipos.
     * @param {ReservaLaboratorioAbiertoEquipoDeleteManyArgs} args - Arguments to filter ReservaLaboratorioAbiertoEquipos to delete.
     * @example
     * // Delete a few ReservaLaboratorioAbiertoEquipos
     * const { count } = await prisma.reservaLaboratorioAbiertoEquipo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservaLaboratorioAbiertoEquipoDeleteManyArgs>(args?: SelectSubset<T, ReservaLaboratorioAbiertoEquipoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaLaboratorioAbiertoEquipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoEquipoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReservaLaboratorioAbiertoEquipos
     * const reservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservaLaboratorioAbiertoEquipoUpdateManyArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoEquipoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaLaboratorioAbiertoEquipos and returns the data updated in the database.
     * @param {ReservaLaboratorioAbiertoEquipoUpdateManyAndReturnArgs} args - Arguments to update many ReservaLaboratorioAbiertoEquipos.
     * @example
     * // Update many ReservaLaboratorioAbiertoEquipos
     * const reservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReservaLaboratorioAbiertoEquipos and only return the `id`
     * const reservaLaboratorioAbiertoEquipoWithIdOnly = await prisma.reservaLaboratorioAbiertoEquipo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservaLaboratorioAbiertoEquipoUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoEquipoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReservaLaboratorioAbiertoEquipo.
     * @param {ReservaLaboratorioAbiertoEquipoUpsertArgs} args - Arguments to update or create a ReservaLaboratorioAbiertoEquipo.
     * @example
     * // Update or create a ReservaLaboratorioAbiertoEquipo
     * const reservaLaboratorioAbiertoEquipo = await prisma.reservaLaboratorioAbiertoEquipo.upsert({
     *   create: {
     *     // ... data to create a ReservaLaboratorioAbiertoEquipo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReservaLaboratorioAbiertoEquipo we want to update
     *   }
     * })
     */
    upsert<T extends ReservaLaboratorioAbiertoEquipoUpsertArgs>(args: SelectSubset<T, ReservaLaboratorioAbiertoEquipoUpsertArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoEquipoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoEquipoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReservaLaboratorioAbiertoEquipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoEquipoCountArgs} args - Arguments to filter ReservaLaboratorioAbiertoEquipos to count.
     * @example
     * // Count the number of ReservaLaboratorioAbiertoEquipos
     * const count = await prisma.reservaLaboratorioAbiertoEquipo.count({
     *   where: {
     *     // ... the filter for the ReservaLaboratorioAbiertoEquipos we want to count
     *   }
     * })
    **/
    count<T extends ReservaLaboratorioAbiertoEquipoCountArgs>(
      args?: Subset<T, ReservaLaboratorioAbiertoEquipoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservaLaboratorioAbiertoEquipoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReservaLaboratorioAbiertoEquipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoEquipoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservaLaboratorioAbiertoEquipoAggregateArgs>(args: Subset<T, ReservaLaboratorioAbiertoEquipoAggregateArgs>): Prisma.PrismaPromise<GetReservaLaboratorioAbiertoEquipoAggregateType<T>>

    /**
     * Group by ReservaLaboratorioAbiertoEquipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaLaboratorioAbiertoEquipoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservaLaboratorioAbiertoEquipoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservaLaboratorioAbiertoEquipoGroupByArgs['orderBy'] }
        : { orderBy?: ReservaLaboratorioAbiertoEquipoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservaLaboratorioAbiertoEquipoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaLaboratorioAbiertoEquipoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReservaLaboratorioAbiertoEquipo model
   */
  readonly fields: ReservaLaboratorioAbiertoEquipoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReservaLaboratorioAbiertoEquipo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservaLaboratorioAbiertoEquipoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reservaLaboratorioAbierto<T extends ReservaLaboratorioAbiertoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservaLaboratorioAbiertoDefaultArgs<ExtArgs>>): Prisma__ReservaLaboratorioAbiertoClient<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    equipoTipo<T extends EquipoTipoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipoTipoDefaultArgs<ExtArgs>>): Prisma__EquipoTipoClient<$Result.GetResult<Prisma.$EquipoTipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReservaLaboratorioAbiertoEquipo model
   */
  interface ReservaLaboratorioAbiertoEquipoFieldRefs {
    readonly id: FieldRef<"ReservaLaboratorioAbiertoEquipo", 'Int'>
    readonly cantidad: FieldRef<"ReservaLaboratorioAbiertoEquipo", 'Int'>
    readonly reservaLaboratorioAbiertoId: FieldRef<"ReservaLaboratorioAbiertoEquipo", 'Int'>
    readonly equipoId: FieldRef<"ReservaLaboratorioAbiertoEquipo", 'Int'>
    readonly fechaCreacion: FieldRef<"ReservaLaboratorioAbiertoEquipo", 'DateTime'>
    readonly fechaModificacion: FieldRef<"ReservaLaboratorioAbiertoEquipo", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"ReservaLaboratorioAbiertoEquipo", 'String'>
    readonly usuarioModificadorId: FieldRef<"ReservaLaboratorioAbiertoEquipo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ReservaLaboratorioAbiertoEquipo findUnique
   */
  export type ReservaLaboratorioAbiertoEquipoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioAbiertoEquipo to fetch.
     */
    where: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioAbiertoEquipo findUniqueOrThrow
   */
  export type ReservaLaboratorioAbiertoEquipoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioAbiertoEquipo to fetch.
     */
    where: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioAbiertoEquipo findFirst
   */
  export type ReservaLaboratorioAbiertoEquipoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioAbiertoEquipo to fetch.
     */
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioAbiertoEquipos to fetch.
     */
    orderBy?: ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput | ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaLaboratorioAbiertoEquipos.
     */
    cursor?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioAbiertoEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioAbiertoEquipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaLaboratorioAbiertoEquipos.
     */
    distinct?: ReservaLaboratorioAbiertoEquipoScalarFieldEnum | ReservaLaboratorioAbiertoEquipoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioAbiertoEquipo findFirstOrThrow
   */
  export type ReservaLaboratorioAbiertoEquipoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioAbiertoEquipo to fetch.
     */
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioAbiertoEquipos to fetch.
     */
    orderBy?: ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput | ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaLaboratorioAbiertoEquipos.
     */
    cursor?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioAbiertoEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioAbiertoEquipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaLaboratorioAbiertoEquipos.
     */
    distinct?: ReservaLaboratorioAbiertoEquipoScalarFieldEnum | ReservaLaboratorioAbiertoEquipoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioAbiertoEquipo findMany
   */
  export type ReservaLaboratorioAbiertoEquipoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
    /**
     * Filter, which ReservaLaboratorioAbiertoEquipos to fetch.
     */
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaLaboratorioAbiertoEquipos to fetch.
     */
    orderBy?: ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput | ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReservaLaboratorioAbiertoEquipos.
     */
    cursor?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaLaboratorioAbiertoEquipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaLaboratorioAbiertoEquipos.
     */
    skip?: number
    distinct?: ReservaLaboratorioAbiertoEquipoScalarFieldEnum | ReservaLaboratorioAbiertoEquipoScalarFieldEnum[]
  }

  /**
   * ReservaLaboratorioAbiertoEquipo create
   */
  export type ReservaLaboratorioAbiertoEquipoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
    /**
     * The data needed to create a ReservaLaboratorioAbiertoEquipo.
     */
    data: XOR<ReservaLaboratorioAbiertoEquipoCreateInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateInput>
  }

  /**
   * ReservaLaboratorioAbiertoEquipo createMany
   */
  export type ReservaLaboratorioAbiertoEquipoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReservaLaboratorioAbiertoEquipos.
     */
    data: ReservaLaboratorioAbiertoEquipoCreateManyInput | ReservaLaboratorioAbiertoEquipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReservaLaboratorioAbiertoEquipo createManyAndReturn
   */
  export type ReservaLaboratorioAbiertoEquipoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * The data used to create many ReservaLaboratorioAbiertoEquipos.
     */
    data: ReservaLaboratorioAbiertoEquipoCreateManyInput | ReservaLaboratorioAbiertoEquipoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaLaboratorioAbiertoEquipo update
   */
  export type ReservaLaboratorioAbiertoEquipoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
    /**
     * The data needed to update a ReservaLaboratorioAbiertoEquipo.
     */
    data: XOR<ReservaLaboratorioAbiertoEquipoUpdateInput, ReservaLaboratorioAbiertoEquipoUncheckedUpdateInput>
    /**
     * Choose, which ReservaLaboratorioAbiertoEquipo to update.
     */
    where: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioAbiertoEquipo updateMany
   */
  export type ReservaLaboratorioAbiertoEquipoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReservaLaboratorioAbiertoEquipos.
     */
    data: XOR<ReservaLaboratorioAbiertoEquipoUpdateManyMutationInput, ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyInput>
    /**
     * Filter which ReservaLaboratorioAbiertoEquipos to update
     */
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
    /**
     * Limit how many ReservaLaboratorioAbiertoEquipos to update.
     */
    limit?: number
  }

  /**
   * ReservaLaboratorioAbiertoEquipo updateManyAndReturn
   */
  export type ReservaLaboratorioAbiertoEquipoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * The data used to update ReservaLaboratorioAbiertoEquipos.
     */
    data: XOR<ReservaLaboratorioAbiertoEquipoUpdateManyMutationInput, ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyInput>
    /**
     * Filter which ReservaLaboratorioAbiertoEquipos to update
     */
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
    /**
     * Limit how many ReservaLaboratorioAbiertoEquipos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReservaLaboratorioAbiertoEquipo upsert
   */
  export type ReservaLaboratorioAbiertoEquipoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
    /**
     * The filter to search for the ReservaLaboratorioAbiertoEquipo to update in case it exists.
     */
    where: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    /**
     * In case the ReservaLaboratorioAbiertoEquipo found by the `where` argument doesn't exist, create a new ReservaLaboratorioAbiertoEquipo with this data.
     */
    create: XOR<ReservaLaboratorioAbiertoEquipoCreateInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateInput>
    /**
     * In case the ReservaLaboratorioAbiertoEquipo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservaLaboratorioAbiertoEquipoUpdateInput, ReservaLaboratorioAbiertoEquipoUncheckedUpdateInput>
  }

  /**
   * ReservaLaboratorioAbiertoEquipo delete
   */
  export type ReservaLaboratorioAbiertoEquipoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
    /**
     * Filter which ReservaLaboratorioAbiertoEquipo to delete.
     */
    where: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
  }

  /**
   * ReservaLaboratorioAbiertoEquipo deleteMany
   */
  export type ReservaLaboratorioAbiertoEquipoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaLaboratorioAbiertoEquipos to delete
     */
    where?: ReservaLaboratorioAbiertoEquipoWhereInput
    /**
     * Limit how many ReservaLaboratorioAbiertoEquipos to delete.
     */
    limit?: number
  }

  /**
   * ReservaLaboratorioAbiertoEquipo without action
   */
  export type ReservaLaboratorioAbiertoEquipoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbiertoEquipo
     */
    select?: ReservaLaboratorioAbiertoEquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbiertoEquipo
     */
    omit?: ReservaLaboratorioAbiertoEquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoEquipoInclude<ExtArgs> | null
  }


  /**
   * Model Pantalla
   */

  export type AggregatePantalla = {
    _count: PantallaCountAggregateOutputType | null
    _avg: PantallaAvgAggregateOutputType | null
    _sum: PantallaSumAggregateOutputType | null
    _min: PantallaMinAggregateOutputType | null
    _max: PantallaMaxAggregateOutputType | null
  }

  export type PantallaAvgAggregateOutputType = {
    id: number | null
    sedeId: number | null
  }

  export type PantallaSumAggregateOutputType = {
    id: number | null
    sedeId: number | null
  }

  export type PantallaMinAggregateOutputType = {
    id: number | null
    sedeId: number | null
    docente: string | null
    materia: string | null
    laboratorio: string | null
    fechaHoraInicio: Date | null
    fechaHoraFin: Date | null
    usuarioCreadorId: string | null
    fechaCreacion: Date | null
  }

  export type PantallaMaxAggregateOutputType = {
    id: number | null
    sedeId: number | null
    docente: string | null
    materia: string | null
    laboratorio: string | null
    fechaHoraInicio: Date | null
    fechaHoraFin: Date | null
    usuarioCreadorId: string | null
    fechaCreacion: Date | null
  }

  export type PantallaCountAggregateOutputType = {
    id: number
    sedeId: number
    docente: number
    materia: number
    laboratorio: number
    fechaHoraInicio: number
    fechaHoraFin: number
    usuarioCreadorId: number
    fechaCreacion: number
    _all: number
  }


  export type PantallaAvgAggregateInputType = {
    id?: true
    sedeId?: true
  }

  export type PantallaSumAggregateInputType = {
    id?: true
    sedeId?: true
  }

  export type PantallaMinAggregateInputType = {
    id?: true
    sedeId?: true
    docente?: true
    materia?: true
    laboratorio?: true
    fechaHoraInicio?: true
    fechaHoraFin?: true
    usuarioCreadorId?: true
    fechaCreacion?: true
  }

  export type PantallaMaxAggregateInputType = {
    id?: true
    sedeId?: true
    docente?: true
    materia?: true
    laboratorio?: true
    fechaHoraInicio?: true
    fechaHoraFin?: true
    usuarioCreadorId?: true
    fechaCreacion?: true
  }

  export type PantallaCountAggregateInputType = {
    id?: true
    sedeId?: true
    docente?: true
    materia?: true
    laboratorio?: true
    fechaHoraInicio?: true
    fechaHoraFin?: true
    usuarioCreadorId?: true
    fechaCreacion?: true
    _all?: true
  }

  export type PantallaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pantalla to aggregate.
     */
    where?: PantallaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pantallas to fetch.
     */
    orderBy?: PantallaOrderByWithRelationInput | PantallaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PantallaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pantallas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pantallas
    **/
    _count?: true | PantallaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PantallaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PantallaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PantallaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PantallaMaxAggregateInputType
  }

  export type GetPantallaAggregateType<T extends PantallaAggregateArgs> = {
        [P in keyof T & keyof AggregatePantalla]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePantalla[P]>
      : GetScalarType<T[P], AggregatePantalla[P]>
  }




  export type PantallaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PantallaWhereInput
    orderBy?: PantallaOrderByWithAggregationInput | PantallaOrderByWithAggregationInput[]
    by: PantallaScalarFieldEnum[] | PantallaScalarFieldEnum
    having?: PantallaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PantallaCountAggregateInputType | true
    _avg?: PantallaAvgAggregateInputType
    _sum?: PantallaSumAggregateInputType
    _min?: PantallaMinAggregateInputType
    _max?: PantallaMaxAggregateInputType
  }

  export type PantallaGroupByOutputType = {
    id: number
    sedeId: number
    docente: string
    materia: string | null
    laboratorio: string | null
    fechaHoraInicio: Date
    fechaHoraFin: Date
    usuarioCreadorId: string
    fechaCreacion: Date
    _count: PantallaCountAggregateOutputType | null
    _avg: PantallaAvgAggregateOutputType | null
    _sum: PantallaSumAggregateOutputType | null
    _min: PantallaMinAggregateOutputType | null
    _max: PantallaMaxAggregateOutputType | null
  }

  type GetPantallaGroupByPayload<T extends PantallaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PantallaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PantallaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PantallaGroupByOutputType[P]>
            : GetScalarType<T[P], PantallaGroupByOutputType[P]>
        }
      >
    >


  export type PantallaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sedeId?: boolean
    docente?: boolean
    materia?: boolean
    laboratorio?: boolean
    fechaHoraInicio?: boolean
    fechaHoraFin?: boolean
    usuarioCreadorId?: boolean
    fechaCreacion?: boolean
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pantalla"]>

  export type PantallaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sedeId?: boolean
    docente?: boolean
    materia?: boolean
    laboratorio?: boolean
    fechaHoraInicio?: boolean
    fechaHoraFin?: boolean
    usuarioCreadorId?: boolean
    fechaCreacion?: boolean
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pantalla"]>

  export type PantallaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sedeId?: boolean
    docente?: boolean
    materia?: boolean
    laboratorio?: boolean
    fechaHoraInicio?: boolean
    fechaHoraFin?: boolean
    usuarioCreadorId?: boolean
    fechaCreacion?: boolean
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pantalla"]>

  export type PantallaSelectScalar = {
    id?: boolean
    sedeId?: boolean
    docente?: boolean
    materia?: boolean
    laboratorio?: boolean
    fechaHoraInicio?: boolean
    fechaHoraFin?: boolean
    usuarioCreadorId?: boolean
    fechaCreacion?: boolean
  }

  export type PantallaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sedeId" | "docente" | "materia" | "laboratorio" | "fechaHoraInicio" | "fechaHoraFin" | "usuarioCreadorId" | "fechaCreacion", ExtArgs["result"]["pantalla"]>
  export type PantallaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }
  export type PantallaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }
  export type PantallaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sede?: boolean | SedeDefaultArgs<ExtArgs>
  }

  export type $PantallaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pantalla"
    objects: {
      sede: Prisma.$SedePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      sedeId: number
      docente: string
      materia: string | null
      laboratorio: string | null
      fechaHoraInicio: Date
      fechaHoraFin: Date
      usuarioCreadorId: string
      fechaCreacion: Date
    }, ExtArgs["result"]["pantalla"]>
    composites: {}
  }

  type PantallaGetPayload<S extends boolean | null | undefined | PantallaDefaultArgs> = $Result.GetResult<Prisma.$PantallaPayload, S>

  type PantallaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PantallaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PantallaCountAggregateInputType | true
    }

  export interface PantallaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pantalla'], meta: { name: 'Pantalla' } }
    /**
     * Find zero or one Pantalla that matches the filter.
     * @param {PantallaFindUniqueArgs} args - Arguments to find a Pantalla
     * @example
     * // Get one Pantalla
     * const pantalla = await prisma.pantalla.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PantallaFindUniqueArgs>(args: SelectSubset<T, PantallaFindUniqueArgs<ExtArgs>>): Prisma__PantallaClient<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pantalla that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PantallaFindUniqueOrThrowArgs} args - Arguments to find a Pantalla
     * @example
     * // Get one Pantalla
     * const pantalla = await prisma.pantalla.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PantallaFindUniqueOrThrowArgs>(args: SelectSubset<T, PantallaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PantallaClient<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pantalla that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PantallaFindFirstArgs} args - Arguments to find a Pantalla
     * @example
     * // Get one Pantalla
     * const pantalla = await prisma.pantalla.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PantallaFindFirstArgs>(args?: SelectSubset<T, PantallaFindFirstArgs<ExtArgs>>): Prisma__PantallaClient<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pantalla that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PantallaFindFirstOrThrowArgs} args - Arguments to find a Pantalla
     * @example
     * // Get one Pantalla
     * const pantalla = await prisma.pantalla.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PantallaFindFirstOrThrowArgs>(args?: SelectSubset<T, PantallaFindFirstOrThrowArgs<ExtArgs>>): Prisma__PantallaClient<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pantallas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PantallaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pantallas
     * const pantallas = await prisma.pantalla.findMany()
     * 
     * // Get first 10 Pantallas
     * const pantallas = await prisma.pantalla.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pantallaWithIdOnly = await prisma.pantalla.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PantallaFindManyArgs>(args?: SelectSubset<T, PantallaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pantalla.
     * @param {PantallaCreateArgs} args - Arguments to create a Pantalla.
     * @example
     * // Create one Pantalla
     * const Pantalla = await prisma.pantalla.create({
     *   data: {
     *     // ... data to create a Pantalla
     *   }
     * })
     * 
     */
    create<T extends PantallaCreateArgs>(args: SelectSubset<T, PantallaCreateArgs<ExtArgs>>): Prisma__PantallaClient<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pantallas.
     * @param {PantallaCreateManyArgs} args - Arguments to create many Pantallas.
     * @example
     * // Create many Pantallas
     * const pantalla = await prisma.pantalla.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PantallaCreateManyArgs>(args?: SelectSubset<T, PantallaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pantallas and returns the data saved in the database.
     * @param {PantallaCreateManyAndReturnArgs} args - Arguments to create many Pantallas.
     * @example
     * // Create many Pantallas
     * const pantalla = await prisma.pantalla.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pantallas and only return the `id`
     * const pantallaWithIdOnly = await prisma.pantalla.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PantallaCreateManyAndReturnArgs>(args?: SelectSubset<T, PantallaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pantalla.
     * @param {PantallaDeleteArgs} args - Arguments to delete one Pantalla.
     * @example
     * // Delete one Pantalla
     * const Pantalla = await prisma.pantalla.delete({
     *   where: {
     *     // ... filter to delete one Pantalla
     *   }
     * })
     * 
     */
    delete<T extends PantallaDeleteArgs>(args: SelectSubset<T, PantallaDeleteArgs<ExtArgs>>): Prisma__PantallaClient<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pantalla.
     * @param {PantallaUpdateArgs} args - Arguments to update one Pantalla.
     * @example
     * // Update one Pantalla
     * const pantalla = await prisma.pantalla.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PantallaUpdateArgs>(args: SelectSubset<T, PantallaUpdateArgs<ExtArgs>>): Prisma__PantallaClient<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pantallas.
     * @param {PantallaDeleteManyArgs} args - Arguments to filter Pantallas to delete.
     * @example
     * // Delete a few Pantallas
     * const { count } = await prisma.pantalla.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PantallaDeleteManyArgs>(args?: SelectSubset<T, PantallaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pantallas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PantallaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pantallas
     * const pantalla = await prisma.pantalla.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PantallaUpdateManyArgs>(args: SelectSubset<T, PantallaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pantallas and returns the data updated in the database.
     * @param {PantallaUpdateManyAndReturnArgs} args - Arguments to update many Pantallas.
     * @example
     * // Update many Pantallas
     * const pantalla = await prisma.pantalla.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pantallas and only return the `id`
     * const pantallaWithIdOnly = await prisma.pantalla.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PantallaUpdateManyAndReturnArgs>(args: SelectSubset<T, PantallaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pantalla.
     * @param {PantallaUpsertArgs} args - Arguments to update or create a Pantalla.
     * @example
     * // Update or create a Pantalla
     * const pantalla = await prisma.pantalla.upsert({
     *   create: {
     *     // ... data to create a Pantalla
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pantalla we want to update
     *   }
     * })
     */
    upsert<T extends PantallaUpsertArgs>(args: SelectSubset<T, PantallaUpsertArgs<ExtArgs>>): Prisma__PantallaClient<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pantallas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PantallaCountArgs} args - Arguments to filter Pantallas to count.
     * @example
     * // Count the number of Pantallas
     * const count = await prisma.pantalla.count({
     *   where: {
     *     // ... the filter for the Pantallas we want to count
     *   }
     * })
    **/
    count<T extends PantallaCountArgs>(
      args?: Subset<T, PantallaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PantallaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pantalla.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PantallaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PantallaAggregateArgs>(args: Subset<T, PantallaAggregateArgs>): Prisma.PrismaPromise<GetPantallaAggregateType<T>>

    /**
     * Group by Pantalla.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PantallaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PantallaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PantallaGroupByArgs['orderBy'] }
        : { orderBy?: PantallaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PantallaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPantallaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pantalla model
   */
  readonly fields: PantallaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pantalla.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PantallaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sede<T extends SedeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SedeDefaultArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pantalla model
   */
  interface PantallaFieldRefs {
    readonly id: FieldRef<"Pantalla", 'Int'>
    readonly sedeId: FieldRef<"Pantalla", 'Int'>
    readonly docente: FieldRef<"Pantalla", 'String'>
    readonly materia: FieldRef<"Pantalla", 'String'>
    readonly laboratorio: FieldRef<"Pantalla", 'String'>
    readonly fechaHoraInicio: FieldRef<"Pantalla", 'DateTime'>
    readonly fechaHoraFin: FieldRef<"Pantalla", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Pantalla", 'String'>
    readonly fechaCreacion: FieldRef<"Pantalla", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pantalla findUnique
   */
  export type PantallaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaInclude<ExtArgs> | null
    /**
     * Filter, which Pantalla to fetch.
     */
    where: PantallaWhereUniqueInput
  }

  /**
   * Pantalla findUniqueOrThrow
   */
  export type PantallaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaInclude<ExtArgs> | null
    /**
     * Filter, which Pantalla to fetch.
     */
    where: PantallaWhereUniqueInput
  }

  /**
   * Pantalla findFirst
   */
  export type PantallaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaInclude<ExtArgs> | null
    /**
     * Filter, which Pantalla to fetch.
     */
    where?: PantallaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pantallas to fetch.
     */
    orderBy?: PantallaOrderByWithRelationInput | PantallaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pantallas.
     */
    cursor?: PantallaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pantallas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pantallas.
     */
    distinct?: PantallaScalarFieldEnum | PantallaScalarFieldEnum[]
  }

  /**
   * Pantalla findFirstOrThrow
   */
  export type PantallaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaInclude<ExtArgs> | null
    /**
     * Filter, which Pantalla to fetch.
     */
    where?: PantallaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pantallas to fetch.
     */
    orderBy?: PantallaOrderByWithRelationInput | PantallaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pantallas.
     */
    cursor?: PantallaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pantallas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pantallas.
     */
    distinct?: PantallaScalarFieldEnum | PantallaScalarFieldEnum[]
  }

  /**
   * Pantalla findMany
   */
  export type PantallaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaInclude<ExtArgs> | null
    /**
     * Filter, which Pantallas to fetch.
     */
    where?: PantallaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pantallas to fetch.
     */
    orderBy?: PantallaOrderByWithRelationInput | PantallaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pantallas.
     */
    cursor?: PantallaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pantallas.
     */
    skip?: number
    distinct?: PantallaScalarFieldEnum | PantallaScalarFieldEnum[]
  }

  /**
   * Pantalla create
   */
  export type PantallaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaInclude<ExtArgs> | null
    /**
     * The data needed to create a Pantalla.
     */
    data: XOR<PantallaCreateInput, PantallaUncheckedCreateInput>
  }

  /**
   * Pantalla createMany
   */
  export type PantallaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pantallas.
     */
    data: PantallaCreateManyInput | PantallaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pantalla createManyAndReturn
   */
  export type PantallaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * The data used to create many Pantallas.
     */
    data: PantallaCreateManyInput | PantallaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pantalla update
   */
  export type PantallaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaInclude<ExtArgs> | null
    /**
     * The data needed to update a Pantalla.
     */
    data: XOR<PantallaUpdateInput, PantallaUncheckedUpdateInput>
    /**
     * Choose, which Pantalla to update.
     */
    where: PantallaWhereUniqueInput
  }

  /**
   * Pantalla updateMany
   */
  export type PantallaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pantallas.
     */
    data: XOR<PantallaUpdateManyMutationInput, PantallaUncheckedUpdateManyInput>
    /**
     * Filter which Pantallas to update
     */
    where?: PantallaWhereInput
    /**
     * Limit how many Pantallas to update.
     */
    limit?: number
  }

  /**
   * Pantalla updateManyAndReturn
   */
  export type PantallaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * The data used to update Pantallas.
     */
    data: XOR<PantallaUpdateManyMutationInput, PantallaUncheckedUpdateManyInput>
    /**
     * Filter which Pantallas to update
     */
    where?: PantallaWhereInput
    /**
     * Limit how many Pantallas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pantalla upsert
   */
  export type PantallaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaInclude<ExtArgs> | null
    /**
     * The filter to search for the Pantalla to update in case it exists.
     */
    where: PantallaWhereUniqueInput
    /**
     * In case the Pantalla found by the `where` argument doesn't exist, create a new Pantalla with this data.
     */
    create: XOR<PantallaCreateInput, PantallaUncheckedCreateInput>
    /**
     * In case the Pantalla was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PantallaUpdateInput, PantallaUncheckedUpdateInput>
  }

  /**
   * Pantalla delete
   */
  export type PantallaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaInclude<ExtArgs> | null
    /**
     * Filter which Pantalla to delete.
     */
    where: PantallaWhereUniqueInput
  }

  /**
   * Pantalla deleteMany
   */
  export type PantallaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pantallas to delete
     */
    where?: PantallaWhereInput
    /**
     * Limit how many Pantallas to delete.
     */
    limit?: number
  }

  /**
   * Pantalla without action
   */
  export type PantallaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    expires_at: number | null
    refresh_expires_in: number | null
    refresh_token_expires_in: number | null
  }

  export type AccountSumAggregateOutputType = {
    expires_at: number | null
    refresh_expires_in: number | null
    refresh_token_expires_in: number | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    refresh_expires_in: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    refresh_token_expires_in: number | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    refresh_expires_in: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    refresh_token_expires_in: number | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    userId: number
    type: number
    provider: number
    providerAccountId: number
    refresh_token: number
    access_token: number
    expires_at: number
    refresh_expires_in: number
    token_type: number
    scope: number
    id_token: number
    session_state: number
    refresh_token_expires_in: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    expires_at?: true
    refresh_expires_in?: true
    refresh_token_expires_in?: true
  }

  export type AccountSumAggregateInputType = {
    expires_at?: true
    refresh_expires_in?: true
    refresh_token_expires_in?: true
  }

  export type AccountMinAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    refresh_expires_in?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    refresh_token_expires_in?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    refresh_expires_in?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    refresh_token_expires_in?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    refresh_expires_in?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    refresh_token_expires_in?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    refresh_expires_in: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    refresh_token_expires_in: number | null
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    refresh_expires_in?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    refresh_token_expires_in?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    refresh_expires_in?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    refresh_token_expires_in?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    refresh_expires_in?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    refresh_token_expires_in?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    refresh_expires_in?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    refresh_token_expires_in?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "type" | "provider" | "providerAccountId" | "refresh_token" | "access_token" | "expires_at" | "refresh_expires_in" | "token_type" | "scope" | "id_token" | "session_state" | "refresh_token_expires_in", ExtArgs["result"]["account"]>
  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      type: string
      provider: string
      providerAccountId: string
      refresh_token: string | null
      access_token: string | null
      expires_at: number | null
      refresh_expires_in: number | null
      token_type: string | null
      scope: string | null
      id_token: string | null
      session_state: string | null
      refresh_token_expires_in: number | null
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts and returns the data updated in the database.
     * @param {AccountUpdateManyAndReturnArgs} args - Arguments to update many Accounts.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccountUpdateManyAndReturnArgs>(args: SelectSubset<T, AccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly userId: FieldRef<"Account", 'String'>
    readonly type: FieldRef<"Account", 'String'>
    readonly provider: FieldRef<"Account", 'String'>
    readonly providerAccountId: FieldRef<"Account", 'String'>
    readonly refresh_token: FieldRef<"Account", 'String'>
    readonly access_token: FieldRef<"Account", 'String'>
    readonly expires_at: FieldRef<"Account", 'Int'>
    readonly refresh_expires_in: FieldRef<"Account", 'Int'>
    readonly token_type: FieldRef<"Account", 'String'>
    readonly scope: FieldRef<"Account", 'String'>
    readonly id_token: FieldRef<"Account", 'String'>
    readonly session_state: FieldRef<"Account", 'String'>
    readonly refresh_token_expires_in: FieldRef<"Account", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account updateManyAndReturn
   */
  export type AccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    sessionToken: number
    userId: number
    expires: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    sessionToken: string
    userId: string
    expires: Date
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sessionToken" | "userId" | "expires", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sessionToken: string
      userId: string
      expires: Date
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {SessionUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SessionUpdateManyAndReturnArgs>(args: SelectSubset<T, SessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly sessionToken: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'String'>
    readonly expires: FieldRef<"Session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session updateManyAndReturn
   */
  export type SessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model VerificationToken
   */

  export type AggregateVerificationToken = {
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  export type VerificationTokenMinAggregateOutputType = {
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenMaxAggregateOutputType = {
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenCountAggregateOutputType = {
    identifier: number
    token: number
    expires: number
    _all: number
  }


  export type VerificationTokenMinAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenMaxAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenCountAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
    _all?: true
  }

  export type VerificationTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationToken to aggregate.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VerificationTokens
    **/
    _count?: true | VerificationTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type GetVerificationTokenAggregateType<T extends VerificationTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificationToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificationToken[P]>
      : GetScalarType<T[P], AggregateVerificationToken[P]>
  }




  export type VerificationTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationTokenWhereInput
    orderBy?: VerificationTokenOrderByWithAggregationInput | VerificationTokenOrderByWithAggregationInput[]
    by: VerificationTokenScalarFieldEnum[] | VerificationTokenScalarFieldEnum
    having?: VerificationTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationTokenCountAggregateInputType | true
    _min?: VerificationTokenMinAggregateInputType
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type VerificationTokenGroupByOutputType = {
    identifier: string
    token: string
    expires: Date
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  type GetVerificationTokenGroupByPayload<T extends VerificationTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
        }
      >
    >


  export type VerificationTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectScalar = {
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }

  export type VerificationTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"identifier" | "token" | "expires", ExtArgs["result"]["verificationToken"]>

  export type $VerificationTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VerificationToken"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      identifier: string
      token: string
      expires: Date
    }, ExtArgs["result"]["verificationToken"]>
    composites: {}
  }

  type VerificationTokenGetPayload<S extends boolean | null | undefined | VerificationTokenDefaultArgs> = $Result.GetResult<Prisma.$VerificationTokenPayload, S>

  type VerificationTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationTokenCountAggregateInputType | true
    }

  export interface VerificationTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VerificationToken'], meta: { name: 'VerificationToken' } }
    /**
     * Find zero or one VerificationToken that matches the filter.
     * @param {VerificationTokenFindUniqueArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationTokenFindUniqueArgs>(args: SelectSubset<T, VerificationTokenFindUniqueArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VerificationToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationTokenFindUniqueOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationTokenFindFirstArgs>(args?: SelectSubset<T, VerificationTokenFindFirstArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VerificationTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany()
     * 
     * // Get first 10 VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany({ take: 10 })
     * 
     * // Only select the `identifier`
     * const verificationTokenWithIdentifierOnly = await prisma.verificationToken.findMany({ select: { identifier: true } })
     * 
     */
    findMany<T extends VerificationTokenFindManyArgs>(args?: SelectSubset<T, VerificationTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VerificationToken.
     * @param {VerificationTokenCreateArgs} args - Arguments to create a VerificationToken.
     * @example
     * // Create one VerificationToken
     * const VerificationToken = await prisma.verificationToken.create({
     *   data: {
     *     // ... data to create a VerificationToken
     *   }
     * })
     * 
     */
    create<T extends VerificationTokenCreateArgs>(args: SelectSubset<T, VerificationTokenCreateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VerificationTokens.
     * @param {VerificationTokenCreateManyArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationTokenCreateManyArgs>(args?: SelectSubset<T, VerificationTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VerificationTokens and returns the data saved in the database.
     * @param {VerificationTokenCreateManyAndReturnArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VerificationTokens and only return the `identifier`
     * const verificationTokenWithIdentifierOnly = await prisma.verificationToken.createManyAndReturn({
     *   select: { identifier: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificationTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificationTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VerificationToken.
     * @param {VerificationTokenDeleteArgs} args - Arguments to delete one VerificationToken.
     * @example
     * // Delete one VerificationToken
     * const VerificationToken = await prisma.verificationToken.delete({
     *   where: {
     *     // ... filter to delete one VerificationToken
     *   }
     * })
     * 
     */
    delete<T extends VerificationTokenDeleteArgs>(args: SelectSubset<T, VerificationTokenDeleteArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VerificationToken.
     * @param {VerificationTokenUpdateArgs} args - Arguments to update one VerificationToken.
     * @example
     * // Update one VerificationToken
     * const verificationToken = await prisma.verificationToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationTokenUpdateArgs>(args: SelectSubset<T, VerificationTokenUpdateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VerificationTokens.
     * @param {VerificationTokenDeleteManyArgs} args - Arguments to filter VerificationTokens to delete.
     * @example
     * // Delete a few VerificationTokens
     * const { count } = await prisma.verificationToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationTokenDeleteManyArgs>(args?: SelectSubset<T, VerificationTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VerificationTokens
     * const verificationToken = await prisma.verificationToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationTokenUpdateManyArgs>(args: SelectSubset<T, VerificationTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationTokens and returns the data updated in the database.
     * @param {VerificationTokenUpdateManyAndReturnArgs} args - Arguments to update many VerificationTokens.
     * @example
     * // Update many VerificationTokens
     * const verificationToken = await prisma.verificationToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VerificationTokens and only return the `identifier`
     * const verificationTokenWithIdentifierOnly = await prisma.verificationToken.updateManyAndReturn({
     *   select: { identifier: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VerificationTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, VerificationTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VerificationToken.
     * @param {VerificationTokenUpsertArgs} args - Arguments to update or create a VerificationToken.
     * @example
     * // Update or create a VerificationToken
     * const verificationToken = await prisma.verificationToken.upsert({
     *   create: {
     *     // ... data to create a VerificationToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VerificationToken we want to update
     *   }
     * })
     */
    upsert<T extends VerificationTokenUpsertArgs>(args: SelectSubset<T, VerificationTokenUpsertArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenCountArgs} args - Arguments to filter VerificationTokens to count.
     * @example
     * // Count the number of VerificationTokens
     * const count = await prisma.verificationToken.count({
     *   where: {
     *     // ... the filter for the VerificationTokens we want to count
     *   }
     * })
    **/
    count<T extends VerificationTokenCountArgs>(
      args?: Subset<T, VerificationTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationTokenAggregateArgs>(args: Subset<T, VerificationTokenAggregateArgs>): Prisma.PrismaPromise<GetVerificationTokenAggregateType<T>>

    /**
     * Group by VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationTokenGroupByArgs['orderBy'] }
        : { orderBy?: VerificationTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VerificationToken model
   */
  readonly fields: VerificationTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VerificationToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VerificationToken model
   */
  interface VerificationTokenFieldRefs {
    readonly identifier: FieldRef<"VerificationToken", 'String'>
    readonly token: FieldRef<"VerificationToken", 'String'>
    readonly expires: FieldRef<"VerificationToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VerificationToken findUnique
   */
  export type VerificationTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findUniqueOrThrow
   */
  export type VerificationTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findFirst
   */
  export type VerificationTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findFirstOrThrow
   */
  export type VerificationTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findMany
   */
  export type VerificationTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationTokens to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken create
   */
  export type VerificationTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to create a VerificationToken.
     */
    data: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
  }

  /**
   * VerificationToken createMany
   */
  export type VerificationTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken createManyAndReturn
   */
  export type VerificationTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken update
   */
  export type VerificationTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to update a VerificationToken.
     */
    data: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
    /**
     * Choose, which VerificationToken to update.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken updateMany
   */
  export type VerificationTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VerificationTokens.
     */
    data: XOR<VerificationTokenUpdateManyMutationInput, VerificationTokenUncheckedUpdateManyInput>
    /**
     * Filter which VerificationTokens to update
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to update.
     */
    limit?: number
  }

  /**
   * VerificationToken updateManyAndReturn
   */
  export type VerificationTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data used to update VerificationTokens.
     */
    data: XOR<VerificationTokenUpdateManyMutationInput, VerificationTokenUncheckedUpdateManyInput>
    /**
     * Filter which VerificationTokens to update
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to update.
     */
    limit?: number
  }

  /**
   * VerificationToken upsert
   */
  export type VerificationTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The filter to search for the VerificationToken to update in case it exists.
     */
    where: VerificationTokenWhereUniqueInput
    /**
     * In case the VerificationToken found by the `where` argument doesn't exist, create a new VerificationToken with this data.
     */
    create: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
    /**
     * In case the VerificationToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
  }

  /**
   * VerificationToken delete
   */
  export type VerificationTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter which VerificationToken to delete.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken deleteMany
   */
  export type VerificationTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationTokens to delete
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to delete.
     */
    limit?: number
  }

  /**
   * VerificationToken without action
   */
  export type VerificationTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
  }


  /**
   * Model Sede
   */

  export type AggregateSede = {
    _count: SedeCountAggregateOutputType | null
    _avg: SedeAvgAggregateOutputType | null
    _sum: SedeSumAggregateOutputType | null
    _min: SedeMinAggregateOutputType | null
    _max: SedeMaxAggregateOutputType | null
  }

  export type SedeAvgAggregateOutputType = {
    id: number | null
  }

  export type SedeSumAggregateOutputType = {
    id: number | null
  }

  export type SedeMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type SedeMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type SedeCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type SedeAvgAggregateInputType = {
    id?: true
  }

  export type SedeSumAggregateInputType = {
    id?: true
  }

  export type SedeMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type SedeMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type SedeCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type SedeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sede to aggregate.
     */
    where?: SedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sedes to fetch.
     */
    orderBy?: SedeOrderByWithRelationInput | SedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sedes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sedes
    **/
    _count?: true | SedeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SedeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SedeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SedeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SedeMaxAggregateInputType
  }

  export type GetSedeAggregateType<T extends SedeAggregateArgs> = {
        [P in keyof T & keyof AggregateSede]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSede[P]>
      : GetScalarType<T[P], AggregateSede[P]>
  }




  export type SedeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SedeWhereInput
    orderBy?: SedeOrderByWithAggregationInput | SedeOrderByWithAggregationInput[]
    by: SedeScalarFieldEnum[] | SedeScalarFieldEnum
    having?: SedeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SedeCountAggregateInputType | true
    _avg?: SedeAvgAggregateInputType
    _sum?: SedeSumAggregateInputType
    _min?: SedeMinAggregateInputType
    _max?: SedeMaxAggregateInputType
  }

  export type SedeGroupByOutputType = {
    id: number
    nombre: string
    _count: SedeCountAggregateOutputType | null
    _avg: SedeAvgAggregateOutputType | null
    _sum: SedeSumAggregateOutputType | null
    _min: SedeMinAggregateOutputType | null
    _max: SedeMaxAggregateOutputType | null
  }

  type GetSedeGroupByPayload<T extends SedeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SedeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SedeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SedeGroupByOutputType[P]>
            : GetScalarType<T[P], SedeGroupByOutputType[P]>
        }
      >
    >


  export type SedeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    cursos?: boolean | Sede$cursosArgs<ExtArgs>
    equipos?: boolean | Sede$equiposArgs<ExtArgs>
    laboratorios?: boolean | Sede$laboratoriosArgs<ExtArgs>
    libros?: boolean | Sede$librosArgs<ExtArgs>
    ReservaLaboratorioAbierto?: boolean | Sede$ReservaLaboratorioAbiertoArgs<ExtArgs>
    ReservaLaboratorioCerrado?: boolean | Sede$ReservaLaboratorioCerradoArgs<ExtArgs>
    Pantalla?: boolean | Sede$PantallaArgs<ExtArgs>
    _count?: boolean | SedeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sede"]>

  export type SedeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["sede"]>

  export type SedeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["sede"]>

  export type SedeSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type SedeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["sede"]>
  export type SedeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cursos?: boolean | Sede$cursosArgs<ExtArgs>
    equipos?: boolean | Sede$equiposArgs<ExtArgs>
    laboratorios?: boolean | Sede$laboratoriosArgs<ExtArgs>
    libros?: boolean | Sede$librosArgs<ExtArgs>
    ReservaLaboratorioAbierto?: boolean | Sede$ReservaLaboratorioAbiertoArgs<ExtArgs>
    ReservaLaboratorioCerrado?: boolean | Sede$ReservaLaboratorioCerradoArgs<ExtArgs>
    Pantalla?: boolean | Sede$PantallaArgs<ExtArgs>
    _count?: boolean | SedeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SedeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SedeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SedePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Sede"
    objects: {
      cursos: Prisma.$CursoPayload<ExtArgs>[]
      equipos: Prisma.$EquipoPayload<ExtArgs>[]
      laboratorios: Prisma.$LaboratorioPayload<ExtArgs>[]
      libros: Prisma.$LibroPayload<ExtArgs>[]
      ReservaLaboratorioAbierto: Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>[]
      ReservaLaboratorioCerrado: Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>[]
      Pantalla: Prisma.$PantallaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["sede"]>
    composites: {}
  }

  type SedeGetPayload<S extends boolean | null | undefined | SedeDefaultArgs> = $Result.GetResult<Prisma.$SedePayload, S>

  type SedeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SedeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SedeCountAggregateInputType | true
    }

  export interface SedeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Sede'], meta: { name: 'Sede' } }
    /**
     * Find zero or one Sede that matches the filter.
     * @param {SedeFindUniqueArgs} args - Arguments to find a Sede
     * @example
     * // Get one Sede
     * const sede = await prisma.sede.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SedeFindUniqueArgs>(args: SelectSubset<T, SedeFindUniqueArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sede that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SedeFindUniqueOrThrowArgs} args - Arguments to find a Sede
     * @example
     * // Get one Sede
     * const sede = await prisma.sede.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SedeFindUniqueOrThrowArgs>(args: SelectSubset<T, SedeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sede that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeFindFirstArgs} args - Arguments to find a Sede
     * @example
     * // Get one Sede
     * const sede = await prisma.sede.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SedeFindFirstArgs>(args?: SelectSubset<T, SedeFindFirstArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sede that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeFindFirstOrThrowArgs} args - Arguments to find a Sede
     * @example
     * // Get one Sede
     * const sede = await prisma.sede.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SedeFindFirstOrThrowArgs>(args?: SelectSubset<T, SedeFindFirstOrThrowArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sedes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sedes
     * const sedes = await prisma.sede.findMany()
     * 
     * // Get first 10 Sedes
     * const sedes = await prisma.sede.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sedeWithIdOnly = await prisma.sede.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SedeFindManyArgs>(args?: SelectSubset<T, SedeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sede.
     * @param {SedeCreateArgs} args - Arguments to create a Sede.
     * @example
     * // Create one Sede
     * const Sede = await prisma.sede.create({
     *   data: {
     *     // ... data to create a Sede
     *   }
     * })
     * 
     */
    create<T extends SedeCreateArgs>(args: SelectSubset<T, SedeCreateArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sedes.
     * @param {SedeCreateManyArgs} args - Arguments to create many Sedes.
     * @example
     * // Create many Sedes
     * const sede = await prisma.sede.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SedeCreateManyArgs>(args?: SelectSubset<T, SedeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sedes and returns the data saved in the database.
     * @param {SedeCreateManyAndReturnArgs} args - Arguments to create many Sedes.
     * @example
     * // Create many Sedes
     * const sede = await prisma.sede.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sedes and only return the `id`
     * const sedeWithIdOnly = await prisma.sede.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SedeCreateManyAndReturnArgs>(args?: SelectSubset<T, SedeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sede.
     * @param {SedeDeleteArgs} args - Arguments to delete one Sede.
     * @example
     * // Delete one Sede
     * const Sede = await prisma.sede.delete({
     *   where: {
     *     // ... filter to delete one Sede
     *   }
     * })
     * 
     */
    delete<T extends SedeDeleteArgs>(args: SelectSubset<T, SedeDeleteArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sede.
     * @param {SedeUpdateArgs} args - Arguments to update one Sede.
     * @example
     * // Update one Sede
     * const sede = await prisma.sede.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SedeUpdateArgs>(args: SelectSubset<T, SedeUpdateArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sedes.
     * @param {SedeDeleteManyArgs} args - Arguments to filter Sedes to delete.
     * @example
     * // Delete a few Sedes
     * const { count } = await prisma.sede.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SedeDeleteManyArgs>(args?: SelectSubset<T, SedeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sedes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sedes
     * const sede = await prisma.sede.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SedeUpdateManyArgs>(args: SelectSubset<T, SedeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sedes and returns the data updated in the database.
     * @param {SedeUpdateManyAndReturnArgs} args - Arguments to update many Sedes.
     * @example
     * // Update many Sedes
     * const sede = await prisma.sede.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sedes and only return the `id`
     * const sedeWithIdOnly = await prisma.sede.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SedeUpdateManyAndReturnArgs>(args: SelectSubset<T, SedeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sede.
     * @param {SedeUpsertArgs} args - Arguments to update or create a Sede.
     * @example
     * // Update or create a Sede
     * const sede = await prisma.sede.upsert({
     *   create: {
     *     // ... data to create a Sede
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sede we want to update
     *   }
     * })
     */
    upsert<T extends SedeUpsertArgs>(args: SelectSubset<T, SedeUpsertArgs<ExtArgs>>): Prisma__SedeClient<$Result.GetResult<Prisma.$SedePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sedes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeCountArgs} args - Arguments to filter Sedes to count.
     * @example
     * // Count the number of Sedes
     * const count = await prisma.sede.count({
     *   where: {
     *     // ... the filter for the Sedes we want to count
     *   }
     * })
    **/
    count<T extends SedeCountArgs>(
      args?: Subset<T, SedeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SedeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sede.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SedeAggregateArgs>(args: Subset<T, SedeAggregateArgs>): Prisma.PrismaPromise<GetSedeAggregateType<T>>

    /**
     * Group by Sede.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SedeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SedeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SedeGroupByArgs['orderBy'] }
        : { orderBy?: SedeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SedeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSedeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Sede model
   */
  readonly fields: SedeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Sede.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SedeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cursos<T extends Sede$cursosArgs<ExtArgs> = {}>(args?: Subset<T, Sede$cursosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    equipos<T extends Sede$equiposArgs<ExtArgs> = {}>(args?: Subset<T, Sede$equiposArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    laboratorios<T extends Sede$laboratoriosArgs<ExtArgs> = {}>(args?: Subset<T, Sede$laboratoriosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LaboratorioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    libros<T extends Sede$librosArgs<ExtArgs> = {}>(args?: Subset<T, Sede$librosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LibroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ReservaLaboratorioAbierto<T extends Sede$ReservaLaboratorioAbiertoArgs<ExtArgs> = {}>(args?: Subset<T, Sede$ReservaLaboratorioAbiertoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioAbiertoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ReservaLaboratorioCerrado<T extends Sede$ReservaLaboratorioCerradoArgs<ExtArgs> = {}>(args?: Subset<T, Sede$ReservaLaboratorioCerradoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Pantalla<T extends Sede$PantallaArgs<ExtArgs> = {}>(args?: Subset<T, Sede$PantallaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PantallaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Sede model
   */
  interface SedeFieldRefs {
    readonly id: FieldRef<"Sede", 'Int'>
    readonly nombre: FieldRef<"Sede", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Sede findUnique
   */
  export type SedeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter, which Sede to fetch.
     */
    where: SedeWhereUniqueInput
  }

  /**
   * Sede findUniqueOrThrow
   */
  export type SedeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter, which Sede to fetch.
     */
    where: SedeWhereUniqueInput
  }

  /**
   * Sede findFirst
   */
  export type SedeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter, which Sede to fetch.
     */
    where?: SedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sedes to fetch.
     */
    orderBy?: SedeOrderByWithRelationInput | SedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sedes.
     */
    cursor?: SedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sedes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sedes.
     */
    distinct?: SedeScalarFieldEnum | SedeScalarFieldEnum[]
  }

  /**
   * Sede findFirstOrThrow
   */
  export type SedeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter, which Sede to fetch.
     */
    where?: SedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sedes to fetch.
     */
    orderBy?: SedeOrderByWithRelationInput | SedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sedes.
     */
    cursor?: SedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sedes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sedes.
     */
    distinct?: SedeScalarFieldEnum | SedeScalarFieldEnum[]
  }

  /**
   * Sede findMany
   */
  export type SedeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter, which Sedes to fetch.
     */
    where?: SedeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sedes to fetch.
     */
    orderBy?: SedeOrderByWithRelationInput | SedeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sedes.
     */
    cursor?: SedeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sedes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sedes.
     */
    skip?: number
    distinct?: SedeScalarFieldEnum | SedeScalarFieldEnum[]
  }

  /**
   * Sede create
   */
  export type SedeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * The data needed to create a Sede.
     */
    data: XOR<SedeCreateInput, SedeUncheckedCreateInput>
  }

  /**
   * Sede createMany
   */
  export type SedeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sedes.
     */
    data: SedeCreateManyInput | SedeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sede createManyAndReturn
   */
  export type SedeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * The data used to create many Sedes.
     */
    data: SedeCreateManyInput | SedeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sede update
   */
  export type SedeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * The data needed to update a Sede.
     */
    data: XOR<SedeUpdateInput, SedeUncheckedUpdateInput>
    /**
     * Choose, which Sede to update.
     */
    where: SedeWhereUniqueInput
  }

  /**
   * Sede updateMany
   */
  export type SedeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sedes.
     */
    data: XOR<SedeUpdateManyMutationInput, SedeUncheckedUpdateManyInput>
    /**
     * Filter which Sedes to update
     */
    where?: SedeWhereInput
    /**
     * Limit how many Sedes to update.
     */
    limit?: number
  }

  /**
   * Sede updateManyAndReturn
   */
  export type SedeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * The data used to update Sedes.
     */
    data: XOR<SedeUpdateManyMutationInput, SedeUncheckedUpdateManyInput>
    /**
     * Filter which Sedes to update
     */
    where?: SedeWhereInput
    /**
     * Limit how many Sedes to update.
     */
    limit?: number
  }

  /**
   * Sede upsert
   */
  export type SedeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * The filter to search for the Sede to update in case it exists.
     */
    where: SedeWhereUniqueInput
    /**
     * In case the Sede found by the `where` argument doesn't exist, create a new Sede with this data.
     */
    create: XOR<SedeCreateInput, SedeUncheckedCreateInput>
    /**
     * In case the Sede was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SedeUpdateInput, SedeUncheckedUpdateInput>
  }

  /**
   * Sede delete
   */
  export type SedeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
    /**
     * Filter which Sede to delete.
     */
    where: SedeWhereUniqueInput
  }

  /**
   * Sede deleteMany
   */
  export type SedeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sedes to delete
     */
    where?: SedeWhereInput
    /**
     * Limit how many Sedes to delete.
     */
    limit?: number
  }

  /**
   * Sede.cursos
   */
  export type Sede$cursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    where?: CursoWhereInput
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    cursor?: CursoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Sede.equipos
   */
  export type Sede$equiposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipo
     */
    select?: EquipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipo
     */
    omit?: EquipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipoInclude<ExtArgs> | null
    where?: EquipoWhereInput
    orderBy?: EquipoOrderByWithRelationInput | EquipoOrderByWithRelationInput[]
    cursor?: EquipoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipoScalarFieldEnum | EquipoScalarFieldEnum[]
  }

  /**
   * Sede.laboratorios
   */
  export type Sede$laboratoriosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratorio
     */
    select?: LaboratorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Laboratorio
     */
    omit?: LaboratorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratorioInclude<ExtArgs> | null
    where?: LaboratorioWhereInput
    orderBy?: LaboratorioOrderByWithRelationInput | LaboratorioOrderByWithRelationInput[]
    cursor?: LaboratorioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LaboratorioScalarFieldEnum | LaboratorioScalarFieldEnum[]
  }

  /**
   * Sede.libros
   */
  export type Sede$librosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Libro
     */
    select?: LibroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Libro
     */
    omit?: LibroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LibroInclude<ExtArgs> | null
    where?: LibroWhereInput
    orderBy?: LibroOrderByWithRelationInput | LibroOrderByWithRelationInput[]
    cursor?: LibroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LibroScalarFieldEnum | LibroScalarFieldEnum[]
  }

  /**
   * Sede.ReservaLaboratorioAbierto
   */
  export type Sede$ReservaLaboratorioAbiertoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioAbierto
     */
    select?: ReservaLaboratorioAbiertoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioAbierto
     */
    omit?: ReservaLaboratorioAbiertoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioAbiertoInclude<ExtArgs> | null
    where?: ReservaLaboratorioAbiertoWhereInput
    orderBy?: ReservaLaboratorioAbiertoOrderByWithRelationInput | ReservaLaboratorioAbiertoOrderByWithRelationInput[]
    cursor?: ReservaLaboratorioAbiertoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLaboratorioAbiertoScalarFieldEnum | ReservaLaboratorioAbiertoScalarFieldEnum[]
  }

  /**
   * Sede.ReservaLaboratorioCerrado
   */
  export type Sede$ReservaLaboratorioCerradoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    where?: ReservaLaboratorioCerradoWhereInput
    orderBy?: ReservaLaboratorioCerradoOrderByWithRelationInput | ReservaLaboratorioCerradoOrderByWithRelationInput[]
    cursor?: ReservaLaboratorioCerradoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLaboratorioCerradoScalarFieldEnum | ReservaLaboratorioCerradoScalarFieldEnum[]
  }

  /**
   * Sede.Pantalla
   */
  export type Sede$PantallaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pantalla
     */
    select?: PantallaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pantalla
     */
    omit?: PantallaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PantallaInclude<ExtArgs> | null
    where?: PantallaWhereInput
    orderBy?: PantallaOrderByWithRelationInput | PantallaOrderByWithRelationInput[]
    cursor?: PantallaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PantallaScalarFieldEnum | PantallaScalarFieldEnum[]
  }

  /**
   * Sede without action
   */
  export type SedeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sede
     */
    select?: SedeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sede
     */
    omit?: SedeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SedeInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    penalizaciones: number | null
    documentoTipoId: number | null
  }

  export type UserSumAggregateOutputType = {
    penalizaciones: number | null
    documentoTipoId: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    emailVerified: boolean | null
    image: string | null
    nombre: string | null
    apellido: string | null
    fechaNacimiento: Date | null
    direccion: string | null
    piso: string | null
    departamento: string | null
    ciudad: string | null
    codigoPostal: string | null
    telefonoCasa: string | null
    telefonoCelular: string | null
    telefonoLaboral: string | null
    documentoNumero: string | null
    legajo: string | null
    gitlab: string | null
    penalizaciones: number | null
    esDocente: boolean | null
    esTutor: boolean | null
    fechaRegistro: Date | null
    fechaUltimoAcceso: Date | null
    fechaUltimaActualizacion: Date | null
    documentoTipoId: number | null
    provinciaIso: string | null
    paisIso: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    emailVerified: boolean | null
    image: string | null
    nombre: string | null
    apellido: string | null
    fechaNacimiento: Date | null
    direccion: string | null
    piso: string | null
    departamento: string | null
    ciudad: string | null
    codigoPostal: string | null
    telefonoCasa: string | null
    telefonoCelular: string | null
    telefonoLaboral: string | null
    documentoNumero: string | null
    legajo: string | null
    gitlab: string | null
    penalizaciones: number | null
    esDocente: boolean | null
    esTutor: boolean | null
    fechaRegistro: Date | null
    fechaUltimoAcceso: Date | null
    fechaUltimaActualizacion: Date | null
    documentoTipoId: number | null
    provinciaIso: string | null
    paisIso: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    emailVerified: number
    image: number
    nombre: number
    apellido: number
    fechaNacimiento: number
    direccion: number
    piso: number
    departamento: number
    ciudad: number
    codigoPostal: number
    telefonoCasa: number
    telefonoCelular: number
    telefonoLaboral: number
    documentoNumero: number
    legajo: number
    gitlab: number
    penalizaciones: number
    esDocente: number
    esTutor: number
    fechaRegistro: number
    fechaUltimoAcceso: number
    fechaUltimaActualizacion: number
    documentoTipoId: number
    provinciaIso: number
    paisIso: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    penalizaciones?: true
    documentoTipoId?: true
  }

  export type UserSumAggregateInputType = {
    penalizaciones?: true
    documentoTipoId?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    nombre?: true
    apellido?: true
    fechaNacimiento?: true
    direccion?: true
    piso?: true
    departamento?: true
    ciudad?: true
    codigoPostal?: true
    telefonoCasa?: true
    telefonoCelular?: true
    telefonoLaboral?: true
    documentoNumero?: true
    legajo?: true
    gitlab?: true
    penalizaciones?: true
    esDocente?: true
    esTutor?: true
    fechaRegistro?: true
    fechaUltimoAcceso?: true
    fechaUltimaActualizacion?: true
    documentoTipoId?: true
    provinciaIso?: true
    paisIso?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    nombre?: true
    apellido?: true
    fechaNacimiento?: true
    direccion?: true
    piso?: true
    departamento?: true
    ciudad?: true
    codigoPostal?: true
    telefonoCasa?: true
    telefonoCelular?: true
    telefonoLaboral?: true
    documentoNumero?: true
    legajo?: true
    gitlab?: true
    penalizaciones?: true
    esDocente?: true
    esTutor?: true
    fechaRegistro?: true
    fechaUltimoAcceso?: true
    fechaUltimaActualizacion?: true
    documentoTipoId?: true
    provinciaIso?: true
    paisIso?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    nombre?: true
    apellido?: true
    fechaNacimiento?: true
    direccion?: true
    piso?: true
    departamento?: true
    ciudad?: true
    codigoPostal?: true
    telefonoCasa?: true
    telefonoCelular?: true
    telefonoLaboral?: true
    documentoNumero?: true
    legajo?: true
    gitlab?: true
    penalizaciones?: true
    esDocente?: true
    esTutor?: true
    fechaRegistro?: true
    fechaUltimoAcceso?: true
    fechaUltimaActualizacion?: true
    documentoTipoId?: true
    provinciaIso?: true
    paisIso?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    name: string
    email: string
    emailVerified: boolean | null
    image: string
    nombre: string | null
    apellido: string | null
    fechaNacimiento: Date | null
    direccion: string | null
    piso: string | null
    departamento: string | null
    ciudad: string | null
    codigoPostal: string | null
    telefonoCasa: string | null
    telefonoCelular: string | null
    telefonoLaboral: string | null
    documentoNumero: string | null
    legajo: string | null
    gitlab: string | null
    penalizaciones: number
    esDocente: boolean
    esTutor: boolean
    fechaRegistro: Date
    fechaUltimoAcceso: Date
    fechaUltimaActualizacion: Date
    documentoTipoId: number | null
    provinciaIso: string | null
    paisIso: string | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    nombre?: boolean
    apellido?: boolean
    fechaNacimiento?: boolean
    direccion?: boolean
    piso?: boolean
    departamento?: boolean
    ciudad?: boolean
    codigoPostal?: boolean
    telefonoCasa?: boolean
    telefonoCelular?: boolean
    telefonoLaboral?: boolean
    documentoNumero?: boolean
    legajo?: boolean
    gitlab?: boolean
    penalizaciones?: boolean
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: boolean
    fechaUltimoAcceso?: boolean
    fechaUltimaActualizacion?: boolean
    documentoTipoId?: boolean
    provinciaIso?: boolean
    paisIso?: boolean
    documentoTipo?: boolean | User$documentoTipoArgs<ExtArgs>
    provincia?: boolean | User$provinciaArgs<ExtArgs>
    pais?: boolean | User$paisArgs<ExtArgs>
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    usuarioRol?: boolean | User$usuarioRolArgs<ExtArgs>
    reservasSolicitadas?: boolean | User$reservasSolicitadasArgs<ExtArgs>
    reservasRenovadas?: boolean | User$reservasRenovadasArgs<ExtArgs>
    reservasComoTutor?: boolean | User$reservasComoTutorArgs<ExtArgs>
    reservasAprobadas?: boolean | User$reservasAprobadasArgs<ExtArgs>
    reservasRechazadas?: boolean | User$reservasRechazadasArgs<ExtArgs>
    reservasRecibidas?: boolean | User$reservasRecibidasArgs<ExtArgs>
    cursosComoAyudante?: boolean | User$cursosComoAyudanteArgs<ExtArgs>
    cursosComoProfesor?: boolean | User$cursosComoProfesorArgs<ExtArgs>
    MateriaJefeTp?: boolean | User$MateriaJefeTpArgs<ExtArgs>
    materiasDirector?: boolean | User$materiasDirectorArgs<ExtArgs>
    tutor?: boolean | User$tutorArgs<ExtArgs>
    ReservaLaboratorioCerrado?: boolean | User$ReservaLaboratorioCerradoArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    nombre?: boolean
    apellido?: boolean
    fechaNacimiento?: boolean
    direccion?: boolean
    piso?: boolean
    departamento?: boolean
    ciudad?: boolean
    codigoPostal?: boolean
    telefonoCasa?: boolean
    telefonoCelular?: boolean
    telefonoLaboral?: boolean
    documentoNumero?: boolean
    legajo?: boolean
    gitlab?: boolean
    penalizaciones?: boolean
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: boolean
    fechaUltimoAcceso?: boolean
    fechaUltimaActualizacion?: boolean
    documentoTipoId?: boolean
    provinciaIso?: boolean
    paisIso?: boolean
    documentoTipo?: boolean | User$documentoTipoArgs<ExtArgs>
    provincia?: boolean | User$provinciaArgs<ExtArgs>
    pais?: boolean | User$paisArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    nombre?: boolean
    apellido?: boolean
    fechaNacimiento?: boolean
    direccion?: boolean
    piso?: boolean
    departamento?: boolean
    ciudad?: boolean
    codigoPostal?: boolean
    telefonoCasa?: boolean
    telefonoCelular?: boolean
    telefonoLaboral?: boolean
    documentoNumero?: boolean
    legajo?: boolean
    gitlab?: boolean
    penalizaciones?: boolean
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: boolean
    fechaUltimoAcceso?: boolean
    fechaUltimaActualizacion?: boolean
    documentoTipoId?: boolean
    provinciaIso?: boolean
    paisIso?: boolean
    documentoTipo?: boolean | User$documentoTipoArgs<ExtArgs>
    provincia?: boolean | User$provinciaArgs<ExtArgs>
    pais?: boolean | User$paisArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    nombre?: boolean
    apellido?: boolean
    fechaNacimiento?: boolean
    direccion?: boolean
    piso?: boolean
    departamento?: boolean
    ciudad?: boolean
    codigoPostal?: boolean
    telefonoCasa?: boolean
    telefonoCelular?: boolean
    telefonoLaboral?: boolean
    documentoNumero?: boolean
    legajo?: boolean
    gitlab?: boolean
    penalizaciones?: boolean
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: boolean
    fechaUltimoAcceso?: boolean
    fechaUltimaActualizacion?: boolean
    documentoTipoId?: boolean
    provinciaIso?: boolean
    paisIso?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "emailVerified" | "image" | "nombre" | "apellido" | "fechaNacimiento" | "direccion" | "piso" | "departamento" | "ciudad" | "codigoPostal" | "telefonoCasa" | "telefonoCelular" | "telefonoLaboral" | "documentoNumero" | "legajo" | "gitlab" | "penalizaciones" | "esDocente" | "esTutor" | "fechaRegistro" | "fechaUltimoAcceso" | "fechaUltimaActualizacion" | "documentoTipoId" | "provinciaIso" | "paisIso", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documentoTipo?: boolean | User$documentoTipoArgs<ExtArgs>
    provincia?: boolean | User$provinciaArgs<ExtArgs>
    pais?: boolean | User$paisArgs<ExtArgs>
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    usuarioRol?: boolean | User$usuarioRolArgs<ExtArgs>
    reservasSolicitadas?: boolean | User$reservasSolicitadasArgs<ExtArgs>
    reservasRenovadas?: boolean | User$reservasRenovadasArgs<ExtArgs>
    reservasComoTutor?: boolean | User$reservasComoTutorArgs<ExtArgs>
    reservasAprobadas?: boolean | User$reservasAprobadasArgs<ExtArgs>
    reservasRechazadas?: boolean | User$reservasRechazadasArgs<ExtArgs>
    reservasRecibidas?: boolean | User$reservasRecibidasArgs<ExtArgs>
    cursosComoAyudante?: boolean | User$cursosComoAyudanteArgs<ExtArgs>
    cursosComoProfesor?: boolean | User$cursosComoProfesorArgs<ExtArgs>
    MateriaJefeTp?: boolean | User$MateriaJefeTpArgs<ExtArgs>
    materiasDirector?: boolean | User$materiasDirectorArgs<ExtArgs>
    tutor?: boolean | User$tutorArgs<ExtArgs>
    ReservaLaboratorioCerrado?: boolean | User$ReservaLaboratorioCerradoArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documentoTipo?: boolean | User$documentoTipoArgs<ExtArgs>
    provincia?: boolean | User$provinciaArgs<ExtArgs>
    pais?: boolean | User$paisArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documentoTipo?: boolean | User$documentoTipoArgs<ExtArgs>
    provincia?: boolean | User$provinciaArgs<ExtArgs>
    pais?: boolean | User$paisArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      documentoTipo: Prisma.$DocumentoTipoPayload<ExtArgs> | null
      provincia: Prisma.$ProvinciaPayload<ExtArgs> | null
      pais: Prisma.$PaisPayload<ExtArgs> | null
      accounts: Prisma.$AccountPayload<ExtArgs>[]
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      usuarioRol: Prisma.$UsuarioRolPayload<ExtArgs>[]
      reservasSolicitadas: Prisma.$ReservaPayload<ExtArgs>[]
      reservasRenovadas: Prisma.$ReservaPayload<ExtArgs>[]
      reservasComoTutor: Prisma.$ReservaPayload<ExtArgs>[]
      reservasAprobadas: Prisma.$ReservaPayload<ExtArgs>[]
      reservasRechazadas: Prisma.$ReservaPayload<ExtArgs>[]
      reservasRecibidas: Prisma.$ReservaPayload<ExtArgs>[]
      cursosComoAyudante: Prisma.$CursoAyudantePayload<ExtArgs>[]
      cursosComoProfesor: Prisma.$CursoPayload<ExtArgs>[]
      MateriaJefeTp: Prisma.$MateriaJefeTpPayload<ExtArgs>[]
      materiasDirector: Prisma.$MateriaPayload<ExtArgs>[]
      tutor: Prisma.$TutorPayload<ExtArgs> | null
      ReservaLaboratorioCerrado: Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      email: string
      emailVerified: boolean | null
      image: string
      nombre: string | null
      apellido: string | null
      fechaNacimiento: Date | null
      direccion: string | null
      piso: string | null
      departamento: string | null
      ciudad: string | null
      codigoPostal: string | null
      telefonoCasa: string | null
      telefonoCelular: string | null
      telefonoLaboral: string | null
      documentoNumero: string | null
      legajo: string | null
      gitlab: string | null
      penalizaciones: number
      esDocente: boolean
      esTutor: boolean
      fechaRegistro: Date
      fechaUltimoAcceso: Date
      fechaUltimaActualizacion: Date
      documentoTipoId: number | null
      provinciaIso: string | null
      paisIso: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    documentoTipo<T extends User$documentoTipoArgs<ExtArgs> = {}>(args?: Subset<T, User$documentoTipoArgs<ExtArgs>>): Prisma__DocumentoTipoClient<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    provincia<T extends User$provinciaArgs<ExtArgs> = {}>(args?: Subset<T, User$provinciaArgs<ExtArgs>>): Prisma__ProvinciaClient<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    pais<T extends User$paisArgs<ExtArgs> = {}>(args?: Subset<T, User$paisArgs<ExtArgs>>): Prisma__PaisClient<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    accounts<T extends User$accountsArgs<ExtArgs> = {}>(args?: Subset<T, User$accountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuarioRol<T extends User$usuarioRolArgs<ExtArgs> = {}>(args?: Subset<T, User$usuarioRolArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservasSolicitadas<T extends User$reservasSolicitadasArgs<ExtArgs> = {}>(args?: Subset<T, User$reservasSolicitadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservasRenovadas<T extends User$reservasRenovadasArgs<ExtArgs> = {}>(args?: Subset<T, User$reservasRenovadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservasComoTutor<T extends User$reservasComoTutorArgs<ExtArgs> = {}>(args?: Subset<T, User$reservasComoTutorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservasAprobadas<T extends User$reservasAprobadasArgs<ExtArgs> = {}>(args?: Subset<T, User$reservasAprobadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservasRechazadas<T extends User$reservasRechazadasArgs<ExtArgs> = {}>(args?: Subset<T, User$reservasRechazadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservasRecibidas<T extends User$reservasRecibidasArgs<ExtArgs> = {}>(args?: Subset<T, User$reservasRecibidasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cursosComoAyudante<T extends User$cursosComoAyudanteArgs<ExtArgs> = {}>(args?: Subset<T, User$cursosComoAyudanteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoAyudantePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cursosComoProfesor<T extends User$cursosComoProfesorArgs<ExtArgs> = {}>(args?: Subset<T, User$cursosComoProfesorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MateriaJefeTp<T extends User$MateriaJefeTpArgs<ExtArgs> = {}>(args?: Subset<T, User$MateriaJefeTpArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaJefeTpPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    materiasDirector<T extends User$materiasDirectorArgs<ExtArgs> = {}>(args?: Subset<T, User$materiasDirectorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MateriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tutor<T extends User$tutorArgs<ExtArgs> = {}>(args?: Subset<T, User$tutorArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ReservaLaboratorioCerrado<T extends User$ReservaLaboratorioCerradoArgs<ExtArgs> = {}>(args?: Subset<T, User$ReservaLaboratorioCerradoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaLaboratorioCerradoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'Boolean'>
    readonly image: FieldRef<"User", 'String'>
    readonly nombre: FieldRef<"User", 'String'>
    readonly apellido: FieldRef<"User", 'String'>
    readonly fechaNacimiento: FieldRef<"User", 'DateTime'>
    readonly direccion: FieldRef<"User", 'String'>
    readonly piso: FieldRef<"User", 'String'>
    readonly departamento: FieldRef<"User", 'String'>
    readonly ciudad: FieldRef<"User", 'String'>
    readonly codigoPostal: FieldRef<"User", 'String'>
    readonly telefonoCasa: FieldRef<"User", 'String'>
    readonly telefonoCelular: FieldRef<"User", 'String'>
    readonly telefonoLaboral: FieldRef<"User", 'String'>
    readonly documentoNumero: FieldRef<"User", 'String'>
    readonly legajo: FieldRef<"User", 'String'>
    readonly gitlab: FieldRef<"User", 'String'>
    readonly penalizaciones: FieldRef<"User", 'Int'>
    readonly esDocente: FieldRef<"User", 'Boolean'>
    readonly esTutor: FieldRef<"User", 'Boolean'>
    readonly fechaRegistro: FieldRef<"User", 'DateTime'>
    readonly fechaUltimoAcceso: FieldRef<"User", 'DateTime'>
    readonly fechaUltimaActualizacion: FieldRef<"User", 'DateTime'>
    readonly documentoTipoId: FieldRef<"User", 'Int'>
    readonly provinciaIso: FieldRef<"User", 'String'>
    readonly paisIso: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.documentoTipo
   */
  export type User$documentoTipoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoTipoInclude<ExtArgs> | null
    where?: DocumentoTipoWhereInput
  }

  /**
   * User.provincia
   */
  export type User$provinciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
    where?: ProvinciaWhereInput
  }

  /**
   * User.pais
   */
  export type User$paisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisInclude<ExtArgs> | null
    where?: PaisWhereInput
  }

  /**
   * User.accounts
   */
  export type User$accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.usuarioRol
   */
  export type User$usuarioRolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
    where?: UsuarioRolWhereInput
    orderBy?: UsuarioRolOrderByWithRelationInput | UsuarioRolOrderByWithRelationInput[]
    cursor?: UsuarioRolWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioRolScalarFieldEnum | UsuarioRolScalarFieldEnum[]
  }

  /**
   * User.reservasSolicitadas
   */
  export type User$reservasSolicitadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    cursor?: ReservaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * User.reservasRenovadas
   */
  export type User$reservasRenovadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    cursor?: ReservaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * User.reservasComoTutor
   */
  export type User$reservasComoTutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    cursor?: ReservaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * User.reservasAprobadas
   */
  export type User$reservasAprobadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    cursor?: ReservaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * User.reservasRechazadas
   */
  export type User$reservasRechazadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    cursor?: ReservaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * User.reservasRecibidas
   */
  export type User$reservasRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    cursor?: ReservaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * User.cursosComoAyudante
   */
  export type User$cursosComoAyudanteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoAyudante
     */
    select?: CursoAyudanteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoAyudante
     */
    omit?: CursoAyudanteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoAyudanteInclude<ExtArgs> | null
    where?: CursoAyudanteWhereInput
    orderBy?: CursoAyudanteOrderByWithRelationInput | CursoAyudanteOrderByWithRelationInput[]
    cursor?: CursoAyudanteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CursoAyudanteScalarFieldEnum | CursoAyudanteScalarFieldEnum[]
  }

  /**
   * User.cursosComoProfesor
   */
  export type User$cursosComoProfesorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    where?: CursoWhereInput
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    cursor?: CursoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * User.MateriaJefeTp
   */
  export type User$MateriaJefeTpArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MateriaJefeTp
     */
    select?: MateriaJefeTpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MateriaJefeTp
     */
    omit?: MateriaJefeTpOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaJefeTpInclude<ExtArgs> | null
    where?: MateriaJefeTpWhereInput
    orderBy?: MateriaJefeTpOrderByWithRelationInput | MateriaJefeTpOrderByWithRelationInput[]
    cursor?: MateriaJefeTpWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MateriaJefeTpScalarFieldEnum | MateriaJefeTpScalarFieldEnum[]
  }

  /**
   * User.materiasDirector
   */
  export type User$materiasDirectorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materia
     */
    select?: MateriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materia
     */
    omit?: MateriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MateriaInclude<ExtArgs> | null
    where?: MateriaWhereInput
    orderBy?: MateriaOrderByWithRelationInput | MateriaOrderByWithRelationInput[]
    cursor?: MateriaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MateriaScalarFieldEnum | MateriaScalarFieldEnum[]
  }

  /**
   * User.tutor
   */
  export type User$tutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    where?: TutorWhereInput
  }

  /**
   * User.ReservaLaboratorioCerrado
   */
  export type User$ReservaLaboratorioCerradoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaLaboratorioCerrado
     */
    select?: ReservaLaboratorioCerradoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReservaLaboratorioCerrado
     */
    omit?: ReservaLaboratorioCerradoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaLaboratorioCerradoInclude<ExtArgs> | null
    where?: ReservaLaboratorioCerradoWhereInput
    orderBy?: ReservaLaboratorioCerradoOrderByWithRelationInput | ReservaLaboratorioCerradoOrderByWithRelationInput[]
    cursor?: ReservaLaboratorioCerradoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaLaboratorioCerradoScalarFieldEnum | ReservaLaboratorioCerradoScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Tutor
   */

  export type AggregateTutor = {
    _count: TutorCountAggregateOutputType | null
    _min: TutorMinAggregateOutputType | null
    _max: TutorMaxAggregateOutputType | null
  }

  export type TutorMinAggregateOutputType = {
    userId: string | null
    diasHorarios: string | null
    activo: boolean | null
    especialidad: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type TutorMaxAggregateOutputType = {
    userId: string | null
    diasHorarios: string | null
    activo: boolean | null
    especialidad: string | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type TutorCountAggregateOutputType = {
    userId: number
    diasHorarios: number
    activo: number
    especialidad: number
    fechaCreacion: number
    usuarioCreadorId: number
    _all: number
  }


  export type TutorMinAggregateInputType = {
    userId?: true
    diasHorarios?: true
    activo?: true
    especialidad?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type TutorMaxAggregateInputType = {
    userId?: true
    diasHorarios?: true
    activo?: true
    especialidad?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type TutorCountAggregateInputType = {
    userId?: true
    diasHorarios?: true
    activo?: true
    especialidad?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    _all?: true
  }

  export type TutorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tutor to aggregate.
     */
    where?: TutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tutors to fetch.
     */
    orderBy?: TutorOrderByWithRelationInput | TutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tutors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tutors
    **/
    _count?: true | TutorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TutorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TutorMaxAggregateInputType
  }

  export type GetTutorAggregateType<T extends TutorAggregateArgs> = {
        [P in keyof T & keyof AggregateTutor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTutor[P]>
      : GetScalarType<T[P], AggregateTutor[P]>
  }




  export type TutorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TutorWhereInput
    orderBy?: TutorOrderByWithAggregationInput | TutorOrderByWithAggregationInput[]
    by: TutorScalarFieldEnum[] | TutorScalarFieldEnum
    having?: TutorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TutorCountAggregateInputType | true
    _min?: TutorMinAggregateInputType
    _max?: TutorMaxAggregateInputType
  }

  export type TutorGroupByOutputType = {
    userId: string
    diasHorarios: string
    activo: boolean
    especialidad: string
    fechaCreacion: Date
    usuarioCreadorId: string
    _count: TutorCountAggregateOutputType | null
    _min: TutorMinAggregateOutputType | null
    _max: TutorMaxAggregateOutputType | null
  }

  type GetTutorGroupByPayload<T extends TutorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TutorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TutorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TutorGroupByOutputType[P]>
            : GetScalarType<T[P], TutorGroupByOutputType[P]>
        }
      >
    >


  export type TutorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    diasHorarios?: boolean
    activo?: boolean
    especialidad?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tutor"]>

  export type TutorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    diasHorarios?: boolean
    activo?: boolean
    especialidad?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tutor"]>

  export type TutorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    diasHorarios?: boolean
    activo?: boolean
    especialidad?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tutor"]>

  export type TutorSelectScalar = {
    userId?: boolean
    diasHorarios?: boolean
    activo?: boolean
    especialidad?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }

  export type TutorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"userId" | "diasHorarios" | "activo" | "especialidad" | "fechaCreacion" | "usuarioCreadorId", ExtArgs["result"]["tutor"]>
  export type TutorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type TutorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type TutorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $TutorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tutor"
    objects: {
      usuario: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      userId: string
      diasHorarios: string
      activo: boolean
      especialidad: string
      fechaCreacion: Date
      usuarioCreadorId: string
    }, ExtArgs["result"]["tutor"]>
    composites: {}
  }

  type TutorGetPayload<S extends boolean | null | undefined | TutorDefaultArgs> = $Result.GetResult<Prisma.$TutorPayload, S>

  type TutorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TutorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TutorCountAggregateInputType | true
    }

  export interface TutorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tutor'], meta: { name: 'Tutor' } }
    /**
     * Find zero or one Tutor that matches the filter.
     * @param {TutorFindUniqueArgs} args - Arguments to find a Tutor
     * @example
     * // Get one Tutor
     * const tutor = await prisma.tutor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TutorFindUniqueArgs>(args: SelectSubset<T, TutorFindUniqueArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tutor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TutorFindUniqueOrThrowArgs} args - Arguments to find a Tutor
     * @example
     * // Get one Tutor
     * const tutor = await prisma.tutor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TutorFindUniqueOrThrowArgs>(args: SelectSubset<T, TutorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tutor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorFindFirstArgs} args - Arguments to find a Tutor
     * @example
     * // Get one Tutor
     * const tutor = await prisma.tutor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TutorFindFirstArgs>(args?: SelectSubset<T, TutorFindFirstArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tutor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorFindFirstOrThrowArgs} args - Arguments to find a Tutor
     * @example
     * // Get one Tutor
     * const tutor = await prisma.tutor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TutorFindFirstOrThrowArgs>(args?: SelectSubset<T, TutorFindFirstOrThrowArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tutors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tutors
     * const tutors = await prisma.tutor.findMany()
     * 
     * // Get first 10 Tutors
     * const tutors = await prisma.tutor.findMany({ take: 10 })
     * 
     * // Only select the `userId`
     * const tutorWithUserIdOnly = await prisma.tutor.findMany({ select: { userId: true } })
     * 
     */
    findMany<T extends TutorFindManyArgs>(args?: SelectSubset<T, TutorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tutor.
     * @param {TutorCreateArgs} args - Arguments to create a Tutor.
     * @example
     * // Create one Tutor
     * const Tutor = await prisma.tutor.create({
     *   data: {
     *     // ... data to create a Tutor
     *   }
     * })
     * 
     */
    create<T extends TutorCreateArgs>(args: SelectSubset<T, TutorCreateArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tutors.
     * @param {TutorCreateManyArgs} args - Arguments to create many Tutors.
     * @example
     * // Create many Tutors
     * const tutor = await prisma.tutor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TutorCreateManyArgs>(args?: SelectSubset<T, TutorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tutors and returns the data saved in the database.
     * @param {TutorCreateManyAndReturnArgs} args - Arguments to create many Tutors.
     * @example
     * // Create many Tutors
     * const tutor = await prisma.tutor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tutors and only return the `userId`
     * const tutorWithUserIdOnly = await prisma.tutor.createManyAndReturn({
     *   select: { userId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TutorCreateManyAndReturnArgs>(args?: SelectSubset<T, TutorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tutor.
     * @param {TutorDeleteArgs} args - Arguments to delete one Tutor.
     * @example
     * // Delete one Tutor
     * const Tutor = await prisma.tutor.delete({
     *   where: {
     *     // ... filter to delete one Tutor
     *   }
     * })
     * 
     */
    delete<T extends TutorDeleteArgs>(args: SelectSubset<T, TutorDeleteArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tutor.
     * @param {TutorUpdateArgs} args - Arguments to update one Tutor.
     * @example
     * // Update one Tutor
     * const tutor = await prisma.tutor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TutorUpdateArgs>(args: SelectSubset<T, TutorUpdateArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tutors.
     * @param {TutorDeleteManyArgs} args - Arguments to filter Tutors to delete.
     * @example
     * // Delete a few Tutors
     * const { count } = await prisma.tutor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TutorDeleteManyArgs>(args?: SelectSubset<T, TutorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tutors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tutors
     * const tutor = await prisma.tutor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TutorUpdateManyArgs>(args: SelectSubset<T, TutorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tutors and returns the data updated in the database.
     * @param {TutorUpdateManyAndReturnArgs} args - Arguments to update many Tutors.
     * @example
     * // Update many Tutors
     * const tutor = await prisma.tutor.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tutors and only return the `userId`
     * const tutorWithUserIdOnly = await prisma.tutor.updateManyAndReturn({
     *   select: { userId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TutorUpdateManyAndReturnArgs>(args: SelectSubset<T, TutorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tutor.
     * @param {TutorUpsertArgs} args - Arguments to update or create a Tutor.
     * @example
     * // Update or create a Tutor
     * const tutor = await prisma.tutor.upsert({
     *   create: {
     *     // ... data to create a Tutor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tutor we want to update
     *   }
     * })
     */
    upsert<T extends TutorUpsertArgs>(args: SelectSubset<T, TutorUpsertArgs<ExtArgs>>): Prisma__TutorClient<$Result.GetResult<Prisma.$TutorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tutors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorCountArgs} args - Arguments to filter Tutors to count.
     * @example
     * // Count the number of Tutors
     * const count = await prisma.tutor.count({
     *   where: {
     *     // ... the filter for the Tutors we want to count
     *   }
     * })
    **/
    count<T extends TutorCountArgs>(
      args?: Subset<T, TutorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TutorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tutor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TutorAggregateArgs>(args: Subset<T, TutorAggregateArgs>): Prisma.PrismaPromise<GetTutorAggregateType<T>>

    /**
     * Group by Tutor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TutorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TutorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TutorGroupByArgs['orderBy'] }
        : { orderBy?: TutorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TutorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTutorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tutor model
   */
  readonly fields: TutorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tutor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TutorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tutor model
   */
  interface TutorFieldRefs {
    readonly userId: FieldRef<"Tutor", 'String'>
    readonly diasHorarios: FieldRef<"Tutor", 'String'>
    readonly activo: FieldRef<"Tutor", 'Boolean'>
    readonly especialidad: FieldRef<"Tutor", 'String'>
    readonly fechaCreacion: FieldRef<"Tutor", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Tutor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Tutor findUnique
   */
  export type TutorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter, which Tutor to fetch.
     */
    where: TutorWhereUniqueInput
  }

  /**
   * Tutor findUniqueOrThrow
   */
  export type TutorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter, which Tutor to fetch.
     */
    where: TutorWhereUniqueInput
  }

  /**
   * Tutor findFirst
   */
  export type TutorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter, which Tutor to fetch.
     */
    where?: TutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tutors to fetch.
     */
    orderBy?: TutorOrderByWithRelationInput | TutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tutors.
     */
    cursor?: TutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tutors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tutors.
     */
    distinct?: TutorScalarFieldEnum | TutorScalarFieldEnum[]
  }

  /**
   * Tutor findFirstOrThrow
   */
  export type TutorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter, which Tutor to fetch.
     */
    where?: TutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tutors to fetch.
     */
    orderBy?: TutorOrderByWithRelationInput | TutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tutors.
     */
    cursor?: TutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tutors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tutors.
     */
    distinct?: TutorScalarFieldEnum | TutorScalarFieldEnum[]
  }

  /**
   * Tutor findMany
   */
  export type TutorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter, which Tutors to fetch.
     */
    where?: TutorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tutors to fetch.
     */
    orderBy?: TutorOrderByWithRelationInput | TutorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tutors.
     */
    cursor?: TutorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tutors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tutors.
     */
    skip?: number
    distinct?: TutorScalarFieldEnum | TutorScalarFieldEnum[]
  }

  /**
   * Tutor create
   */
  export type TutorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * The data needed to create a Tutor.
     */
    data: XOR<TutorCreateInput, TutorUncheckedCreateInput>
  }

  /**
   * Tutor createMany
   */
  export type TutorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tutors.
     */
    data: TutorCreateManyInput | TutorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tutor createManyAndReturn
   */
  export type TutorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * The data used to create many Tutors.
     */
    data: TutorCreateManyInput | TutorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Tutor update
   */
  export type TutorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * The data needed to update a Tutor.
     */
    data: XOR<TutorUpdateInput, TutorUncheckedUpdateInput>
    /**
     * Choose, which Tutor to update.
     */
    where: TutorWhereUniqueInput
  }

  /**
   * Tutor updateMany
   */
  export type TutorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tutors.
     */
    data: XOR<TutorUpdateManyMutationInput, TutorUncheckedUpdateManyInput>
    /**
     * Filter which Tutors to update
     */
    where?: TutorWhereInput
    /**
     * Limit how many Tutors to update.
     */
    limit?: number
  }

  /**
   * Tutor updateManyAndReturn
   */
  export type TutorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * The data used to update Tutors.
     */
    data: XOR<TutorUpdateManyMutationInput, TutorUncheckedUpdateManyInput>
    /**
     * Filter which Tutors to update
     */
    where?: TutorWhereInput
    /**
     * Limit how many Tutors to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Tutor upsert
   */
  export type TutorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * The filter to search for the Tutor to update in case it exists.
     */
    where: TutorWhereUniqueInput
    /**
     * In case the Tutor found by the `where` argument doesn't exist, create a new Tutor with this data.
     */
    create: XOR<TutorCreateInput, TutorUncheckedCreateInput>
    /**
     * In case the Tutor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TutorUpdateInput, TutorUncheckedUpdateInput>
  }

  /**
   * Tutor delete
   */
  export type TutorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
    /**
     * Filter which Tutor to delete.
     */
    where: TutorWhereUniqueInput
  }

  /**
   * Tutor deleteMany
   */
  export type TutorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tutors to delete
     */
    where?: TutorWhereInput
    /**
     * Limit how many Tutors to delete.
     */
    limit?: number
  }

  /**
   * Tutor without action
   */
  export type TutorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tutor
     */
    select?: TutorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tutor
     */
    omit?: TutorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TutorInclude<ExtArgs> | null
  }


  /**
   * Model UsuarioRol
   */

  export type AggregateUsuarioRol = {
    _count: UsuarioRolCountAggregateOutputType | null
    _avg: UsuarioRolAvgAggregateOutputType | null
    _sum: UsuarioRolSumAggregateOutputType | null
    _min: UsuarioRolMinAggregateOutputType | null
    _max: UsuarioRolMaxAggregateOutputType | null
  }

  export type UsuarioRolAvgAggregateOutputType = {
    rolId: number | null
  }

  export type UsuarioRolSumAggregateOutputType = {
    rolId: number | null
  }

  export type UsuarioRolMinAggregateOutputType = {
    userId: string | null
    rolId: number | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type UsuarioRolMaxAggregateOutputType = {
    userId: string | null
    rolId: number | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type UsuarioRolCountAggregateOutputType = {
    userId: number
    rolId: number
    fechaCreacion: number
    usuarioCreadorId: number
    _all: number
  }


  export type UsuarioRolAvgAggregateInputType = {
    rolId?: true
  }

  export type UsuarioRolSumAggregateInputType = {
    rolId?: true
  }

  export type UsuarioRolMinAggregateInputType = {
    userId?: true
    rolId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type UsuarioRolMaxAggregateInputType = {
    userId?: true
    rolId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type UsuarioRolCountAggregateInputType = {
    userId?: true
    rolId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    _all?: true
  }

  export type UsuarioRolAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioRol to aggregate.
     */
    where?: UsuarioRolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioRols to fetch.
     */
    orderBy?: UsuarioRolOrderByWithRelationInput | UsuarioRolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioRolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioRols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioRols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UsuarioRols
    **/
    _count?: true | UsuarioRolCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioRolAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioRolSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioRolMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioRolMaxAggregateInputType
  }

  export type GetUsuarioRolAggregateType<T extends UsuarioRolAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarioRol]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarioRol[P]>
      : GetScalarType<T[P], AggregateUsuarioRol[P]>
  }




  export type UsuarioRolGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioRolWhereInput
    orderBy?: UsuarioRolOrderByWithAggregationInput | UsuarioRolOrderByWithAggregationInput[]
    by: UsuarioRolScalarFieldEnum[] | UsuarioRolScalarFieldEnum
    having?: UsuarioRolScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioRolCountAggregateInputType | true
    _avg?: UsuarioRolAvgAggregateInputType
    _sum?: UsuarioRolSumAggregateInputType
    _min?: UsuarioRolMinAggregateInputType
    _max?: UsuarioRolMaxAggregateInputType
  }

  export type UsuarioRolGroupByOutputType = {
    userId: string
    rolId: number
    fechaCreacion: Date
    usuarioCreadorId: string
    _count: UsuarioRolCountAggregateOutputType | null
    _avg: UsuarioRolAvgAggregateOutputType | null
    _sum: UsuarioRolSumAggregateOutputType | null
    _min: UsuarioRolMinAggregateOutputType | null
    _max: UsuarioRolMaxAggregateOutputType | null
  }

  type GetUsuarioRolGroupByPayload<T extends UsuarioRolGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioRolGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioRolGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioRolGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioRolGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioRolSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    rolId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioRol"]>

  export type UsuarioRolSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    rolId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioRol"]>

  export type UsuarioRolSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    rolId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioRol"]>

  export type UsuarioRolSelectScalar = {
    userId?: boolean
    rolId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }

  export type UsuarioRolOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"userId" | "rolId" | "fechaCreacion" | "usuarioCreadorId", ExtArgs["result"]["usuarioRol"]>
  export type UsuarioRolInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }
  export type UsuarioRolIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }
  export type UsuarioRolIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }

  export type $UsuarioRolPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UsuarioRol"
    objects: {
      usuario: Prisma.$UserPayload<ExtArgs>
      rol: Prisma.$RolPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      userId: string
      rolId: number
      fechaCreacion: Date
      usuarioCreadorId: string
    }, ExtArgs["result"]["usuarioRol"]>
    composites: {}
  }

  type UsuarioRolGetPayload<S extends boolean | null | undefined | UsuarioRolDefaultArgs> = $Result.GetResult<Prisma.$UsuarioRolPayload, S>

  type UsuarioRolCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioRolFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioRolCountAggregateInputType | true
    }

  export interface UsuarioRolDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UsuarioRol'], meta: { name: 'UsuarioRol' } }
    /**
     * Find zero or one UsuarioRol that matches the filter.
     * @param {UsuarioRolFindUniqueArgs} args - Arguments to find a UsuarioRol
     * @example
     * // Get one UsuarioRol
     * const usuarioRol = await prisma.usuarioRol.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioRolFindUniqueArgs>(args: SelectSubset<T, UsuarioRolFindUniqueArgs<ExtArgs>>): Prisma__UsuarioRolClient<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UsuarioRol that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioRolFindUniqueOrThrowArgs} args - Arguments to find a UsuarioRol
     * @example
     * // Get one UsuarioRol
     * const usuarioRol = await prisma.usuarioRol.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioRolFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioRolFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioRolClient<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UsuarioRol that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioRolFindFirstArgs} args - Arguments to find a UsuarioRol
     * @example
     * // Get one UsuarioRol
     * const usuarioRol = await prisma.usuarioRol.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioRolFindFirstArgs>(args?: SelectSubset<T, UsuarioRolFindFirstArgs<ExtArgs>>): Prisma__UsuarioRolClient<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UsuarioRol that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioRolFindFirstOrThrowArgs} args - Arguments to find a UsuarioRol
     * @example
     * // Get one UsuarioRol
     * const usuarioRol = await prisma.usuarioRol.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioRolFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioRolFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioRolClient<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UsuarioRols that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioRolFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UsuarioRols
     * const usuarioRols = await prisma.usuarioRol.findMany()
     * 
     * // Get first 10 UsuarioRols
     * const usuarioRols = await prisma.usuarioRol.findMany({ take: 10 })
     * 
     * // Only select the `userId`
     * const usuarioRolWithUserIdOnly = await prisma.usuarioRol.findMany({ select: { userId: true } })
     * 
     */
    findMany<T extends UsuarioRolFindManyArgs>(args?: SelectSubset<T, UsuarioRolFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UsuarioRol.
     * @param {UsuarioRolCreateArgs} args - Arguments to create a UsuarioRol.
     * @example
     * // Create one UsuarioRol
     * const UsuarioRol = await prisma.usuarioRol.create({
     *   data: {
     *     // ... data to create a UsuarioRol
     *   }
     * })
     * 
     */
    create<T extends UsuarioRolCreateArgs>(args: SelectSubset<T, UsuarioRolCreateArgs<ExtArgs>>): Prisma__UsuarioRolClient<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UsuarioRols.
     * @param {UsuarioRolCreateManyArgs} args - Arguments to create many UsuarioRols.
     * @example
     * // Create many UsuarioRols
     * const usuarioRol = await prisma.usuarioRol.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioRolCreateManyArgs>(args?: SelectSubset<T, UsuarioRolCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UsuarioRols and returns the data saved in the database.
     * @param {UsuarioRolCreateManyAndReturnArgs} args - Arguments to create many UsuarioRols.
     * @example
     * // Create many UsuarioRols
     * const usuarioRol = await prisma.usuarioRol.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UsuarioRols and only return the `userId`
     * const usuarioRolWithUserIdOnly = await prisma.usuarioRol.createManyAndReturn({
     *   select: { userId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioRolCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioRolCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UsuarioRol.
     * @param {UsuarioRolDeleteArgs} args - Arguments to delete one UsuarioRol.
     * @example
     * // Delete one UsuarioRol
     * const UsuarioRol = await prisma.usuarioRol.delete({
     *   where: {
     *     // ... filter to delete one UsuarioRol
     *   }
     * })
     * 
     */
    delete<T extends UsuarioRolDeleteArgs>(args: SelectSubset<T, UsuarioRolDeleteArgs<ExtArgs>>): Prisma__UsuarioRolClient<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UsuarioRol.
     * @param {UsuarioRolUpdateArgs} args - Arguments to update one UsuarioRol.
     * @example
     * // Update one UsuarioRol
     * const usuarioRol = await prisma.usuarioRol.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioRolUpdateArgs>(args: SelectSubset<T, UsuarioRolUpdateArgs<ExtArgs>>): Prisma__UsuarioRolClient<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UsuarioRols.
     * @param {UsuarioRolDeleteManyArgs} args - Arguments to filter UsuarioRols to delete.
     * @example
     * // Delete a few UsuarioRols
     * const { count } = await prisma.usuarioRol.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioRolDeleteManyArgs>(args?: SelectSubset<T, UsuarioRolDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UsuarioRols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioRolUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UsuarioRols
     * const usuarioRol = await prisma.usuarioRol.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioRolUpdateManyArgs>(args: SelectSubset<T, UsuarioRolUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UsuarioRols and returns the data updated in the database.
     * @param {UsuarioRolUpdateManyAndReturnArgs} args - Arguments to update many UsuarioRols.
     * @example
     * // Update many UsuarioRols
     * const usuarioRol = await prisma.usuarioRol.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UsuarioRols and only return the `userId`
     * const usuarioRolWithUserIdOnly = await prisma.usuarioRol.updateManyAndReturn({
     *   select: { userId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioRolUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioRolUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UsuarioRol.
     * @param {UsuarioRolUpsertArgs} args - Arguments to update or create a UsuarioRol.
     * @example
     * // Update or create a UsuarioRol
     * const usuarioRol = await prisma.usuarioRol.upsert({
     *   create: {
     *     // ... data to create a UsuarioRol
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UsuarioRol we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioRolUpsertArgs>(args: SelectSubset<T, UsuarioRolUpsertArgs<ExtArgs>>): Prisma__UsuarioRolClient<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UsuarioRols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioRolCountArgs} args - Arguments to filter UsuarioRols to count.
     * @example
     * // Count the number of UsuarioRols
     * const count = await prisma.usuarioRol.count({
     *   where: {
     *     // ... the filter for the UsuarioRols we want to count
     *   }
     * })
    **/
    count<T extends UsuarioRolCountArgs>(
      args?: Subset<T, UsuarioRolCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioRolCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UsuarioRol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioRolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioRolAggregateArgs>(args: Subset<T, UsuarioRolAggregateArgs>): Prisma.PrismaPromise<GetUsuarioRolAggregateType<T>>

    /**
     * Group by UsuarioRol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioRolGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioRolGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioRolGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioRolGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioRolGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioRolGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UsuarioRol model
   */
  readonly fields: UsuarioRolFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UsuarioRol.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioRolClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rol<T extends RolDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RolDefaultArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UsuarioRol model
   */
  interface UsuarioRolFieldRefs {
    readonly userId: FieldRef<"UsuarioRol", 'String'>
    readonly rolId: FieldRef<"UsuarioRol", 'Int'>
    readonly fechaCreacion: FieldRef<"UsuarioRol", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"UsuarioRol", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UsuarioRol findUnique
   */
  export type UsuarioRolFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioRol to fetch.
     */
    where: UsuarioRolWhereUniqueInput
  }

  /**
   * UsuarioRol findUniqueOrThrow
   */
  export type UsuarioRolFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioRol to fetch.
     */
    where: UsuarioRolWhereUniqueInput
  }

  /**
   * UsuarioRol findFirst
   */
  export type UsuarioRolFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioRol to fetch.
     */
    where?: UsuarioRolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioRols to fetch.
     */
    orderBy?: UsuarioRolOrderByWithRelationInput | UsuarioRolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioRols.
     */
    cursor?: UsuarioRolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioRols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioRols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioRols.
     */
    distinct?: UsuarioRolScalarFieldEnum | UsuarioRolScalarFieldEnum[]
  }

  /**
   * UsuarioRol findFirstOrThrow
   */
  export type UsuarioRolFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioRol to fetch.
     */
    where?: UsuarioRolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioRols to fetch.
     */
    orderBy?: UsuarioRolOrderByWithRelationInput | UsuarioRolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioRols.
     */
    cursor?: UsuarioRolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioRols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioRols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioRols.
     */
    distinct?: UsuarioRolScalarFieldEnum | UsuarioRolScalarFieldEnum[]
  }

  /**
   * UsuarioRol findMany
   */
  export type UsuarioRolFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioRols to fetch.
     */
    where?: UsuarioRolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioRols to fetch.
     */
    orderBy?: UsuarioRolOrderByWithRelationInput | UsuarioRolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UsuarioRols.
     */
    cursor?: UsuarioRolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioRols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioRols.
     */
    skip?: number
    distinct?: UsuarioRolScalarFieldEnum | UsuarioRolScalarFieldEnum[]
  }

  /**
   * UsuarioRol create
   */
  export type UsuarioRolCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
    /**
     * The data needed to create a UsuarioRol.
     */
    data: XOR<UsuarioRolCreateInput, UsuarioRolUncheckedCreateInput>
  }

  /**
   * UsuarioRol createMany
   */
  export type UsuarioRolCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UsuarioRols.
     */
    data: UsuarioRolCreateManyInput | UsuarioRolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UsuarioRol createManyAndReturn
   */
  export type UsuarioRolCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * The data used to create many UsuarioRols.
     */
    data: UsuarioRolCreateManyInput | UsuarioRolCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UsuarioRol update
   */
  export type UsuarioRolUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
    /**
     * The data needed to update a UsuarioRol.
     */
    data: XOR<UsuarioRolUpdateInput, UsuarioRolUncheckedUpdateInput>
    /**
     * Choose, which UsuarioRol to update.
     */
    where: UsuarioRolWhereUniqueInput
  }

  /**
   * UsuarioRol updateMany
   */
  export type UsuarioRolUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UsuarioRols.
     */
    data: XOR<UsuarioRolUpdateManyMutationInput, UsuarioRolUncheckedUpdateManyInput>
    /**
     * Filter which UsuarioRols to update
     */
    where?: UsuarioRolWhereInput
    /**
     * Limit how many UsuarioRols to update.
     */
    limit?: number
  }

  /**
   * UsuarioRol updateManyAndReturn
   */
  export type UsuarioRolUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * The data used to update UsuarioRols.
     */
    data: XOR<UsuarioRolUpdateManyMutationInput, UsuarioRolUncheckedUpdateManyInput>
    /**
     * Filter which UsuarioRols to update
     */
    where?: UsuarioRolWhereInput
    /**
     * Limit how many UsuarioRols to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UsuarioRol upsert
   */
  export type UsuarioRolUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
    /**
     * The filter to search for the UsuarioRol to update in case it exists.
     */
    where: UsuarioRolWhereUniqueInput
    /**
     * In case the UsuarioRol found by the `where` argument doesn't exist, create a new UsuarioRol with this data.
     */
    create: XOR<UsuarioRolCreateInput, UsuarioRolUncheckedCreateInput>
    /**
     * In case the UsuarioRol was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioRolUpdateInput, UsuarioRolUncheckedUpdateInput>
  }

  /**
   * UsuarioRol delete
   */
  export type UsuarioRolDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
    /**
     * Filter which UsuarioRol to delete.
     */
    where: UsuarioRolWhereUniqueInput
  }

  /**
   * UsuarioRol deleteMany
   */
  export type UsuarioRolDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioRols to delete
     */
    where?: UsuarioRolWhereInput
    /**
     * Limit how many UsuarioRols to delete.
     */
    limit?: number
  }

  /**
   * UsuarioRol without action
   */
  export type UsuarioRolDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
  }


  /**
   * Model Rol
   */

  export type AggregateRol = {
    _count: RolCountAggregateOutputType | null
    _avg: RolAvgAggregateOutputType | null
    _sum: RolSumAggregateOutputType | null
    _min: RolMinAggregateOutputType | null
    _max: RolMaxAggregateOutputType | null
  }

  export type RolAvgAggregateOutputType = {
    id: number | null
  }

  export type RolSumAggregateOutputType = {
    id: number | null
  }

  export type RolMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type RolMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type RolCountAggregateOutputType = {
    id: number
    nombre: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type RolAvgAggregateInputType = {
    id?: true
  }

  export type RolSumAggregateInputType = {
    id?: true
  }

  export type RolMinAggregateInputType = {
    id?: true
    nombre?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type RolMaxAggregateInputType = {
    id?: true
    nombre?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type RolCountAggregateInputType = {
    id?: true
    nombre?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type RolAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rol to aggregate.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Rols
    **/
    _count?: true | RolCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolMaxAggregateInputType
  }

  export type GetRolAggregateType<T extends RolAggregateArgs> = {
        [P in keyof T & keyof AggregateRol]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRol[P]>
      : GetScalarType<T[P], AggregateRol[P]>
  }




  export type RolGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolWhereInput
    orderBy?: RolOrderByWithAggregationInput | RolOrderByWithAggregationInput[]
    by: RolScalarFieldEnum[] | RolScalarFieldEnum
    having?: RolScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolCountAggregateInputType | true
    _avg?: RolAvgAggregateInputType
    _sum?: RolSumAggregateInputType
    _min?: RolMinAggregateInputType
    _max?: RolMaxAggregateInputType
  }

  export type RolGroupByOutputType = {
    id: number
    nombre: string
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: RolCountAggregateOutputType | null
    _avg: RolAvgAggregateOutputType | null
    _sum: RolSumAggregateOutputType | null
    _min: RolMinAggregateOutputType | null
    _max: RolMaxAggregateOutputType | null
  }

  type GetRolGroupByPayload<T extends RolGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolGroupByOutputType[P]>
            : GetScalarType<T[P], RolGroupByOutputType[P]>
        }
      >
    >


  export type RolSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    usuarios?: boolean | Rol$usuariosArgs<ExtArgs>
    rolPermiso?: boolean | Rol$rolPermisoArgs<ExtArgs>
    _count?: boolean | RolCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rol"]>

  export type RolSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }, ExtArgs["result"]["rol"]>

  export type RolSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }, ExtArgs["result"]["rol"]>

  export type RolSelectScalar = {
    id?: boolean
    nombre?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type RolOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["rol"]>
  export type RolInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Rol$usuariosArgs<ExtArgs>
    rolPermiso?: boolean | Rol$rolPermisoArgs<ExtArgs>
    _count?: boolean | RolCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RolIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RolIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Rol"
    objects: {
      usuarios: Prisma.$UsuarioRolPayload<ExtArgs>[]
      rolPermiso: Prisma.$RolPermisoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["rol"]>
    composites: {}
  }

  type RolGetPayload<S extends boolean | null | undefined | RolDefaultArgs> = $Result.GetResult<Prisma.$RolPayload, S>

  type RolCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RolFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolCountAggregateInputType | true
    }

  export interface RolDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Rol'], meta: { name: 'Rol' } }
    /**
     * Find zero or one Rol that matches the filter.
     * @param {RolFindUniqueArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RolFindUniqueArgs>(args: SelectSubset<T, RolFindUniqueArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Rol that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RolFindUniqueOrThrowArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RolFindUniqueOrThrowArgs>(args: SelectSubset<T, RolFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindFirstArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RolFindFirstArgs>(args?: SelectSubset<T, RolFindFirstArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindFirstOrThrowArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RolFindFirstOrThrowArgs>(args?: SelectSubset<T, RolFindFirstOrThrowArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Rols that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rols
     * const rols = await prisma.rol.findMany()
     * 
     * // Get first 10 Rols
     * const rols = await prisma.rol.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolWithIdOnly = await prisma.rol.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RolFindManyArgs>(args?: SelectSubset<T, RolFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Rol.
     * @param {RolCreateArgs} args - Arguments to create a Rol.
     * @example
     * // Create one Rol
     * const Rol = await prisma.rol.create({
     *   data: {
     *     // ... data to create a Rol
     *   }
     * })
     * 
     */
    create<T extends RolCreateArgs>(args: SelectSubset<T, RolCreateArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Rols.
     * @param {RolCreateManyArgs} args - Arguments to create many Rols.
     * @example
     * // Create many Rols
     * const rol = await prisma.rol.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RolCreateManyArgs>(args?: SelectSubset<T, RolCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Rols and returns the data saved in the database.
     * @param {RolCreateManyAndReturnArgs} args - Arguments to create many Rols.
     * @example
     * // Create many Rols
     * const rol = await prisma.rol.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Rols and only return the `id`
     * const rolWithIdOnly = await prisma.rol.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RolCreateManyAndReturnArgs>(args?: SelectSubset<T, RolCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Rol.
     * @param {RolDeleteArgs} args - Arguments to delete one Rol.
     * @example
     * // Delete one Rol
     * const Rol = await prisma.rol.delete({
     *   where: {
     *     // ... filter to delete one Rol
     *   }
     * })
     * 
     */
    delete<T extends RolDeleteArgs>(args: SelectSubset<T, RolDeleteArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Rol.
     * @param {RolUpdateArgs} args - Arguments to update one Rol.
     * @example
     * // Update one Rol
     * const rol = await prisma.rol.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RolUpdateArgs>(args: SelectSubset<T, RolUpdateArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Rols.
     * @param {RolDeleteManyArgs} args - Arguments to filter Rols to delete.
     * @example
     * // Delete a few Rols
     * const { count } = await prisma.rol.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RolDeleteManyArgs>(args?: SelectSubset<T, RolDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rols
     * const rol = await prisma.rol.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RolUpdateManyArgs>(args: SelectSubset<T, RolUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rols and returns the data updated in the database.
     * @param {RolUpdateManyAndReturnArgs} args - Arguments to update many Rols.
     * @example
     * // Update many Rols
     * const rol = await prisma.rol.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Rols and only return the `id`
     * const rolWithIdOnly = await prisma.rol.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RolUpdateManyAndReturnArgs>(args: SelectSubset<T, RolUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Rol.
     * @param {RolUpsertArgs} args - Arguments to update or create a Rol.
     * @example
     * // Update or create a Rol
     * const rol = await prisma.rol.upsert({
     *   create: {
     *     // ... data to create a Rol
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rol we want to update
     *   }
     * })
     */
    upsert<T extends RolUpsertArgs>(args: SelectSubset<T, RolUpsertArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolCountArgs} args - Arguments to filter Rols to count.
     * @example
     * // Count the number of Rols
     * const count = await prisma.rol.count({
     *   where: {
     *     // ... the filter for the Rols we want to count
     *   }
     * })
    **/
    count<T extends RolCountArgs>(
      args?: Subset<T, RolCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolAggregateArgs>(args: Subset<T, RolAggregateArgs>): Prisma.PrismaPromise<GetRolAggregateType<T>>

    /**
     * Group by Rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolGroupByArgs['orderBy'] }
        : { orderBy?: RolGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Rol model
   */
  readonly fields: RolFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Rol.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RolClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Rol$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Rol$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioRolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rolPermiso<T extends Rol$rolPermisoArgs<ExtArgs> = {}>(args?: Subset<T, Rol$rolPermisoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Rol model
   */
  interface RolFieldRefs {
    readonly id: FieldRef<"Rol", 'Int'>
    readonly nombre: FieldRef<"Rol", 'String'>
    readonly fechaCreacion: FieldRef<"Rol", 'DateTime'>
    readonly fechaModificacion: FieldRef<"Rol", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Rol", 'String'>
    readonly usuarioModificadorId: FieldRef<"Rol", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Rol findUnique
   */
  export type RolFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol findUniqueOrThrow
   */
  export type RolFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol findFirst
   */
  export type RolFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rols.
     */
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol findFirstOrThrow
   */
  export type RolFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rols.
     */
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol findMany
   */
  export type RolFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rols to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol create
   */
  export type RolCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The data needed to create a Rol.
     */
    data: XOR<RolCreateInput, RolUncheckedCreateInput>
  }

  /**
   * Rol createMany
   */
  export type RolCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Rols.
     */
    data: RolCreateManyInput | RolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Rol createManyAndReturn
   */
  export type RolCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * The data used to create many Rols.
     */
    data: RolCreateManyInput | RolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Rol update
   */
  export type RolUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The data needed to update a Rol.
     */
    data: XOR<RolUpdateInput, RolUncheckedUpdateInput>
    /**
     * Choose, which Rol to update.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol updateMany
   */
  export type RolUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Rols.
     */
    data: XOR<RolUpdateManyMutationInput, RolUncheckedUpdateManyInput>
    /**
     * Filter which Rols to update
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to update.
     */
    limit?: number
  }

  /**
   * Rol updateManyAndReturn
   */
  export type RolUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * The data used to update Rols.
     */
    data: XOR<RolUpdateManyMutationInput, RolUncheckedUpdateManyInput>
    /**
     * Filter which Rols to update
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to update.
     */
    limit?: number
  }

  /**
   * Rol upsert
   */
  export type RolUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The filter to search for the Rol to update in case it exists.
     */
    where: RolWhereUniqueInput
    /**
     * In case the Rol found by the `where` argument doesn't exist, create a new Rol with this data.
     */
    create: XOR<RolCreateInput, RolUncheckedCreateInput>
    /**
     * In case the Rol was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RolUpdateInput, RolUncheckedUpdateInput>
  }

  /**
   * Rol delete
   */
  export type RolDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter which Rol to delete.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol deleteMany
   */
  export type RolDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rols to delete
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to delete.
     */
    limit?: number
  }

  /**
   * Rol.usuarios
   */
  export type Rol$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioRol
     */
    select?: UsuarioRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioRol
     */
    omit?: UsuarioRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioRolInclude<ExtArgs> | null
    where?: UsuarioRolWhereInput
    orderBy?: UsuarioRolOrderByWithRelationInput | UsuarioRolOrderByWithRelationInput[]
    cursor?: UsuarioRolWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioRolScalarFieldEnum | UsuarioRolScalarFieldEnum[]
  }

  /**
   * Rol.rolPermiso
   */
  export type Rol$rolPermisoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
    where?: RolPermisoWhereInput
    orderBy?: RolPermisoOrderByWithRelationInput | RolPermisoOrderByWithRelationInput[]
    cursor?: RolPermisoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolPermisoScalarFieldEnum | RolPermisoScalarFieldEnum[]
  }

  /**
   * Rol without action
   */
  export type RolDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
  }


  /**
   * Model RolPermiso
   */

  export type AggregateRolPermiso = {
    _count: RolPermisoCountAggregateOutputType | null
    _avg: RolPermisoAvgAggregateOutputType | null
    _sum: RolPermisoSumAggregateOutputType | null
    _min: RolPermisoMinAggregateOutputType | null
    _max: RolPermisoMaxAggregateOutputType | null
  }

  export type RolPermisoAvgAggregateOutputType = {
    rolId: number | null
    permisoId: number | null
  }

  export type RolPermisoSumAggregateOutputType = {
    rolId: number | null
    permisoId: number | null
  }

  export type RolPermisoMinAggregateOutputType = {
    rolId: number | null
    permisoId: number | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type RolPermisoMaxAggregateOutputType = {
    rolId: number | null
    permisoId: number | null
    fechaCreacion: Date | null
    usuarioCreadorId: string | null
  }

  export type RolPermisoCountAggregateOutputType = {
    rolId: number
    permisoId: number
    fechaCreacion: number
    usuarioCreadorId: number
    _all: number
  }


  export type RolPermisoAvgAggregateInputType = {
    rolId?: true
    permisoId?: true
  }

  export type RolPermisoSumAggregateInputType = {
    rolId?: true
    permisoId?: true
  }

  export type RolPermisoMinAggregateInputType = {
    rolId?: true
    permisoId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type RolPermisoMaxAggregateInputType = {
    rolId?: true
    permisoId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
  }

  export type RolPermisoCountAggregateInputType = {
    rolId?: true
    permisoId?: true
    fechaCreacion?: true
    usuarioCreadorId?: true
    _all?: true
  }

  export type RolPermisoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolPermiso to aggregate.
     */
    where?: RolPermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolPermisos to fetch.
     */
    orderBy?: RolPermisoOrderByWithRelationInput | RolPermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RolPermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolPermisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolPermisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RolPermisos
    **/
    _count?: true | RolPermisoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolPermisoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolPermisoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolPermisoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolPermisoMaxAggregateInputType
  }

  export type GetRolPermisoAggregateType<T extends RolPermisoAggregateArgs> = {
        [P in keyof T & keyof AggregateRolPermiso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRolPermiso[P]>
      : GetScalarType<T[P], AggregateRolPermiso[P]>
  }




  export type RolPermisoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolPermisoWhereInput
    orderBy?: RolPermisoOrderByWithAggregationInput | RolPermisoOrderByWithAggregationInput[]
    by: RolPermisoScalarFieldEnum[] | RolPermisoScalarFieldEnum
    having?: RolPermisoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolPermisoCountAggregateInputType | true
    _avg?: RolPermisoAvgAggregateInputType
    _sum?: RolPermisoSumAggregateInputType
    _min?: RolPermisoMinAggregateInputType
    _max?: RolPermisoMaxAggregateInputType
  }

  export type RolPermisoGroupByOutputType = {
    rolId: number
    permisoId: number
    fechaCreacion: Date
    usuarioCreadorId: string
    _count: RolPermisoCountAggregateOutputType | null
    _avg: RolPermisoAvgAggregateOutputType | null
    _sum: RolPermisoSumAggregateOutputType | null
    _min: RolPermisoMinAggregateOutputType | null
    _max: RolPermisoMaxAggregateOutputType | null
  }

  type GetRolPermisoGroupByPayload<T extends RolPermisoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolPermisoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolPermisoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolPermisoGroupByOutputType[P]>
            : GetScalarType<T[P], RolPermisoGroupByOutputType[P]>
        }
      >
    >


  export type RolPermisoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    rolId?: boolean
    permisoId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    rol?: boolean | RolDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolPermiso"]>

  export type RolPermisoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    rolId?: boolean
    permisoId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    rol?: boolean | RolDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolPermiso"]>

  export type RolPermisoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    rolId?: boolean
    permisoId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
    rol?: boolean | RolDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolPermiso"]>

  export type RolPermisoSelectScalar = {
    rolId?: boolean
    permisoId?: boolean
    fechaCreacion?: boolean
    usuarioCreadorId?: boolean
  }

  export type RolPermisoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"rolId" | "permisoId" | "fechaCreacion" | "usuarioCreadorId", ExtArgs["result"]["rolPermiso"]>
  export type RolPermisoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }
  export type RolPermisoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }
  export type RolPermisoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }

  export type $RolPermisoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RolPermiso"
    objects: {
      rol: Prisma.$RolPayload<ExtArgs>
      permiso: Prisma.$PermisoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      rolId: number
      permisoId: number
      fechaCreacion: Date
      usuarioCreadorId: string
    }, ExtArgs["result"]["rolPermiso"]>
    composites: {}
  }

  type RolPermisoGetPayload<S extends boolean | null | undefined | RolPermisoDefaultArgs> = $Result.GetResult<Prisma.$RolPermisoPayload, S>

  type RolPermisoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RolPermisoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolPermisoCountAggregateInputType | true
    }

  export interface RolPermisoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RolPermiso'], meta: { name: 'RolPermiso' } }
    /**
     * Find zero or one RolPermiso that matches the filter.
     * @param {RolPermisoFindUniqueArgs} args - Arguments to find a RolPermiso
     * @example
     * // Get one RolPermiso
     * const rolPermiso = await prisma.rolPermiso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RolPermisoFindUniqueArgs>(args: SelectSubset<T, RolPermisoFindUniqueArgs<ExtArgs>>): Prisma__RolPermisoClient<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RolPermiso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RolPermisoFindUniqueOrThrowArgs} args - Arguments to find a RolPermiso
     * @example
     * // Get one RolPermiso
     * const rolPermiso = await prisma.rolPermiso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RolPermisoFindUniqueOrThrowArgs>(args: SelectSubset<T, RolPermisoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RolPermisoClient<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RolPermiso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolPermisoFindFirstArgs} args - Arguments to find a RolPermiso
     * @example
     * // Get one RolPermiso
     * const rolPermiso = await prisma.rolPermiso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RolPermisoFindFirstArgs>(args?: SelectSubset<T, RolPermisoFindFirstArgs<ExtArgs>>): Prisma__RolPermisoClient<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RolPermiso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolPermisoFindFirstOrThrowArgs} args - Arguments to find a RolPermiso
     * @example
     * // Get one RolPermiso
     * const rolPermiso = await prisma.rolPermiso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RolPermisoFindFirstOrThrowArgs>(args?: SelectSubset<T, RolPermisoFindFirstOrThrowArgs<ExtArgs>>): Prisma__RolPermisoClient<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RolPermisos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolPermisoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RolPermisos
     * const rolPermisos = await prisma.rolPermiso.findMany()
     * 
     * // Get first 10 RolPermisos
     * const rolPermisos = await prisma.rolPermiso.findMany({ take: 10 })
     * 
     * // Only select the `rolId`
     * const rolPermisoWithRolIdOnly = await prisma.rolPermiso.findMany({ select: { rolId: true } })
     * 
     */
    findMany<T extends RolPermisoFindManyArgs>(args?: SelectSubset<T, RolPermisoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RolPermiso.
     * @param {RolPermisoCreateArgs} args - Arguments to create a RolPermiso.
     * @example
     * // Create one RolPermiso
     * const RolPermiso = await prisma.rolPermiso.create({
     *   data: {
     *     // ... data to create a RolPermiso
     *   }
     * })
     * 
     */
    create<T extends RolPermisoCreateArgs>(args: SelectSubset<T, RolPermisoCreateArgs<ExtArgs>>): Prisma__RolPermisoClient<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RolPermisos.
     * @param {RolPermisoCreateManyArgs} args - Arguments to create many RolPermisos.
     * @example
     * // Create many RolPermisos
     * const rolPermiso = await prisma.rolPermiso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RolPermisoCreateManyArgs>(args?: SelectSubset<T, RolPermisoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RolPermisos and returns the data saved in the database.
     * @param {RolPermisoCreateManyAndReturnArgs} args - Arguments to create many RolPermisos.
     * @example
     * // Create many RolPermisos
     * const rolPermiso = await prisma.rolPermiso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RolPermisos and only return the `rolId`
     * const rolPermisoWithRolIdOnly = await prisma.rolPermiso.createManyAndReturn({
     *   select: { rolId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RolPermisoCreateManyAndReturnArgs>(args?: SelectSubset<T, RolPermisoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RolPermiso.
     * @param {RolPermisoDeleteArgs} args - Arguments to delete one RolPermiso.
     * @example
     * // Delete one RolPermiso
     * const RolPermiso = await prisma.rolPermiso.delete({
     *   where: {
     *     // ... filter to delete one RolPermiso
     *   }
     * })
     * 
     */
    delete<T extends RolPermisoDeleteArgs>(args: SelectSubset<T, RolPermisoDeleteArgs<ExtArgs>>): Prisma__RolPermisoClient<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RolPermiso.
     * @param {RolPermisoUpdateArgs} args - Arguments to update one RolPermiso.
     * @example
     * // Update one RolPermiso
     * const rolPermiso = await prisma.rolPermiso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RolPermisoUpdateArgs>(args: SelectSubset<T, RolPermisoUpdateArgs<ExtArgs>>): Prisma__RolPermisoClient<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RolPermisos.
     * @param {RolPermisoDeleteManyArgs} args - Arguments to filter RolPermisos to delete.
     * @example
     * // Delete a few RolPermisos
     * const { count } = await prisma.rolPermiso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RolPermisoDeleteManyArgs>(args?: SelectSubset<T, RolPermisoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RolPermisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolPermisoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RolPermisos
     * const rolPermiso = await prisma.rolPermiso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RolPermisoUpdateManyArgs>(args: SelectSubset<T, RolPermisoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RolPermisos and returns the data updated in the database.
     * @param {RolPermisoUpdateManyAndReturnArgs} args - Arguments to update many RolPermisos.
     * @example
     * // Update many RolPermisos
     * const rolPermiso = await prisma.rolPermiso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RolPermisos and only return the `rolId`
     * const rolPermisoWithRolIdOnly = await prisma.rolPermiso.updateManyAndReturn({
     *   select: { rolId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RolPermisoUpdateManyAndReturnArgs>(args: SelectSubset<T, RolPermisoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RolPermiso.
     * @param {RolPermisoUpsertArgs} args - Arguments to update or create a RolPermiso.
     * @example
     * // Update or create a RolPermiso
     * const rolPermiso = await prisma.rolPermiso.upsert({
     *   create: {
     *     // ... data to create a RolPermiso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RolPermiso we want to update
     *   }
     * })
     */
    upsert<T extends RolPermisoUpsertArgs>(args: SelectSubset<T, RolPermisoUpsertArgs<ExtArgs>>): Prisma__RolPermisoClient<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RolPermisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolPermisoCountArgs} args - Arguments to filter RolPermisos to count.
     * @example
     * // Count the number of RolPermisos
     * const count = await prisma.rolPermiso.count({
     *   where: {
     *     // ... the filter for the RolPermisos we want to count
     *   }
     * })
    **/
    count<T extends RolPermisoCountArgs>(
      args?: Subset<T, RolPermisoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolPermisoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RolPermiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolPermisoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolPermisoAggregateArgs>(args: Subset<T, RolPermisoAggregateArgs>): Prisma.PrismaPromise<GetRolPermisoAggregateType<T>>

    /**
     * Group by RolPermiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolPermisoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolPermisoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolPermisoGroupByArgs['orderBy'] }
        : { orderBy?: RolPermisoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolPermisoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolPermisoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RolPermiso model
   */
  readonly fields: RolPermisoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RolPermiso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RolPermisoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rol<T extends RolDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RolDefaultArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    permiso<T extends PermisoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PermisoDefaultArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RolPermiso model
   */
  interface RolPermisoFieldRefs {
    readonly rolId: FieldRef<"RolPermiso", 'Int'>
    readonly permisoId: FieldRef<"RolPermiso", 'Int'>
    readonly fechaCreacion: FieldRef<"RolPermiso", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"RolPermiso", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RolPermiso findUnique
   */
  export type RolPermisoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
    /**
     * Filter, which RolPermiso to fetch.
     */
    where: RolPermisoWhereUniqueInput
  }

  /**
   * RolPermiso findUniqueOrThrow
   */
  export type RolPermisoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
    /**
     * Filter, which RolPermiso to fetch.
     */
    where: RolPermisoWhereUniqueInput
  }

  /**
   * RolPermiso findFirst
   */
  export type RolPermisoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
    /**
     * Filter, which RolPermiso to fetch.
     */
    where?: RolPermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolPermisos to fetch.
     */
    orderBy?: RolPermisoOrderByWithRelationInput | RolPermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolPermisos.
     */
    cursor?: RolPermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolPermisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolPermisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolPermisos.
     */
    distinct?: RolPermisoScalarFieldEnum | RolPermisoScalarFieldEnum[]
  }

  /**
   * RolPermiso findFirstOrThrow
   */
  export type RolPermisoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
    /**
     * Filter, which RolPermiso to fetch.
     */
    where?: RolPermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolPermisos to fetch.
     */
    orderBy?: RolPermisoOrderByWithRelationInput | RolPermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolPermisos.
     */
    cursor?: RolPermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolPermisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolPermisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolPermisos.
     */
    distinct?: RolPermisoScalarFieldEnum | RolPermisoScalarFieldEnum[]
  }

  /**
   * RolPermiso findMany
   */
  export type RolPermisoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
    /**
     * Filter, which RolPermisos to fetch.
     */
    where?: RolPermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolPermisos to fetch.
     */
    orderBy?: RolPermisoOrderByWithRelationInput | RolPermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RolPermisos.
     */
    cursor?: RolPermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolPermisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolPermisos.
     */
    skip?: number
    distinct?: RolPermisoScalarFieldEnum | RolPermisoScalarFieldEnum[]
  }

  /**
   * RolPermiso create
   */
  export type RolPermisoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
    /**
     * The data needed to create a RolPermiso.
     */
    data: XOR<RolPermisoCreateInput, RolPermisoUncheckedCreateInput>
  }

  /**
   * RolPermiso createMany
   */
  export type RolPermisoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RolPermisos.
     */
    data: RolPermisoCreateManyInput | RolPermisoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RolPermiso createManyAndReturn
   */
  export type RolPermisoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * The data used to create many RolPermisos.
     */
    data: RolPermisoCreateManyInput | RolPermisoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RolPermiso update
   */
  export type RolPermisoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
    /**
     * The data needed to update a RolPermiso.
     */
    data: XOR<RolPermisoUpdateInput, RolPermisoUncheckedUpdateInput>
    /**
     * Choose, which RolPermiso to update.
     */
    where: RolPermisoWhereUniqueInput
  }

  /**
   * RolPermiso updateMany
   */
  export type RolPermisoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RolPermisos.
     */
    data: XOR<RolPermisoUpdateManyMutationInput, RolPermisoUncheckedUpdateManyInput>
    /**
     * Filter which RolPermisos to update
     */
    where?: RolPermisoWhereInput
    /**
     * Limit how many RolPermisos to update.
     */
    limit?: number
  }

  /**
   * RolPermiso updateManyAndReturn
   */
  export type RolPermisoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * The data used to update RolPermisos.
     */
    data: XOR<RolPermisoUpdateManyMutationInput, RolPermisoUncheckedUpdateManyInput>
    /**
     * Filter which RolPermisos to update
     */
    where?: RolPermisoWhereInput
    /**
     * Limit how many RolPermisos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RolPermiso upsert
   */
  export type RolPermisoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
    /**
     * The filter to search for the RolPermiso to update in case it exists.
     */
    where: RolPermisoWhereUniqueInput
    /**
     * In case the RolPermiso found by the `where` argument doesn't exist, create a new RolPermiso with this data.
     */
    create: XOR<RolPermisoCreateInput, RolPermisoUncheckedCreateInput>
    /**
     * In case the RolPermiso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RolPermisoUpdateInput, RolPermisoUncheckedUpdateInput>
  }

  /**
   * RolPermiso delete
   */
  export type RolPermisoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
    /**
     * Filter which RolPermiso to delete.
     */
    where: RolPermisoWhereUniqueInput
  }

  /**
   * RolPermiso deleteMany
   */
  export type RolPermisoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolPermisos to delete
     */
    where?: RolPermisoWhereInput
    /**
     * Limit how many RolPermisos to delete.
     */
    limit?: number
  }

  /**
   * RolPermiso without action
   */
  export type RolPermisoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
  }


  /**
   * Model Permiso
   */

  export type AggregatePermiso = {
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  export type PermisoAvgAggregateOutputType = {
    id: number | null
  }

  export type PermisoSumAggregateOutputType = {
    id: number | null
  }

  export type PermisoMinAggregateOutputType = {
    id: number | null
    sgeNombre: $Enums.SgeNombre | null
    nombre: string | null
    rubro: string | null
    incluido: boolean | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type PermisoMaxAggregateOutputType = {
    id: number | null
    sgeNombre: $Enums.SgeNombre | null
    nombre: string | null
    rubro: string | null
    incluido: boolean | null
    fechaCreacion: Date | null
    fechaModificacion: Date | null
    usuarioCreadorId: string | null
    usuarioModificadorId: string | null
  }

  export type PermisoCountAggregateOutputType = {
    id: number
    sgeNombre: number
    nombre: number
    rubro: number
    incluido: number
    fechaCreacion: number
    fechaModificacion: number
    usuarioCreadorId: number
    usuarioModificadorId: number
    _all: number
  }


  export type PermisoAvgAggregateInputType = {
    id?: true
  }

  export type PermisoSumAggregateInputType = {
    id?: true
  }

  export type PermisoMinAggregateInputType = {
    id?: true
    sgeNombre?: true
    nombre?: true
    rubro?: true
    incluido?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type PermisoMaxAggregateInputType = {
    id?: true
    sgeNombre?: true
    nombre?: true
    rubro?: true
    incluido?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
  }

  export type PermisoCountAggregateInputType = {
    id?: true
    sgeNombre?: true
    nombre?: true
    rubro?: true
    incluido?: true
    fechaCreacion?: true
    fechaModificacion?: true
    usuarioCreadorId?: true
    usuarioModificadorId?: true
    _all?: true
  }

  export type PermisoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permiso to aggregate.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permisos
    **/
    _count?: true | PermisoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermisoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermisoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermisoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermisoMaxAggregateInputType
  }

  export type GetPermisoAggregateType<T extends PermisoAggregateArgs> = {
        [P in keyof T & keyof AggregatePermiso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermiso[P]>
      : GetScalarType<T[P], AggregatePermiso[P]>
  }




  export type PermisoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoWhereInput
    orderBy?: PermisoOrderByWithAggregationInput | PermisoOrderByWithAggregationInput[]
    by: PermisoScalarFieldEnum[] | PermisoScalarFieldEnum
    having?: PermisoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermisoCountAggregateInputType | true
    _avg?: PermisoAvgAggregateInputType
    _sum?: PermisoSumAggregateInputType
    _min?: PermisoMinAggregateInputType
    _max?: PermisoMaxAggregateInputType
  }

  export type PermisoGroupByOutputType = {
    id: number
    sgeNombre: $Enums.SgeNombre
    nombre: string
    rubro: string
    incluido: boolean
    fechaCreacion: Date
    fechaModificacion: Date
    usuarioCreadorId: string
    usuarioModificadorId: string
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  type GetPermisoGroupByPayload<T extends PermisoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermisoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermisoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermisoGroupByOutputType[P]>
            : GetScalarType<T[P], PermisoGroupByOutputType[P]>
        }
      >
    >


  export type PermisoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sgeNombre?: boolean
    nombre?: boolean
    rubro?: boolean
    incluido?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
    rolPermiso?: boolean | Permiso$rolPermisoArgs<ExtArgs>
    _count?: boolean | PermisoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sgeNombre?: boolean
    nombre?: boolean
    rubro?: boolean
    incluido?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sgeNombre?: boolean
    nombre?: boolean
    rubro?: boolean
    incluido?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectScalar = {
    id?: boolean
    sgeNombre?: boolean
    nombre?: boolean
    rubro?: boolean
    incluido?: boolean
    fechaCreacion?: boolean
    fechaModificacion?: boolean
    usuarioCreadorId?: boolean
    usuarioModificadorId?: boolean
  }

  export type PermisoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sgeNombre" | "nombre" | "rubro" | "incluido" | "fechaCreacion" | "fechaModificacion" | "usuarioCreadorId" | "usuarioModificadorId", ExtArgs["result"]["permiso"]>
  export type PermisoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rolPermiso?: boolean | Permiso$rolPermisoArgs<ExtArgs>
    _count?: boolean | PermisoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PermisoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PermisoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PermisoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permiso"
    objects: {
      rolPermiso: Prisma.$RolPermisoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      sgeNombre: $Enums.SgeNombre
      nombre: string
      rubro: string
      incluido: boolean
      fechaCreacion: Date
      fechaModificacion: Date
      usuarioCreadorId: string
      usuarioModificadorId: string
    }, ExtArgs["result"]["permiso"]>
    composites: {}
  }

  type PermisoGetPayload<S extends boolean | null | undefined | PermisoDefaultArgs> = $Result.GetResult<Prisma.$PermisoPayload, S>

  type PermisoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermisoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermisoCountAggregateInputType | true
    }

  export interface PermisoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permiso'], meta: { name: 'Permiso' } }
    /**
     * Find zero or one Permiso that matches the filter.
     * @param {PermisoFindUniqueArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermisoFindUniqueArgs>(args: SelectSubset<T, PermisoFindUniqueArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permiso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermisoFindUniqueOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermisoFindUniqueOrThrowArgs>(args: SelectSubset<T, PermisoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindFirstArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermisoFindFirstArgs>(args?: SelectSubset<T, PermisoFindFirstArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindFirstOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermisoFindFirstOrThrowArgs>(args?: SelectSubset<T, PermisoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permisos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permisos
     * const permisos = await prisma.permiso.findMany()
     * 
     * // Get first 10 Permisos
     * const permisos = await prisma.permiso.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permisoWithIdOnly = await prisma.permiso.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermisoFindManyArgs>(args?: SelectSubset<T, PermisoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permiso.
     * @param {PermisoCreateArgs} args - Arguments to create a Permiso.
     * @example
     * // Create one Permiso
     * const Permiso = await prisma.permiso.create({
     *   data: {
     *     // ... data to create a Permiso
     *   }
     * })
     * 
     */
    create<T extends PermisoCreateArgs>(args: SelectSubset<T, PermisoCreateArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permisos.
     * @param {PermisoCreateManyArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermisoCreateManyArgs>(args?: SelectSubset<T, PermisoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permisos and returns the data saved in the database.
     * @param {PermisoCreateManyAndReturnArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permisos and only return the `id`
     * const permisoWithIdOnly = await prisma.permiso.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermisoCreateManyAndReturnArgs>(args?: SelectSubset<T, PermisoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permiso.
     * @param {PermisoDeleteArgs} args - Arguments to delete one Permiso.
     * @example
     * // Delete one Permiso
     * const Permiso = await prisma.permiso.delete({
     *   where: {
     *     // ... filter to delete one Permiso
     *   }
     * })
     * 
     */
    delete<T extends PermisoDeleteArgs>(args: SelectSubset<T, PermisoDeleteArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permiso.
     * @param {PermisoUpdateArgs} args - Arguments to update one Permiso.
     * @example
     * // Update one Permiso
     * const permiso = await prisma.permiso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermisoUpdateArgs>(args: SelectSubset<T, PermisoUpdateArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permisos.
     * @param {PermisoDeleteManyArgs} args - Arguments to filter Permisos to delete.
     * @example
     * // Delete a few Permisos
     * const { count } = await prisma.permiso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermisoDeleteManyArgs>(args?: SelectSubset<T, PermisoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermisoUpdateManyArgs>(args: SelectSubset<T, PermisoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos and returns the data updated in the database.
     * @param {PermisoUpdateManyAndReturnArgs} args - Arguments to update many Permisos.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permisos and only return the `id`
     * const permisoWithIdOnly = await prisma.permiso.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermisoUpdateManyAndReturnArgs>(args: SelectSubset<T, PermisoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permiso.
     * @param {PermisoUpsertArgs} args - Arguments to update or create a Permiso.
     * @example
     * // Update or create a Permiso
     * const permiso = await prisma.permiso.upsert({
     *   create: {
     *     // ... data to create a Permiso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permiso we want to update
     *   }
     * })
     */
    upsert<T extends PermisoUpsertArgs>(args: SelectSubset<T, PermisoUpsertArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoCountArgs} args - Arguments to filter Permisos to count.
     * @example
     * // Count the number of Permisos
     * const count = await prisma.permiso.count({
     *   where: {
     *     // ... the filter for the Permisos we want to count
     *   }
     * })
    **/
    count<T extends PermisoCountArgs>(
      args?: Subset<T, PermisoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermisoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermisoAggregateArgs>(args: Subset<T, PermisoAggregateArgs>): Prisma.PrismaPromise<GetPermisoAggregateType<T>>

    /**
     * Group by Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermisoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermisoGroupByArgs['orderBy'] }
        : { orderBy?: PermisoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermisoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermisoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permiso model
   */
  readonly fields: PermisoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permiso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermisoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rolPermiso<T extends Permiso$rolPermisoArgs<ExtArgs> = {}>(args?: Subset<T, Permiso$rolPermisoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permiso model
   */
  interface PermisoFieldRefs {
    readonly id: FieldRef<"Permiso", 'Int'>
    readonly sgeNombre: FieldRef<"Permiso", 'SgeNombre'>
    readonly nombre: FieldRef<"Permiso", 'String'>
    readonly rubro: FieldRef<"Permiso", 'String'>
    readonly incluido: FieldRef<"Permiso", 'Boolean'>
    readonly fechaCreacion: FieldRef<"Permiso", 'DateTime'>
    readonly fechaModificacion: FieldRef<"Permiso", 'DateTime'>
    readonly usuarioCreadorId: FieldRef<"Permiso", 'String'>
    readonly usuarioModificadorId: FieldRef<"Permiso", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Permiso findUnique
   */
  export type PermisoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso findUniqueOrThrow
   */
  export type PermisoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso findFirst
   */
  export type PermisoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso findFirstOrThrow
   */
  export type PermisoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso findMany
   */
  export type PermisoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permisos to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso create
   */
  export type PermisoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The data needed to create a Permiso.
     */
    data: XOR<PermisoCreateInput, PermisoUncheckedCreateInput>
  }

  /**
   * Permiso createMany
   */
  export type PermisoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permisos.
     */
    data: PermisoCreateManyInput | PermisoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permiso createManyAndReturn
   */
  export type PermisoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * The data used to create many Permisos.
     */
    data: PermisoCreateManyInput | PermisoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permiso update
   */
  export type PermisoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The data needed to update a Permiso.
     */
    data: XOR<PermisoUpdateInput, PermisoUncheckedUpdateInput>
    /**
     * Choose, which Permiso to update.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso updateMany
   */
  export type PermisoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permisos.
     */
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyInput>
    /**
     * Filter which Permisos to update
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to update.
     */
    limit?: number
  }

  /**
   * Permiso updateManyAndReturn
   */
  export type PermisoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * The data used to update Permisos.
     */
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyInput>
    /**
     * Filter which Permisos to update
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to update.
     */
    limit?: number
  }

  /**
   * Permiso upsert
   */
  export type PermisoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The filter to search for the Permiso to update in case it exists.
     */
    where: PermisoWhereUniqueInput
    /**
     * In case the Permiso found by the `where` argument doesn't exist, create a new Permiso with this data.
     */
    create: XOR<PermisoCreateInput, PermisoUncheckedCreateInput>
    /**
     * In case the Permiso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermisoUpdateInput, PermisoUncheckedUpdateInput>
  }

  /**
   * Permiso delete
   */
  export type PermisoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter which Permiso to delete.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso deleteMany
   */
  export type PermisoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permisos to delete
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to delete.
     */
    limit?: number
  }

  /**
   * Permiso.rolPermiso
   */
  export type Permiso$rolPermisoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolPermiso
     */
    select?: RolPermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolPermiso
     */
    omit?: RolPermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolPermisoInclude<ExtArgs> | null
    where?: RolPermisoWhereInput
    orderBy?: RolPermisoOrderByWithRelationInput | RolPermisoOrderByWithRelationInput[]
    cursor?: RolPermisoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolPermisoScalarFieldEnum | RolPermisoScalarFieldEnum[]
  }

  /**
   * Permiso without action
   */
  export type PermisoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
  }


  /**
   * Model Provincia
   */

  export type AggregateProvincia = {
    _count: ProvinciaCountAggregateOutputType | null
    _min: ProvinciaMinAggregateOutputType | null
    _max: ProvinciaMaxAggregateOutputType | null
  }

  export type ProvinciaMinAggregateOutputType = {
    iso: string | null
    nombre: string | null
    paisIso: string | null
  }

  export type ProvinciaMaxAggregateOutputType = {
    iso: string | null
    nombre: string | null
    paisIso: string | null
  }

  export type ProvinciaCountAggregateOutputType = {
    iso: number
    nombre: number
    paisIso: number
    _all: number
  }


  export type ProvinciaMinAggregateInputType = {
    iso?: true
    nombre?: true
    paisIso?: true
  }

  export type ProvinciaMaxAggregateInputType = {
    iso?: true
    nombre?: true
    paisIso?: true
  }

  export type ProvinciaCountAggregateInputType = {
    iso?: true
    nombre?: true
    paisIso?: true
    _all?: true
  }

  export type ProvinciaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Provincia to aggregate.
     */
    where?: ProvinciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provincias to fetch.
     */
    orderBy?: ProvinciaOrderByWithRelationInput | ProvinciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProvinciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provincias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provincias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Provincias
    **/
    _count?: true | ProvinciaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProvinciaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProvinciaMaxAggregateInputType
  }

  export type GetProvinciaAggregateType<T extends ProvinciaAggregateArgs> = {
        [P in keyof T & keyof AggregateProvincia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvincia[P]>
      : GetScalarType<T[P], AggregateProvincia[P]>
  }




  export type ProvinciaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProvinciaWhereInput
    orderBy?: ProvinciaOrderByWithAggregationInput | ProvinciaOrderByWithAggregationInput[]
    by: ProvinciaScalarFieldEnum[] | ProvinciaScalarFieldEnum
    having?: ProvinciaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProvinciaCountAggregateInputType | true
    _min?: ProvinciaMinAggregateInputType
    _max?: ProvinciaMaxAggregateInputType
  }

  export type ProvinciaGroupByOutputType = {
    iso: string
    nombre: string
    paisIso: string
    _count: ProvinciaCountAggregateOutputType | null
    _min: ProvinciaMinAggregateOutputType | null
    _max: ProvinciaMaxAggregateOutputType | null
  }

  type GetProvinciaGroupByPayload<T extends ProvinciaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProvinciaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProvinciaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProvinciaGroupByOutputType[P]>
            : GetScalarType<T[P], ProvinciaGroupByOutputType[P]>
        }
      >
    >


  export type ProvinciaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    iso?: boolean
    nombre?: boolean
    paisIso?: boolean
    pais?: boolean | PaisDefaultArgs<ExtArgs>
    usuarios?: boolean | Provincia$usuariosArgs<ExtArgs>
    _count?: boolean | ProvinciaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provincia"]>

  export type ProvinciaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    iso?: boolean
    nombre?: boolean
    paisIso?: boolean
    pais?: boolean | PaisDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provincia"]>

  export type ProvinciaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    iso?: boolean
    nombre?: boolean
    paisIso?: boolean
    pais?: boolean | PaisDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provincia"]>

  export type ProvinciaSelectScalar = {
    iso?: boolean
    nombre?: boolean
    paisIso?: boolean
  }

  export type ProvinciaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"iso" | "nombre" | "paisIso", ExtArgs["result"]["provincia"]>
  export type ProvinciaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pais?: boolean | PaisDefaultArgs<ExtArgs>
    usuarios?: boolean | Provincia$usuariosArgs<ExtArgs>
    _count?: boolean | ProvinciaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProvinciaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pais?: boolean | PaisDefaultArgs<ExtArgs>
  }
  export type ProvinciaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pais?: boolean | PaisDefaultArgs<ExtArgs>
  }

  export type $ProvinciaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Provincia"
    objects: {
      pais: Prisma.$PaisPayload<ExtArgs>
      usuarios: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      iso: string
      nombre: string
      paisIso: string
    }, ExtArgs["result"]["provincia"]>
    composites: {}
  }

  type ProvinciaGetPayload<S extends boolean | null | undefined | ProvinciaDefaultArgs> = $Result.GetResult<Prisma.$ProvinciaPayload, S>

  type ProvinciaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProvinciaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProvinciaCountAggregateInputType | true
    }

  export interface ProvinciaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Provincia'], meta: { name: 'Provincia' } }
    /**
     * Find zero or one Provincia that matches the filter.
     * @param {ProvinciaFindUniqueArgs} args - Arguments to find a Provincia
     * @example
     * // Get one Provincia
     * const provincia = await prisma.provincia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProvinciaFindUniqueArgs>(args: SelectSubset<T, ProvinciaFindUniqueArgs<ExtArgs>>): Prisma__ProvinciaClient<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Provincia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProvinciaFindUniqueOrThrowArgs} args - Arguments to find a Provincia
     * @example
     * // Get one Provincia
     * const provincia = await prisma.provincia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProvinciaFindUniqueOrThrowArgs>(args: SelectSubset<T, ProvinciaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProvinciaClient<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provincia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciaFindFirstArgs} args - Arguments to find a Provincia
     * @example
     * // Get one Provincia
     * const provincia = await prisma.provincia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProvinciaFindFirstArgs>(args?: SelectSubset<T, ProvinciaFindFirstArgs<ExtArgs>>): Prisma__ProvinciaClient<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provincia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciaFindFirstOrThrowArgs} args - Arguments to find a Provincia
     * @example
     * // Get one Provincia
     * const provincia = await prisma.provincia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProvinciaFindFirstOrThrowArgs>(args?: SelectSubset<T, ProvinciaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProvinciaClient<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Provincias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Provincias
     * const provincias = await prisma.provincia.findMany()
     * 
     * // Get first 10 Provincias
     * const provincias = await prisma.provincia.findMany({ take: 10 })
     * 
     * // Only select the `iso`
     * const provinciaWithIsoOnly = await prisma.provincia.findMany({ select: { iso: true } })
     * 
     */
    findMany<T extends ProvinciaFindManyArgs>(args?: SelectSubset<T, ProvinciaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Provincia.
     * @param {ProvinciaCreateArgs} args - Arguments to create a Provincia.
     * @example
     * // Create one Provincia
     * const Provincia = await prisma.provincia.create({
     *   data: {
     *     // ... data to create a Provincia
     *   }
     * })
     * 
     */
    create<T extends ProvinciaCreateArgs>(args: SelectSubset<T, ProvinciaCreateArgs<ExtArgs>>): Prisma__ProvinciaClient<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Provincias.
     * @param {ProvinciaCreateManyArgs} args - Arguments to create many Provincias.
     * @example
     * // Create many Provincias
     * const provincia = await prisma.provincia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProvinciaCreateManyArgs>(args?: SelectSubset<T, ProvinciaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Provincias and returns the data saved in the database.
     * @param {ProvinciaCreateManyAndReturnArgs} args - Arguments to create many Provincias.
     * @example
     * // Create many Provincias
     * const provincia = await prisma.provincia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Provincias and only return the `iso`
     * const provinciaWithIsoOnly = await prisma.provincia.createManyAndReturn({
     *   select: { iso: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProvinciaCreateManyAndReturnArgs>(args?: SelectSubset<T, ProvinciaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Provincia.
     * @param {ProvinciaDeleteArgs} args - Arguments to delete one Provincia.
     * @example
     * // Delete one Provincia
     * const Provincia = await prisma.provincia.delete({
     *   where: {
     *     // ... filter to delete one Provincia
     *   }
     * })
     * 
     */
    delete<T extends ProvinciaDeleteArgs>(args: SelectSubset<T, ProvinciaDeleteArgs<ExtArgs>>): Prisma__ProvinciaClient<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Provincia.
     * @param {ProvinciaUpdateArgs} args - Arguments to update one Provincia.
     * @example
     * // Update one Provincia
     * const provincia = await prisma.provincia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProvinciaUpdateArgs>(args: SelectSubset<T, ProvinciaUpdateArgs<ExtArgs>>): Prisma__ProvinciaClient<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Provincias.
     * @param {ProvinciaDeleteManyArgs} args - Arguments to filter Provincias to delete.
     * @example
     * // Delete a few Provincias
     * const { count } = await prisma.provincia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProvinciaDeleteManyArgs>(args?: SelectSubset<T, ProvinciaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provincias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Provincias
     * const provincia = await prisma.provincia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProvinciaUpdateManyArgs>(args: SelectSubset<T, ProvinciaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provincias and returns the data updated in the database.
     * @param {ProvinciaUpdateManyAndReturnArgs} args - Arguments to update many Provincias.
     * @example
     * // Update many Provincias
     * const provincia = await prisma.provincia.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Provincias and only return the `iso`
     * const provinciaWithIsoOnly = await prisma.provincia.updateManyAndReturn({
     *   select: { iso: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProvinciaUpdateManyAndReturnArgs>(args: SelectSubset<T, ProvinciaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Provincia.
     * @param {ProvinciaUpsertArgs} args - Arguments to update or create a Provincia.
     * @example
     * // Update or create a Provincia
     * const provincia = await prisma.provincia.upsert({
     *   create: {
     *     // ... data to create a Provincia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Provincia we want to update
     *   }
     * })
     */
    upsert<T extends ProvinciaUpsertArgs>(args: SelectSubset<T, ProvinciaUpsertArgs<ExtArgs>>): Prisma__ProvinciaClient<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Provincias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciaCountArgs} args - Arguments to filter Provincias to count.
     * @example
     * // Count the number of Provincias
     * const count = await prisma.provincia.count({
     *   where: {
     *     // ... the filter for the Provincias we want to count
     *   }
     * })
    **/
    count<T extends ProvinciaCountArgs>(
      args?: Subset<T, ProvinciaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProvinciaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Provincia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProvinciaAggregateArgs>(args: Subset<T, ProvinciaAggregateArgs>): Prisma.PrismaPromise<GetProvinciaAggregateType<T>>

    /**
     * Group by Provincia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProvinciaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProvinciaGroupByArgs['orderBy'] }
        : { orderBy?: ProvinciaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProvinciaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvinciaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Provincia model
   */
  readonly fields: ProvinciaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Provincia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProvinciaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pais<T extends PaisDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaisDefaultArgs<ExtArgs>>): Prisma__PaisClient<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends Provincia$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Provincia$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Provincia model
   */
  interface ProvinciaFieldRefs {
    readonly iso: FieldRef<"Provincia", 'String'>
    readonly nombre: FieldRef<"Provincia", 'String'>
    readonly paisIso: FieldRef<"Provincia", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Provincia findUnique
   */
  export type ProvinciaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
    /**
     * Filter, which Provincia to fetch.
     */
    where: ProvinciaWhereUniqueInput
  }

  /**
   * Provincia findUniqueOrThrow
   */
  export type ProvinciaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
    /**
     * Filter, which Provincia to fetch.
     */
    where: ProvinciaWhereUniqueInput
  }

  /**
   * Provincia findFirst
   */
  export type ProvinciaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
    /**
     * Filter, which Provincia to fetch.
     */
    where?: ProvinciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provincias to fetch.
     */
    orderBy?: ProvinciaOrderByWithRelationInput | ProvinciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Provincias.
     */
    cursor?: ProvinciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provincias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provincias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Provincias.
     */
    distinct?: ProvinciaScalarFieldEnum | ProvinciaScalarFieldEnum[]
  }

  /**
   * Provincia findFirstOrThrow
   */
  export type ProvinciaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
    /**
     * Filter, which Provincia to fetch.
     */
    where?: ProvinciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provincias to fetch.
     */
    orderBy?: ProvinciaOrderByWithRelationInput | ProvinciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Provincias.
     */
    cursor?: ProvinciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provincias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provincias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Provincias.
     */
    distinct?: ProvinciaScalarFieldEnum | ProvinciaScalarFieldEnum[]
  }

  /**
   * Provincia findMany
   */
  export type ProvinciaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
    /**
     * Filter, which Provincias to fetch.
     */
    where?: ProvinciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provincias to fetch.
     */
    orderBy?: ProvinciaOrderByWithRelationInput | ProvinciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Provincias.
     */
    cursor?: ProvinciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provincias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provincias.
     */
    skip?: number
    distinct?: ProvinciaScalarFieldEnum | ProvinciaScalarFieldEnum[]
  }

  /**
   * Provincia create
   */
  export type ProvinciaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
    /**
     * The data needed to create a Provincia.
     */
    data: XOR<ProvinciaCreateInput, ProvinciaUncheckedCreateInput>
  }

  /**
   * Provincia createMany
   */
  export type ProvinciaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Provincias.
     */
    data: ProvinciaCreateManyInput | ProvinciaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Provincia createManyAndReturn
   */
  export type ProvinciaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * The data used to create many Provincias.
     */
    data: ProvinciaCreateManyInput | ProvinciaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Provincia update
   */
  export type ProvinciaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
    /**
     * The data needed to update a Provincia.
     */
    data: XOR<ProvinciaUpdateInput, ProvinciaUncheckedUpdateInput>
    /**
     * Choose, which Provincia to update.
     */
    where: ProvinciaWhereUniqueInput
  }

  /**
   * Provincia updateMany
   */
  export type ProvinciaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Provincias.
     */
    data: XOR<ProvinciaUpdateManyMutationInput, ProvinciaUncheckedUpdateManyInput>
    /**
     * Filter which Provincias to update
     */
    where?: ProvinciaWhereInput
    /**
     * Limit how many Provincias to update.
     */
    limit?: number
  }

  /**
   * Provincia updateManyAndReturn
   */
  export type ProvinciaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * The data used to update Provincias.
     */
    data: XOR<ProvinciaUpdateManyMutationInput, ProvinciaUncheckedUpdateManyInput>
    /**
     * Filter which Provincias to update
     */
    where?: ProvinciaWhereInput
    /**
     * Limit how many Provincias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Provincia upsert
   */
  export type ProvinciaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
    /**
     * The filter to search for the Provincia to update in case it exists.
     */
    where: ProvinciaWhereUniqueInput
    /**
     * In case the Provincia found by the `where` argument doesn't exist, create a new Provincia with this data.
     */
    create: XOR<ProvinciaCreateInput, ProvinciaUncheckedCreateInput>
    /**
     * In case the Provincia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProvinciaUpdateInput, ProvinciaUncheckedUpdateInput>
  }

  /**
   * Provincia delete
   */
  export type ProvinciaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
    /**
     * Filter which Provincia to delete.
     */
    where: ProvinciaWhereUniqueInput
  }

  /**
   * Provincia deleteMany
   */
  export type ProvinciaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Provincias to delete
     */
    where?: ProvinciaWhereInput
    /**
     * Limit how many Provincias to delete.
     */
    limit?: number
  }

  /**
   * Provincia.usuarios
   */
  export type Provincia$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Provincia without action
   */
  export type ProvinciaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
  }


  /**
   * Model Pais
   */

  export type AggregatePais = {
    _count: PaisCountAggregateOutputType | null
    _avg: PaisAvgAggregateOutputType | null
    _sum: PaisSumAggregateOutputType | null
    _min: PaisMinAggregateOutputType | null
    _max: PaisMaxAggregateOutputType | null
  }

  export type PaisAvgAggregateOutputType = {
    codigoNumerico: number | null
  }

  export type PaisSumAggregateOutputType = {
    codigoNumerico: number | null
  }

  export type PaisMinAggregateOutputType = {
    iso: string | null
    nombreEspanol: string | null
    nombreIngles: string | null
    iso3: string | null
    codigoNumerico: number | null
  }

  export type PaisMaxAggregateOutputType = {
    iso: string | null
    nombreEspanol: string | null
    nombreIngles: string | null
    iso3: string | null
    codigoNumerico: number | null
  }

  export type PaisCountAggregateOutputType = {
    iso: number
    nombreEspanol: number
    nombreIngles: number
    iso3: number
    codigoNumerico: number
    _all: number
  }


  export type PaisAvgAggregateInputType = {
    codigoNumerico?: true
  }

  export type PaisSumAggregateInputType = {
    codigoNumerico?: true
  }

  export type PaisMinAggregateInputType = {
    iso?: true
    nombreEspanol?: true
    nombreIngles?: true
    iso3?: true
    codigoNumerico?: true
  }

  export type PaisMaxAggregateInputType = {
    iso?: true
    nombreEspanol?: true
    nombreIngles?: true
    iso3?: true
    codigoNumerico?: true
  }

  export type PaisCountAggregateInputType = {
    iso?: true
    nombreEspanol?: true
    nombreIngles?: true
    iso3?: true
    codigoNumerico?: true
    _all?: true
  }

  export type PaisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pais to aggregate.
     */
    where?: PaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pais to fetch.
     */
    orderBy?: PaisOrderByWithRelationInput | PaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pais
    **/
    _count?: true | PaisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaisMaxAggregateInputType
  }

  export type GetPaisAggregateType<T extends PaisAggregateArgs> = {
        [P in keyof T & keyof AggregatePais]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePais[P]>
      : GetScalarType<T[P], AggregatePais[P]>
  }




  export type PaisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaisWhereInput
    orderBy?: PaisOrderByWithAggregationInput | PaisOrderByWithAggregationInput[]
    by: PaisScalarFieldEnum[] | PaisScalarFieldEnum
    having?: PaisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaisCountAggregateInputType | true
    _avg?: PaisAvgAggregateInputType
    _sum?: PaisSumAggregateInputType
    _min?: PaisMinAggregateInputType
    _max?: PaisMaxAggregateInputType
  }

  export type PaisGroupByOutputType = {
    iso: string
    nombreEspanol: string
    nombreIngles: string
    iso3: string
    codigoNumerico: number
    _count: PaisCountAggregateOutputType | null
    _avg: PaisAvgAggregateOutputType | null
    _sum: PaisSumAggregateOutputType | null
    _min: PaisMinAggregateOutputType | null
    _max: PaisMaxAggregateOutputType | null
  }

  type GetPaisGroupByPayload<T extends PaisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaisGroupByOutputType[P]>
            : GetScalarType<T[P], PaisGroupByOutputType[P]>
        }
      >
    >


  export type PaisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    iso?: boolean
    nombreEspanol?: boolean
    nombreIngles?: boolean
    iso3?: boolean
    codigoNumerico?: boolean
    usuarios?: boolean | Pais$usuariosArgs<ExtArgs>
    provincias?: boolean | Pais$provinciasArgs<ExtArgs>
    _count?: boolean | PaisCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pais"]>

  export type PaisSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    iso?: boolean
    nombreEspanol?: boolean
    nombreIngles?: boolean
    iso3?: boolean
    codigoNumerico?: boolean
  }, ExtArgs["result"]["pais"]>

  export type PaisSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    iso?: boolean
    nombreEspanol?: boolean
    nombreIngles?: boolean
    iso3?: boolean
    codigoNumerico?: boolean
  }, ExtArgs["result"]["pais"]>

  export type PaisSelectScalar = {
    iso?: boolean
    nombreEspanol?: boolean
    nombreIngles?: boolean
    iso3?: boolean
    codigoNumerico?: boolean
  }

  export type PaisOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"iso" | "nombreEspanol" | "nombreIngles" | "iso3" | "codigoNumerico", ExtArgs["result"]["pais"]>
  export type PaisInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Pais$usuariosArgs<ExtArgs>
    provincias?: boolean | Pais$provinciasArgs<ExtArgs>
    _count?: boolean | PaisCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PaisIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PaisIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PaisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pais"
    objects: {
      usuarios: Prisma.$UserPayload<ExtArgs>[]
      provincias: Prisma.$ProvinciaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      iso: string
      nombreEspanol: string
      nombreIngles: string
      iso3: string
      codigoNumerico: number
    }, ExtArgs["result"]["pais"]>
    composites: {}
  }

  type PaisGetPayload<S extends boolean | null | undefined | PaisDefaultArgs> = $Result.GetResult<Prisma.$PaisPayload, S>

  type PaisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaisFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaisCountAggregateInputType | true
    }

  export interface PaisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pais'], meta: { name: 'Pais' } }
    /**
     * Find zero or one Pais that matches the filter.
     * @param {PaisFindUniqueArgs} args - Arguments to find a Pais
     * @example
     * // Get one Pais
     * const pais = await prisma.pais.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaisFindUniqueArgs>(args: SelectSubset<T, PaisFindUniqueArgs<ExtArgs>>): Prisma__PaisClient<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pais that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaisFindUniqueOrThrowArgs} args - Arguments to find a Pais
     * @example
     * // Get one Pais
     * const pais = await prisma.pais.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaisFindUniqueOrThrowArgs>(args: SelectSubset<T, PaisFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaisClient<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisFindFirstArgs} args - Arguments to find a Pais
     * @example
     * // Get one Pais
     * const pais = await prisma.pais.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaisFindFirstArgs>(args?: SelectSubset<T, PaisFindFirstArgs<ExtArgs>>): Prisma__PaisClient<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pais that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisFindFirstOrThrowArgs} args - Arguments to find a Pais
     * @example
     * // Get one Pais
     * const pais = await prisma.pais.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaisFindFirstOrThrowArgs>(args?: SelectSubset<T, PaisFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaisClient<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pais
     * const pais = await prisma.pais.findMany()
     * 
     * // Get first 10 Pais
     * const pais = await prisma.pais.findMany({ take: 10 })
     * 
     * // Only select the `iso`
     * const paisWithIsoOnly = await prisma.pais.findMany({ select: { iso: true } })
     * 
     */
    findMany<T extends PaisFindManyArgs>(args?: SelectSubset<T, PaisFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pais.
     * @param {PaisCreateArgs} args - Arguments to create a Pais.
     * @example
     * // Create one Pais
     * const Pais = await prisma.pais.create({
     *   data: {
     *     // ... data to create a Pais
     *   }
     * })
     * 
     */
    create<T extends PaisCreateArgs>(args: SelectSubset<T, PaisCreateArgs<ExtArgs>>): Prisma__PaisClient<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pais.
     * @param {PaisCreateManyArgs} args - Arguments to create many Pais.
     * @example
     * // Create many Pais
     * const pais = await prisma.pais.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaisCreateManyArgs>(args?: SelectSubset<T, PaisCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pais and returns the data saved in the database.
     * @param {PaisCreateManyAndReturnArgs} args - Arguments to create many Pais.
     * @example
     * // Create many Pais
     * const pais = await prisma.pais.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pais and only return the `iso`
     * const paisWithIsoOnly = await prisma.pais.createManyAndReturn({
     *   select: { iso: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaisCreateManyAndReturnArgs>(args?: SelectSubset<T, PaisCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pais.
     * @param {PaisDeleteArgs} args - Arguments to delete one Pais.
     * @example
     * // Delete one Pais
     * const Pais = await prisma.pais.delete({
     *   where: {
     *     // ... filter to delete one Pais
     *   }
     * })
     * 
     */
    delete<T extends PaisDeleteArgs>(args: SelectSubset<T, PaisDeleteArgs<ExtArgs>>): Prisma__PaisClient<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pais.
     * @param {PaisUpdateArgs} args - Arguments to update one Pais.
     * @example
     * // Update one Pais
     * const pais = await prisma.pais.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaisUpdateArgs>(args: SelectSubset<T, PaisUpdateArgs<ExtArgs>>): Prisma__PaisClient<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pais.
     * @param {PaisDeleteManyArgs} args - Arguments to filter Pais to delete.
     * @example
     * // Delete a few Pais
     * const { count } = await prisma.pais.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaisDeleteManyArgs>(args?: SelectSubset<T, PaisDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pais
     * const pais = await prisma.pais.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaisUpdateManyArgs>(args: SelectSubset<T, PaisUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pais and returns the data updated in the database.
     * @param {PaisUpdateManyAndReturnArgs} args - Arguments to update many Pais.
     * @example
     * // Update many Pais
     * const pais = await prisma.pais.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pais and only return the `iso`
     * const paisWithIsoOnly = await prisma.pais.updateManyAndReturn({
     *   select: { iso: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaisUpdateManyAndReturnArgs>(args: SelectSubset<T, PaisUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pais.
     * @param {PaisUpsertArgs} args - Arguments to update or create a Pais.
     * @example
     * // Update or create a Pais
     * const pais = await prisma.pais.upsert({
     *   create: {
     *     // ... data to create a Pais
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pais we want to update
     *   }
     * })
     */
    upsert<T extends PaisUpsertArgs>(args: SelectSubset<T, PaisUpsertArgs<ExtArgs>>): Prisma__PaisClient<$Result.GetResult<Prisma.$PaisPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisCountArgs} args - Arguments to filter Pais to count.
     * @example
     * // Count the number of Pais
     * const count = await prisma.pais.count({
     *   where: {
     *     // ... the filter for the Pais we want to count
     *   }
     * })
    **/
    count<T extends PaisCountArgs>(
      args?: Subset<T, PaisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaisAggregateArgs>(args: Subset<T, PaisAggregateArgs>): Prisma.PrismaPromise<GetPaisAggregateType<T>>

    /**
     * Group by Pais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaisGroupByArgs['orderBy'] }
        : { orderBy?: PaisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pais model
   */
  readonly fields: PaisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pais.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Pais$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Pais$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    provincias<T extends Pais$provinciasArgs<ExtArgs> = {}>(args?: Subset<T, Pais$provinciasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinciaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pais model
   */
  interface PaisFieldRefs {
    readonly iso: FieldRef<"Pais", 'String'>
    readonly nombreEspanol: FieldRef<"Pais", 'String'>
    readonly nombreIngles: FieldRef<"Pais", 'String'>
    readonly iso3: FieldRef<"Pais", 'String'>
    readonly codigoNumerico: FieldRef<"Pais", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Pais findUnique
   */
  export type PaisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisInclude<ExtArgs> | null
    /**
     * Filter, which Pais to fetch.
     */
    where: PaisWhereUniqueInput
  }

  /**
   * Pais findUniqueOrThrow
   */
  export type PaisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisInclude<ExtArgs> | null
    /**
     * Filter, which Pais to fetch.
     */
    where: PaisWhereUniqueInput
  }

  /**
   * Pais findFirst
   */
  export type PaisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisInclude<ExtArgs> | null
    /**
     * Filter, which Pais to fetch.
     */
    where?: PaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pais to fetch.
     */
    orderBy?: PaisOrderByWithRelationInput | PaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pais.
     */
    cursor?: PaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pais.
     */
    distinct?: PaisScalarFieldEnum | PaisScalarFieldEnum[]
  }

  /**
   * Pais findFirstOrThrow
   */
  export type PaisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisInclude<ExtArgs> | null
    /**
     * Filter, which Pais to fetch.
     */
    where?: PaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pais to fetch.
     */
    orderBy?: PaisOrderByWithRelationInput | PaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pais.
     */
    cursor?: PaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pais.
     */
    distinct?: PaisScalarFieldEnum | PaisScalarFieldEnum[]
  }

  /**
   * Pais findMany
   */
  export type PaisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisInclude<ExtArgs> | null
    /**
     * Filter, which Pais to fetch.
     */
    where?: PaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pais to fetch.
     */
    orderBy?: PaisOrderByWithRelationInput | PaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pais.
     */
    cursor?: PaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pais.
     */
    skip?: number
    distinct?: PaisScalarFieldEnum | PaisScalarFieldEnum[]
  }

  /**
   * Pais create
   */
  export type PaisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisInclude<ExtArgs> | null
    /**
     * The data needed to create a Pais.
     */
    data: XOR<PaisCreateInput, PaisUncheckedCreateInput>
  }

  /**
   * Pais createMany
   */
  export type PaisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pais.
     */
    data: PaisCreateManyInput | PaisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pais createManyAndReturn
   */
  export type PaisCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * The data used to create many Pais.
     */
    data: PaisCreateManyInput | PaisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pais update
   */
  export type PaisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisInclude<ExtArgs> | null
    /**
     * The data needed to update a Pais.
     */
    data: XOR<PaisUpdateInput, PaisUncheckedUpdateInput>
    /**
     * Choose, which Pais to update.
     */
    where: PaisWhereUniqueInput
  }

  /**
   * Pais updateMany
   */
  export type PaisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pais.
     */
    data: XOR<PaisUpdateManyMutationInput, PaisUncheckedUpdateManyInput>
    /**
     * Filter which Pais to update
     */
    where?: PaisWhereInput
    /**
     * Limit how many Pais to update.
     */
    limit?: number
  }

  /**
   * Pais updateManyAndReturn
   */
  export type PaisUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * The data used to update Pais.
     */
    data: XOR<PaisUpdateManyMutationInput, PaisUncheckedUpdateManyInput>
    /**
     * Filter which Pais to update
     */
    where?: PaisWhereInput
    /**
     * Limit how many Pais to update.
     */
    limit?: number
  }

  /**
   * Pais upsert
   */
  export type PaisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisInclude<ExtArgs> | null
    /**
     * The filter to search for the Pais to update in case it exists.
     */
    where: PaisWhereUniqueInput
    /**
     * In case the Pais found by the `where` argument doesn't exist, create a new Pais with this data.
     */
    create: XOR<PaisCreateInput, PaisUncheckedCreateInput>
    /**
     * In case the Pais was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaisUpdateInput, PaisUncheckedUpdateInput>
  }

  /**
   * Pais delete
   */
  export type PaisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisInclude<ExtArgs> | null
    /**
     * Filter which Pais to delete.
     */
    where: PaisWhereUniqueInput
  }

  /**
   * Pais deleteMany
   */
  export type PaisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pais to delete
     */
    where?: PaisWhereInput
    /**
     * Limit how many Pais to delete.
     */
    limit?: number
  }

  /**
   * Pais.usuarios
   */
  export type Pais$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Pais.provincias
   */
  export type Pais$provinciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincia
     */
    select?: ProvinciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provincia
     */
    omit?: ProvinciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciaInclude<ExtArgs> | null
    where?: ProvinciaWhereInput
    orderBy?: ProvinciaOrderByWithRelationInput | ProvinciaOrderByWithRelationInput[]
    cursor?: ProvinciaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProvinciaScalarFieldEnum | ProvinciaScalarFieldEnum[]
  }

  /**
   * Pais without action
   */
  export type PaisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pais
     */
    select?: PaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pais
     */
    omit?: PaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisInclude<ExtArgs> | null
  }


  /**
   * Model DocumentoTipo
   */

  export type AggregateDocumentoTipo = {
    _count: DocumentoTipoCountAggregateOutputType | null
    _avg: DocumentoTipoAvgAggregateOutputType | null
    _sum: DocumentoTipoSumAggregateOutputType | null
    _min: DocumentoTipoMinAggregateOutputType | null
    _max: DocumentoTipoMaxAggregateOutputType | null
  }

  export type DocumentoTipoAvgAggregateOutputType = {
    id: number | null
  }

  export type DocumentoTipoSumAggregateOutputType = {
    id: number | null
  }

  export type DocumentoTipoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type DocumentoTipoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type DocumentoTipoCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type DocumentoTipoAvgAggregateInputType = {
    id?: true
  }

  export type DocumentoTipoSumAggregateInputType = {
    id?: true
  }

  export type DocumentoTipoMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type DocumentoTipoMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type DocumentoTipoCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type DocumentoTipoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DocumentoTipo to aggregate.
     */
    where?: DocumentoTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoTipos to fetch.
     */
    orderBy?: DocumentoTipoOrderByWithRelationInput | DocumentoTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DocumentoTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DocumentoTipos
    **/
    _count?: true | DocumentoTipoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocumentoTipoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocumentoTipoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentoTipoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentoTipoMaxAggregateInputType
  }

  export type GetDocumentoTipoAggregateType<T extends DocumentoTipoAggregateArgs> = {
        [P in keyof T & keyof AggregateDocumentoTipo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocumentoTipo[P]>
      : GetScalarType<T[P], AggregateDocumentoTipo[P]>
  }




  export type DocumentoTipoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentoTipoWhereInput
    orderBy?: DocumentoTipoOrderByWithAggregationInput | DocumentoTipoOrderByWithAggregationInput[]
    by: DocumentoTipoScalarFieldEnum[] | DocumentoTipoScalarFieldEnum
    having?: DocumentoTipoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentoTipoCountAggregateInputType | true
    _avg?: DocumentoTipoAvgAggregateInputType
    _sum?: DocumentoTipoSumAggregateInputType
    _min?: DocumentoTipoMinAggregateInputType
    _max?: DocumentoTipoMaxAggregateInputType
  }

  export type DocumentoTipoGroupByOutputType = {
    id: number
    nombre: string
    _count: DocumentoTipoCountAggregateOutputType | null
    _avg: DocumentoTipoAvgAggregateOutputType | null
    _sum: DocumentoTipoSumAggregateOutputType | null
    _min: DocumentoTipoMinAggregateOutputType | null
    _max: DocumentoTipoMaxAggregateOutputType | null
  }

  type GetDocumentoTipoGroupByPayload<T extends DocumentoTipoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentoTipoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentoTipoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentoTipoGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentoTipoGroupByOutputType[P]>
        }
      >
    >


  export type DocumentoTipoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    usuarios?: boolean | DocumentoTipo$usuariosArgs<ExtArgs>
    _count?: boolean | DocumentoTipoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["documentoTipo"]>

  export type DocumentoTipoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["documentoTipo"]>

  export type DocumentoTipoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["documentoTipo"]>

  export type DocumentoTipoSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type DocumentoTipoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["documentoTipo"]>
  export type DocumentoTipoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | DocumentoTipo$usuariosArgs<ExtArgs>
    _count?: boolean | DocumentoTipoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DocumentoTipoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type DocumentoTipoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DocumentoTipoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DocumentoTipo"
    objects: {
      usuarios: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["documentoTipo"]>
    composites: {}
  }

  type DocumentoTipoGetPayload<S extends boolean | null | undefined | DocumentoTipoDefaultArgs> = $Result.GetResult<Prisma.$DocumentoTipoPayload, S>

  type DocumentoTipoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DocumentoTipoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DocumentoTipoCountAggregateInputType | true
    }

  export interface DocumentoTipoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DocumentoTipo'], meta: { name: 'DocumentoTipo' } }
    /**
     * Find zero or one DocumentoTipo that matches the filter.
     * @param {DocumentoTipoFindUniqueArgs} args - Arguments to find a DocumentoTipo
     * @example
     * // Get one DocumentoTipo
     * const documentoTipo = await prisma.documentoTipo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DocumentoTipoFindUniqueArgs>(args: SelectSubset<T, DocumentoTipoFindUniqueArgs<ExtArgs>>): Prisma__DocumentoTipoClient<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DocumentoTipo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DocumentoTipoFindUniqueOrThrowArgs} args - Arguments to find a DocumentoTipo
     * @example
     * // Get one DocumentoTipo
     * const documentoTipo = await prisma.documentoTipo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DocumentoTipoFindUniqueOrThrowArgs>(args: SelectSubset<T, DocumentoTipoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DocumentoTipoClient<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DocumentoTipo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoTipoFindFirstArgs} args - Arguments to find a DocumentoTipo
     * @example
     * // Get one DocumentoTipo
     * const documentoTipo = await prisma.documentoTipo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DocumentoTipoFindFirstArgs>(args?: SelectSubset<T, DocumentoTipoFindFirstArgs<ExtArgs>>): Prisma__DocumentoTipoClient<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DocumentoTipo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoTipoFindFirstOrThrowArgs} args - Arguments to find a DocumentoTipo
     * @example
     * // Get one DocumentoTipo
     * const documentoTipo = await prisma.documentoTipo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DocumentoTipoFindFirstOrThrowArgs>(args?: SelectSubset<T, DocumentoTipoFindFirstOrThrowArgs<ExtArgs>>): Prisma__DocumentoTipoClient<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DocumentoTipos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoTipoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DocumentoTipos
     * const documentoTipos = await prisma.documentoTipo.findMany()
     * 
     * // Get first 10 DocumentoTipos
     * const documentoTipos = await prisma.documentoTipo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const documentoTipoWithIdOnly = await prisma.documentoTipo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DocumentoTipoFindManyArgs>(args?: SelectSubset<T, DocumentoTipoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DocumentoTipo.
     * @param {DocumentoTipoCreateArgs} args - Arguments to create a DocumentoTipo.
     * @example
     * // Create one DocumentoTipo
     * const DocumentoTipo = await prisma.documentoTipo.create({
     *   data: {
     *     // ... data to create a DocumentoTipo
     *   }
     * })
     * 
     */
    create<T extends DocumentoTipoCreateArgs>(args: SelectSubset<T, DocumentoTipoCreateArgs<ExtArgs>>): Prisma__DocumentoTipoClient<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DocumentoTipos.
     * @param {DocumentoTipoCreateManyArgs} args - Arguments to create many DocumentoTipos.
     * @example
     * // Create many DocumentoTipos
     * const documentoTipo = await prisma.documentoTipo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DocumentoTipoCreateManyArgs>(args?: SelectSubset<T, DocumentoTipoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DocumentoTipos and returns the data saved in the database.
     * @param {DocumentoTipoCreateManyAndReturnArgs} args - Arguments to create many DocumentoTipos.
     * @example
     * // Create many DocumentoTipos
     * const documentoTipo = await prisma.documentoTipo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DocumentoTipos and only return the `id`
     * const documentoTipoWithIdOnly = await prisma.documentoTipo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DocumentoTipoCreateManyAndReturnArgs>(args?: SelectSubset<T, DocumentoTipoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DocumentoTipo.
     * @param {DocumentoTipoDeleteArgs} args - Arguments to delete one DocumentoTipo.
     * @example
     * // Delete one DocumentoTipo
     * const DocumentoTipo = await prisma.documentoTipo.delete({
     *   where: {
     *     // ... filter to delete one DocumentoTipo
     *   }
     * })
     * 
     */
    delete<T extends DocumentoTipoDeleteArgs>(args: SelectSubset<T, DocumentoTipoDeleteArgs<ExtArgs>>): Prisma__DocumentoTipoClient<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DocumentoTipo.
     * @param {DocumentoTipoUpdateArgs} args - Arguments to update one DocumentoTipo.
     * @example
     * // Update one DocumentoTipo
     * const documentoTipo = await prisma.documentoTipo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DocumentoTipoUpdateArgs>(args: SelectSubset<T, DocumentoTipoUpdateArgs<ExtArgs>>): Prisma__DocumentoTipoClient<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DocumentoTipos.
     * @param {DocumentoTipoDeleteManyArgs} args - Arguments to filter DocumentoTipos to delete.
     * @example
     * // Delete a few DocumentoTipos
     * const { count } = await prisma.documentoTipo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DocumentoTipoDeleteManyArgs>(args?: SelectSubset<T, DocumentoTipoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DocumentoTipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoTipoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DocumentoTipos
     * const documentoTipo = await prisma.documentoTipo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DocumentoTipoUpdateManyArgs>(args: SelectSubset<T, DocumentoTipoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DocumentoTipos and returns the data updated in the database.
     * @param {DocumentoTipoUpdateManyAndReturnArgs} args - Arguments to update many DocumentoTipos.
     * @example
     * // Update many DocumentoTipos
     * const documentoTipo = await prisma.documentoTipo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DocumentoTipos and only return the `id`
     * const documentoTipoWithIdOnly = await prisma.documentoTipo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DocumentoTipoUpdateManyAndReturnArgs>(args: SelectSubset<T, DocumentoTipoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DocumentoTipo.
     * @param {DocumentoTipoUpsertArgs} args - Arguments to update or create a DocumentoTipo.
     * @example
     * // Update or create a DocumentoTipo
     * const documentoTipo = await prisma.documentoTipo.upsert({
     *   create: {
     *     // ... data to create a DocumentoTipo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DocumentoTipo we want to update
     *   }
     * })
     */
    upsert<T extends DocumentoTipoUpsertArgs>(args: SelectSubset<T, DocumentoTipoUpsertArgs<ExtArgs>>): Prisma__DocumentoTipoClient<$Result.GetResult<Prisma.$DocumentoTipoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DocumentoTipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoTipoCountArgs} args - Arguments to filter DocumentoTipos to count.
     * @example
     * // Count the number of DocumentoTipos
     * const count = await prisma.documentoTipo.count({
     *   where: {
     *     // ... the filter for the DocumentoTipos we want to count
     *   }
     * })
    **/
    count<T extends DocumentoTipoCountArgs>(
      args?: Subset<T, DocumentoTipoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentoTipoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DocumentoTipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoTipoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentoTipoAggregateArgs>(args: Subset<T, DocumentoTipoAggregateArgs>): Prisma.PrismaPromise<GetDocumentoTipoAggregateType<T>>

    /**
     * Group by DocumentoTipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoTipoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DocumentoTipoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DocumentoTipoGroupByArgs['orderBy'] }
        : { orderBy?: DocumentoTipoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DocumentoTipoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentoTipoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DocumentoTipo model
   */
  readonly fields: DocumentoTipoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DocumentoTipo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DocumentoTipoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends DocumentoTipo$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, DocumentoTipo$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DocumentoTipo model
   */
  interface DocumentoTipoFieldRefs {
    readonly id: FieldRef<"DocumentoTipo", 'Int'>
    readonly nombre: FieldRef<"DocumentoTipo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * DocumentoTipo findUnique
   */
  export type DocumentoTipoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoTipoInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoTipo to fetch.
     */
    where: DocumentoTipoWhereUniqueInput
  }

  /**
   * DocumentoTipo findUniqueOrThrow
   */
  export type DocumentoTipoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoTipoInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoTipo to fetch.
     */
    where: DocumentoTipoWhereUniqueInput
  }

  /**
   * DocumentoTipo findFirst
   */
  export type DocumentoTipoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoTipoInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoTipo to fetch.
     */
    where?: DocumentoTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoTipos to fetch.
     */
    orderBy?: DocumentoTipoOrderByWithRelationInput | DocumentoTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DocumentoTipos.
     */
    cursor?: DocumentoTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DocumentoTipos.
     */
    distinct?: DocumentoTipoScalarFieldEnum | DocumentoTipoScalarFieldEnum[]
  }

  /**
   * DocumentoTipo findFirstOrThrow
   */
  export type DocumentoTipoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoTipoInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoTipo to fetch.
     */
    where?: DocumentoTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoTipos to fetch.
     */
    orderBy?: DocumentoTipoOrderByWithRelationInput | DocumentoTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DocumentoTipos.
     */
    cursor?: DocumentoTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DocumentoTipos.
     */
    distinct?: DocumentoTipoScalarFieldEnum | DocumentoTipoScalarFieldEnum[]
  }

  /**
   * DocumentoTipo findMany
   */
  export type DocumentoTipoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoTipoInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoTipos to fetch.
     */
    where?: DocumentoTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoTipos to fetch.
     */
    orderBy?: DocumentoTipoOrderByWithRelationInput | DocumentoTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DocumentoTipos.
     */
    cursor?: DocumentoTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoTipos.
     */
    skip?: number
    distinct?: DocumentoTipoScalarFieldEnum | DocumentoTipoScalarFieldEnum[]
  }

  /**
   * DocumentoTipo create
   */
  export type DocumentoTipoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoTipoInclude<ExtArgs> | null
    /**
     * The data needed to create a DocumentoTipo.
     */
    data: XOR<DocumentoTipoCreateInput, DocumentoTipoUncheckedCreateInput>
  }

  /**
   * DocumentoTipo createMany
   */
  export type DocumentoTipoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DocumentoTipos.
     */
    data: DocumentoTipoCreateManyInput | DocumentoTipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DocumentoTipo createManyAndReturn
   */
  export type DocumentoTipoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * The data used to create many DocumentoTipos.
     */
    data: DocumentoTipoCreateManyInput | DocumentoTipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DocumentoTipo update
   */
  export type DocumentoTipoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoTipoInclude<ExtArgs> | null
    /**
     * The data needed to update a DocumentoTipo.
     */
    data: XOR<DocumentoTipoUpdateInput, DocumentoTipoUncheckedUpdateInput>
    /**
     * Choose, which DocumentoTipo to update.
     */
    where: DocumentoTipoWhereUniqueInput
  }

  /**
   * DocumentoTipo updateMany
   */
  export type DocumentoTipoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DocumentoTipos.
     */
    data: XOR<DocumentoTipoUpdateManyMutationInput, DocumentoTipoUncheckedUpdateManyInput>
    /**
     * Filter which DocumentoTipos to update
     */
    where?: DocumentoTipoWhereInput
    /**
     * Limit how many DocumentoTipos to update.
     */
    limit?: number
  }

  /**
   * DocumentoTipo updateManyAndReturn
   */
  export type DocumentoTipoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * The data used to update DocumentoTipos.
     */
    data: XOR<DocumentoTipoUpdateManyMutationInput, DocumentoTipoUncheckedUpdateManyInput>
    /**
     * Filter which DocumentoTipos to update
     */
    where?: DocumentoTipoWhereInput
    /**
     * Limit how many DocumentoTipos to update.
     */
    limit?: number
  }

  /**
   * DocumentoTipo upsert
   */
  export type DocumentoTipoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoTipoInclude<ExtArgs> | null
    /**
     * The filter to search for the DocumentoTipo to update in case it exists.
     */
    where: DocumentoTipoWhereUniqueInput
    /**
     * In case the DocumentoTipo found by the `where` argument doesn't exist, create a new DocumentoTipo with this data.
     */
    create: XOR<DocumentoTipoCreateInput, DocumentoTipoUncheckedCreateInput>
    /**
     * In case the DocumentoTipo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DocumentoTipoUpdateInput, DocumentoTipoUncheckedUpdateInput>
  }

  /**
   * DocumentoTipo delete
   */
  export type DocumentoTipoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoTipoInclude<ExtArgs> | null
    /**
     * Filter which DocumentoTipo to delete.
     */
    where: DocumentoTipoWhereUniqueInput
  }

  /**
   * DocumentoTipo deleteMany
   */
  export type DocumentoTipoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DocumentoTipos to delete
     */
    where?: DocumentoTipoWhereInput
    /**
     * Limit how many DocumentoTipos to delete.
     */
    limit?: number
  }

  /**
   * DocumentoTipo.usuarios
   */
  export type DocumentoTipo$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * DocumentoTipo without action
   */
  export type DocumentoTipoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoTipo
     */
    select?: DocumentoTipoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DocumentoTipo
     */
    omit?: DocumentoTipoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoTipoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const LibroScalarFieldEnum: {
    id: 'id',
    bibliotecaId: 'bibliotecaId',
    inventarioId: 'inventarioId',
    titulo: 'titulo',
    anio: 'anio',
    isbn: 'isbn',
    laboratorioId: 'laboratorioId',
    armarioId: 'armarioId',
    estanteId: 'estanteId',
    autorId: 'autorId',
    idiomaId: 'idiomaId',
    editorialId: 'editorialId',
    sedeId: 'sedeId',
    disponible: 'disponible',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type LibroScalarFieldEnum = (typeof LibroScalarFieldEnum)[keyof typeof LibroScalarFieldEnum]


  export const LibroMateriaScalarFieldEnum: {
    libroId: 'libroId',
    materiaId: 'materiaId',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId'
  };

  export type LibroMateriaScalarFieldEnum = (typeof LibroMateriaScalarFieldEnum)[keyof typeof LibroMateriaScalarFieldEnum]


  export const LibroAutorScalarFieldEnum: {
    id: 'id',
    autorNombre: 'autorNombre',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId'
  };

  export type LibroAutorScalarFieldEnum = (typeof LibroAutorScalarFieldEnum)[keyof typeof LibroAutorScalarFieldEnum]


  export const LibroIdiomaScalarFieldEnum: {
    id: 'id',
    idioma: 'idioma',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId'
  };

  export type LibroIdiomaScalarFieldEnum = (typeof LibroIdiomaScalarFieldEnum)[keyof typeof LibroIdiomaScalarFieldEnum]


  export const LibroEditorialScalarFieldEnum: {
    id: 'id',
    editorial: 'editorial',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId'
  };

  export type LibroEditorialScalarFieldEnum = (typeof LibroEditorialScalarFieldEnum)[keyof typeof LibroEditorialScalarFieldEnum]


  export const CursoScalarFieldEnum: {
    id: 'id',
    horaInicio1: 'horaInicio1',
    duracion1: 'duracion1',
    horaInicio2: 'horaInicio2',
    duracion2: 'duracion2',
    dia1: 'dia1',
    dia2: 'dia2',
    profesorId: 'profesorId',
    anioDeCarrera: 'anioDeCarrera',
    activo: 'activo',
    ac: 'ac',
    sedeId: 'sedeId',
    materiaId: 'materiaId',
    divisionId: 'divisionId',
    turno: 'turno',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type CursoScalarFieldEnum = (typeof CursoScalarFieldEnum)[keyof typeof CursoScalarFieldEnum]


  export const CursoAyudanteScalarFieldEnum: {
    cursoId: 'cursoId',
    userId: 'userId',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId',
    fechaModificacion: 'fechaModificacion',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type CursoAyudanteScalarFieldEnum = (typeof CursoAyudanteScalarFieldEnum)[keyof typeof CursoAyudanteScalarFieldEnum]


  export const DivisionScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    anio: 'anio',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId',
    fechaModificacion: 'fechaModificacion',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type DivisionScalarFieldEnum = (typeof DivisionScalarFieldEnum)[keyof typeof DivisionScalarFieldEnum]


  export const EquipoScalarFieldEnum: {
    id: 'id',
    inventarioId: 'inventarioId',
    modelo: 'modelo',
    numeroSerie: 'numeroSerie',
    observaciones: 'observaciones',
    palabrasClave: 'palabrasClave',
    imagen: 'imagen',
    tipoId: 'tipoId',
    marcaId: 'marcaId',
    sedeId: 'sedeId',
    laboratorioId: 'laboratorioId',
    armarioId: 'armarioId',
    estanteId: 'estanteId',
    estadoId: 'estadoId',
    disponible: 'disponible',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type EquipoScalarFieldEnum = (typeof EquipoScalarFieldEnum)[keyof typeof EquipoScalarFieldEnum]


  export const EquipoMarcaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId'
  };

  export type EquipoMarcaScalarFieldEnum = (typeof EquipoMarcaScalarFieldEnum)[keyof typeof EquipoMarcaScalarFieldEnum]


  export const EquipoTipoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    imagen: 'imagen',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId'
  };

  export type EquipoTipoScalarFieldEnum = (typeof EquipoTipoScalarFieldEnum)[keyof typeof EquipoTipoScalarFieldEnum]


  export const EquipoEstadoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId'
  };

  export type EquipoEstadoScalarFieldEnum = (typeof EquipoEstadoScalarFieldEnum)[keyof typeof EquipoEstadoScalarFieldEnum]


  export const LaboratorioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    tienePc: 'tienePc',
    esReservable: 'esReservable',
    incluirEnReporte: 'incluirEnReporte',
    sedeId: 'sedeId',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type LaboratorioScalarFieldEnum = (typeof LaboratorioScalarFieldEnum)[keyof typeof LaboratorioScalarFieldEnum]


  export const ArmarioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    laboratorioId: 'laboratorioId',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type ArmarioScalarFieldEnum = (typeof ArmarioScalarFieldEnum)[keyof typeof ArmarioScalarFieldEnum]


  export const EstanteScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    armarioId: 'armarioId',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type EstanteScalarFieldEnum = (typeof EstanteScalarFieldEnum)[keyof typeof EstanteScalarFieldEnum]


  export const SoftwareScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    version: 'version',
    estado: 'estado',
    windows: 'windows',
    linux: 'linux',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type SoftwareScalarFieldEnum = (typeof SoftwareScalarFieldEnum)[keyof typeof SoftwareScalarFieldEnum]


  export const SoftwareLaboratorioScalarFieldEnum: {
    softwareId: 'softwareId',
    laboratorioId: 'laboratorioId',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId'
  };

  export type SoftwareLaboratorioScalarFieldEnum = (typeof SoftwareLaboratorioScalarFieldEnum)[keyof typeof SoftwareLaboratorioScalarFieldEnum]


  export const MailsScalarFieldEnum: {
    id: 'id',
    emisor: 'emisor',
    para: 'para',
    cc: 'cc',
    cco: 'cco',
    contenido: 'contenido',
    asunto: 'asunto',
    fechaEnvio: 'fechaEnvio'
  };

  export type MailsScalarFieldEnum = (typeof MailsScalarFieldEnum)[keyof typeof MailsScalarFieldEnum]


  export const MateriaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    codigo: 'codigo',
    anio: 'anio',
    duracion: 'duracion',
    tipo: 'tipo',
    directorUsuarioId: 'directorUsuarioId',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type MateriaScalarFieldEnum = (typeof MateriaScalarFieldEnum)[keyof typeof MateriaScalarFieldEnum]


  export const MateriaJefeTpScalarFieldEnum: {
    materiaId: 'materiaId',
    userId: 'userId'
  };

  export type MateriaJefeTpScalarFieldEnum = (typeof MateriaJefeTpScalarFieldEnum)[keyof typeof MateriaJefeTpScalarFieldEnum]


  export const MateriaCorrelativaScalarFieldEnum: {
    materiaPrerequisitoId: 'materiaPrerequisitoId',
    correlativaId: 'correlativaId',
    estatusCorrelativa: 'estatusCorrelativa',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type MateriaCorrelativaScalarFieldEnum = (typeof MateriaCorrelativaScalarFieldEnum)[keyof typeof MateriaCorrelativaScalarFieldEnum]


  export const ReservaScalarFieldEnum: {
    id: 'id',
    estatus: 'estatus',
    fechaHoraInicio: 'fechaHoraInicio',
    fechaHoraFin: 'fechaHoraFin',
    tipo: 'tipo',
    asistio: 'asistio',
    motivoRechazo: 'motivoRechazo',
    usuarioSolicitoId: 'usuarioSolicitoId',
    usuarioAprobadorId: 'usuarioAprobadorId',
    usuarioRechazadoId: 'usuarioRechazadoId',
    usuarioRenovoId: 'usuarioRenovoId',
    usuarioRecibioId: 'usuarioRecibioId',
    usuarioTutorId: 'usuarioTutorId',
    fechaRenovacion: 'fechaRenovacion',
    fechaAprobacion: 'fechaAprobacion',
    fechaRechazo: 'fechaRechazo',
    fechaRecibido: 'fechaRecibido',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    mostrarEnPantalla: 'mostrarEnPantalla'
  };

  export type ReservaScalarFieldEnum = (typeof ReservaScalarFieldEnum)[keyof typeof ReservaScalarFieldEnum]


  export const ReservaEquipoScalarFieldEnum: {
    id: 'id',
    fechaEntregado: 'fechaEntregado',
    reservaId: 'reservaId',
    equipoId: 'equipoId',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type ReservaEquipoScalarFieldEnum = (typeof ReservaEquipoScalarFieldEnum)[keyof typeof ReservaEquipoScalarFieldEnum]


  export const ReservaLibroScalarFieldEnum: {
    id: 'id',
    fechaEntregado: 'fechaEntregado',
    reservaId: 'reservaId',
    libroId: 'libroId',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type ReservaLibroScalarFieldEnum = (typeof ReservaLibroScalarFieldEnum)[keyof typeof ReservaLibroScalarFieldEnum]


  export const ReservaLaboratorioCerradoScalarFieldEnum: {
    id: 'id',
    descripcion: 'descripcion',
    requierePC: 'requierePC',
    requiereProyector: 'requiereProyector',
    reservaId: 'reservaId',
    sedeId: 'sedeId',
    laboratorioId: 'laboratorioId',
    cursoId: 'cursoId',
    esDiscrecional: 'esDiscrecional',
    discrecionalTitulo: 'discrecionalTitulo',
    discrecionalMateriaId: 'discrecionalMateriaId',
    discrecionalDocenteId: 'discrecionalDocenteId',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type ReservaLaboratorioCerradoScalarFieldEnum = (typeof ReservaLaboratorioCerradoScalarFieldEnum)[keyof typeof ReservaLaboratorioCerradoScalarFieldEnum]


  export const ReservaLaboratorioCerradoEquipoScalarFieldEnum: {
    id: 'id',
    cantidad: 'cantidad',
    reservaLaboratorioCerradoId: 'reservaLaboratorioCerradoId',
    equipoId: 'equipoId',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type ReservaLaboratorioCerradoEquipoScalarFieldEnum = (typeof ReservaLaboratorioCerradoEquipoScalarFieldEnum)[keyof typeof ReservaLaboratorioCerradoEquipoScalarFieldEnum]


  export const ReservaLaboratorioAbiertoScalarFieldEnum: {
    id: 'id',
    especialidad: 'especialidad',
    descripcion: 'descripcion',
    concurrentes: 'concurrentes',
    laboratorioAbiertoTipo: 'laboratorioAbiertoTipo',
    reservaId: 'reservaId',
    sedeId: 'sedeId',
    laboratorioId: 'laboratorioId',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type ReservaLaboratorioAbiertoScalarFieldEnum = (typeof ReservaLaboratorioAbiertoScalarFieldEnum)[keyof typeof ReservaLaboratorioAbiertoScalarFieldEnum]


  export const ReservaLaboratorioAbiertoEquipoScalarFieldEnum: {
    id: 'id',
    cantidad: 'cantidad',
    reservaLaboratorioAbiertoId: 'reservaLaboratorioAbiertoId',
    equipoId: 'equipoId',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type ReservaLaboratorioAbiertoEquipoScalarFieldEnum = (typeof ReservaLaboratorioAbiertoEquipoScalarFieldEnum)[keyof typeof ReservaLaboratorioAbiertoEquipoScalarFieldEnum]


  export const PantallaScalarFieldEnum: {
    id: 'id',
    sedeId: 'sedeId',
    docente: 'docente',
    materia: 'materia',
    laboratorio: 'laboratorio',
    fechaHoraInicio: 'fechaHoraInicio',
    fechaHoraFin: 'fechaHoraFin',
    usuarioCreadorId: 'usuarioCreadorId',
    fechaCreacion: 'fechaCreacion'
  };

  export type PantallaScalarFieldEnum = (typeof PantallaScalarFieldEnum)[keyof typeof PantallaScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    type: 'type',
    provider: 'provider',
    providerAccountId: 'providerAccountId',
    refresh_token: 'refresh_token',
    access_token: 'access_token',
    expires_at: 'expires_at',
    refresh_expires_in: 'refresh_expires_in',
    token_type: 'token_type',
    scope: 'scope',
    id_token: 'id_token',
    session_state: 'session_state',
    refresh_token_expires_in: 'refresh_token_expires_in'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    sessionToken: 'sessionToken',
    userId: 'userId',
    expires: 'expires'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const VerificationTokenScalarFieldEnum: {
    identifier: 'identifier',
    token: 'token',
    expires: 'expires'
  };

  export type VerificationTokenScalarFieldEnum = (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum]


  export const SedeScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type SedeScalarFieldEnum = (typeof SedeScalarFieldEnum)[keyof typeof SedeScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    emailVerified: 'emailVerified',
    image: 'image',
    nombre: 'nombre',
    apellido: 'apellido',
    fechaNacimiento: 'fechaNacimiento',
    direccion: 'direccion',
    piso: 'piso',
    departamento: 'departamento',
    ciudad: 'ciudad',
    codigoPostal: 'codigoPostal',
    telefonoCasa: 'telefonoCasa',
    telefonoCelular: 'telefonoCelular',
    telefonoLaboral: 'telefonoLaboral',
    documentoNumero: 'documentoNumero',
    legajo: 'legajo',
    gitlab: 'gitlab',
    penalizaciones: 'penalizaciones',
    esDocente: 'esDocente',
    esTutor: 'esTutor',
    fechaRegistro: 'fechaRegistro',
    fechaUltimoAcceso: 'fechaUltimoAcceso',
    fechaUltimaActualizacion: 'fechaUltimaActualizacion',
    documentoTipoId: 'documentoTipoId',
    provinciaIso: 'provinciaIso',
    paisIso: 'paisIso'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const TutorScalarFieldEnum: {
    userId: 'userId',
    diasHorarios: 'diasHorarios',
    activo: 'activo',
    especialidad: 'especialidad',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId'
  };

  export type TutorScalarFieldEnum = (typeof TutorScalarFieldEnum)[keyof typeof TutorScalarFieldEnum]


  export const UsuarioRolScalarFieldEnum: {
    userId: 'userId',
    rolId: 'rolId',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId'
  };

  export type UsuarioRolScalarFieldEnum = (typeof UsuarioRolScalarFieldEnum)[keyof typeof UsuarioRolScalarFieldEnum]


  export const RolScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type RolScalarFieldEnum = (typeof RolScalarFieldEnum)[keyof typeof RolScalarFieldEnum]


  export const RolPermisoScalarFieldEnum: {
    rolId: 'rolId',
    permisoId: 'permisoId',
    fechaCreacion: 'fechaCreacion',
    usuarioCreadorId: 'usuarioCreadorId'
  };

  export type RolPermisoScalarFieldEnum = (typeof RolPermisoScalarFieldEnum)[keyof typeof RolPermisoScalarFieldEnum]


  export const PermisoScalarFieldEnum: {
    id: 'id',
    sgeNombre: 'sgeNombre',
    nombre: 'nombre',
    rubro: 'rubro',
    incluido: 'incluido',
    fechaCreacion: 'fechaCreacion',
    fechaModificacion: 'fechaModificacion',
    usuarioCreadorId: 'usuarioCreadorId',
    usuarioModificadorId: 'usuarioModificadorId'
  };

  export type PermisoScalarFieldEnum = (typeof PermisoScalarFieldEnum)[keyof typeof PermisoScalarFieldEnum]


  export const ProvinciaScalarFieldEnum: {
    iso: 'iso',
    nombre: 'nombre',
    paisIso: 'paisIso'
  };

  export type ProvinciaScalarFieldEnum = (typeof ProvinciaScalarFieldEnum)[keyof typeof ProvinciaScalarFieldEnum]


  export const PaisScalarFieldEnum: {
    iso: 'iso',
    nombreEspanol: 'nombreEspanol',
    nombreIngles: 'nombreIngles',
    iso3: 'iso3',
    codigoNumerico: 'codigoNumerico'
  };

  export type PaisScalarFieldEnum = (typeof PaisScalarFieldEnum)[keyof typeof PaisScalarFieldEnum]


  export const DocumentoTipoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type DocumentoTipoScalarFieldEnum = (typeof DocumentoTipoScalarFieldEnum)[keyof typeof DocumentoTipoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'CursoDia'
   */
  export type EnumCursoDiaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CursoDia'>
    


  /**
   * Reference to a field of type 'CursoDia[]'
   */
  export type ListEnumCursoDiaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CursoDia[]'>
    


  /**
   * Reference to a field of type 'TurnoCurso'
   */
  export type EnumTurnoCursoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TurnoCurso'>
    


  /**
   * Reference to a field of type 'TurnoCurso[]'
   */
  export type ListEnumTurnoCursoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TurnoCurso[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'MateriaDuracion'
   */
  export type EnumMateriaDuracionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MateriaDuracion'>
    


  /**
   * Reference to a field of type 'MateriaDuracion[]'
   */
  export type ListEnumMateriaDuracionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MateriaDuracion[]'>
    


  /**
   * Reference to a field of type 'MateriaTipo'
   */
  export type EnumMateriaTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MateriaTipo'>
    


  /**
   * Reference to a field of type 'MateriaTipo[]'
   */
  export type ListEnumMateriaTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MateriaTipo[]'>
    


  /**
   * Reference to a field of type 'EstatusCorrelativa'
   */
  export type EnumEstatusCorrelativaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstatusCorrelativa'>
    


  /**
   * Reference to a field of type 'EstatusCorrelativa[]'
   */
  export type ListEnumEstatusCorrelativaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstatusCorrelativa[]'>
    


  /**
   * Reference to a field of type 'ReservaEstatus'
   */
  export type EnumReservaEstatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservaEstatus'>
    


  /**
   * Reference to a field of type 'ReservaEstatus[]'
   */
  export type ListEnumReservaEstatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservaEstatus[]'>
    


  /**
   * Reference to a field of type 'ReservaTipo'
   */
  export type EnumReservaTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservaTipo'>
    


  /**
   * Reference to a field of type 'ReservaTipo[]'
   */
  export type ListEnumReservaTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservaTipo[]'>
    


  /**
   * Reference to a field of type 'LaboratorioAbiertoTipo'
   */
  export type EnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LaboratorioAbiertoTipo'>
    


  /**
   * Reference to a field of type 'LaboratorioAbiertoTipo[]'
   */
  export type ListEnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LaboratorioAbiertoTipo[]'>
    


  /**
   * Reference to a field of type 'SgeNombre'
   */
  export type EnumSgeNombreFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SgeNombre'>
    


  /**
   * Reference to a field of type 'SgeNombre[]'
   */
  export type ListEnumSgeNombreFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SgeNombre[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type LibroWhereInput = {
    AND?: LibroWhereInput | LibroWhereInput[]
    OR?: LibroWhereInput[]
    NOT?: LibroWhereInput | LibroWhereInput[]
    id?: IntFilter<"Libro"> | number
    bibliotecaId?: StringNullableFilter<"Libro"> | string | null
    inventarioId?: StringFilter<"Libro"> | string
    titulo?: StringFilter<"Libro"> | string
    anio?: IntFilter<"Libro"> | number
    isbn?: StringNullableFilter<"Libro"> | string | null
    laboratorioId?: IntFilter<"Libro"> | number
    armarioId?: IntNullableFilter<"Libro"> | number | null
    estanteId?: IntNullableFilter<"Libro"> | number | null
    autorId?: IntFilter<"Libro"> | number
    idiomaId?: IntFilter<"Libro"> | number
    editorialId?: IntFilter<"Libro"> | number
    sedeId?: IntFilter<"Libro"> | number
    disponible?: BoolFilter<"Libro"> | boolean
    fechaCreacion?: DateTimeFilter<"Libro"> | Date | string
    fechaModificacion?: DateTimeFilter<"Libro"> | Date | string
    usuarioCreadorId?: StringFilter<"Libro"> | string
    usuarioModificadorId?: StringFilter<"Libro"> | string
    materias?: LibroMateriaListRelationFilter
    laboratorio?: XOR<LaboratorioScalarRelationFilter, LaboratorioWhereInput>
    armario?: XOR<ArmarioNullableScalarRelationFilter, ArmarioWhereInput> | null
    estante?: XOR<EstanteNullableScalarRelationFilter, EstanteWhereInput> | null
    autor?: XOR<LibroAutorScalarRelationFilter, LibroAutorWhereInput>
    idioma?: XOR<LibroIdiomaScalarRelationFilter, LibroIdiomaWhereInput>
    editorial?: XOR<LibroEditorialScalarRelationFilter, LibroEditorialWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    reservas?: ReservaLibroListRelationFilter
  }

  export type LibroOrderByWithRelationInput = {
    id?: SortOrder
    bibliotecaId?: SortOrderInput | SortOrder
    inventarioId?: SortOrder
    titulo?: SortOrder
    anio?: SortOrder
    isbn?: SortOrderInput | SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrderInput | SortOrder
    estanteId?: SortOrderInput | SortOrder
    autorId?: SortOrder
    idiomaId?: SortOrder
    editorialId?: SortOrder
    sedeId?: SortOrder
    disponible?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    materias?: LibroMateriaOrderByRelationAggregateInput
    laboratorio?: LaboratorioOrderByWithRelationInput
    armario?: ArmarioOrderByWithRelationInput
    estante?: EstanteOrderByWithRelationInput
    autor?: LibroAutorOrderByWithRelationInput
    idioma?: LibroIdiomaOrderByWithRelationInput
    editorial?: LibroEditorialOrderByWithRelationInput
    sede?: SedeOrderByWithRelationInput
    reservas?: ReservaLibroOrderByRelationAggregateInput
  }

  export type LibroWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    inventarioId?: string
    AND?: LibroWhereInput | LibroWhereInput[]
    OR?: LibroWhereInput[]
    NOT?: LibroWhereInput | LibroWhereInput[]
    bibliotecaId?: StringNullableFilter<"Libro"> | string | null
    titulo?: StringFilter<"Libro"> | string
    anio?: IntFilter<"Libro"> | number
    isbn?: StringNullableFilter<"Libro"> | string | null
    laboratorioId?: IntFilter<"Libro"> | number
    armarioId?: IntNullableFilter<"Libro"> | number | null
    estanteId?: IntNullableFilter<"Libro"> | number | null
    autorId?: IntFilter<"Libro"> | number
    idiomaId?: IntFilter<"Libro"> | number
    editorialId?: IntFilter<"Libro"> | number
    sedeId?: IntFilter<"Libro"> | number
    disponible?: BoolFilter<"Libro"> | boolean
    fechaCreacion?: DateTimeFilter<"Libro"> | Date | string
    fechaModificacion?: DateTimeFilter<"Libro"> | Date | string
    usuarioCreadorId?: StringFilter<"Libro"> | string
    usuarioModificadorId?: StringFilter<"Libro"> | string
    materias?: LibroMateriaListRelationFilter
    laboratorio?: XOR<LaboratorioScalarRelationFilter, LaboratorioWhereInput>
    armario?: XOR<ArmarioNullableScalarRelationFilter, ArmarioWhereInput> | null
    estante?: XOR<EstanteNullableScalarRelationFilter, EstanteWhereInput> | null
    autor?: XOR<LibroAutorScalarRelationFilter, LibroAutorWhereInput>
    idioma?: XOR<LibroIdiomaScalarRelationFilter, LibroIdiomaWhereInput>
    editorial?: XOR<LibroEditorialScalarRelationFilter, LibroEditorialWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    reservas?: ReservaLibroListRelationFilter
  }, "id" | "inventarioId">

  export type LibroOrderByWithAggregationInput = {
    id?: SortOrder
    bibliotecaId?: SortOrderInput | SortOrder
    inventarioId?: SortOrder
    titulo?: SortOrder
    anio?: SortOrder
    isbn?: SortOrderInput | SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrderInput | SortOrder
    estanteId?: SortOrderInput | SortOrder
    autorId?: SortOrder
    idiomaId?: SortOrder
    editorialId?: SortOrder
    sedeId?: SortOrder
    disponible?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: LibroCountOrderByAggregateInput
    _avg?: LibroAvgOrderByAggregateInput
    _max?: LibroMaxOrderByAggregateInput
    _min?: LibroMinOrderByAggregateInput
    _sum?: LibroSumOrderByAggregateInput
  }

  export type LibroScalarWhereWithAggregatesInput = {
    AND?: LibroScalarWhereWithAggregatesInput | LibroScalarWhereWithAggregatesInput[]
    OR?: LibroScalarWhereWithAggregatesInput[]
    NOT?: LibroScalarWhereWithAggregatesInput | LibroScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Libro"> | number
    bibliotecaId?: StringNullableWithAggregatesFilter<"Libro"> | string | null
    inventarioId?: StringWithAggregatesFilter<"Libro"> | string
    titulo?: StringWithAggregatesFilter<"Libro"> | string
    anio?: IntWithAggregatesFilter<"Libro"> | number
    isbn?: StringNullableWithAggregatesFilter<"Libro"> | string | null
    laboratorioId?: IntWithAggregatesFilter<"Libro"> | number
    armarioId?: IntNullableWithAggregatesFilter<"Libro"> | number | null
    estanteId?: IntNullableWithAggregatesFilter<"Libro"> | number | null
    autorId?: IntWithAggregatesFilter<"Libro"> | number
    idiomaId?: IntWithAggregatesFilter<"Libro"> | number
    editorialId?: IntWithAggregatesFilter<"Libro"> | number
    sedeId?: IntWithAggregatesFilter<"Libro"> | number
    disponible?: BoolWithAggregatesFilter<"Libro"> | boolean
    fechaCreacion?: DateTimeWithAggregatesFilter<"Libro"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Libro"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Libro"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Libro"> | string
  }

  export type LibroMateriaWhereInput = {
    AND?: LibroMateriaWhereInput | LibroMateriaWhereInput[]
    OR?: LibroMateriaWhereInput[]
    NOT?: LibroMateriaWhereInput | LibroMateriaWhereInput[]
    libroId?: IntFilter<"LibroMateria"> | number
    materiaId?: IntFilter<"LibroMateria"> | number
    fechaCreacion?: DateTimeFilter<"LibroMateria"> | Date | string
    usuarioCreadorId?: StringFilter<"LibroMateria"> | string
    libro?: XOR<LibroScalarRelationFilter, LibroWhereInput>
    materia?: XOR<MateriaScalarRelationFilter, MateriaWhereInput>
  }

  export type LibroMateriaOrderByWithRelationInput = {
    libroId?: SortOrder
    materiaId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    libro?: LibroOrderByWithRelationInput
    materia?: MateriaOrderByWithRelationInput
  }

  export type LibroMateriaWhereUniqueInput = Prisma.AtLeast<{
    libroId_materiaId?: LibroMateriaLibroIdMateriaIdCompoundUniqueInput
    AND?: LibroMateriaWhereInput | LibroMateriaWhereInput[]
    OR?: LibroMateriaWhereInput[]
    NOT?: LibroMateriaWhereInput | LibroMateriaWhereInput[]
    libroId?: IntFilter<"LibroMateria"> | number
    materiaId?: IntFilter<"LibroMateria"> | number
    fechaCreacion?: DateTimeFilter<"LibroMateria"> | Date | string
    usuarioCreadorId?: StringFilter<"LibroMateria"> | string
    libro?: XOR<LibroScalarRelationFilter, LibroWhereInput>
    materia?: XOR<MateriaScalarRelationFilter, MateriaWhereInput>
  }, "libroId_materiaId">

  export type LibroMateriaOrderByWithAggregationInput = {
    libroId?: SortOrder
    materiaId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    _count?: LibroMateriaCountOrderByAggregateInput
    _avg?: LibroMateriaAvgOrderByAggregateInput
    _max?: LibroMateriaMaxOrderByAggregateInput
    _min?: LibroMateriaMinOrderByAggregateInput
    _sum?: LibroMateriaSumOrderByAggregateInput
  }

  export type LibroMateriaScalarWhereWithAggregatesInput = {
    AND?: LibroMateriaScalarWhereWithAggregatesInput | LibroMateriaScalarWhereWithAggregatesInput[]
    OR?: LibroMateriaScalarWhereWithAggregatesInput[]
    NOT?: LibroMateriaScalarWhereWithAggregatesInput | LibroMateriaScalarWhereWithAggregatesInput[]
    libroId?: IntWithAggregatesFilter<"LibroMateria"> | number
    materiaId?: IntWithAggregatesFilter<"LibroMateria"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"LibroMateria"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"LibroMateria"> | string
  }

  export type LibroAutorWhereInput = {
    AND?: LibroAutorWhereInput | LibroAutorWhereInput[]
    OR?: LibroAutorWhereInput[]
    NOT?: LibroAutorWhereInput | LibroAutorWhereInput[]
    id?: IntFilter<"LibroAutor"> | number
    autorNombre?: StringFilter<"LibroAutor"> | string
    fechaCreacion?: DateTimeFilter<"LibroAutor"> | Date | string
    usuarioCreadorId?: StringFilter<"LibroAutor"> | string
    libros?: LibroListRelationFilter
  }

  export type LibroAutorOrderByWithRelationInput = {
    id?: SortOrder
    autorNombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    libros?: LibroOrderByRelationAggregateInput
  }

  export type LibroAutorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    autorNombre?: string
    AND?: LibroAutorWhereInput | LibroAutorWhereInput[]
    OR?: LibroAutorWhereInput[]
    NOT?: LibroAutorWhereInput | LibroAutorWhereInput[]
    fechaCreacion?: DateTimeFilter<"LibroAutor"> | Date | string
    usuarioCreadorId?: StringFilter<"LibroAutor"> | string
    libros?: LibroListRelationFilter
  }, "id" | "autorNombre">

  export type LibroAutorOrderByWithAggregationInput = {
    id?: SortOrder
    autorNombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    _count?: LibroAutorCountOrderByAggregateInput
    _avg?: LibroAutorAvgOrderByAggregateInput
    _max?: LibroAutorMaxOrderByAggregateInput
    _min?: LibroAutorMinOrderByAggregateInput
    _sum?: LibroAutorSumOrderByAggregateInput
  }

  export type LibroAutorScalarWhereWithAggregatesInput = {
    AND?: LibroAutorScalarWhereWithAggregatesInput | LibroAutorScalarWhereWithAggregatesInput[]
    OR?: LibroAutorScalarWhereWithAggregatesInput[]
    NOT?: LibroAutorScalarWhereWithAggregatesInput | LibroAutorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"LibroAutor"> | number
    autorNombre?: StringWithAggregatesFilter<"LibroAutor"> | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"LibroAutor"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"LibroAutor"> | string
  }

  export type LibroIdiomaWhereInput = {
    AND?: LibroIdiomaWhereInput | LibroIdiomaWhereInput[]
    OR?: LibroIdiomaWhereInput[]
    NOT?: LibroIdiomaWhereInput | LibroIdiomaWhereInput[]
    id?: IntFilter<"LibroIdioma"> | number
    idioma?: StringFilter<"LibroIdioma"> | string
    fechaCreacion?: DateTimeFilter<"LibroIdioma"> | Date | string
    usuarioCreadorId?: StringFilter<"LibroIdioma"> | string
    libros?: LibroListRelationFilter
  }

  export type LibroIdiomaOrderByWithRelationInput = {
    id?: SortOrder
    idioma?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    libros?: LibroOrderByRelationAggregateInput
  }

  export type LibroIdiomaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    idioma?: string
    AND?: LibroIdiomaWhereInput | LibroIdiomaWhereInput[]
    OR?: LibroIdiomaWhereInput[]
    NOT?: LibroIdiomaWhereInput | LibroIdiomaWhereInput[]
    fechaCreacion?: DateTimeFilter<"LibroIdioma"> | Date | string
    usuarioCreadorId?: StringFilter<"LibroIdioma"> | string
    libros?: LibroListRelationFilter
  }, "id" | "idioma">

  export type LibroIdiomaOrderByWithAggregationInput = {
    id?: SortOrder
    idioma?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    _count?: LibroIdiomaCountOrderByAggregateInput
    _avg?: LibroIdiomaAvgOrderByAggregateInput
    _max?: LibroIdiomaMaxOrderByAggregateInput
    _min?: LibroIdiomaMinOrderByAggregateInput
    _sum?: LibroIdiomaSumOrderByAggregateInput
  }

  export type LibroIdiomaScalarWhereWithAggregatesInput = {
    AND?: LibroIdiomaScalarWhereWithAggregatesInput | LibroIdiomaScalarWhereWithAggregatesInput[]
    OR?: LibroIdiomaScalarWhereWithAggregatesInput[]
    NOT?: LibroIdiomaScalarWhereWithAggregatesInput | LibroIdiomaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"LibroIdioma"> | number
    idioma?: StringWithAggregatesFilter<"LibroIdioma"> | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"LibroIdioma"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"LibroIdioma"> | string
  }

  export type LibroEditorialWhereInput = {
    AND?: LibroEditorialWhereInput | LibroEditorialWhereInput[]
    OR?: LibroEditorialWhereInput[]
    NOT?: LibroEditorialWhereInput | LibroEditorialWhereInput[]
    id?: IntFilter<"LibroEditorial"> | number
    editorial?: StringFilter<"LibroEditorial"> | string
    fechaCreacion?: DateTimeFilter<"LibroEditorial"> | Date | string
    usuarioCreadorId?: StringFilter<"LibroEditorial"> | string
    libros?: LibroListRelationFilter
  }

  export type LibroEditorialOrderByWithRelationInput = {
    id?: SortOrder
    editorial?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    libros?: LibroOrderByRelationAggregateInput
  }

  export type LibroEditorialWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    editorial?: string
    AND?: LibroEditorialWhereInput | LibroEditorialWhereInput[]
    OR?: LibroEditorialWhereInput[]
    NOT?: LibroEditorialWhereInput | LibroEditorialWhereInput[]
    fechaCreacion?: DateTimeFilter<"LibroEditorial"> | Date | string
    usuarioCreadorId?: StringFilter<"LibroEditorial"> | string
    libros?: LibroListRelationFilter
  }, "id" | "editorial">

  export type LibroEditorialOrderByWithAggregationInput = {
    id?: SortOrder
    editorial?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    _count?: LibroEditorialCountOrderByAggregateInput
    _avg?: LibroEditorialAvgOrderByAggregateInput
    _max?: LibroEditorialMaxOrderByAggregateInput
    _min?: LibroEditorialMinOrderByAggregateInput
    _sum?: LibroEditorialSumOrderByAggregateInput
  }

  export type LibroEditorialScalarWhereWithAggregatesInput = {
    AND?: LibroEditorialScalarWhereWithAggregatesInput | LibroEditorialScalarWhereWithAggregatesInput[]
    OR?: LibroEditorialScalarWhereWithAggregatesInput[]
    NOT?: LibroEditorialScalarWhereWithAggregatesInput | LibroEditorialScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"LibroEditorial"> | number
    editorial?: StringWithAggregatesFilter<"LibroEditorial"> | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"LibroEditorial"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"LibroEditorial"> | string
  }

  export type CursoWhereInput = {
    AND?: CursoWhereInput | CursoWhereInput[]
    OR?: CursoWhereInput[]
    NOT?: CursoWhereInput | CursoWhereInput[]
    id?: IntFilter<"Curso"> | number
    horaInicio1?: StringFilter<"Curso"> | string
    duracion1?: StringFilter<"Curso"> | string
    horaInicio2?: StringNullableFilter<"Curso"> | string | null
    duracion2?: StringNullableFilter<"Curso"> | string | null
    dia1?: EnumCursoDiaFilter<"Curso"> | $Enums.CursoDia
    dia2?: EnumCursoDiaNullableFilter<"Curso"> | $Enums.CursoDia | null
    profesorId?: StringFilter<"Curso"> | string
    anioDeCarrera?: IntFilter<"Curso"> | number
    activo?: BoolFilter<"Curso"> | boolean
    ac?: StringFilter<"Curso"> | string
    sedeId?: IntFilter<"Curso"> | number
    materiaId?: IntFilter<"Curso"> | number
    divisionId?: IntFilter<"Curso"> | number
    turno?: EnumTurnoCursoFilter<"Curso"> | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFilter<"Curso"> | Date | string
    fechaModificacion?: DateTimeFilter<"Curso"> | Date | string
    usuarioCreadorId?: StringFilter<"Curso"> | string
    usuarioModificadorId?: StringFilter<"Curso"> | string
    ayudantes?: CursoAyudanteListRelationFilter
    profesor?: XOR<UserScalarRelationFilter, UserWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    materia?: XOR<MateriaScalarRelationFilter, MateriaWhereInput>
    division?: XOR<DivisionScalarRelationFilter, DivisionWhereInput>
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoListRelationFilter
  }

  export type CursoOrderByWithRelationInput = {
    id?: SortOrder
    horaInicio1?: SortOrder
    duracion1?: SortOrder
    horaInicio2?: SortOrderInput | SortOrder
    duracion2?: SortOrderInput | SortOrder
    dia1?: SortOrder
    dia2?: SortOrderInput | SortOrder
    profesorId?: SortOrder
    anioDeCarrera?: SortOrder
    activo?: SortOrder
    ac?: SortOrder
    sedeId?: SortOrder
    materiaId?: SortOrder
    divisionId?: SortOrder
    turno?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    ayudantes?: CursoAyudanteOrderByRelationAggregateInput
    profesor?: UserOrderByWithRelationInput
    sede?: SedeOrderByWithRelationInput
    materia?: MateriaOrderByWithRelationInput
    division?: DivisionOrderByWithRelationInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoOrderByRelationAggregateInput
  }

  export type CursoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CursoWhereInput | CursoWhereInput[]
    OR?: CursoWhereInput[]
    NOT?: CursoWhereInput | CursoWhereInput[]
    horaInicio1?: StringFilter<"Curso"> | string
    duracion1?: StringFilter<"Curso"> | string
    horaInicio2?: StringNullableFilter<"Curso"> | string | null
    duracion2?: StringNullableFilter<"Curso"> | string | null
    dia1?: EnumCursoDiaFilter<"Curso"> | $Enums.CursoDia
    dia2?: EnumCursoDiaNullableFilter<"Curso"> | $Enums.CursoDia | null
    profesorId?: StringFilter<"Curso"> | string
    anioDeCarrera?: IntFilter<"Curso"> | number
    activo?: BoolFilter<"Curso"> | boolean
    ac?: StringFilter<"Curso"> | string
    sedeId?: IntFilter<"Curso"> | number
    materiaId?: IntFilter<"Curso"> | number
    divisionId?: IntFilter<"Curso"> | number
    turno?: EnumTurnoCursoFilter<"Curso"> | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFilter<"Curso"> | Date | string
    fechaModificacion?: DateTimeFilter<"Curso"> | Date | string
    usuarioCreadorId?: StringFilter<"Curso"> | string
    usuarioModificadorId?: StringFilter<"Curso"> | string
    ayudantes?: CursoAyudanteListRelationFilter
    profesor?: XOR<UserScalarRelationFilter, UserWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    materia?: XOR<MateriaScalarRelationFilter, MateriaWhereInput>
    division?: XOR<DivisionScalarRelationFilter, DivisionWhereInput>
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoListRelationFilter
  }, "id">

  export type CursoOrderByWithAggregationInput = {
    id?: SortOrder
    horaInicio1?: SortOrder
    duracion1?: SortOrder
    horaInicio2?: SortOrderInput | SortOrder
    duracion2?: SortOrderInput | SortOrder
    dia1?: SortOrder
    dia2?: SortOrderInput | SortOrder
    profesorId?: SortOrder
    anioDeCarrera?: SortOrder
    activo?: SortOrder
    ac?: SortOrder
    sedeId?: SortOrder
    materiaId?: SortOrder
    divisionId?: SortOrder
    turno?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: CursoCountOrderByAggregateInput
    _avg?: CursoAvgOrderByAggregateInput
    _max?: CursoMaxOrderByAggregateInput
    _min?: CursoMinOrderByAggregateInput
    _sum?: CursoSumOrderByAggregateInput
  }

  export type CursoScalarWhereWithAggregatesInput = {
    AND?: CursoScalarWhereWithAggregatesInput | CursoScalarWhereWithAggregatesInput[]
    OR?: CursoScalarWhereWithAggregatesInput[]
    NOT?: CursoScalarWhereWithAggregatesInput | CursoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Curso"> | number
    horaInicio1?: StringWithAggregatesFilter<"Curso"> | string
    duracion1?: StringWithAggregatesFilter<"Curso"> | string
    horaInicio2?: StringNullableWithAggregatesFilter<"Curso"> | string | null
    duracion2?: StringNullableWithAggregatesFilter<"Curso"> | string | null
    dia1?: EnumCursoDiaWithAggregatesFilter<"Curso"> | $Enums.CursoDia
    dia2?: EnumCursoDiaNullableWithAggregatesFilter<"Curso"> | $Enums.CursoDia | null
    profesorId?: StringWithAggregatesFilter<"Curso"> | string
    anioDeCarrera?: IntWithAggregatesFilter<"Curso"> | number
    activo?: BoolWithAggregatesFilter<"Curso"> | boolean
    ac?: StringWithAggregatesFilter<"Curso"> | string
    sedeId?: IntWithAggregatesFilter<"Curso"> | number
    materiaId?: IntWithAggregatesFilter<"Curso"> | number
    divisionId?: IntWithAggregatesFilter<"Curso"> | number
    turno?: EnumTurnoCursoWithAggregatesFilter<"Curso"> | $Enums.TurnoCurso
    fechaCreacion?: DateTimeWithAggregatesFilter<"Curso"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Curso"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Curso"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Curso"> | string
  }

  export type CursoAyudanteWhereInput = {
    AND?: CursoAyudanteWhereInput | CursoAyudanteWhereInput[]
    OR?: CursoAyudanteWhereInput[]
    NOT?: CursoAyudanteWhereInput | CursoAyudanteWhereInput[]
    cursoId?: IntFilter<"CursoAyudante"> | number
    userId?: StringFilter<"CursoAyudante"> | string
    fechaCreacion?: DateTimeFilter<"CursoAyudante"> | Date | string
    usuarioCreadorId?: StringFilter<"CursoAyudante"> | string
    fechaModificacion?: DateTimeFilter<"CursoAyudante"> | Date | string
    usuarioModificadorId?: StringFilter<"CursoAyudante"> | string
    curso?: XOR<CursoScalarRelationFilter, CursoWhereInput>
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type CursoAyudanteOrderByWithRelationInput = {
    cursoId?: SortOrder
    userId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaModificacion?: SortOrder
    usuarioModificadorId?: SortOrder
    curso?: CursoOrderByWithRelationInput
    usuario?: UserOrderByWithRelationInput
  }

  export type CursoAyudanteWhereUniqueInput = Prisma.AtLeast<{
    cursoId_userId?: CursoAyudanteCursoIdUserIdCompoundUniqueInput
    AND?: CursoAyudanteWhereInput | CursoAyudanteWhereInput[]
    OR?: CursoAyudanteWhereInput[]
    NOT?: CursoAyudanteWhereInput | CursoAyudanteWhereInput[]
    cursoId?: IntFilter<"CursoAyudante"> | number
    userId?: StringFilter<"CursoAyudante"> | string
    fechaCreacion?: DateTimeFilter<"CursoAyudante"> | Date | string
    usuarioCreadorId?: StringFilter<"CursoAyudante"> | string
    fechaModificacion?: DateTimeFilter<"CursoAyudante"> | Date | string
    usuarioModificadorId?: StringFilter<"CursoAyudante"> | string
    curso?: XOR<CursoScalarRelationFilter, CursoWhereInput>
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "cursoId_userId">

  export type CursoAyudanteOrderByWithAggregationInput = {
    cursoId?: SortOrder
    userId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaModificacion?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: CursoAyudanteCountOrderByAggregateInput
    _avg?: CursoAyudanteAvgOrderByAggregateInput
    _max?: CursoAyudanteMaxOrderByAggregateInput
    _min?: CursoAyudanteMinOrderByAggregateInput
    _sum?: CursoAyudanteSumOrderByAggregateInput
  }

  export type CursoAyudanteScalarWhereWithAggregatesInput = {
    AND?: CursoAyudanteScalarWhereWithAggregatesInput | CursoAyudanteScalarWhereWithAggregatesInput[]
    OR?: CursoAyudanteScalarWhereWithAggregatesInput[]
    NOT?: CursoAyudanteScalarWhereWithAggregatesInput | CursoAyudanteScalarWhereWithAggregatesInput[]
    cursoId?: IntWithAggregatesFilter<"CursoAyudante"> | number
    userId?: StringWithAggregatesFilter<"CursoAyudante"> | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"CursoAyudante"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"CursoAyudante"> | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"CursoAyudante"> | Date | string
    usuarioModificadorId?: StringWithAggregatesFilter<"CursoAyudante"> | string
  }

  export type DivisionWhereInput = {
    AND?: DivisionWhereInput | DivisionWhereInput[]
    OR?: DivisionWhereInput[]
    NOT?: DivisionWhereInput | DivisionWhereInput[]
    id?: IntFilter<"Division"> | number
    nombre?: StringFilter<"Division"> | string
    anio?: IntFilter<"Division"> | number
    fechaCreacion?: DateTimeFilter<"Division"> | Date | string
    usuarioCreadorId?: StringFilter<"Division"> | string
    fechaModificacion?: DateTimeFilter<"Division"> | Date | string
    usuarioModificadorId?: StringFilter<"Division"> | string
    cursos?: CursoListRelationFilter
  }

  export type DivisionOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    anio?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaModificacion?: SortOrder
    usuarioModificadorId?: SortOrder
    cursos?: CursoOrderByRelationAggregateInput
  }

  export type DivisionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: DivisionWhereInput | DivisionWhereInput[]
    OR?: DivisionWhereInput[]
    NOT?: DivisionWhereInput | DivisionWhereInput[]
    anio?: IntFilter<"Division"> | number
    fechaCreacion?: DateTimeFilter<"Division"> | Date | string
    usuarioCreadorId?: StringFilter<"Division"> | string
    fechaModificacion?: DateTimeFilter<"Division"> | Date | string
    usuarioModificadorId?: StringFilter<"Division"> | string
    cursos?: CursoListRelationFilter
  }, "id" | "nombre">

  export type DivisionOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    anio?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaModificacion?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: DivisionCountOrderByAggregateInput
    _avg?: DivisionAvgOrderByAggregateInput
    _max?: DivisionMaxOrderByAggregateInput
    _min?: DivisionMinOrderByAggregateInput
    _sum?: DivisionSumOrderByAggregateInput
  }

  export type DivisionScalarWhereWithAggregatesInput = {
    AND?: DivisionScalarWhereWithAggregatesInput | DivisionScalarWhereWithAggregatesInput[]
    OR?: DivisionScalarWhereWithAggregatesInput[]
    NOT?: DivisionScalarWhereWithAggregatesInput | DivisionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Division"> | number
    nombre?: StringWithAggregatesFilter<"Division"> | string
    anio?: IntWithAggregatesFilter<"Division"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"Division"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Division"> | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Division"> | Date | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Division"> | string
  }

  export type EquipoWhereInput = {
    AND?: EquipoWhereInput | EquipoWhereInput[]
    OR?: EquipoWhereInput[]
    NOT?: EquipoWhereInput | EquipoWhereInput[]
    id?: IntFilter<"Equipo"> | number
    inventarioId?: StringFilter<"Equipo"> | string
    modelo?: StringNullableFilter<"Equipo"> | string | null
    numeroSerie?: StringNullableFilter<"Equipo"> | string | null
    observaciones?: StringNullableFilter<"Equipo"> | string | null
    palabrasClave?: StringNullableFilter<"Equipo"> | string | null
    imagen?: StringNullableFilter<"Equipo"> | string | null
    tipoId?: IntFilter<"Equipo"> | number
    marcaId?: IntFilter<"Equipo"> | number
    sedeId?: IntFilter<"Equipo"> | number
    laboratorioId?: IntFilter<"Equipo"> | number
    armarioId?: IntNullableFilter<"Equipo"> | number | null
    estanteId?: IntNullableFilter<"Equipo"> | number | null
    estadoId?: IntFilter<"Equipo"> | number
    disponible?: BoolFilter<"Equipo"> | boolean
    fechaCreacion?: DateTimeFilter<"Equipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"Equipo"> | Date | string
    usuarioCreadorId?: StringFilter<"Equipo"> | string
    usuarioModificadorId?: StringFilter<"Equipo"> | string
    tipo?: XOR<EquipoTipoScalarRelationFilter, EquipoTipoWhereInput>
    marca?: XOR<EquipoMarcaScalarRelationFilter, EquipoMarcaWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    laboratorio?: XOR<LaboratorioScalarRelationFilter, LaboratorioWhereInput>
    armario?: XOR<ArmarioNullableScalarRelationFilter, ArmarioWhereInput> | null
    estante?: XOR<EstanteNullableScalarRelationFilter, EstanteWhereInput> | null
    estado?: XOR<EquipoEstadoScalarRelationFilter, EquipoEstadoWhereInput>
    reservas?: ReservaEquipoListRelationFilter
  }

  export type EquipoOrderByWithRelationInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    modelo?: SortOrderInput | SortOrder
    numeroSerie?: SortOrderInput | SortOrder
    observaciones?: SortOrderInput | SortOrder
    palabrasClave?: SortOrderInput | SortOrder
    imagen?: SortOrderInput | SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrderInput | SortOrder
    estanteId?: SortOrderInput | SortOrder
    estadoId?: SortOrder
    disponible?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    tipo?: EquipoTipoOrderByWithRelationInput
    marca?: EquipoMarcaOrderByWithRelationInput
    sede?: SedeOrderByWithRelationInput
    laboratorio?: LaboratorioOrderByWithRelationInput
    armario?: ArmarioOrderByWithRelationInput
    estante?: EstanteOrderByWithRelationInput
    estado?: EquipoEstadoOrderByWithRelationInput
    reservas?: ReservaEquipoOrderByRelationAggregateInput
  }

  export type EquipoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    inventarioId?: string
    AND?: EquipoWhereInput | EquipoWhereInput[]
    OR?: EquipoWhereInput[]
    NOT?: EquipoWhereInput | EquipoWhereInput[]
    modelo?: StringNullableFilter<"Equipo"> | string | null
    numeroSerie?: StringNullableFilter<"Equipo"> | string | null
    observaciones?: StringNullableFilter<"Equipo"> | string | null
    palabrasClave?: StringNullableFilter<"Equipo"> | string | null
    imagen?: StringNullableFilter<"Equipo"> | string | null
    tipoId?: IntFilter<"Equipo"> | number
    marcaId?: IntFilter<"Equipo"> | number
    sedeId?: IntFilter<"Equipo"> | number
    laboratorioId?: IntFilter<"Equipo"> | number
    armarioId?: IntNullableFilter<"Equipo"> | number | null
    estanteId?: IntNullableFilter<"Equipo"> | number | null
    estadoId?: IntFilter<"Equipo"> | number
    disponible?: BoolFilter<"Equipo"> | boolean
    fechaCreacion?: DateTimeFilter<"Equipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"Equipo"> | Date | string
    usuarioCreadorId?: StringFilter<"Equipo"> | string
    usuarioModificadorId?: StringFilter<"Equipo"> | string
    tipo?: XOR<EquipoTipoScalarRelationFilter, EquipoTipoWhereInput>
    marca?: XOR<EquipoMarcaScalarRelationFilter, EquipoMarcaWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    laboratorio?: XOR<LaboratorioScalarRelationFilter, LaboratorioWhereInput>
    armario?: XOR<ArmarioNullableScalarRelationFilter, ArmarioWhereInput> | null
    estante?: XOR<EstanteNullableScalarRelationFilter, EstanteWhereInput> | null
    estado?: XOR<EquipoEstadoScalarRelationFilter, EquipoEstadoWhereInput>
    reservas?: ReservaEquipoListRelationFilter
  }, "id" | "inventarioId">

  export type EquipoOrderByWithAggregationInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    modelo?: SortOrderInput | SortOrder
    numeroSerie?: SortOrderInput | SortOrder
    observaciones?: SortOrderInput | SortOrder
    palabrasClave?: SortOrderInput | SortOrder
    imagen?: SortOrderInput | SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrderInput | SortOrder
    estanteId?: SortOrderInput | SortOrder
    estadoId?: SortOrder
    disponible?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: EquipoCountOrderByAggregateInput
    _avg?: EquipoAvgOrderByAggregateInput
    _max?: EquipoMaxOrderByAggregateInput
    _min?: EquipoMinOrderByAggregateInput
    _sum?: EquipoSumOrderByAggregateInput
  }

  export type EquipoScalarWhereWithAggregatesInput = {
    AND?: EquipoScalarWhereWithAggregatesInput | EquipoScalarWhereWithAggregatesInput[]
    OR?: EquipoScalarWhereWithAggregatesInput[]
    NOT?: EquipoScalarWhereWithAggregatesInput | EquipoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Equipo"> | number
    inventarioId?: StringWithAggregatesFilter<"Equipo"> | string
    modelo?: StringNullableWithAggregatesFilter<"Equipo"> | string | null
    numeroSerie?: StringNullableWithAggregatesFilter<"Equipo"> | string | null
    observaciones?: StringNullableWithAggregatesFilter<"Equipo"> | string | null
    palabrasClave?: StringNullableWithAggregatesFilter<"Equipo"> | string | null
    imagen?: StringNullableWithAggregatesFilter<"Equipo"> | string | null
    tipoId?: IntWithAggregatesFilter<"Equipo"> | number
    marcaId?: IntWithAggregatesFilter<"Equipo"> | number
    sedeId?: IntWithAggregatesFilter<"Equipo"> | number
    laboratorioId?: IntWithAggregatesFilter<"Equipo"> | number
    armarioId?: IntNullableWithAggregatesFilter<"Equipo"> | number | null
    estanteId?: IntNullableWithAggregatesFilter<"Equipo"> | number | null
    estadoId?: IntWithAggregatesFilter<"Equipo"> | number
    disponible?: BoolWithAggregatesFilter<"Equipo"> | boolean
    fechaCreacion?: DateTimeWithAggregatesFilter<"Equipo"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Equipo"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Equipo"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Equipo"> | string
  }

  export type EquipoMarcaWhereInput = {
    AND?: EquipoMarcaWhereInput | EquipoMarcaWhereInput[]
    OR?: EquipoMarcaWhereInput[]
    NOT?: EquipoMarcaWhereInput | EquipoMarcaWhereInput[]
    id?: IntFilter<"EquipoMarca"> | number
    nombre?: StringFilter<"EquipoMarca"> | string
    fechaCreacion?: DateTimeFilter<"EquipoMarca"> | Date | string
    usuarioCreadorId?: StringFilter<"EquipoMarca"> | string
    equipos?: EquipoListRelationFilter
  }

  export type EquipoMarcaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    equipos?: EquipoOrderByRelationAggregateInput
  }

  export type EquipoMarcaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EquipoMarcaWhereInput | EquipoMarcaWhereInput[]
    OR?: EquipoMarcaWhereInput[]
    NOT?: EquipoMarcaWhereInput | EquipoMarcaWhereInput[]
    nombre?: StringFilter<"EquipoMarca"> | string
    fechaCreacion?: DateTimeFilter<"EquipoMarca"> | Date | string
    usuarioCreadorId?: StringFilter<"EquipoMarca"> | string
    equipos?: EquipoListRelationFilter
  }, "id">

  export type EquipoMarcaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    _count?: EquipoMarcaCountOrderByAggregateInput
    _avg?: EquipoMarcaAvgOrderByAggregateInput
    _max?: EquipoMarcaMaxOrderByAggregateInput
    _min?: EquipoMarcaMinOrderByAggregateInput
    _sum?: EquipoMarcaSumOrderByAggregateInput
  }

  export type EquipoMarcaScalarWhereWithAggregatesInput = {
    AND?: EquipoMarcaScalarWhereWithAggregatesInput | EquipoMarcaScalarWhereWithAggregatesInput[]
    OR?: EquipoMarcaScalarWhereWithAggregatesInput[]
    NOT?: EquipoMarcaScalarWhereWithAggregatesInput | EquipoMarcaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EquipoMarca"> | number
    nombre?: StringWithAggregatesFilter<"EquipoMarca"> | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"EquipoMarca"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"EquipoMarca"> | string
  }

  export type EquipoTipoWhereInput = {
    AND?: EquipoTipoWhereInput | EquipoTipoWhereInput[]
    OR?: EquipoTipoWhereInput[]
    NOT?: EquipoTipoWhereInput | EquipoTipoWhereInput[]
    id?: IntFilter<"EquipoTipo"> | number
    nombre?: StringFilter<"EquipoTipo"> | string
    imagen?: StringNullableFilter<"EquipoTipo"> | string | null
    fechaCreacion?: DateTimeFilter<"EquipoTipo"> | Date | string
    usuarioCreadorId?: StringFilter<"EquipoTipo"> | string
    equipos?: EquipoListRelationFilter
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoListRelationFilter
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoListRelationFilter
  }

  export type EquipoTipoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    imagen?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    equipos?: EquipoOrderByRelationAggregateInput
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoOrderByRelationAggregateInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoOrderByRelationAggregateInput
  }

  export type EquipoTipoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EquipoTipoWhereInput | EquipoTipoWhereInput[]
    OR?: EquipoTipoWhereInput[]
    NOT?: EquipoTipoWhereInput | EquipoTipoWhereInput[]
    nombre?: StringFilter<"EquipoTipo"> | string
    imagen?: StringNullableFilter<"EquipoTipo"> | string | null
    fechaCreacion?: DateTimeFilter<"EquipoTipo"> | Date | string
    usuarioCreadorId?: StringFilter<"EquipoTipo"> | string
    equipos?: EquipoListRelationFilter
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoListRelationFilter
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoListRelationFilter
  }, "id">

  export type EquipoTipoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    imagen?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    _count?: EquipoTipoCountOrderByAggregateInput
    _avg?: EquipoTipoAvgOrderByAggregateInput
    _max?: EquipoTipoMaxOrderByAggregateInput
    _min?: EquipoTipoMinOrderByAggregateInput
    _sum?: EquipoTipoSumOrderByAggregateInput
  }

  export type EquipoTipoScalarWhereWithAggregatesInput = {
    AND?: EquipoTipoScalarWhereWithAggregatesInput | EquipoTipoScalarWhereWithAggregatesInput[]
    OR?: EquipoTipoScalarWhereWithAggregatesInput[]
    NOT?: EquipoTipoScalarWhereWithAggregatesInput | EquipoTipoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EquipoTipo"> | number
    nombre?: StringWithAggregatesFilter<"EquipoTipo"> | string
    imagen?: StringNullableWithAggregatesFilter<"EquipoTipo"> | string | null
    fechaCreacion?: DateTimeWithAggregatesFilter<"EquipoTipo"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"EquipoTipo"> | string
  }

  export type EquipoEstadoWhereInput = {
    AND?: EquipoEstadoWhereInput | EquipoEstadoWhereInput[]
    OR?: EquipoEstadoWhereInput[]
    NOT?: EquipoEstadoWhereInput | EquipoEstadoWhereInput[]
    id?: IntFilter<"EquipoEstado"> | number
    nombre?: StringFilter<"EquipoEstado"> | string
    fechaCreacion?: DateTimeFilter<"EquipoEstado"> | Date | string
    usuarioCreadorId?: StringFilter<"EquipoEstado"> | string
    equipos?: EquipoListRelationFilter
  }

  export type EquipoEstadoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    equipos?: EquipoOrderByRelationAggregateInput
  }

  export type EquipoEstadoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EquipoEstadoWhereInput | EquipoEstadoWhereInput[]
    OR?: EquipoEstadoWhereInput[]
    NOT?: EquipoEstadoWhereInput | EquipoEstadoWhereInput[]
    nombre?: StringFilter<"EquipoEstado"> | string
    fechaCreacion?: DateTimeFilter<"EquipoEstado"> | Date | string
    usuarioCreadorId?: StringFilter<"EquipoEstado"> | string
    equipos?: EquipoListRelationFilter
  }, "id">

  export type EquipoEstadoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    _count?: EquipoEstadoCountOrderByAggregateInput
    _avg?: EquipoEstadoAvgOrderByAggregateInput
    _max?: EquipoEstadoMaxOrderByAggregateInput
    _min?: EquipoEstadoMinOrderByAggregateInput
    _sum?: EquipoEstadoSumOrderByAggregateInput
  }

  export type EquipoEstadoScalarWhereWithAggregatesInput = {
    AND?: EquipoEstadoScalarWhereWithAggregatesInput | EquipoEstadoScalarWhereWithAggregatesInput[]
    OR?: EquipoEstadoScalarWhereWithAggregatesInput[]
    NOT?: EquipoEstadoScalarWhereWithAggregatesInput | EquipoEstadoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EquipoEstado"> | number
    nombre?: StringWithAggregatesFilter<"EquipoEstado"> | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"EquipoEstado"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"EquipoEstado"> | string
  }

  export type LaboratorioWhereInput = {
    AND?: LaboratorioWhereInput | LaboratorioWhereInput[]
    OR?: LaboratorioWhereInput[]
    NOT?: LaboratorioWhereInput | LaboratorioWhereInput[]
    id?: IntFilter<"Laboratorio"> | number
    nombre?: StringFilter<"Laboratorio"> | string
    tienePc?: BoolFilter<"Laboratorio"> | boolean
    esReservable?: BoolFilter<"Laboratorio"> | boolean
    incluirEnReporte?: BoolFilter<"Laboratorio"> | boolean
    sedeId?: IntFilter<"Laboratorio"> | number
    fechaCreacion?: DateTimeFilter<"Laboratorio"> | Date | string
    fechaModificacion?: DateTimeFilter<"Laboratorio"> | Date | string
    usuarioCreadorId?: StringFilter<"Laboratorio"> | string
    usuarioModificadorId?: StringFilter<"Laboratorio"> | string
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    software?: SoftwareLaboratorioListRelationFilter
    armarios?: ArmarioListRelationFilter
    equipos?: EquipoListRelationFilter
    libros?: LibroListRelationFilter
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoListRelationFilter
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoListRelationFilter
  }

  export type LaboratorioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tienePc?: SortOrder
    esReservable?: SortOrder
    incluirEnReporte?: SortOrder
    sedeId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    sede?: SedeOrderByWithRelationInput
    software?: SoftwareLaboratorioOrderByRelationAggregateInput
    armarios?: ArmarioOrderByRelationAggregateInput
    equipos?: EquipoOrderByRelationAggregateInput
    libros?: LibroOrderByRelationAggregateInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoOrderByRelationAggregateInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoOrderByRelationAggregateInput
  }

  export type LaboratorioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: LaboratorioWhereInput | LaboratorioWhereInput[]
    OR?: LaboratorioWhereInput[]
    NOT?: LaboratorioWhereInput | LaboratorioWhereInput[]
    nombre?: StringFilter<"Laboratorio"> | string
    tienePc?: BoolFilter<"Laboratorio"> | boolean
    esReservable?: BoolFilter<"Laboratorio"> | boolean
    incluirEnReporte?: BoolFilter<"Laboratorio"> | boolean
    sedeId?: IntFilter<"Laboratorio"> | number
    fechaCreacion?: DateTimeFilter<"Laboratorio"> | Date | string
    fechaModificacion?: DateTimeFilter<"Laboratorio"> | Date | string
    usuarioCreadorId?: StringFilter<"Laboratorio"> | string
    usuarioModificadorId?: StringFilter<"Laboratorio"> | string
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    software?: SoftwareLaboratorioListRelationFilter
    armarios?: ArmarioListRelationFilter
    equipos?: EquipoListRelationFilter
    libros?: LibroListRelationFilter
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoListRelationFilter
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoListRelationFilter
  }, "id">

  export type LaboratorioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tienePc?: SortOrder
    esReservable?: SortOrder
    incluirEnReporte?: SortOrder
    sedeId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: LaboratorioCountOrderByAggregateInput
    _avg?: LaboratorioAvgOrderByAggregateInput
    _max?: LaboratorioMaxOrderByAggregateInput
    _min?: LaboratorioMinOrderByAggregateInput
    _sum?: LaboratorioSumOrderByAggregateInput
  }

  export type LaboratorioScalarWhereWithAggregatesInput = {
    AND?: LaboratorioScalarWhereWithAggregatesInput | LaboratorioScalarWhereWithAggregatesInput[]
    OR?: LaboratorioScalarWhereWithAggregatesInput[]
    NOT?: LaboratorioScalarWhereWithAggregatesInput | LaboratorioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Laboratorio"> | number
    nombre?: StringWithAggregatesFilter<"Laboratorio"> | string
    tienePc?: BoolWithAggregatesFilter<"Laboratorio"> | boolean
    esReservable?: BoolWithAggregatesFilter<"Laboratorio"> | boolean
    incluirEnReporte?: BoolWithAggregatesFilter<"Laboratorio"> | boolean
    sedeId?: IntWithAggregatesFilter<"Laboratorio"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"Laboratorio"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Laboratorio"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Laboratorio"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Laboratorio"> | string
  }

  export type ArmarioWhereInput = {
    AND?: ArmarioWhereInput | ArmarioWhereInput[]
    OR?: ArmarioWhereInput[]
    NOT?: ArmarioWhereInput | ArmarioWhereInput[]
    id?: IntFilter<"Armario"> | number
    nombre?: StringFilter<"Armario"> | string
    laboratorioId?: IntFilter<"Armario"> | number
    fechaCreacion?: DateTimeFilter<"Armario"> | Date | string
    fechaModificacion?: DateTimeFilter<"Armario"> | Date | string
    usuarioCreadorId?: StringFilter<"Armario"> | string
    usuarioModificadorId?: StringFilter<"Armario"> | string
    laboratorio?: XOR<LaboratorioScalarRelationFilter, LaboratorioWhereInput>
    estantes?: EstanteListRelationFilter
    equipos?: EquipoListRelationFilter
    libros?: LibroListRelationFilter
  }

  export type ArmarioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    laboratorio?: LaboratorioOrderByWithRelationInput
    estantes?: EstanteOrderByRelationAggregateInput
    equipos?: EquipoOrderByRelationAggregateInput
    libros?: LibroOrderByRelationAggregateInput
  }

  export type ArmarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ArmarioWhereInput | ArmarioWhereInput[]
    OR?: ArmarioWhereInput[]
    NOT?: ArmarioWhereInput | ArmarioWhereInput[]
    nombre?: StringFilter<"Armario"> | string
    laboratorioId?: IntFilter<"Armario"> | number
    fechaCreacion?: DateTimeFilter<"Armario"> | Date | string
    fechaModificacion?: DateTimeFilter<"Armario"> | Date | string
    usuarioCreadorId?: StringFilter<"Armario"> | string
    usuarioModificadorId?: StringFilter<"Armario"> | string
    laboratorio?: XOR<LaboratorioScalarRelationFilter, LaboratorioWhereInput>
    estantes?: EstanteListRelationFilter
    equipos?: EquipoListRelationFilter
    libros?: LibroListRelationFilter
  }, "id">

  export type ArmarioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: ArmarioCountOrderByAggregateInput
    _avg?: ArmarioAvgOrderByAggregateInput
    _max?: ArmarioMaxOrderByAggregateInput
    _min?: ArmarioMinOrderByAggregateInput
    _sum?: ArmarioSumOrderByAggregateInput
  }

  export type ArmarioScalarWhereWithAggregatesInput = {
    AND?: ArmarioScalarWhereWithAggregatesInput | ArmarioScalarWhereWithAggregatesInput[]
    OR?: ArmarioScalarWhereWithAggregatesInput[]
    NOT?: ArmarioScalarWhereWithAggregatesInput | ArmarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Armario"> | number
    nombre?: StringWithAggregatesFilter<"Armario"> | string
    laboratorioId?: IntWithAggregatesFilter<"Armario"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"Armario"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Armario"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Armario"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Armario"> | string
  }

  export type EstanteWhereInput = {
    AND?: EstanteWhereInput | EstanteWhereInput[]
    OR?: EstanteWhereInput[]
    NOT?: EstanteWhereInput | EstanteWhereInput[]
    id?: IntFilter<"Estante"> | number
    nombre?: StringFilter<"Estante"> | string
    armarioId?: IntFilter<"Estante"> | number
    fechaCreacion?: DateTimeFilter<"Estante"> | Date | string
    fechaModificacion?: DateTimeFilter<"Estante"> | Date | string
    usuarioCreadorId?: StringFilter<"Estante"> | string
    usuarioModificadorId?: StringFilter<"Estante"> | string
    armario?: XOR<ArmarioScalarRelationFilter, ArmarioWhereInput>
    equipos?: EquipoListRelationFilter
    libros?: LibroListRelationFilter
  }

  export type EstanteOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    armarioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    armario?: ArmarioOrderByWithRelationInput
    equipos?: EquipoOrderByRelationAggregateInput
    libros?: LibroOrderByRelationAggregateInput
  }

  export type EstanteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EstanteWhereInput | EstanteWhereInput[]
    OR?: EstanteWhereInput[]
    NOT?: EstanteWhereInput | EstanteWhereInput[]
    nombre?: StringFilter<"Estante"> | string
    armarioId?: IntFilter<"Estante"> | number
    fechaCreacion?: DateTimeFilter<"Estante"> | Date | string
    fechaModificacion?: DateTimeFilter<"Estante"> | Date | string
    usuarioCreadorId?: StringFilter<"Estante"> | string
    usuarioModificadorId?: StringFilter<"Estante"> | string
    armario?: XOR<ArmarioScalarRelationFilter, ArmarioWhereInput>
    equipos?: EquipoListRelationFilter
    libros?: LibroListRelationFilter
  }, "id">

  export type EstanteOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    armarioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: EstanteCountOrderByAggregateInput
    _avg?: EstanteAvgOrderByAggregateInput
    _max?: EstanteMaxOrderByAggregateInput
    _min?: EstanteMinOrderByAggregateInput
    _sum?: EstanteSumOrderByAggregateInput
  }

  export type EstanteScalarWhereWithAggregatesInput = {
    AND?: EstanteScalarWhereWithAggregatesInput | EstanteScalarWhereWithAggregatesInput[]
    OR?: EstanteScalarWhereWithAggregatesInput[]
    NOT?: EstanteScalarWhereWithAggregatesInput | EstanteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Estante"> | number
    nombre?: StringWithAggregatesFilter<"Estante"> | string
    armarioId?: IntWithAggregatesFilter<"Estante"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"Estante"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Estante"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Estante"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Estante"> | string
  }

  export type SoftwareWhereInput = {
    AND?: SoftwareWhereInput | SoftwareWhereInput[]
    OR?: SoftwareWhereInput[]
    NOT?: SoftwareWhereInput | SoftwareWhereInput[]
    id?: IntFilter<"Software"> | number
    nombre?: StringFilter<"Software"> | string
    version?: StringFilter<"Software"> | string
    estado?: StringFilter<"Software"> | string
    windows?: BoolFilter<"Software"> | boolean
    linux?: BoolFilter<"Software"> | boolean
    fechaCreacion?: DateTimeFilter<"Software"> | Date | string
    fechaModificacion?: DateTimeFilter<"Software"> | Date | string
    usuarioCreadorId?: StringFilter<"Software"> | string
    usuarioModificadorId?: StringFilter<"Software"> | string
    laboratorios?: SoftwareLaboratorioListRelationFilter
  }

  export type SoftwareOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    version?: SortOrder
    estado?: SortOrder
    windows?: SortOrder
    linux?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    laboratorios?: SoftwareLaboratorioOrderByRelationAggregateInput
  }

  export type SoftwareWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SoftwareWhereInput | SoftwareWhereInput[]
    OR?: SoftwareWhereInput[]
    NOT?: SoftwareWhereInput | SoftwareWhereInput[]
    nombre?: StringFilter<"Software"> | string
    version?: StringFilter<"Software"> | string
    estado?: StringFilter<"Software"> | string
    windows?: BoolFilter<"Software"> | boolean
    linux?: BoolFilter<"Software"> | boolean
    fechaCreacion?: DateTimeFilter<"Software"> | Date | string
    fechaModificacion?: DateTimeFilter<"Software"> | Date | string
    usuarioCreadorId?: StringFilter<"Software"> | string
    usuarioModificadorId?: StringFilter<"Software"> | string
    laboratorios?: SoftwareLaboratorioListRelationFilter
  }, "id">

  export type SoftwareOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    version?: SortOrder
    estado?: SortOrder
    windows?: SortOrder
    linux?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: SoftwareCountOrderByAggregateInput
    _avg?: SoftwareAvgOrderByAggregateInput
    _max?: SoftwareMaxOrderByAggregateInput
    _min?: SoftwareMinOrderByAggregateInput
    _sum?: SoftwareSumOrderByAggregateInput
  }

  export type SoftwareScalarWhereWithAggregatesInput = {
    AND?: SoftwareScalarWhereWithAggregatesInput | SoftwareScalarWhereWithAggregatesInput[]
    OR?: SoftwareScalarWhereWithAggregatesInput[]
    NOT?: SoftwareScalarWhereWithAggregatesInput | SoftwareScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Software"> | number
    nombre?: StringWithAggregatesFilter<"Software"> | string
    version?: StringWithAggregatesFilter<"Software"> | string
    estado?: StringWithAggregatesFilter<"Software"> | string
    windows?: BoolWithAggregatesFilter<"Software"> | boolean
    linux?: BoolWithAggregatesFilter<"Software"> | boolean
    fechaCreacion?: DateTimeWithAggregatesFilter<"Software"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Software"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Software"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Software"> | string
  }

  export type SoftwareLaboratorioWhereInput = {
    AND?: SoftwareLaboratorioWhereInput | SoftwareLaboratorioWhereInput[]
    OR?: SoftwareLaboratorioWhereInput[]
    NOT?: SoftwareLaboratorioWhereInput | SoftwareLaboratorioWhereInput[]
    softwareId?: IntFilter<"SoftwareLaboratorio"> | number
    laboratorioId?: IntFilter<"SoftwareLaboratorio"> | number
    fechaCreacion?: DateTimeFilter<"SoftwareLaboratorio"> | Date | string
    usuarioCreadorId?: StringFilter<"SoftwareLaboratorio"> | string
    software?: XOR<SoftwareScalarRelationFilter, SoftwareWhereInput>
    laboratorio?: XOR<LaboratorioScalarRelationFilter, LaboratorioWhereInput>
  }

  export type SoftwareLaboratorioOrderByWithRelationInput = {
    softwareId?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    software?: SoftwareOrderByWithRelationInput
    laboratorio?: LaboratorioOrderByWithRelationInput
  }

  export type SoftwareLaboratorioWhereUniqueInput = Prisma.AtLeast<{
    softwareId_laboratorioId?: SoftwareLaboratorioSoftwareIdLaboratorioIdCompoundUniqueInput
    AND?: SoftwareLaboratorioWhereInput | SoftwareLaboratorioWhereInput[]
    OR?: SoftwareLaboratorioWhereInput[]
    NOT?: SoftwareLaboratorioWhereInput | SoftwareLaboratorioWhereInput[]
    softwareId?: IntFilter<"SoftwareLaboratorio"> | number
    laboratorioId?: IntFilter<"SoftwareLaboratorio"> | number
    fechaCreacion?: DateTimeFilter<"SoftwareLaboratorio"> | Date | string
    usuarioCreadorId?: StringFilter<"SoftwareLaboratorio"> | string
    software?: XOR<SoftwareScalarRelationFilter, SoftwareWhereInput>
    laboratorio?: XOR<LaboratorioScalarRelationFilter, LaboratorioWhereInput>
  }, "softwareId_laboratorioId">

  export type SoftwareLaboratorioOrderByWithAggregationInput = {
    softwareId?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    _count?: SoftwareLaboratorioCountOrderByAggregateInput
    _avg?: SoftwareLaboratorioAvgOrderByAggregateInput
    _max?: SoftwareLaboratorioMaxOrderByAggregateInput
    _min?: SoftwareLaboratorioMinOrderByAggregateInput
    _sum?: SoftwareLaboratorioSumOrderByAggregateInput
  }

  export type SoftwareLaboratorioScalarWhereWithAggregatesInput = {
    AND?: SoftwareLaboratorioScalarWhereWithAggregatesInput | SoftwareLaboratorioScalarWhereWithAggregatesInput[]
    OR?: SoftwareLaboratorioScalarWhereWithAggregatesInput[]
    NOT?: SoftwareLaboratorioScalarWhereWithAggregatesInput | SoftwareLaboratorioScalarWhereWithAggregatesInput[]
    softwareId?: IntWithAggregatesFilter<"SoftwareLaboratorio"> | number
    laboratorioId?: IntWithAggregatesFilter<"SoftwareLaboratorio"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"SoftwareLaboratorio"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"SoftwareLaboratorio"> | string
  }

  export type MailsWhereInput = {
    AND?: MailsWhereInput | MailsWhereInput[]
    OR?: MailsWhereInput[]
    NOT?: MailsWhereInput | MailsWhereInput[]
    id?: IntFilter<"Mails"> | number
    emisor?: StringFilter<"Mails"> | string
    para?: StringFilter<"Mails"> | string
    cc?: StringFilter<"Mails"> | string
    cco?: StringFilter<"Mails"> | string
    contenido?: JsonFilter<"Mails">
    asunto?: StringFilter<"Mails"> | string
    fechaEnvio?: DateTimeFilter<"Mails"> | Date | string
  }

  export type MailsOrderByWithRelationInput = {
    id?: SortOrder
    emisor?: SortOrder
    para?: SortOrder
    cc?: SortOrder
    cco?: SortOrder
    contenido?: SortOrder
    asunto?: SortOrder
    fechaEnvio?: SortOrder
  }

  export type MailsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MailsWhereInput | MailsWhereInput[]
    OR?: MailsWhereInput[]
    NOT?: MailsWhereInput | MailsWhereInput[]
    emisor?: StringFilter<"Mails"> | string
    para?: StringFilter<"Mails"> | string
    cc?: StringFilter<"Mails"> | string
    cco?: StringFilter<"Mails"> | string
    contenido?: JsonFilter<"Mails">
    asunto?: StringFilter<"Mails"> | string
    fechaEnvio?: DateTimeFilter<"Mails"> | Date | string
  }, "id">

  export type MailsOrderByWithAggregationInput = {
    id?: SortOrder
    emisor?: SortOrder
    para?: SortOrder
    cc?: SortOrder
    cco?: SortOrder
    contenido?: SortOrder
    asunto?: SortOrder
    fechaEnvio?: SortOrder
    _count?: MailsCountOrderByAggregateInput
    _avg?: MailsAvgOrderByAggregateInput
    _max?: MailsMaxOrderByAggregateInput
    _min?: MailsMinOrderByAggregateInput
    _sum?: MailsSumOrderByAggregateInput
  }

  export type MailsScalarWhereWithAggregatesInput = {
    AND?: MailsScalarWhereWithAggregatesInput | MailsScalarWhereWithAggregatesInput[]
    OR?: MailsScalarWhereWithAggregatesInput[]
    NOT?: MailsScalarWhereWithAggregatesInput | MailsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mails"> | number
    emisor?: StringWithAggregatesFilter<"Mails"> | string
    para?: StringWithAggregatesFilter<"Mails"> | string
    cc?: StringWithAggregatesFilter<"Mails"> | string
    cco?: StringWithAggregatesFilter<"Mails"> | string
    contenido?: JsonWithAggregatesFilter<"Mails">
    asunto?: StringWithAggregatesFilter<"Mails"> | string
    fechaEnvio?: DateTimeWithAggregatesFilter<"Mails"> | Date | string
  }

  export type MateriaWhereInput = {
    AND?: MateriaWhereInput | MateriaWhereInput[]
    OR?: MateriaWhereInput[]
    NOT?: MateriaWhereInput | MateriaWhereInput[]
    id?: IntFilter<"Materia"> | number
    nombre?: StringFilter<"Materia"> | string
    codigo?: StringFilter<"Materia"> | string
    anio?: IntFilter<"Materia"> | number
    duracion?: EnumMateriaDuracionFilter<"Materia"> | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFilter<"Materia"> | $Enums.MateriaTipo
    directorUsuarioId?: StringNullableFilter<"Materia"> | string | null
    fechaCreacion?: DateTimeFilter<"Materia"> | Date | string
    fechaModificacion?: DateTimeFilter<"Materia"> | Date | string
    usuarioCreadorId?: StringFilter<"Materia"> | string
    usuarioModificadorId?: StringFilter<"Materia"> | string
    directorUsuario?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    jefeTrabajoPracticos?: MateriaJefeTpListRelationFilter
    cursos?: CursoListRelationFilter
    libros?: LibroMateriaListRelationFilter
    materiaPrerequisito?: MateriaCorrelativaListRelationFilter
    correlativa?: MateriaCorrelativaListRelationFilter
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoListRelationFilter
  }

  export type MateriaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    anio?: SortOrder
    duracion?: SortOrder
    tipo?: SortOrder
    directorUsuarioId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    directorUsuario?: UserOrderByWithRelationInput
    jefeTrabajoPracticos?: MateriaJefeTpOrderByRelationAggregateInput
    cursos?: CursoOrderByRelationAggregateInput
    libros?: LibroMateriaOrderByRelationAggregateInput
    materiaPrerequisito?: MateriaCorrelativaOrderByRelationAggregateInput
    correlativa?: MateriaCorrelativaOrderByRelationAggregateInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoOrderByRelationAggregateInput
  }

  export type MateriaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigo?: string
    AND?: MateriaWhereInput | MateriaWhereInput[]
    OR?: MateriaWhereInput[]
    NOT?: MateriaWhereInput | MateriaWhereInput[]
    nombre?: StringFilter<"Materia"> | string
    anio?: IntFilter<"Materia"> | number
    duracion?: EnumMateriaDuracionFilter<"Materia"> | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFilter<"Materia"> | $Enums.MateriaTipo
    directorUsuarioId?: StringNullableFilter<"Materia"> | string | null
    fechaCreacion?: DateTimeFilter<"Materia"> | Date | string
    fechaModificacion?: DateTimeFilter<"Materia"> | Date | string
    usuarioCreadorId?: StringFilter<"Materia"> | string
    usuarioModificadorId?: StringFilter<"Materia"> | string
    directorUsuario?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    jefeTrabajoPracticos?: MateriaJefeTpListRelationFilter
    cursos?: CursoListRelationFilter
    libros?: LibroMateriaListRelationFilter
    materiaPrerequisito?: MateriaCorrelativaListRelationFilter
    correlativa?: MateriaCorrelativaListRelationFilter
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoListRelationFilter
  }, "id" | "codigo">

  export type MateriaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    anio?: SortOrder
    duracion?: SortOrder
    tipo?: SortOrder
    directorUsuarioId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: MateriaCountOrderByAggregateInput
    _avg?: MateriaAvgOrderByAggregateInput
    _max?: MateriaMaxOrderByAggregateInput
    _min?: MateriaMinOrderByAggregateInput
    _sum?: MateriaSumOrderByAggregateInput
  }

  export type MateriaScalarWhereWithAggregatesInput = {
    AND?: MateriaScalarWhereWithAggregatesInput | MateriaScalarWhereWithAggregatesInput[]
    OR?: MateriaScalarWhereWithAggregatesInput[]
    NOT?: MateriaScalarWhereWithAggregatesInput | MateriaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Materia"> | number
    nombre?: StringWithAggregatesFilter<"Materia"> | string
    codigo?: StringWithAggregatesFilter<"Materia"> | string
    anio?: IntWithAggregatesFilter<"Materia"> | number
    duracion?: EnumMateriaDuracionWithAggregatesFilter<"Materia"> | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoWithAggregatesFilter<"Materia"> | $Enums.MateriaTipo
    directorUsuarioId?: StringNullableWithAggregatesFilter<"Materia"> | string | null
    fechaCreacion?: DateTimeWithAggregatesFilter<"Materia"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Materia"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Materia"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Materia"> | string
  }

  export type MateriaJefeTpWhereInput = {
    AND?: MateriaJefeTpWhereInput | MateriaJefeTpWhereInput[]
    OR?: MateriaJefeTpWhereInput[]
    NOT?: MateriaJefeTpWhereInput | MateriaJefeTpWhereInput[]
    materiaId?: IntFilter<"MateriaJefeTp"> | number
    userId?: StringFilter<"MateriaJefeTp"> | string
    materia?: XOR<MateriaScalarRelationFilter, MateriaWhereInput>
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type MateriaJefeTpOrderByWithRelationInput = {
    materiaId?: SortOrder
    userId?: SortOrder
    materia?: MateriaOrderByWithRelationInput
    usuario?: UserOrderByWithRelationInput
  }

  export type MateriaJefeTpWhereUniqueInput = Prisma.AtLeast<{
    materiaId_userId?: MateriaJefeTpMateriaIdUserIdCompoundUniqueInput
    AND?: MateriaJefeTpWhereInput | MateriaJefeTpWhereInput[]
    OR?: MateriaJefeTpWhereInput[]
    NOT?: MateriaJefeTpWhereInput | MateriaJefeTpWhereInput[]
    materiaId?: IntFilter<"MateriaJefeTp"> | number
    userId?: StringFilter<"MateriaJefeTp"> | string
    materia?: XOR<MateriaScalarRelationFilter, MateriaWhereInput>
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "materiaId_userId">

  export type MateriaJefeTpOrderByWithAggregationInput = {
    materiaId?: SortOrder
    userId?: SortOrder
    _count?: MateriaJefeTpCountOrderByAggregateInput
    _avg?: MateriaJefeTpAvgOrderByAggregateInput
    _max?: MateriaJefeTpMaxOrderByAggregateInput
    _min?: MateriaJefeTpMinOrderByAggregateInput
    _sum?: MateriaJefeTpSumOrderByAggregateInput
  }

  export type MateriaJefeTpScalarWhereWithAggregatesInput = {
    AND?: MateriaJefeTpScalarWhereWithAggregatesInput | MateriaJefeTpScalarWhereWithAggregatesInput[]
    OR?: MateriaJefeTpScalarWhereWithAggregatesInput[]
    NOT?: MateriaJefeTpScalarWhereWithAggregatesInput | MateriaJefeTpScalarWhereWithAggregatesInput[]
    materiaId?: IntWithAggregatesFilter<"MateriaJefeTp"> | number
    userId?: StringWithAggregatesFilter<"MateriaJefeTp"> | string
  }

  export type MateriaCorrelativaWhereInput = {
    AND?: MateriaCorrelativaWhereInput | MateriaCorrelativaWhereInput[]
    OR?: MateriaCorrelativaWhereInput[]
    NOT?: MateriaCorrelativaWhereInput | MateriaCorrelativaWhereInput[]
    materiaPrerequisitoId?: IntFilter<"MateriaCorrelativa"> | number
    correlativaId?: IntFilter<"MateriaCorrelativa"> | number
    estatusCorrelativa?: EnumEstatusCorrelativaFilter<"MateriaCorrelativa"> | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFilter<"MateriaCorrelativa"> | Date | string
    fechaModificacion?: DateTimeFilter<"MateriaCorrelativa"> | Date | string
    usuarioCreadorId?: StringFilter<"MateriaCorrelativa"> | string
    usuarioModificadorId?: StringFilter<"MateriaCorrelativa"> | string
    materiaPrerequisito?: XOR<MateriaScalarRelationFilter, MateriaWhereInput>
    correlativa?: XOR<MateriaScalarRelationFilter, MateriaWhereInput>
  }

  export type MateriaCorrelativaOrderByWithRelationInput = {
    materiaPrerequisitoId?: SortOrder
    correlativaId?: SortOrder
    estatusCorrelativa?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    materiaPrerequisito?: MateriaOrderByWithRelationInput
    correlativa?: MateriaOrderByWithRelationInput
  }

  export type MateriaCorrelativaWhereUniqueInput = Prisma.AtLeast<{
    estatusCorrelativa_materiaPrerequisitoId_correlativaId?: MateriaCorrelativaEstatusCorrelativaMateriaPrerequisitoIdCorrelativaIdCompoundUniqueInput
    AND?: MateriaCorrelativaWhereInput | MateriaCorrelativaWhereInput[]
    OR?: MateriaCorrelativaWhereInput[]
    NOT?: MateriaCorrelativaWhereInput | MateriaCorrelativaWhereInput[]
    materiaPrerequisitoId?: IntFilter<"MateriaCorrelativa"> | number
    correlativaId?: IntFilter<"MateriaCorrelativa"> | number
    estatusCorrelativa?: EnumEstatusCorrelativaFilter<"MateriaCorrelativa"> | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFilter<"MateriaCorrelativa"> | Date | string
    fechaModificacion?: DateTimeFilter<"MateriaCorrelativa"> | Date | string
    usuarioCreadorId?: StringFilter<"MateriaCorrelativa"> | string
    usuarioModificadorId?: StringFilter<"MateriaCorrelativa"> | string
    materiaPrerequisito?: XOR<MateriaScalarRelationFilter, MateriaWhereInput>
    correlativa?: XOR<MateriaScalarRelationFilter, MateriaWhereInput>
  }, "estatusCorrelativa_materiaPrerequisitoId_correlativaId">

  export type MateriaCorrelativaOrderByWithAggregationInput = {
    materiaPrerequisitoId?: SortOrder
    correlativaId?: SortOrder
    estatusCorrelativa?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: MateriaCorrelativaCountOrderByAggregateInput
    _avg?: MateriaCorrelativaAvgOrderByAggregateInput
    _max?: MateriaCorrelativaMaxOrderByAggregateInput
    _min?: MateriaCorrelativaMinOrderByAggregateInput
    _sum?: MateriaCorrelativaSumOrderByAggregateInput
  }

  export type MateriaCorrelativaScalarWhereWithAggregatesInput = {
    AND?: MateriaCorrelativaScalarWhereWithAggregatesInput | MateriaCorrelativaScalarWhereWithAggregatesInput[]
    OR?: MateriaCorrelativaScalarWhereWithAggregatesInput[]
    NOT?: MateriaCorrelativaScalarWhereWithAggregatesInput | MateriaCorrelativaScalarWhereWithAggregatesInput[]
    materiaPrerequisitoId?: IntWithAggregatesFilter<"MateriaCorrelativa"> | number
    correlativaId?: IntWithAggregatesFilter<"MateriaCorrelativa"> | number
    estatusCorrelativa?: EnumEstatusCorrelativaWithAggregatesFilter<"MateriaCorrelativa"> | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeWithAggregatesFilter<"MateriaCorrelativa"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"MateriaCorrelativa"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"MateriaCorrelativa"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"MateriaCorrelativa"> | string
  }

  export type ReservaWhereInput = {
    AND?: ReservaWhereInput | ReservaWhereInput[]
    OR?: ReservaWhereInput[]
    NOT?: ReservaWhereInput | ReservaWhereInput[]
    id?: IntFilter<"Reserva"> | number
    estatus?: EnumReservaEstatusFilter<"Reserva"> | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFilter<"Reserva"> | Date | string
    fechaHoraFin?: DateTimeFilter<"Reserva"> | Date | string
    tipo?: EnumReservaTipoFilter<"Reserva"> | $Enums.ReservaTipo
    asistio?: BoolFilter<"Reserva"> | boolean
    motivoRechazo?: StringNullableFilter<"Reserva"> | string | null
    usuarioSolicitoId?: StringFilter<"Reserva"> | string
    usuarioAprobadorId?: StringNullableFilter<"Reserva"> | string | null
    usuarioRechazadoId?: StringNullableFilter<"Reserva"> | string | null
    usuarioRenovoId?: StringNullableFilter<"Reserva"> | string | null
    usuarioRecibioId?: StringNullableFilter<"Reserva"> | string | null
    usuarioTutorId?: StringNullableFilter<"Reserva"> | string | null
    fechaRenovacion?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    fechaAprobacion?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    fechaRechazo?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    fechaRecibido?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    usuarioCreadorId?: StringFilter<"Reserva"> | string
    usuarioModificadorId?: StringFilter<"Reserva"> | string
    fechaCreacion?: DateTimeFilter<"Reserva"> | Date | string
    fechaModificacion?: DateTimeFilter<"Reserva"> | Date | string
    mostrarEnPantalla?: BoolFilter<"Reserva"> | boolean
    usuarioSolicito?: XOR<UserScalarRelationFilter, UserWhereInput>
    usuarioAprobador?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    usuarioRechazado?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    usuarioRenovo?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    usuarioRecibio?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    usuarioTutor?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    reservaEquipo?: XOR<ReservaEquipoNullableScalarRelationFilter, ReservaEquipoWhereInput> | null
    reservaLibro?: XOR<ReservaLibroNullableScalarRelationFilter, ReservaLibroWhereInput> | null
    reservaLaboratorioCerrado?: XOR<ReservaLaboratorioCerradoNullableScalarRelationFilter, ReservaLaboratorioCerradoWhereInput> | null
    reservaLaboratorioAbierto?: XOR<ReservaLaboratorioAbiertoNullableScalarRelationFilter, ReservaLaboratorioAbiertoWhereInput> | null
  }

  export type ReservaOrderByWithRelationInput = {
    id?: SortOrder
    estatus?: SortOrder
    fechaHoraInicio?: SortOrder
    fechaHoraFin?: SortOrder
    tipo?: SortOrder
    asistio?: SortOrder
    motivoRechazo?: SortOrderInput | SortOrder
    usuarioSolicitoId?: SortOrder
    usuarioAprobadorId?: SortOrderInput | SortOrder
    usuarioRechazadoId?: SortOrderInput | SortOrder
    usuarioRenovoId?: SortOrderInput | SortOrder
    usuarioRecibioId?: SortOrderInput | SortOrder
    usuarioTutorId?: SortOrderInput | SortOrder
    fechaRenovacion?: SortOrderInput | SortOrder
    fechaAprobacion?: SortOrderInput | SortOrder
    fechaRechazo?: SortOrderInput | SortOrder
    fechaRecibido?: SortOrderInput | SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    mostrarEnPantalla?: SortOrder
    usuarioSolicito?: UserOrderByWithRelationInput
    usuarioAprobador?: UserOrderByWithRelationInput
    usuarioRechazado?: UserOrderByWithRelationInput
    usuarioRenovo?: UserOrderByWithRelationInput
    usuarioRecibio?: UserOrderByWithRelationInput
    usuarioTutor?: UserOrderByWithRelationInput
    reservaEquipo?: ReservaEquipoOrderByWithRelationInput
    reservaLibro?: ReservaLibroOrderByWithRelationInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoOrderByWithRelationInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoOrderByWithRelationInput
  }

  export type ReservaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReservaWhereInput | ReservaWhereInput[]
    OR?: ReservaWhereInput[]
    NOT?: ReservaWhereInput | ReservaWhereInput[]
    estatus?: EnumReservaEstatusFilter<"Reserva"> | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFilter<"Reserva"> | Date | string
    fechaHoraFin?: DateTimeFilter<"Reserva"> | Date | string
    tipo?: EnumReservaTipoFilter<"Reserva"> | $Enums.ReservaTipo
    asistio?: BoolFilter<"Reserva"> | boolean
    motivoRechazo?: StringNullableFilter<"Reserva"> | string | null
    usuarioSolicitoId?: StringFilter<"Reserva"> | string
    usuarioAprobadorId?: StringNullableFilter<"Reserva"> | string | null
    usuarioRechazadoId?: StringNullableFilter<"Reserva"> | string | null
    usuarioRenovoId?: StringNullableFilter<"Reserva"> | string | null
    usuarioRecibioId?: StringNullableFilter<"Reserva"> | string | null
    usuarioTutorId?: StringNullableFilter<"Reserva"> | string | null
    fechaRenovacion?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    fechaAprobacion?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    fechaRechazo?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    fechaRecibido?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    usuarioCreadorId?: StringFilter<"Reserva"> | string
    usuarioModificadorId?: StringFilter<"Reserva"> | string
    fechaCreacion?: DateTimeFilter<"Reserva"> | Date | string
    fechaModificacion?: DateTimeFilter<"Reserva"> | Date | string
    mostrarEnPantalla?: BoolFilter<"Reserva"> | boolean
    usuarioSolicito?: XOR<UserScalarRelationFilter, UserWhereInput>
    usuarioAprobador?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    usuarioRechazado?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    usuarioRenovo?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    usuarioRecibio?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    usuarioTutor?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    reservaEquipo?: XOR<ReservaEquipoNullableScalarRelationFilter, ReservaEquipoWhereInput> | null
    reservaLibro?: XOR<ReservaLibroNullableScalarRelationFilter, ReservaLibroWhereInput> | null
    reservaLaboratorioCerrado?: XOR<ReservaLaboratorioCerradoNullableScalarRelationFilter, ReservaLaboratorioCerradoWhereInput> | null
    reservaLaboratorioAbierto?: XOR<ReservaLaboratorioAbiertoNullableScalarRelationFilter, ReservaLaboratorioAbiertoWhereInput> | null
  }, "id">

  export type ReservaOrderByWithAggregationInput = {
    id?: SortOrder
    estatus?: SortOrder
    fechaHoraInicio?: SortOrder
    fechaHoraFin?: SortOrder
    tipo?: SortOrder
    asistio?: SortOrder
    motivoRechazo?: SortOrderInput | SortOrder
    usuarioSolicitoId?: SortOrder
    usuarioAprobadorId?: SortOrderInput | SortOrder
    usuarioRechazadoId?: SortOrderInput | SortOrder
    usuarioRenovoId?: SortOrderInput | SortOrder
    usuarioRecibioId?: SortOrderInput | SortOrder
    usuarioTutorId?: SortOrderInput | SortOrder
    fechaRenovacion?: SortOrderInput | SortOrder
    fechaAprobacion?: SortOrderInput | SortOrder
    fechaRechazo?: SortOrderInput | SortOrder
    fechaRecibido?: SortOrderInput | SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    mostrarEnPantalla?: SortOrder
    _count?: ReservaCountOrderByAggregateInput
    _avg?: ReservaAvgOrderByAggregateInput
    _max?: ReservaMaxOrderByAggregateInput
    _min?: ReservaMinOrderByAggregateInput
    _sum?: ReservaSumOrderByAggregateInput
  }

  export type ReservaScalarWhereWithAggregatesInput = {
    AND?: ReservaScalarWhereWithAggregatesInput | ReservaScalarWhereWithAggregatesInput[]
    OR?: ReservaScalarWhereWithAggregatesInput[]
    NOT?: ReservaScalarWhereWithAggregatesInput | ReservaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Reserva"> | number
    estatus?: EnumReservaEstatusWithAggregatesFilter<"Reserva"> | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    fechaHoraFin?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    tipo?: EnumReservaTipoWithAggregatesFilter<"Reserva"> | $Enums.ReservaTipo
    asistio?: BoolWithAggregatesFilter<"Reserva"> | boolean
    motivoRechazo?: StringNullableWithAggregatesFilter<"Reserva"> | string | null
    usuarioSolicitoId?: StringWithAggregatesFilter<"Reserva"> | string
    usuarioAprobadorId?: StringNullableWithAggregatesFilter<"Reserva"> | string | null
    usuarioRechazadoId?: StringNullableWithAggregatesFilter<"Reserva"> | string | null
    usuarioRenovoId?: StringNullableWithAggregatesFilter<"Reserva"> | string | null
    usuarioRecibioId?: StringNullableWithAggregatesFilter<"Reserva"> | string | null
    usuarioTutorId?: StringNullableWithAggregatesFilter<"Reserva"> | string | null
    fechaRenovacion?: DateTimeNullableWithAggregatesFilter<"Reserva"> | Date | string | null
    fechaAprobacion?: DateTimeNullableWithAggregatesFilter<"Reserva"> | Date | string | null
    fechaRechazo?: DateTimeNullableWithAggregatesFilter<"Reserva"> | Date | string | null
    fechaRecibido?: DateTimeNullableWithAggregatesFilter<"Reserva"> | Date | string | null
    usuarioCreadorId?: StringWithAggregatesFilter<"Reserva"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Reserva"> | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    mostrarEnPantalla?: BoolWithAggregatesFilter<"Reserva"> | boolean
  }

  export type ReservaEquipoWhereInput = {
    AND?: ReservaEquipoWhereInput | ReservaEquipoWhereInput[]
    OR?: ReservaEquipoWhereInput[]
    NOT?: ReservaEquipoWhereInput | ReservaEquipoWhereInput[]
    id?: IntFilter<"ReservaEquipo"> | number
    fechaEntregado?: DateTimeFilter<"ReservaEquipo"> | Date | string
    reservaId?: IntFilter<"ReservaEquipo"> | number
    equipoId?: IntFilter<"ReservaEquipo"> | number
    fechaCreacion?: DateTimeFilter<"ReservaEquipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaEquipo"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaEquipo"> | string
    usuarioModificadorId?: StringFilter<"ReservaEquipo"> | string
    reserva?: XOR<ReservaScalarRelationFilter, ReservaWhereInput>
    equipo?: XOR<EquipoScalarRelationFilter, EquipoWhereInput>
  }

  export type ReservaEquipoOrderByWithRelationInput = {
    id?: SortOrder
    fechaEntregado?: SortOrder
    reservaId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    reserva?: ReservaOrderByWithRelationInput
    equipo?: EquipoOrderByWithRelationInput
  }

  export type ReservaEquipoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    reservaId?: number
    AND?: ReservaEquipoWhereInput | ReservaEquipoWhereInput[]
    OR?: ReservaEquipoWhereInput[]
    NOT?: ReservaEquipoWhereInput | ReservaEquipoWhereInput[]
    fechaEntregado?: DateTimeFilter<"ReservaEquipo"> | Date | string
    equipoId?: IntFilter<"ReservaEquipo"> | number
    fechaCreacion?: DateTimeFilter<"ReservaEquipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaEquipo"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaEquipo"> | string
    usuarioModificadorId?: StringFilter<"ReservaEquipo"> | string
    reserva?: XOR<ReservaScalarRelationFilter, ReservaWhereInput>
    equipo?: XOR<EquipoScalarRelationFilter, EquipoWhereInput>
  }, "id" | "reservaId">

  export type ReservaEquipoOrderByWithAggregationInput = {
    id?: SortOrder
    fechaEntregado?: SortOrder
    reservaId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: ReservaEquipoCountOrderByAggregateInput
    _avg?: ReservaEquipoAvgOrderByAggregateInput
    _max?: ReservaEquipoMaxOrderByAggregateInput
    _min?: ReservaEquipoMinOrderByAggregateInput
    _sum?: ReservaEquipoSumOrderByAggregateInput
  }

  export type ReservaEquipoScalarWhereWithAggregatesInput = {
    AND?: ReservaEquipoScalarWhereWithAggregatesInput | ReservaEquipoScalarWhereWithAggregatesInput[]
    OR?: ReservaEquipoScalarWhereWithAggregatesInput[]
    NOT?: ReservaEquipoScalarWhereWithAggregatesInput | ReservaEquipoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReservaEquipo"> | number
    fechaEntregado?: DateTimeWithAggregatesFilter<"ReservaEquipo"> | Date | string
    reservaId?: IntWithAggregatesFilter<"ReservaEquipo"> | number
    equipoId?: IntWithAggregatesFilter<"ReservaEquipo"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"ReservaEquipo"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"ReservaEquipo"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"ReservaEquipo"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"ReservaEquipo"> | string
  }

  export type ReservaLibroWhereInput = {
    AND?: ReservaLibroWhereInput | ReservaLibroWhereInput[]
    OR?: ReservaLibroWhereInput[]
    NOT?: ReservaLibroWhereInput | ReservaLibroWhereInput[]
    id?: IntFilter<"ReservaLibro"> | number
    fechaEntregado?: DateTimeFilter<"ReservaLibro"> | Date | string
    reservaId?: IntFilter<"ReservaLibro"> | number
    libroId?: IntFilter<"ReservaLibro"> | number
    fechaCreacion?: DateTimeFilter<"ReservaLibro"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLibro"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLibro"> | string
    usuarioModificadorId?: StringFilter<"ReservaLibro"> | string
    reserva?: XOR<ReservaScalarRelationFilter, ReservaWhereInput>
    libro?: XOR<LibroScalarRelationFilter, LibroWhereInput>
  }

  export type ReservaLibroOrderByWithRelationInput = {
    id?: SortOrder
    fechaEntregado?: SortOrder
    reservaId?: SortOrder
    libroId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    reserva?: ReservaOrderByWithRelationInput
    libro?: LibroOrderByWithRelationInput
  }

  export type ReservaLibroWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    reservaId?: number
    AND?: ReservaLibroWhereInput | ReservaLibroWhereInput[]
    OR?: ReservaLibroWhereInput[]
    NOT?: ReservaLibroWhereInput | ReservaLibroWhereInput[]
    fechaEntregado?: DateTimeFilter<"ReservaLibro"> | Date | string
    libroId?: IntFilter<"ReservaLibro"> | number
    fechaCreacion?: DateTimeFilter<"ReservaLibro"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLibro"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLibro"> | string
    usuarioModificadorId?: StringFilter<"ReservaLibro"> | string
    reserva?: XOR<ReservaScalarRelationFilter, ReservaWhereInput>
    libro?: XOR<LibroScalarRelationFilter, LibroWhereInput>
  }, "id" | "reservaId">

  export type ReservaLibroOrderByWithAggregationInput = {
    id?: SortOrder
    fechaEntregado?: SortOrder
    reservaId?: SortOrder
    libroId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: ReservaLibroCountOrderByAggregateInput
    _avg?: ReservaLibroAvgOrderByAggregateInput
    _max?: ReservaLibroMaxOrderByAggregateInput
    _min?: ReservaLibroMinOrderByAggregateInput
    _sum?: ReservaLibroSumOrderByAggregateInput
  }

  export type ReservaLibroScalarWhereWithAggregatesInput = {
    AND?: ReservaLibroScalarWhereWithAggregatesInput | ReservaLibroScalarWhereWithAggregatesInput[]
    OR?: ReservaLibroScalarWhereWithAggregatesInput[]
    NOT?: ReservaLibroScalarWhereWithAggregatesInput | ReservaLibroScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReservaLibro"> | number
    fechaEntregado?: DateTimeWithAggregatesFilter<"ReservaLibro"> | Date | string
    reservaId?: IntWithAggregatesFilter<"ReservaLibro"> | number
    libroId?: IntWithAggregatesFilter<"ReservaLibro"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"ReservaLibro"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"ReservaLibro"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"ReservaLibro"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"ReservaLibro"> | string
  }

  export type ReservaLaboratorioCerradoWhereInput = {
    AND?: ReservaLaboratorioCerradoWhereInput | ReservaLaboratorioCerradoWhereInput[]
    OR?: ReservaLaboratorioCerradoWhereInput[]
    NOT?: ReservaLaboratorioCerradoWhereInput | ReservaLaboratorioCerradoWhereInput[]
    id?: IntFilter<"ReservaLaboratorioCerrado"> | number
    descripcion?: StringFilter<"ReservaLaboratorioCerrado"> | string
    requierePC?: BoolFilter<"ReservaLaboratorioCerrado"> | boolean
    requiereProyector?: BoolFilter<"ReservaLaboratorioCerrado"> | boolean
    reservaId?: IntFilter<"ReservaLaboratorioCerrado"> | number
    sedeId?: IntFilter<"ReservaLaboratorioCerrado"> | number
    laboratorioId?: IntNullableFilter<"ReservaLaboratorioCerrado"> | number | null
    cursoId?: IntNullableFilter<"ReservaLaboratorioCerrado"> | number | null
    esDiscrecional?: BoolFilter<"ReservaLaboratorioCerrado"> | boolean
    discrecionalTitulo?: StringFilter<"ReservaLaboratorioCerrado"> | string
    discrecionalMateriaId?: IntNullableFilter<"ReservaLaboratorioCerrado"> | number | null
    discrecionalDocenteId?: StringNullableFilter<"ReservaLaboratorioCerrado"> | string | null
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioCerrado"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioCerrado"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioCerrado"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioCerrado"> | string
    reserva?: XOR<ReservaScalarRelationFilter, ReservaWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    laboratorio?: XOR<LaboratorioNullableScalarRelationFilter, LaboratorioWhereInput> | null
    curso?: XOR<CursoNullableScalarRelationFilter, CursoWhereInput> | null
    discrecionalMateria?: XOR<MateriaNullableScalarRelationFilter, MateriaWhereInput> | null
    discrecionalDocente?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    equipoReservado?: ReservaLaboratorioCerradoEquipoListRelationFilter
  }

  export type ReservaLaboratorioCerradoOrderByWithRelationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    requierePC?: SortOrder
    requiereProyector?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrderInput | SortOrder
    cursoId?: SortOrderInput | SortOrder
    esDiscrecional?: SortOrder
    discrecionalTitulo?: SortOrder
    discrecionalMateriaId?: SortOrderInput | SortOrder
    discrecionalDocenteId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    reserva?: ReservaOrderByWithRelationInput
    sede?: SedeOrderByWithRelationInput
    laboratorio?: LaboratorioOrderByWithRelationInput
    curso?: CursoOrderByWithRelationInput
    discrecionalMateria?: MateriaOrderByWithRelationInput
    discrecionalDocente?: UserOrderByWithRelationInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoOrderByRelationAggregateInput
  }

  export type ReservaLaboratorioCerradoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    reservaId?: number
    AND?: ReservaLaboratorioCerradoWhereInput | ReservaLaboratorioCerradoWhereInput[]
    OR?: ReservaLaboratorioCerradoWhereInput[]
    NOT?: ReservaLaboratorioCerradoWhereInput | ReservaLaboratorioCerradoWhereInput[]
    descripcion?: StringFilter<"ReservaLaboratorioCerrado"> | string
    requierePC?: BoolFilter<"ReservaLaboratorioCerrado"> | boolean
    requiereProyector?: BoolFilter<"ReservaLaboratorioCerrado"> | boolean
    sedeId?: IntFilter<"ReservaLaboratorioCerrado"> | number
    laboratorioId?: IntNullableFilter<"ReservaLaboratorioCerrado"> | number | null
    cursoId?: IntNullableFilter<"ReservaLaboratorioCerrado"> | number | null
    esDiscrecional?: BoolFilter<"ReservaLaboratorioCerrado"> | boolean
    discrecionalTitulo?: StringFilter<"ReservaLaboratorioCerrado"> | string
    discrecionalMateriaId?: IntNullableFilter<"ReservaLaboratorioCerrado"> | number | null
    discrecionalDocenteId?: StringNullableFilter<"ReservaLaboratorioCerrado"> | string | null
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioCerrado"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioCerrado"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioCerrado"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioCerrado"> | string
    reserva?: XOR<ReservaScalarRelationFilter, ReservaWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    laboratorio?: XOR<LaboratorioNullableScalarRelationFilter, LaboratorioWhereInput> | null
    curso?: XOR<CursoNullableScalarRelationFilter, CursoWhereInput> | null
    discrecionalMateria?: XOR<MateriaNullableScalarRelationFilter, MateriaWhereInput> | null
    discrecionalDocente?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    equipoReservado?: ReservaLaboratorioCerradoEquipoListRelationFilter
  }, "id" | "reservaId">

  export type ReservaLaboratorioCerradoOrderByWithAggregationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    requierePC?: SortOrder
    requiereProyector?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrderInput | SortOrder
    cursoId?: SortOrderInput | SortOrder
    esDiscrecional?: SortOrder
    discrecionalTitulo?: SortOrder
    discrecionalMateriaId?: SortOrderInput | SortOrder
    discrecionalDocenteId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: ReservaLaboratorioCerradoCountOrderByAggregateInput
    _avg?: ReservaLaboratorioCerradoAvgOrderByAggregateInput
    _max?: ReservaLaboratorioCerradoMaxOrderByAggregateInput
    _min?: ReservaLaboratorioCerradoMinOrderByAggregateInput
    _sum?: ReservaLaboratorioCerradoSumOrderByAggregateInput
  }

  export type ReservaLaboratorioCerradoScalarWhereWithAggregatesInput = {
    AND?: ReservaLaboratorioCerradoScalarWhereWithAggregatesInput | ReservaLaboratorioCerradoScalarWhereWithAggregatesInput[]
    OR?: ReservaLaboratorioCerradoScalarWhereWithAggregatesInput[]
    NOT?: ReservaLaboratorioCerradoScalarWhereWithAggregatesInput | ReservaLaboratorioCerradoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReservaLaboratorioCerrado"> | number
    descripcion?: StringWithAggregatesFilter<"ReservaLaboratorioCerrado"> | string
    requierePC?: BoolWithAggregatesFilter<"ReservaLaboratorioCerrado"> | boolean
    requiereProyector?: BoolWithAggregatesFilter<"ReservaLaboratorioCerrado"> | boolean
    reservaId?: IntWithAggregatesFilter<"ReservaLaboratorioCerrado"> | number
    sedeId?: IntWithAggregatesFilter<"ReservaLaboratorioCerrado"> | number
    laboratorioId?: IntNullableWithAggregatesFilter<"ReservaLaboratorioCerrado"> | number | null
    cursoId?: IntNullableWithAggregatesFilter<"ReservaLaboratorioCerrado"> | number | null
    esDiscrecional?: BoolWithAggregatesFilter<"ReservaLaboratorioCerrado"> | boolean
    discrecionalTitulo?: StringWithAggregatesFilter<"ReservaLaboratorioCerrado"> | string
    discrecionalMateriaId?: IntNullableWithAggregatesFilter<"ReservaLaboratorioCerrado"> | number | null
    discrecionalDocenteId?: StringNullableWithAggregatesFilter<"ReservaLaboratorioCerrado"> | string | null
    fechaCreacion?: DateTimeWithAggregatesFilter<"ReservaLaboratorioCerrado"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"ReservaLaboratorioCerrado"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"ReservaLaboratorioCerrado"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"ReservaLaboratorioCerrado"> | string
  }

  export type ReservaLaboratorioCerradoEquipoWhereInput = {
    AND?: ReservaLaboratorioCerradoEquipoWhereInput | ReservaLaboratorioCerradoEquipoWhereInput[]
    OR?: ReservaLaboratorioCerradoEquipoWhereInput[]
    NOT?: ReservaLaboratorioCerradoEquipoWhereInput | ReservaLaboratorioCerradoEquipoWhereInput[]
    id?: IntFilter<"ReservaLaboratorioCerradoEquipo"> | number
    cantidad?: IntFilter<"ReservaLaboratorioCerradoEquipo"> | number
    reservaLaboratorioCerradoId?: IntFilter<"ReservaLaboratorioCerradoEquipo"> | number
    equipoId?: IntFilter<"ReservaLaboratorioCerradoEquipo"> | number
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioCerradoEquipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioCerradoEquipo"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioCerradoEquipo"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioCerradoEquipo"> | string
    reservaLaboratorioCerrado?: XOR<ReservaLaboratorioCerradoScalarRelationFilter, ReservaLaboratorioCerradoWhereInput>
    equipoTipo?: XOR<EquipoTipoScalarRelationFilter, EquipoTipoWhereInput>
  }

  export type ReservaLaboratorioCerradoEquipoOrderByWithRelationInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioCerradoId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoOrderByWithRelationInput
    equipoTipo?: EquipoTipoOrderByWithRelationInput
  }

  export type ReservaLaboratorioCerradoEquipoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReservaLaboratorioCerradoEquipoWhereInput | ReservaLaboratorioCerradoEquipoWhereInput[]
    OR?: ReservaLaboratorioCerradoEquipoWhereInput[]
    NOT?: ReservaLaboratorioCerradoEquipoWhereInput | ReservaLaboratorioCerradoEquipoWhereInput[]
    cantidad?: IntFilter<"ReservaLaboratorioCerradoEquipo"> | number
    reservaLaboratorioCerradoId?: IntFilter<"ReservaLaboratorioCerradoEquipo"> | number
    equipoId?: IntFilter<"ReservaLaboratorioCerradoEquipo"> | number
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioCerradoEquipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioCerradoEquipo"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioCerradoEquipo"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioCerradoEquipo"> | string
    reservaLaboratorioCerrado?: XOR<ReservaLaboratorioCerradoScalarRelationFilter, ReservaLaboratorioCerradoWhereInput>
    equipoTipo?: XOR<EquipoTipoScalarRelationFilter, EquipoTipoWhereInput>
  }, "id">

  export type ReservaLaboratorioCerradoEquipoOrderByWithAggregationInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioCerradoId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: ReservaLaboratorioCerradoEquipoCountOrderByAggregateInput
    _avg?: ReservaLaboratorioCerradoEquipoAvgOrderByAggregateInput
    _max?: ReservaLaboratorioCerradoEquipoMaxOrderByAggregateInput
    _min?: ReservaLaboratorioCerradoEquipoMinOrderByAggregateInput
    _sum?: ReservaLaboratorioCerradoEquipoSumOrderByAggregateInput
  }

  export type ReservaLaboratorioCerradoEquipoScalarWhereWithAggregatesInput = {
    AND?: ReservaLaboratorioCerradoEquipoScalarWhereWithAggregatesInput | ReservaLaboratorioCerradoEquipoScalarWhereWithAggregatesInput[]
    OR?: ReservaLaboratorioCerradoEquipoScalarWhereWithAggregatesInput[]
    NOT?: ReservaLaboratorioCerradoEquipoScalarWhereWithAggregatesInput | ReservaLaboratorioCerradoEquipoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReservaLaboratorioCerradoEquipo"> | number
    cantidad?: IntWithAggregatesFilter<"ReservaLaboratorioCerradoEquipo"> | number
    reservaLaboratorioCerradoId?: IntWithAggregatesFilter<"ReservaLaboratorioCerradoEquipo"> | number
    equipoId?: IntWithAggregatesFilter<"ReservaLaboratorioCerradoEquipo"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"ReservaLaboratorioCerradoEquipo"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"ReservaLaboratorioCerradoEquipo"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"ReservaLaboratorioCerradoEquipo"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"ReservaLaboratorioCerradoEquipo"> | string
  }

  export type ReservaLaboratorioAbiertoWhereInput = {
    AND?: ReservaLaboratorioAbiertoWhereInput | ReservaLaboratorioAbiertoWhereInput[]
    OR?: ReservaLaboratorioAbiertoWhereInput[]
    NOT?: ReservaLaboratorioAbiertoWhereInput | ReservaLaboratorioAbiertoWhereInput[]
    id?: IntFilter<"ReservaLaboratorioAbierto"> | number
    especialidad?: StringFilter<"ReservaLaboratorioAbierto"> | string
    descripcion?: StringFilter<"ReservaLaboratorioAbierto"> | string
    concurrentes?: IntFilter<"ReservaLaboratorioAbierto"> | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFilter<"ReservaLaboratorioAbierto"> | $Enums.LaboratorioAbiertoTipo
    reservaId?: IntFilter<"ReservaLaboratorioAbierto"> | number
    sedeId?: IntFilter<"ReservaLaboratorioAbierto"> | number
    laboratorioId?: IntNullableFilter<"ReservaLaboratorioAbierto"> | number | null
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioAbierto"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioAbierto"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioAbierto"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioAbierto"> | string
    reserva?: XOR<ReservaScalarRelationFilter, ReservaWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    laboratorio?: XOR<LaboratorioNullableScalarRelationFilter, LaboratorioWhereInput> | null
    equipoReservado?: ReservaLaboratorioAbiertoEquipoListRelationFilter
  }

  export type ReservaLaboratorioAbiertoOrderByWithRelationInput = {
    id?: SortOrder
    especialidad?: SortOrder
    descripcion?: SortOrder
    concurrentes?: SortOrder
    laboratorioAbiertoTipo?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    reserva?: ReservaOrderByWithRelationInput
    sede?: SedeOrderByWithRelationInput
    laboratorio?: LaboratorioOrderByWithRelationInput
    equipoReservado?: ReservaLaboratorioAbiertoEquipoOrderByRelationAggregateInput
  }

  export type ReservaLaboratorioAbiertoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    reservaId?: number
    AND?: ReservaLaboratorioAbiertoWhereInput | ReservaLaboratorioAbiertoWhereInput[]
    OR?: ReservaLaboratorioAbiertoWhereInput[]
    NOT?: ReservaLaboratorioAbiertoWhereInput | ReservaLaboratorioAbiertoWhereInput[]
    especialidad?: StringFilter<"ReservaLaboratorioAbierto"> | string
    descripcion?: StringFilter<"ReservaLaboratorioAbierto"> | string
    concurrentes?: IntFilter<"ReservaLaboratorioAbierto"> | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFilter<"ReservaLaboratorioAbierto"> | $Enums.LaboratorioAbiertoTipo
    sedeId?: IntFilter<"ReservaLaboratorioAbierto"> | number
    laboratorioId?: IntNullableFilter<"ReservaLaboratorioAbierto"> | number | null
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioAbierto"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioAbierto"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioAbierto"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioAbierto"> | string
    reserva?: XOR<ReservaScalarRelationFilter, ReservaWhereInput>
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
    laboratorio?: XOR<LaboratorioNullableScalarRelationFilter, LaboratorioWhereInput> | null
    equipoReservado?: ReservaLaboratorioAbiertoEquipoListRelationFilter
  }, "id" | "reservaId">

  export type ReservaLaboratorioAbiertoOrderByWithAggregationInput = {
    id?: SortOrder
    especialidad?: SortOrder
    descripcion?: SortOrder
    concurrentes?: SortOrder
    laboratorioAbiertoTipo?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: ReservaLaboratorioAbiertoCountOrderByAggregateInput
    _avg?: ReservaLaboratorioAbiertoAvgOrderByAggregateInput
    _max?: ReservaLaboratorioAbiertoMaxOrderByAggregateInput
    _min?: ReservaLaboratorioAbiertoMinOrderByAggregateInput
    _sum?: ReservaLaboratorioAbiertoSumOrderByAggregateInput
  }

  export type ReservaLaboratorioAbiertoScalarWhereWithAggregatesInput = {
    AND?: ReservaLaboratorioAbiertoScalarWhereWithAggregatesInput | ReservaLaboratorioAbiertoScalarWhereWithAggregatesInput[]
    OR?: ReservaLaboratorioAbiertoScalarWhereWithAggregatesInput[]
    NOT?: ReservaLaboratorioAbiertoScalarWhereWithAggregatesInput | ReservaLaboratorioAbiertoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReservaLaboratorioAbierto"> | number
    especialidad?: StringWithAggregatesFilter<"ReservaLaboratorioAbierto"> | string
    descripcion?: StringWithAggregatesFilter<"ReservaLaboratorioAbierto"> | string
    concurrentes?: IntWithAggregatesFilter<"ReservaLaboratorioAbierto"> | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoWithAggregatesFilter<"ReservaLaboratorioAbierto"> | $Enums.LaboratorioAbiertoTipo
    reservaId?: IntWithAggregatesFilter<"ReservaLaboratorioAbierto"> | number
    sedeId?: IntWithAggregatesFilter<"ReservaLaboratorioAbierto"> | number
    laboratorioId?: IntNullableWithAggregatesFilter<"ReservaLaboratorioAbierto"> | number | null
    fechaCreacion?: DateTimeWithAggregatesFilter<"ReservaLaboratorioAbierto"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"ReservaLaboratorioAbierto"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"ReservaLaboratorioAbierto"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"ReservaLaboratorioAbierto"> | string
  }

  export type ReservaLaboratorioAbiertoEquipoWhereInput = {
    AND?: ReservaLaboratorioAbiertoEquipoWhereInput | ReservaLaboratorioAbiertoEquipoWhereInput[]
    OR?: ReservaLaboratorioAbiertoEquipoWhereInput[]
    NOT?: ReservaLaboratorioAbiertoEquipoWhereInput | ReservaLaboratorioAbiertoEquipoWhereInput[]
    id?: IntFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    cantidad?: IntFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    reservaLaboratorioAbiertoId?: IntFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    equipoId?: IntFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioAbiertoEquipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioAbiertoEquipo"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioAbiertoEquipo"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioAbiertoEquipo"> | string
    reservaLaboratorioAbierto?: XOR<ReservaLaboratorioAbiertoScalarRelationFilter, ReservaLaboratorioAbiertoWhereInput>
    equipoTipo?: XOR<EquipoTipoScalarRelationFilter, EquipoTipoWhereInput>
  }

  export type ReservaLaboratorioAbiertoEquipoOrderByWithRelationInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioAbiertoId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoOrderByWithRelationInput
    equipoTipo?: EquipoTipoOrderByWithRelationInput
  }

  export type ReservaLaboratorioAbiertoEquipoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReservaLaboratorioAbiertoEquipoWhereInput | ReservaLaboratorioAbiertoEquipoWhereInput[]
    OR?: ReservaLaboratorioAbiertoEquipoWhereInput[]
    NOT?: ReservaLaboratorioAbiertoEquipoWhereInput | ReservaLaboratorioAbiertoEquipoWhereInput[]
    cantidad?: IntFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    reservaLaboratorioAbiertoId?: IntFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    equipoId?: IntFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioAbiertoEquipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioAbiertoEquipo"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioAbiertoEquipo"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioAbiertoEquipo"> | string
    reservaLaboratorioAbierto?: XOR<ReservaLaboratorioAbiertoScalarRelationFilter, ReservaLaboratorioAbiertoWhereInput>
    equipoTipo?: XOR<EquipoTipoScalarRelationFilter, EquipoTipoWhereInput>
  }, "id">

  export type ReservaLaboratorioAbiertoEquipoOrderByWithAggregationInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioAbiertoId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: ReservaLaboratorioAbiertoEquipoCountOrderByAggregateInput
    _avg?: ReservaLaboratorioAbiertoEquipoAvgOrderByAggregateInput
    _max?: ReservaLaboratorioAbiertoEquipoMaxOrderByAggregateInput
    _min?: ReservaLaboratorioAbiertoEquipoMinOrderByAggregateInput
    _sum?: ReservaLaboratorioAbiertoEquipoSumOrderByAggregateInput
  }

  export type ReservaLaboratorioAbiertoEquipoScalarWhereWithAggregatesInput = {
    AND?: ReservaLaboratorioAbiertoEquipoScalarWhereWithAggregatesInput | ReservaLaboratorioAbiertoEquipoScalarWhereWithAggregatesInput[]
    OR?: ReservaLaboratorioAbiertoEquipoScalarWhereWithAggregatesInput[]
    NOT?: ReservaLaboratorioAbiertoEquipoScalarWhereWithAggregatesInput | ReservaLaboratorioAbiertoEquipoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    cantidad?: IntWithAggregatesFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    reservaLaboratorioAbiertoId?: IntWithAggregatesFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    equipoId?: IntWithAggregatesFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"ReservaLaboratorioAbiertoEquipo"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"ReservaLaboratorioAbiertoEquipo"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"ReservaLaboratorioAbiertoEquipo"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"ReservaLaboratorioAbiertoEquipo"> | string
  }

  export type PantallaWhereInput = {
    AND?: PantallaWhereInput | PantallaWhereInput[]
    OR?: PantallaWhereInput[]
    NOT?: PantallaWhereInput | PantallaWhereInput[]
    id?: IntFilter<"Pantalla"> | number
    sedeId?: IntFilter<"Pantalla"> | number
    docente?: StringFilter<"Pantalla"> | string
    materia?: StringNullableFilter<"Pantalla"> | string | null
    laboratorio?: StringNullableFilter<"Pantalla"> | string | null
    fechaHoraInicio?: DateTimeFilter<"Pantalla"> | Date | string
    fechaHoraFin?: DateTimeFilter<"Pantalla"> | Date | string
    usuarioCreadorId?: StringFilter<"Pantalla"> | string
    fechaCreacion?: DateTimeFilter<"Pantalla"> | Date | string
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
  }

  export type PantallaOrderByWithRelationInput = {
    id?: SortOrder
    sedeId?: SortOrder
    docente?: SortOrder
    materia?: SortOrderInput | SortOrder
    laboratorio?: SortOrderInput | SortOrder
    fechaHoraInicio?: SortOrder
    fechaHoraFin?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaCreacion?: SortOrder
    sede?: SedeOrderByWithRelationInput
  }

  export type PantallaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PantallaWhereInput | PantallaWhereInput[]
    OR?: PantallaWhereInput[]
    NOT?: PantallaWhereInput | PantallaWhereInput[]
    sedeId?: IntFilter<"Pantalla"> | number
    docente?: StringFilter<"Pantalla"> | string
    materia?: StringNullableFilter<"Pantalla"> | string | null
    laboratorio?: StringNullableFilter<"Pantalla"> | string | null
    fechaHoraInicio?: DateTimeFilter<"Pantalla"> | Date | string
    fechaHoraFin?: DateTimeFilter<"Pantalla"> | Date | string
    usuarioCreadorId?: StringFilter<"Pantalla"> | string
    fechaCreacion?: DateTimeFilter<"Pantalla"> | Date | string
    sede?: XOR<SedeScalarRelationFilter, SedeWhereInput>
  }, "id">

  export type PantallaOrderByWithAggregationInput = {
    id?: SortOrder
    sedeId?: SortOrder
    docente?: SortOrder
    materia?: SortOrderInput | SortOrder
    laboratorio?: SortOrderInput | SortOrder
    fechaHoraInicio?: SortOrder
    fechaHoraFin?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaCreacion?: SortOrder
    _count?: PantallaCountOrderByAggregateInput
    _avg?: PantallaAvgOrderByAggregateInput
    _max?: PantallaMaxOrderByAggregateInput
    _min?: PantallaMinOrderByAggregateInput
    _sum?: PantallaSumOrderByAggregateInput
  }

  export type PantallaScalarWhereWithAggregatesInput = {
    AND?: PantallaScalarWhereWithAggregatesInput | PantallaScalarWhereWithAggregatesInput[]
    OR?: PantallaScalarWhereWithAggregatesInput[]
    NOT?: PantallaScalarWhereWithAggregatesInput | PantallaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pantalla"> | number
    sedeId?: IntWithAggregatesFilter<"Pantalla"> | number
    docente?: StringWithAggregatesFilter<"Pantalla"> | string
    materia?: StringNullableWithAggregatesFilter<"Pantalla"> | string | null
    laboratorio?: StringNullableWithAggregatesFilter<"Pantalla"> | string | null
    fechaHoraInicio?: DateTimeWithAggregatesFilter<"Pantalla"> | Date | string
    fechaHoraFin?: DateTimeWithAggregatesFilter<"Pantalla"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Pantalla"> | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"Pantalla"> | Date | string
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    refresh_expires_in?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    refresh_token_expires_in?: IntNullableFilter<"Account"> | number | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    refresh_expires_in?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    refresh_token_expires_in?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    provider_providerAccountId?: AccountProviderProviderAccountIdCompoundUniqueInput
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    refresh_expires_in?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    refresh_token_expires_in?: IntNullableFilter<"Account"> | number | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "provider_providerAccountId">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    refresh_expires_in?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    refresh_token_expires_in?: SortOrderInput | SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    userId?: StringWithAggregatesFilter<"Account"> | string
    type?: StringWithAggregatesFilter<"Account"> | string
    provider?: StringWithAggregatesFilter<"Account"> | string
    providerAccountId?: StringWithAggregatesFilter<"Account"> | string
    refresh_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    access_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    expires_at?: IntNullableWithAggregatesFilter<"Account"> | number | null
    refresh_expires_in?: IntNullableWithAggregatesFilter<"Account"> | number | null
    token_type?: StringNullableWithAggregatesFilter<"Account"> | string | null
    scope?: StringNullableWithAggregatesFilter<"Account"> | string | null
    id_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    session_state?: StringNullableWithAggregatesFilter<"Account"> | string | null
    refresh_token_expires_in?: IntNullableWithAggregatesFilter<"Account"> | number | null
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sessionToken?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "sessionToken">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    sessionToken?: StringWithAggregatesFilter<"Session"> | string
    userId?: StringWithAggregatesFilter<"Session"> | string
    expires?: DateTimeWithAggregatesFilter<"Session"> | Date | string
  }

  export type VerificationTokenWhereInput = {
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    token?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }

  export type VerificationTokenOrderByWithRelationInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenWhereUniqueInput = Prisma.AtLeast<{
    token?: string
    identifier_token?: VerificationTokenIdentifierTokenCompoundUniqueInput
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }, "token" | "identifier_token">

  export type VerificationTokenOrderByWithAggregationInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    _count?: VerificationTokenCountOrderByAggregateInput
    _max?: VerificationTokenMaxOrderByAggregateInput
    _min?: VerificationTokenMinOrderByAggregateInput
  }

  export type VerificationTokenScalarWhereWithAggregatesInput = {
    AND?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    OR?: VerificationTokenScalarWhereWithAggregatesInput[]
    NOT?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    identifier?: StringWithAggregatesFilter<"VerificationToken"> | string
    token?: StringWithAggregatesFilter<"VerificationToken"> | string
    expires?: DateTimeWithAggregatesFilter<"VerificationToken"> | Date | string
  }

  export type SedeWhereInput = {
    AND?: SedeWhereInput | SedeWhereInput[]
    OR?: SedeWhereInput[]
    NOT?: SedeWhereInput | SedeWhereInput[]
    id?: IntFilter<"Sede"> | number
    nombre?: StringFilter<"Sede"> | string
    cursos?: CursoListRelationFilter
    equipos?: EquipoListRelationFilter
    laboratorios?: LaboratorioListRelationFilter
    libros?: LibroListRelationFilter
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoListRelationFilter
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoListRelationFilter
    Pantalla?: PantallaListRelationFilter
  }

  export type SedeOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    cursos?: CursoOrderByRelationAggregateInput
    equipos?: EquipoOrderByRelationAggregateInput
    laboratorios?: LaboratorioOrderByRelationAggregateInput
    libros?: LibroOrderByRelationAggregateInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoOrderByRelationAggregateInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoOrderByRelationAggregateInput
    Pantalla?: PantallaOrderByRelationAggregateInput
  }

  export type SedeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: SedeWhereInput | SedeWhereInput[]
    OR?: SedeWhereInput[]
    NOT?: SedeWhereInput | SedeWhereInput[]
    cursos?: CursoListRelationFilter
    equipos?: EquipoListRelationFilter
    laboratorios?: LaboratorioListRelationFilter
    libros?: LibroListRelationFilter
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoListRelationFilter
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoListRelationFilter
    Pantalla?: PantallaListRelationFilter
  }, "id" | "nombre">

  export type SedeOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: SedeCountOrderByAggregateInput
    _avg?: SedeAvgOrderByAggregateInput
    _max?: SedeMaxOrderByAggregateInput
    _min?: SedeMinOrderByAggregateInput
    _sum?: SedeSumOrderByAggregateInput
  }

  export type SedeScalarWhereWithAggregatesInput = {
    AND?: SedeScalarWhereWithAggregatesInput | SedeScalarWhereWithAggregatesInput[]
    OR?: SedeScalarWhereWithAggregatesInput[]
    NOT?: SedeScalarWhereWithAggregatesInput | SedeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Sede"> | number
    nombre?: StringWithAggregatesFilter<"Sede"> | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    emailVerified?: BoolNullableFilter<"User"> | boolean | null
    image?: StringFilter<"User"> | string
    nombre?: StringNullableFilter<"User"> | string | null
    apellido?: StringNullableFilter<"User"> | string | null
    fechaNacimiento?: DateTimeNullableFilter<"User"> | Date | string | null
    direccion?: StringNullableFilter<"User"> | string | null
    piso?: StringNullableFilter<"User"> | string | null
    departamento?: StringNullableFilter<"User"> | string | null
    ciudad?: StringNullableFilter<"User"> | string | null
    codigoPostal?: StringNullableFilter<"User"> | string | null
    telefonoCasa?: StringNullableFilter<"User"> | string | null
    telefonoCelular?: StringNullableFilter<"User"> | string | null
    telefonoLaboral?: StringNullableFilter<"User"> | string | null
    documentoNumero?: StringNullableFilter<"User"> | string | null
    legajo?: StringNullableFilter<"User"> | string | null
    gitlab?: StringNullableFilter<"User"> | string | null
    penalizaciones?: IntFilter<"User"> | number
    esDocente?: BoolFilter<"User"> | boolean
    esTutor?: BoolFilter<"User"> | boolean
    fechaRegistro?: DateTimeFilter<"User"> | Date | string
    fechaUltimoAcceso?: DateTimeFilter<"User"> | Date | string
    fechaUltimaActualizacion?: DateTimeFilter<"User"> | Date | string
    documentoTipoId?: IntNullableFilter<"User"> | number | null
    provinciaIso?: StringNullableFilter<"User"> | string | null
    paisIso?: StringNullableFilter<"User"> | string | null
    documentoTipo?: XOR<DocumentoTipoNullableScalarRelationFilter, DocumentoTipoWhereInput> | null
    provincia?: XOR<ProvinciaNullableScalarRelationFilter, ProvinciaWhereInput> | null
    pais?: XOR<PaisNullableScalarRelationFilter, PaisWhereInput> | null
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    usuarioRol?: UsuarioRolListRelationFilter
    reservasSolicitadas?: ReservaListRelationFilter
    reservasRenovadas?: ReservaListRelationFilter
    reservasComoTutor?: ReservaListRelationFilter
    reservasAprobadas?: ReservaListRelationFilter
    reservasRechazadas?: ReservaListRelationFilter
    reservasRecibidas?: ReservaListRelationFilter
    cursosComoAyudante?: CursoAyudanteListRelationFilter
    cursosComoProfesor?: CursoListRelationFilter
    MateriaJefeTp?: MateriaJefeTpListRelationFilter
    materiasDirector?: MateriaListRelationFilter
    tutor?: XOR<TutorNullableScalarRelationFilter, TutorWhereInput> | null
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellido?: SortOrderInput | SortOrder
    fechaNacimiento?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    piso?: SortOrderInput | SortOrder
    departamento?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    codigoPostal?: SortOrderInput | SortOrder
    telefonoCasa?: SortOrderInput | SortOrder
    telefonoCelular?: SortOrderInput | SortOrder
    telefonoLaboral?: SortOrderInput | SortOrder
    documentoNumero?: SortOrderInput | SortOrder
    legajo?: SortOrderInput | SortOrder
    gitlab?: SortOrderInput | SortOrder
    penalizaciones?: SortOrder
    esDocente?: SortOrder
    esTutor?: SortOrder
    fechaRegistro?: SortOrder
    fechaUltimoAcceso?: SortOrder
    fechaUltimaActualizacion?: SortOrder
    documentoTipoId?: SortOrderInput | SortOrder
    provinciaIso?: SortOrderInput | SortOrder
    paisIso?: SortOrderInput | SortOrder
    documentoTipo?: DocumentoTipoOrderByWithRelationInput
    provincia?: ProvinciaOrderByWithRelationInput
    pais?: PaisOrderByWithRelationInput
    accounts?: AccountOrderByRelationAggregateInput
    sessions?: SessionOrderByRelationAggregateInput
    usuarioRol?: UsuarioRolOrderByRelationAggregateInput
    reservasSolicitadas?: ReservaOrderByRelationAggregateInput
    reservasRenovadas?: ReservaOrderByRelationAggregateInput
    reservasComoTutor?: ReservaOrderByRelationAggregateInput
    reservasAprobadas?: ReservaOrderByRelationAggregateInput
    reservasRechazadas?: ReservaOrderByRelationAggregateInput
    reservasRecibidas?: ReservaOrderByRelationAggregateInput
    cursosComoAyudante?: CursoAyudanteOrderByRelationAggregateInput
    cursosComoProfesor?: CursoOrderByRelationAggregateInput
    MateriaJefeTp?: MateriaJefeTpOrderByRelationAggregateInput
    materiasDirector?: MateriaOrderByRelationAggregateInput
    tutor?: TutorOrderByWithRelationInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    email?: string
    legajo?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    emailVerified?: BoolNullableFilter<"User"> | boolean | null
    image?: StringFilter<"User"> | string
    nombre?: StringNullableFilter<"User"> | string | null
    apellido?: StringNullableFilter<"User"> | string | null
    fechaNacimiento?: DateTimeNullableFilter<"User"> | Date | string | null
    direccion?: StringNullableFilter<"User"> | string | null
    piso?: StringNullableFilter<"User"> | string | null
    departamento?: StringNullableFilter<"User"> | string | null
    ciudad?: StringNullableFilter<"User"> | string | null
    codigoPostal?: StringNullableFilter<"User"> | string | null
    telefonoCasa?: StringNullableFilter<"User"> | string | null
    telefonoCelular?: StringNullableFilter<"User"> | string | null
    telefonoLaboral?: StringNullableFilter<"User"> | string | null
    documentoNumero?: StringNullableFilter<"User"> | string | null
    gitlab?: StringNullableFilter<"User"> | string | null
    penalizaciones?: IntFilter<"User"> | number
    esDocente?: BoolFilter<"User"> | boolean
    esTutor?: BoolFilter<"User"> | boolean
    fechaRegistro?: DateTimeFilter<"User"> | Date | string
    fechaUltimoAcceso?: DateTimeFilter<"User"> | Date | string
    fechaUltimaActualizacion?: DateTimeFilter<"User"> | Date | string
    documentoTipoId?: IntNullableFilter<"User"> | number | null
    provinciaIso?: StringNullableFilter<"User"> | string | null
    paisIso?: StringNullableFilter<"User"> | string | null
    documentoTipo?: XOR<DocumentoTipoNullableScalarRelationFilter, DocumentoTipoWhereInput> | null
    provincia?: XOR<ProvinciaNullableScalarRelationFilter, ProvinciaWhereInput> | null
    pais?: XOR<PaisNullableScalarRelationFilter, PaisWhereInput> | null
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    usuarioRol?: UsuarioRolListRelationFilter
    reservasSolicitadas?: ReservaListRelationFilter
    reservasRenovadas?: ReservaListRelationFilter
    reservasComoTutor?: ReservaListRelationFilter
    reservasAprobadas?: ReservaListRelationFilter
    reservasRechazadas?: ReservaListRelationFilter
    reservasRecibidas?: ReservaListRelationFilter
    cursosComoAyudante?: CursoAyudanteListRelationFilter
    cursosComoProfesor?: CursoListRelationFilter
    MateriaJefeTp?: MateriaJefeTpListRelationFilter
    materiasDirector?: MateriaListRelationFilter
    tutor?: XOR<TutorNullableScalarRelationFilter, TutorWhereInput> | null
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoListRelationFilter
  }, "id" | "name" | "email" | "legajo">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellido?: SortOrderInput | SortOrder
    fechaNacimiento?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    piso?: SortOrderInput | SortOrder
    departamento?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    codigoPostal?: SortOrderInput | SortOrder
    telefonoCasa?: SortOrderInput | SortOrder
    telefonoCelular?: SortOrderInput | SortOrder
    telefonoLaboral?: SortOrderInput | SortOrder
    documentoNumero?: SortOrderInput | SortOrder
    legajo?: SortOrderInput | SortOrder
    gitlab?: SortOrderInput | SortOrder
    penalizaciones?: SortOrder
    esDocente?: SortOrder
    esTutor?: SortOrder
    fechaRegistro?: SortOrder
    fechaUltimoAcceso?: SortOrder
    fechaUltimaActualizacion?: SortOrder
    documentoTipoId?: SortOrderInput | SortOrder
    provinciaIso?: SortOrderInput | SortOrder
    paisIso?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    emailVerified?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
    image?: StringWithAggregatesFilter<"User"> | string
    nombre?: StringNullableWithAggregatesFilter<"User"> | string | null
    apellido?: StringNullableWithAggregatesFilter<"User"> | string | null
    fechaNacimiento?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    direccion?: StringNullableWithAggregatesFilter<"User"> | string | null
    piso?: StringNullableWithAggregatesFilter<"User"> | string | null
    departamento?: StringNullableWithAggregatesFilter<"User"> | string | null
    ciudad?: StringNullableWithAggregatesFilter<"User"> | string | null
    codigoPostal?: StringNullableWithAggregatesFilter<"User"> | string | null
    telefonoCasa?: StringNullableWithAggregatesFilter<"User"> | string | null
    telefonoCelular?: StringNullableWithAggregatesFilter<"User"> | string | null
    telefonoLaboral?: StringNullableWithAggregatesFilter<"User"> | string | null
    documentoNumero?: StringNullableWithAggregatesFilter<"User"> | string | null
    legajo?: StringNullableWithAggregatesFilter<"User"> | string | null
    gitlab?: StringNullableWithAggregatesFilter<"User"> | string | null
    penalizaciones?: IntWithAggregatesFilter<"User"> | number
    esDocente?: BoolWithAggregatesFilter<"User"> | boolean
    esTutor?: BoolWithAggregatesFilter<"User"> | boolean
    fechaRegistro?: DateTimeWithAggregatesFilter<"User"> | Date | string
    fechaUltimoAcceso?: DateTimeWithAggregatesFilter<"User"> | Date | string
    fechaUltimaActualizacion?: DateTimeWithAggregatesFilter<"User"> | Date | string
    documentoTipoId?: IntNullableWithAggregatesFilter<"User"> | number | null
    provinciaIso?: StringNullableWithAggregatesFilter<"User"> | string | null
    paisIso?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type TutorWhereInput = {
    AND?: TutorWhereInput | TutorWhereInput[]
    OR?: TutorWhereInput[]
    NOT?: TutorWhereInput | TutorWhereInput[]
    userId?: StringFilter<"Tutor"> | string
    diasHorarios?: StringFilter<"Tutor"> | string
    activo?: BoolFilter<"Tutor"> | boolean
    especialidad?: StringFilter<"Tutor"> | string
    fechaCreacion?: DateTimeFilter<"Tutor"> | Date | string
    usuarioCreadorId?: StringFilter<"Tutor"> | string
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type TutorOrderByWithRelationInput = {
    userId?: SortOrder
    diasHorarios?: SortOrder
    activo?: SortOrder
    especialidad?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuario?: UserOrderByWithRelationInput
  }

  export type TutorWhereUniqueInput = Prisma.AtLeast<{
    userId?: string
    AND?: TutorWhereInput | TutorWhereInput[]
    OR?: TutorWhereInput[]
    NOT?: TutorWhereInput | TutorWhereInput[]
    diasHorarios?: StringFilter<"Tutor"> | string
    activo?: BoolFilter<"Tutor"> | boolean
    especialidad?: StringFilter<"Tutor"> | string
    fechaCreacion?: DateTimeFilter<"Tutor"> | Date | string
    usuarioCreadorId?: StringFilter<"Tutor"> | string
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "userId" | "userId">

  export type TutorOrderByWithAggregationInput = {
    userId?: SortOrder
    diasHorarios?: SortOrder
    activo?: SortOrder
    especialidad?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    _count?: TutorCountOrderByAggregateInput
    _max?: TutorMaxOrderByAggregateInput
    _min?: TutorMinOrderByAggregateInput
  }

  export type TutorScalarWhereWithAggregatesInput = {
    AND?: TutorScalarWhereWithAggregatesInput | TutorScalarWhereWithAggregatesInput[]
    OR?: TutorScalarWhereWithAggregatesInput[]
    NOT?: TutorScalarWhereWithAggregatesInput | TutorScalarWhereWithAggregatesInput[]
    userId?: StringWithAggregatesFilter<"Tutor"> | string
    diasHorarios?: StringWithAggregatesFilter<"Tutor"> | string
    activo?: BoolWithAggregatesFilter<"Tutor"> | boolean
    especialidad?: StringWithAggregatesFilter<"Tutor"> | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"Tutor"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Tutor"> | string
  }

  export type UsuarioRolWhereInput = {
    AND?: UsuarioRolWhereInput | UsuarioRolWhereInput[]
    OR?: UsuarioRolWhereInput[]
    NOT?: UsuarioRolWhereInput | UsuarioRolWhereInput[]
    userId?: StringFilter<"UsuarioRol"> | string
    rolId?: IntFilter<"UsuarioRol"> | number
    fechaCreacion?: DateTimeFilter<"UsuarioRol"> | Date | string
    usuarioCreadorId?: StringFilter<"UsuarioRol"> | string
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
    rol?: XOR<RolScalarRelationFilter, RolWhereInput>
  }

  export type UsuarioRolOrderByWithRelationInput = {
    userId?: SortOrder
    rolId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuario?: UserOrderByWithRelationInput
    rol?: RolOrderByWithRelationInput
  }

  export type UsuarioRolWhereUniqueInput = Prisma.AtLeast<{
    userId_rolId?: UsuarioRolUserIdRolIdCompoundUniqueInput
    AND?: UsuarioRolWhereInput | UsuarioRolWhereInput[]
    OR?: UsuarioRolWhereInput[]
    NOT?: UsuarioRolWhereInput | UsuarioRolWhereInput[]
    userId?: StringFilter<"UsuarioRol"> | string
    rolId?: IntFilter<"UsuarioRol"> | number
    fechaCreacion?: DateTimeFilter<"UsuarioRol"> | Date | string
    usuarioCreadorId?: StringFilter<"UsuarioRol"> | string
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
    rol?: XOR<RolScalarRelationFilter, RolWhereInput>
  }, "userId_rolId">

  export type UsuarioRolOrderByWithAggregationInput = {
    userId?: SortOrder
    rolId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    _count?: UsuarioRolCountOrderByAggregateInput
    _avg?: UsuarioRolAvgOrderByAggregateInput
    _max?: UsuarioRolMaxOrderByAggregateInput
    _min?: UsuarioRolMinOrderByAggregateInput
    _sum?: UsuarioRolSumOrderByAggregateInput
  }

  export type UsuarioRolScalarWhereWithAggregatesInput = {
    AND?: UsuarioRolScalarWhereWithAggregatesInput | UsuarioRolScalarWhereWithAggregatesInput[]
    OR?: UsuarioRolScalarWhereWithAggregatesInput[]
    NOT?: UsuarioRolScalarWhereWithAggregatesInput | UsuarioRolScalarWhereWithAggregatesInput[]
    userId?: StringWithAggregatesFilter<"UsuarioRol"> | string
    rolId?: IntWithAggregatesFilter<"UsuarioRol"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"UsuarioRol"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"UsuarioRol"> | string
  }

  export type RolWhereInput = {
    AND?: RolWhereInput | RolWhereInput[]
    OR?: RolWhereInput[]
    NOT?: RolWhereInput | RolWhereInput[]
    id?: IntFilter<"Rol"> | number
    nombre?: StringFilter<"Rol"> | string
    fechaCreacion?: DateTimeFilter<"Rol"> | Date | string
    fechaModificacion?: DateTimeFilter<"Rol"> | Date | string
    usuarioCreadorId?: StringFilter<"Rol"> | string
    usuarioModificadorId?: StringFilter<"Rol"> | string
    usuarios?: UsuarioRolListRelationFilter
    rolPermiso?: RolPermisoListRelationFilter
  }

  export type RolOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    usuarios?: UsuarioRolOrderByRelationAggregateInput
    rolPermiso?: RolPermisoOrderByRelationAggregateInput
  }

  export type RolWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: RolWhereInput | RolWhereInput[]
    OR?: RolWhereInput[]
    NOT?: RolWhereInput | RolWhereInput[]
    fechaCreacion?: DateTimeFilter<"Rol"> | Date | string
    fechaModificacion?: DateTimeFilter<"Rol"> | Date | string
    usuarioCreadorId?: StringFilter<"Rol"> | string
    usuarioModificadorId?: StringFilter<"Rol"> | string
    usuarios?: UsuarioRolListRelationFilter
    rolPermiso?: RolPermisoListRelationFilter
  }, "id" | "nombre">

  export type RolOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: RolCountOrderByAggregateInput
    _avg?: RolAvgOrderByAggregateInput
    _max?: RolMaxOrderByAggregateInput
    _min?: RolMinOrderByAggregateInput
    _sum?: RolSumOrderByAggregateInput
  }

  export type RolScalarWhereWithAggregatesInput = {
    AND?: RolScalarWhereWithAggregatesInput | RolScalarWhereWithAggregatesInput[]
    OR?: RolScalarWhereWithAggregatesInput[]
    NOT?: RolScalarWhereWithAggregatesInput | RolScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Rol"> | number
    nombre?: StringWithAggregatesFilter<"Rol"> | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"Rol"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Rol"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Rol"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Rol"> | string
  }

  export type RolPermisoWhereInput = {
    AND?: RolPermisoWhereInput | RolPermisoWhereInput[]
    OR?: RolPermisoWhereInput[]
    NOT?: RolPermisoWhereInput | RolPermisoWhereInput[]
    rolId?: IntFilter<"RolPermiso"> | number
    permisoId?: IntFilter<"RolPermiso"> | number
    fechaCreacion?: DateTimeFilter<"RolPermiso"> | Date | string
    usuarioCreadorId?: StringFilter<"RolPermiso"> | string
    rol?: XOR<RolScalarRelationFilter, RolWhereInput>
    permiso?: XOR<PermisoScalarRelationFilter, PermisoWhereInput>
  }

  export type RolPermisoOrderByWithRelationInput = {
    rolId?: SortOrder
    permisoId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    rol?: RolOrderByWithRelationInput
    permiso?: PermisoOrderByWithRelationInput
  }

  export type RolPermisoWhereUniqueInput = Prisma.AtLeast<{
    rolId_permisoId?: RolPermisoRolIdPermisoIdCompoundUniqueInput
    AND?: RolPermisoWhereInput | RolPermisoWhereInput[]
    OR?: RolPermisoWhereInput[]
    NOT?: RolPermisoWhereInput | RolPermisoWhereInput[]
    rolId?: IntFilter<"RolPermiso"> | number
    permisoId?: IntFilter<"RolPermiso"> | number
    fechaCreacion?: DateTimeFilter<"RolPermiso"> | Date | string
    usuarioCreadorId?: StringFilter<"RolPermiso"> | string
    rol?: XOR<RolScalarRelationFilter, RolWhereInput>
    permiso?: XOR<PermisoScalarRelationFilter, PermisoWhereInput>
  }, "rolId_permisoId">

  export type RolPermisoOrderByWithAggregationInput = {
    rolId?: SortOrder
    permisoId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    _count?: RolPermisoCountOrderByAggregateInput
    _avg?: RolPermisoAvgOrderByAggregateInput
    _max?: RolPermisoMaxOrderByAggregateInput
    _min?: RolPermisoMinOrderByAggregateInput
    _sum?: RolPermisoSumOrderByAggregateInput
  }

  export type RolPermisoScalarWhereWithAggregatesInput = {
    AND?: RolPermisoScalarWhereWithAggregatesInput | RolPermisoScalarWhereWithAggregatesInput[]
    OR?: RolPermisoScalarWhereWithAggregatesInput[]
    NOT?: RolPermisoScalarWhereWithAggregatesInput | RolPermisoScalarWhereWithAggregatesInput[]
    rolId?: IntWithAggregatesFilter<"RolPermiso"> | number
    permisoId?: IntWithAggregatesFilter<"RolPermiso"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"RolPermiso"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"RolPermiso"> | string
  }

  export type PermisoWhereInput = {
    AND?: PermisoWhereInput | PermisoWhereInput[]
    OR?: PermisoWhereInput[]
    NOT?: PermisoWhereInput | PermisoWhereInput[]
    id?: IntFilter<"Permiso"> | number
    sgeNombre?: EnumSgeNombreFilter<"Permiso"> | $Enums.SgeNombre
    nombre?: StringFilter<"Permiso"> | string
    rubro?: StringFilter<"Permiso"> | string
    incluido?: BoolFilter<"Permiso"> | boolean
    fechaCreacion?: DateTimeFilter<"Permiso"> | Date | string
    fechaModificacion?: DateTimeFilter<"Permiso"> | Date | string
    usuarioCreadorId?: StringFilter<"Permiso"> | string
    usuarioModificadorId?: StringFilter<"Permiso"> | string
    rolPermiso?: RolPermisoListRelationFilter
  }

  export type PermisoOrderByWithRelationInput = {
    id?: SortOrder
    sgeNombre?: SortOrder
    nombre?: SortOrder
    rubro?: SortOrder
    incluido?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    rolPermiso?: RolPermisoOrderByRelationAggregateInput
  }

  export type PermisoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sgeNombre?: $Enums.SgeNombre
    nombre_rubro?: PermisoNombreRubroCompoundUniqueInput
    AND?: PermisoWhereInput | PermisoWhereInput[]
    OR?: PermisoWhereInput[]
    NOT?: PermisoWhereInput | PermisoWhereInput[]
    nombre?: StringFilter<"Permiso"> | string
    rubro?: StringFilter<"Permiso"> | string
    incluido?: BoolFilter<"Permiso"> | boolean
    fechaCreacion?: DateTimeFilter<"Permiso"> | Date | string
    fechaModificacion?: DateTimeFilter<"Permiso"> | Date | string
    usuarioCreadorId?: StringFilter<"Permiso"> | string
    usuarioModificadorId?: StringFilter<"Permiso"> | string
    rolPermiso?: RolPermisoListRelationFilter
  }, "id" | "nombre_rubro" | "sgeNombre">

  export type PermisoOrderByWithAggregationInput = {
    id?: SortOrder
    sgeNombre?: SortOrder
    nombre?: SortOrder
    rubro?: SortOrder
    incluido?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    _count?: PermisoCountOrderByAggregateInput
    _avg?: PermisoAvgOrderByAggregateInput
    _max?: PermisoMaxOrderByAggregateInput
    _min?: PermisoMinOrderByAggregateInput
    _sum?: PermisoSumOrderByAggregateInput
  }

  export type PermisoScalarWhereWithAggregatesInput = {
    AND?: PermisoScalarWhereWithAggregatesInput | PermisoScalarWhereWithAggregatesInput[]
    OR?: PermisoScalarWhereWithAggregatesInput[]
    NOT?: PermisoScalarWhereWithAggregatesInput | PermisoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Permiso"> | number
    sgeNombre?: EnumSgeNombreWithAggregatesFilter<"Permiso"> | $Enums.SgeNombre
    nombre?: StringWithAggregatesFilter<"Permiso"> | string
    rubro?: StringWithAggregatesFilter<"Permiso"> | string
    incluido?: BoolWithAggregatesFilter<"Permiso"> | boolean
    fechaCreacion?: DateTimeWithAggregatesFilter<"Permiso"> | Date | string
    fechaModificacion?: DateTimeWithAggregatesFilter<"Permiso"> | Date | string
    usuarioCreadorId?: StringWithAggregatesFilter<"Permiso"> | string
    usuarioModificadorId?: StringWithAggregatesFilter<"Permiso"> | string
  }

  export type ProvinciaWhereInput = {
    AND?: ProvinciaWhereInput | ProvinciaWhereInput[]
    OR?: ProvinciaWhereInput[]
    NOT?: ProvinciaWhereInput | ProvinciaWhereInput[]
    iso?: StringFilter<"Provincia"> | string
    nombre?: StringFilter<"Provincia"> | string
    paisIso?: StringFilter<"Provincia"> | string
    pais?: XOR<PaisScalarRelationFilter, PaisWhereInput>
    usuarios?: UserListRelationFilter
  }

  export type ProvinciaOrderByWithRelationInput = {
    iso?: SortOrder
    nombre?: SortOrder
    paisIso?: SortOrder
    pais?: PaisOrderByWithRelationInput
    usuarios?: UserOrderByRelationAggregateInput
  }

  export type ProvinciaWhereUniqueInput = Prisma.AtLeast<{
    iso_paisIso?: ProvinciaIsoPaisIsoCompoundUniqueInput
    AND?: ProvinciaWhereInput | ProvinciaWhereInput[]
    OR?: ProvinciaWhereInput[]
    NOT?: ProvinciaWhereInput | ProvinciaWhereInput[]
    iso?: StringFilter<"Provincia"> | string
    nombre?: StringFilter<"Provincia"> | string
    paisIso?: StringFilter<"Provincia"> | string
    pais?: XOR<PaisScalarRelationFilter, PaisWhereInput>
    usuarios?: UserListRelationFilter
  }, "iso_paisIso">

  export type ProvinciaOrderByWithAggregationInput = {
    iso?: SortOrder
    nombre?: SortOrder
    paisIso?: SortOrder
    _count?: ProvinciaCountOrderByAggregateInput
    _max?: ProvinciaMaxOrderByAggregateInput
    _min?: ProvinciaMinOrderByAggregateInput
  }

  export type ProvinciaScalarWhereWithAggregatesInput = {
    AND?: ProvinciaScalarWhereWithAggregatesInput | ProvinciaScalarWhereWithAggregatesInput[]
    OR?: ProvinciaScalarWhereWithAggregatesInput[]
    NOT?: ProvinciaScalarWhereWithAggregatesInput | ProvinciaScalarWhereWithAggregatesInput[]
    iso?: StringWithAggregatesFilter<"Provincia"> | string
    nombre?: StringWithAggregatesFilter<"Provincia"> | string
    paisIso?: StringWithAggregatesFilter<"Provincia"> | string
  }

  export type PaisWhereInput = {
    AND?: PaisWhereInput | PaisWhereInput[]
    OR?: PaisWhereInput[]
    NOT?: PaisWhereInput | PaisWhereInput[]
    iso?: StringFilter<"Pais"> | string
    nombreEspanol?: StringFilter<"Pais"> | string
    nombreIngles?: StringFilter<"Pais"> | string
    iso3?: StringFilter<"Pais"> | string
    codigoNumerico?: IntFilter<"Pais"> | number
    usuarios?: UserListRelationFilter
    provincias?: ProvinciaListRelationFilter
  }

  export type PaisOrderByWithRelationInput = {
    iso?: SortOrder
    nombreEspanol?: SortOrder
    nombreIngles?: SortOrder
    iso3?: SortOrder
    codigoNumerico?: SortOrder
    usuarios?: UserOrderByRelationAggregateInput
    provincias?: ProvinciaOrderByRelationAggregateInput
  }

  export type PaisWhereUniqueInput = Prisma.AtLeast<{
    iso?: string
    AND?: PaisWhereInput | PaisWhereInput[]
    OR?: PaisWhereInput[]
    NOT?: PaisWhereInput | PaisWhereInput[]
    nombreEspanol?: StringFilter<"Pais"> | string
    nombreIngles?: StringFilter<"Pais"> | string
    iso3?: StringFilter<"Pais"> | string
    codigoNumerico?: IntFilter<"Pais"> | number
    usuarios?: UserListRelationFilter
    provincias?: ProvinciaListRelationFilter
  }, "iso">

  export type PaisOrderByWithAggregationInput = {
    iso?: SortOrder
    nombreEspanol?: SortOrder
    nombreIngles?: SortOrder
    iso3?: SortOrder
    codigoNumerico?: SortOrder
    _count?: PaisCountOrderByAggregateInput
    _avg?: PaisAvgOrderByAggregateInput
    _max?: PaisMaxOrderByAggregateInput
    _min?: PaisMinOrderByAggregateInput
    _sum?: PaisSumOrderByAggregateInput
  }

  export type PaisScalarWhereWithAggregatesInput = {
    AND?: PaisScalarWhereWithAggregatesInput | PaisScalarWhereWithAggregatesInput[]
    OR?: PaisScalarWhereWithAggregatesInput[]
    NOT?: PaisScalarWhereWithAggregatesInput | PaisScalarWhereWithAggregatesInput[]
    iso?: StringWithAggregatesFilter<"Pais"> | string
    nombreEspanol?: StringWithAggregatesFilter<"Pais"> | string
    nombreIngles?: StringWithAggregatesFilter<"Pais"> | string
    iso3?: StringWithAggregatesFilter<"Pais"> | string
    codigoNumerico?: IntWithAggregatesFilter<"Pais"> | number
  }

  export type DocumentoTipoWhereInput = {
    AND?: DocumentoTipoWhereInput | DocumentoTipoWhereInput[]
    OR?: DocumentoTipoWhereInput[]
    NOT?: DocumentoTipoWhereInput | DocumentoTipoWhereInput[]
    id?: IntFilter<"DocumentoTipo"> | number
    nombre?: StringFilter<"DocumentoTipo"> | string
    usuarios?: UserListRelationFilter
  }

  export type DocumentoTipoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    usuarios?: UserOrderByRelationAggregateInput
  }

  export type DocumentoTipoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DocumentoTipoWhereInput | DocumentoTipoWhereInput[]
    OR?: DocumentoTipoWhereInput[]
    NOT?: DocumentoTipoWhereInput | DocumentoTipoWhereInput[]
    nombre?: StringFilter<"DocumentoTipo"> | string
    usuarios?: UserListRelationFilter
  }, "id">

  export type DocumentoTipoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: DocumentoTipoCountOrderByAggregateInput
    _avg?: DocumentoTipoAvgOrderByAggregateInput
    _max?: DocumentoTipoMaxOrderByAggregateInput
    _min?: DocumentoTipoMinOrderByAggregateInput
    _sum?: DocumentoTipoSumOrderByAggregateInput
  }

  export type DocumentoTipoScalarWhereWithAggregatesInput = {
    AND?: DocumentoTipoScalarWhereWithAggregatesInput | DocumentoTipoScalarWhereWithAggregatesInput[]
    OR?: DocumentoTipoScalarWhereWithAggregatesInput[]
    NOT?: DocumentoTipoScalarWhereWithAggregatesInput | DocumentoTipoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DocumentoTipo"> | number
    nombre?: StringWithAggregatesFilter<"DocumentoTipo"> | string
  }

  export type LibroCreateInput = {
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaCreateNestedManyWithoutLibroInput
    laboratorio: LaboratorioCreateNestedOneWithoutLibrosInput
    armario?: ArmarioCreateNestedOneWithoutLibrosInput
    estante?: EstanteCreateNestedOneWithoutLibrosInput
    autor: LibroAutorCreateNestedOneWithoutLibrosInput
    idioma: LibroIdiomaCreateNestedOneWithoutLibrosInput
    editorial: LibroEditorialCreateNestedOneWithoutLibrosInput
    sede: SedeCreateNestedOneWithoutLibrosInput
    reservas?: ReservaLibroCreateNestedManyWithoutLibroInput
  }

  export type LibroUncheckedCreateInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaUncheckedCreateNestedManyWithoutLibroInput
    reservas?: ReservaLibroUncheckedCreateNestedManyWithoutLibroInput
  }

  export type LibroUpdateInput = {
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUpdateManyWithoutLibroNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutLibrosNestedInput
    armario?: ArmarioUpdateOneWithoutLibrosNestedInput
    estante?: EstanteUpdateOneWithoutLibrosNestedInput
    autor?: LibroAutorUpdateOneRequiredWithoutLibrosNestedInput
    idioma?: LibroIdiomaUpdateOneRequiredWithoutLibrosNestedInput
    editorial?: LibroEditorialUpdateOneRequiredWithoutLibrosNestedInput
    sede?: SedeUpdateOneRequiredWithoutLibrosNestedInput
    reservas?: ReservaLibroUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUncheckedUpdateManyWithoutLibroNestedInput
    reservas?: ReservaLibroUncheckedUpdateManyWithoutLibroNestedInput
  }

  export type LibroCreateManyInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LibroUpdateManyMutationInput = {
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroMateriaCreateInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    libro: LibroCreateNestedOneWithoutMateriasInput
    materia: MateriaCreateNestedOneWithoutLibrosInput
  }

  export type LibroMateriaUncheckedCreateInput = {
    libroId: number
    materiaId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroMateriaUpdateInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    libro?: LibroUpdateOneRequiredWithoutMateriasNestedInput
    materia?: MateriaUpdateOneRequiredWithoutLibrosNestedInput
  }

  export type LibroMateriaUncheckedUpdateInput = {
    libroId?: IntFieldUpdateOperationsInput | number
    materiaId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroMateriaCreateManyInput = {
    libroId: number
    materiaId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroMateriaUpdateManyMutationInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroMateriaUncheckedUpdateManyInput = {
    libroId?: IntFieldUpdateOperationsInput | number
    materiaId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroAutorCreateInput = {
    autorNombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    libros?: LibroCreateNestedManyWithoutAutorInput
  }

  export type LibroAutorUncheckedCreateInput = {
    id?: number
    autorNombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    libros?: LibroUncheckedCreateNestedManyWithoutAutorInput
  }

  export type LibroAutorUpdateInput = {
    autorNombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    libros?: LibroUpdateManyWithoutAutorNestedInput
  }

  export type LibroAutorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    autorNombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    libros?: LibroUncheckedUpdateManyWithoutAutorNestedInput
  }

  export type LibroAutorCreateManyInput = {
    id?: number
    autorNombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroAutorUpdateManyMutationInput = {
    autorNombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroAutorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    autorNombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroIdiomaCreateInput = {
    idioma: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    libros?: LibroCreateNestedManyWithoutIdiomaInput
  }

  export type LibroIdiomaUncheckedCreateInput = {
    id?: number
    idioma: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    libros?: LibroUncheckedCreateNestedManyWithoutIdiomaInput
  }

  export type LibroIdiomaUpdateInput = {
    idioma?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    libros?: LibroUpdateManyWithoutIdiomaNestedInput
  }

  export type LibroIdiomaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    idioma?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    libros?: LibroUncheckedUpdateManyWithoutIdiomaNestedInput
  }

  export type LibroIdiomaCreateManyInput = {
    id?: number
    idioma: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroIdiomaUpdateManyMutationInput = {
    idioma?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroIdiomaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    idioma?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroEditorialCreateInput = {
    editorial: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    libros?: LibroCreateNestedManyWithoutEditorialInput
  }

  export type LibroEditorialUncheckedCreateInput = {
    id?: number
    editorial: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    libros?: LibroUncheckedCreateNestedManyWithoutEditorialInput
  }

  export type LibroEditorialUpdateInput = {
    editorial?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    libros?: LibroUpdateManyWithoutEditorialNestedInput
  }

  export type LibroEditorialUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    editorial?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    libros?: LibroUncheckedUpdateManyWithoutEditorialNestedInput
  }

  export type LibroEditorialCreateManyInput = {
    id?: number
    editorial: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroEditorialUpdateManyMutationInput = {
    editorial?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroEditorialUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    editorial?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoCreateInput = {
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    anioDeCarrera: number
    activo: boolean
    ac: string
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteCreateNestedManyWithoutCursoInput
    profesor: UserCreateNestedOneWithoutCursosComoProfesorInput
    sede: SedeCreateNestedOneWithoutCursosInput
    materia: MateriaCreateNestedOneWithoutCursosInput
    division: DivisionCreateNestedOneWithoutCursosInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutCursoInput
  }

  export type CursoUncheckedCreateInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    profesorId: string
    anioDeCarrera: number
    activo: boolean
    ac: string
    sedeId: number
    materiaId: number
    divisionId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteUncheckedCreateNestedManyWithoutCursoInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutCursoInput
  }

  export type CursoUpdateInput = {
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUpdateManyWithoutCursoNestedInput
    profesor?: UserUpdateOneRequiredWithoutCursosComoProfesorNestedInput
    sede?: SedeUpdateOneRequiredWithoutCursosNestedInput
    materia?: MateriaUpdateOneRequiredWithoutCursosNestedInput
    division?: DivisionUpdateOneRequiredWithoutCursosNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    profesorId?: StringFieldUpdateOperationsInput | string
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    sedeId?: IntFieldUpdateOperationsInput | number
    materiaId?: IntFieldUpdateOperationsInput | number
    divisionId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUncheckedUpdateManyWithoutCursoNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutCursoNestedInput
  }

  export type CursoCreateManyInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    profesorId: string
    anioDeCarrera: number
    activo: boolean
    ac: string
    sedeId: number
    materiaId: number
    divisionId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type CursoUpdateManyMutationInput = {
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    profesorId?: StringFieldUpdateOperationsInput | string
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    sedeId?: IntFieldUpdateOperationsInput | number
    materiaId?: IntFieldUpdateOperationsInput | number
    divisionId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoAyudanteCreateInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
    curso: CursoCreateNestedOneWithoutAyudantesInput
    usuario: UserCreateNestedOneWithoutCursosComoAyudanteInput
  }

  export type CursoAyudanteUncheckedCreateInput = {
    cursoId: number
    userId: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
  }

  export type CursoAyudanteUpdateInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    curso?: CursoUpdateOneRequiredWithoutAyudantesNestedInput
    usuario?: UserUpdateOneRequiredWithoutCursosComoAyudanteNestedInput
  }

  export type CursoAyudanteUncheckedUpdateInput = {
    cursoId?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoAyudanteCreateManyInput = {
    cursoId: number
    userId: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
  }

  export type CursoAyudanteUpdateManyMutationInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoAyudanteUncheckedUpdateManyInput = {
    cursoId?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type DivisionCreateInput = {
    nombre: string
    anio: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
    cursos?: CursoCreateNestedManyWithoutDivisionInput
  }

  export type DivisionUncheckedCreateInput = {
    id?: number
    nombre: string
    anio: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
    cursos?: CursoUncheckedCreateNestedManyWithoutDivisionInput
  }

  export type DivisionUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUpdateManyWithoutDivisionNestedInput
  }

  export type DivisionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUncheckedUpdateManyWithoutDivisionNestedInput
  }

  export type DivisionCreateManyInput = {
    id?: number
    nombre: string
    anio: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
  }

  export type DivisionUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type DivisionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoCreateInput = {
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    tipo: EquipoTipoCreateNestedOneWithoutEquiposInput
    marca: EquipoMarcaCreateNestedOneWithoutEquiposInput
    sede: SedeCreateNestedOneWithoutEquiposInput
    laboratorio: LaboratorioCreateNestedOneWithoutEquiposInput
    armario?: ArmarioCreateNestedOneWithoutEquiposInput
    estante?: EstanteCreateNestedOneWithoutEquiposInput
    estado: EquipoEstadoCreateNestedOneWithoutEquiposInput
    reservas?: ReservaEquipoCreateNestedManyWithoutEquipoInput
  }

  export type EquipoUncheckedCreateInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservas?: ReservaEquipoUncheckedCreateNestedManyWithoutEquipoInput
  }

  export type EquipoUpdateInput = {
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    tipo?: EquipoTipoUpdateOneRequiredWithoutEquiposNestedInput
    marca?: EquipoMarcaUpdateOneRequiredWithoutEquiposNestedInput
    sede?: SedeUpdateOneRequiredWithoutEquiposNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutEquiposNestedInput
    armario?: ArmarioUpdateOneWithoutEquiposNestedInput
    estante?: EstanteUpdateOneWithoutEquiposNestedInput
    estado?: EquipoEstadoUpdateOneRequiredWithoutEquiposNestedInput
    reservas?: ReservaEquipoUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservas?: ReservaEquipoUncheckedUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoCreateManyInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type EquipoUpdateManyMutationInput = {
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoMarcaCreateInput = {
    nombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    equipos?: EquipoCreateNestedManyWithoutMarcaInput
  }

  export type EquipoMarcaUncheckedCreateInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    equipos?: EquipoUncheckedCreateNestedManyWithoutMarcaInput
  }

  export type EquipoMarcaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUpdateManyWithoutMarcaNestedInput
  }

  export type EquipoMarcaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUncheckedUpdateManyWithoutMarcaNestedInput
  }

  export type EquipoMarcaCreateManyInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type EquipoMarcaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoMarcaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoTipoCreateInput = {
    nombre: string
    imagen?: string | null
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    equipos?: EquipoCreateNestedManyWithoutTipoInput
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutEquipoTipoInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoCreateNestedManyWithoutEquipoTipoInput
  }

  export type EquipoTipoUncheckedCreateInput = {
    id?: number
    nombre: string
    imagen?: string | null
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    equipos?: EquipoUncheckedCreateNestedManyWithoutTipoInput
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutEquipoTipoInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoUncheckedCreateNestedManyWithoutEquipoTipoInput
  }

  export type EquipoTipoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUpdateManyWithoutTipoNestedInput
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoUpdateManyWithoutEquipoTipoNestedInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoUpdateManyWithoutEquipoTipoNestedInput
  }

  export type EquipoTipoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUncheckedUpdateManyWithoutTipoNestedInput
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutEquipoTipoNestedInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutEquipoTipoNestedInput
  }

  export type EquipoTipoCreateManyInput = {
    id?: number
    nombre: string
    imagen?: string | null
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type EquipoTipoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoTipoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoEstadoCreateInput = {
    nombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    equipos?: EquipoCreateNestedManyWithoutEstadoInput
  }

  export type EquipoEstadoUncheckedCreateInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    equipos?: EquipoUncheckedCreateNestedManyWithoutEstadoInput
  }

  export type EquipoEstadoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUpdateManyWithoutEstadoNestedInput
  }

  export type EquipoEstadoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUncheckedUpdateManyWithoutEstadoNestedInput
  }

  export type EquipoEstadoCreateManyInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type EquipoEstadoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoEstadoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LaboratorioCreateInput = {
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    sede: SedeCreateNestedOneWithoutLaboratoriosInput
    software?: SoftwareLaboratorioCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoCreateNestedManyWithoutLaboratorioInput
    libros?: LibroCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioUncheckedCreateInput = {
    id?: number
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    software?: SoftwareLaboratorioUncheckedCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioUncheckedCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutLaboratorioInput
    libros?: LibroUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    sede?: SedeUpdateOneRequiredWithoutLaboratoriosNestedInput
    software?: SoftwareLaboratorioUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutLaboratorioNestedInput
  }

  export type LaboratorioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    sedeId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    software?: SoftwareLaboratorioUncheckedUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUncheckedUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutLaboratorioNestedInput
  }

  export type LaboratorioCreateManyInput = {
    id?: number
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LaboratorioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LaboratorioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    sedeId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ArmarioCreateInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    laboratorio: LaboratorioCreateNestedOneWithoutArmariosInput
    estantes?: EstanteCreateNestedManyWithoutArmarioInput
    equipos?: EquipoCreateNestedManyWithoutArmarioInput
    libros?: LibroCreateNestedManyWithoutArmarioInput
  }

  export type ArmarioUncheckedCreateInput = {
    id?: number
    nombre: string
    laboratorioId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    estantes?: EstanteUncheckedCreateNestedManyWithoutArmarioInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutArmarioInput
    libros?: LibroUncheckedCreateNestedManyWithoutArmarioInput
  }

  export type ArmarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    laboratorio?: LaboratorioUpdateOneRequiredWithoutArmariosNestedInput
    estantes?: EstanteUpdateManyWithoutArmarioNestedInput
    equipos?: EquipoUpdateManyWithoutArmarioNestedInput
    libros?: LibroUpdateManyWithoutArmarioNestedInput
  }

  export type ArmarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    laboratorioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    estantes?: EstanteUncheckedUpdateManyWithoutArmarioNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutArmarioNestedInput
    libros?: LibroUncheckedUpdateManyWithoutArmarioNestedInput
  }

  export type ArmarioCreateManyInput = {
    id?: number
    nombre: string
    laboratorioId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ArmarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ArmarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    laboratorioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EstanteCreateInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    armario: ArmarioCreateNestedOneWithoutEstantesInput
    equipos?: EquipoCreateNestedManyWithoutEstanteInput
    libros?: LibroCreateNestedManyWithoutEstanteInput
  }

  export type EstanteUncheckedCreateInput = {
    id?: number
    nombre: string
    armarioId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipos?: EquipoUncheckedCreateNestedManyWithoutEstanteInput
    libros?: LibroUncheckedCreateNestedManyWithoutEstanteInput
  }

  export type EstanteUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    armario?: ArmarioUpdateOneRequiredWithoutEstantesNestedInput
    equipos?: EquipoUpdateManyWithoutEstanteNestedInput
    libros?: LibroUpdateManyWithoutEstanteNestedInput
  }

  export type EstanteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    armarioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUncheckedUpdateManyWithoutEstanteNestedInput
    libros?: LibroUncheckedUpdateManyWithoutEstanteNestedInput
  }

  export type EstanteCreateManyInput = {
    id?: number
    nombre: string
    armarioId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type EstanteUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EstanteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    armarioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareCreateInput = {
    nombre: string
    version: string
    estado: string
    windows?: boolean
    linux?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    laboratorios?: SoftwareLaboratorioCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareUncheckedCreateInput = {
    id?: number
    nombre: string
    version: string
    estado: string
    windows?: boolean
    linux?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    laboratorios?: SoftwareLaboratorioUncheckedCreateNestedManyWithoutSoftwareInput
  }

  export type SoftwareUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    windows?: BoolFieldUpdateOperationsInput | boolean
    linux?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    laboratorios?: SoftwareLaboratorioUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    windows?: BoolFieldUpdateOperationsInput | boolean
    linux?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    laboratorios?: SoftwareLaboratorioUncheckedUpdateManyWithoutSoftwareNestedInput
  }

  export type SoftwareCreateManyInput = {
    id?: number
    nombre: string
    version: string
    estado: string
    windows?: boolean
    linux?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type SoftwareUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    windows?: BoolFieldUpdateOperationsInput | boolean
    linux?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    windows?: BoolFieldUpdateOperationsInput | boolean
    linux?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareLaboratorioCreateInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    software: SoftwareCreateNestedOneWithoutLaboratoriosInput
    laboratorio: LaboratorioCreateNestedOneWithoutSoftwareInput
  }

  export type SoftwareLaboratorioUncheckedCreateInput = {
    softwareId: number
    laboratorioId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type SoftwareLaboratorioUpdateInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    software?: SoftwareUpdateOneRequiredWithoutLaboratoriosNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutSoftwareNestedInput
  }

  export type SoftwareLaboratorioUncheckedUpdateInput = {
    softwareId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareLaboratorioCreateManyInput = {
    softwareId: number
    laboratorioId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type SoftwareLaboratorioUpdateManyMutationInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareLaboratorioUncheckedUpdateManyInput = {
    softwareId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type MailsCreateInput = {
    id?: number
    emisor: string
    para: string
    cc: string
    cco: string
    contenido: JsonNullValueInput | InputJsonValue
    asunto: string
    fechaEnvio?: Date | string
  }

  export type MailsUncheckedCreateInput = {
    id?: number
    emisor: string
    para: string
    cc: string
    cco: string
    contenido: JsonNullValueInput | InputJsonValue
    asunto: string
    fechaEnvio?: Date | string
  }

  export type MailsUpdateInput = {
    emisor?: StringFieldUpdateOperationsInput | string
    para?: StringFieldUpdateOperationsInput | string
    cc?: StringFieldUpdateOperationsInput | string
    cco?: StringFieldUpdateOperationsInput | string
    contenido?: JsonNullValueInput | InputJsonValue
    asunto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MailsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    emisor?: StringFieldUpdateOperationsInput | string
    para?: StringFieldUpdateOperationsInput | string
    cc?: StringFieldUpdateOperationsInput | string
    cco?: StringFieldUpdateOperationsInput | string
    contenido?: JsonNullValueInput | InputJsonValue
    asunto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MailsCreateManyInput = {
    id?: number
    emisor: string
    para: string
    cc: string
    cco: string
    contenido: JsonNullValueInput | InputJsonValue
    asunto: string
    fechaEnvio?: Date | string
  }

  export type MailsUpdateManyMutationInput = {
    emisor?: StringFieldUpdateOperationsInput | string
    para?: StringFieldUpdateOperationsInput | string
    cc?: StringFieldUpdateOperationsInput | string
    cco?: StringFieldUpdateOperationsInput | string
    contenido?: JsonNullValueInput | InputJsonValue
    asunto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MailsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    emisor?: StringFieldUpdateOperationsInput | string
    para?: StringFieldUpdateOperationsInput | string
    cc?: StringFieldUpdateOperationsInput | string
    cco?: StringFieldUpdateOperationsInput | string
    contenido?: JsonNullValueInput | InputJsonValue
    asunto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MateriaCreateInput = {
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    directorUsuario?: UserCreateNestedOneWithoutMateriasDirectorInput
    jefeTrabajoPracticos?: MateriaJefeTpCreateNestedManyWithoutMateriaInput
    cursos?: CursoCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaUncheckedCreateInput = {
    id?: number
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    directorUsuarioId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedCreateNestedManyWithoutMateriaInput
    cursos?: CursoUncheckedCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaUncheckedCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaUncheckedCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    directorUsuario?: UserUpdateOneWithoutMateriasDirectorNestedInput
    jefeTrabajoPracticos?: MateriaJefeTpUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type MateriaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    directorUsuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUncheckedUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUncheckedUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUncheckedUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type MateriaCreateManyInput = {
    id?: number
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    directorUsuarioId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type MateriaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    directorUsuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaJefeTpCreateInput = {
    materia: MateriaCreateNestedOneWithoutJefeTrabajoPracticosInput
    usuario: UserCreateNestedOneWithoutMateriaJefeTpInput
  }

  export type MateriaJefeTpUncheckedCreateInput = {
    materiaId: number
    userId: string
  }

  export type MateriaJefeTpUpdateInput = {
    materia?: MateriaUpdateOneRequiredWithoutJefeTrabajoPracticosNestedInput
    usuario?: UserUpdateOneRequiredWithoutMateriaJefeTpNestedInput
  }

  export type MateriaJefeTpUncheckedUpdateInput = {
    materiaId?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaJefeTpCreateManyInput = {
    materiaId: number
    userId: string
  }

  export type MateriaJefeTpUpdateManyMutationInput = {

  }

  export type MateriaJefeTpUncheckedUpdateManyInput = {
    materiaId?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaCorrelativaCreateInput = {
    estatusCorrelativa: $Enums.EstatusCorrelativa
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materiaPrerequisito: MateriaCreateNestedOneWithoutMateriaPrerequisitoInput
    correlativa: MateriaCreateNestedOneWithoutCorrelativaInput
  }

  export type MateriaCorrelativaUncheckedCreateInput = {
    materiaPrerequisitoId: number
    correlativaId: number
    estatusCorrelativa: $Enums.EstatusCorrelativa
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type MateriaCorrelativaUpdateInput = {
    estatusCorrelativa?: EnumEstatusCorrelativaFieldUpdateOperationsInput | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materiaPrerequisito?: MateriaUpdateOneRequiredWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaUpdateOneRequiredWithoutCorrelativaNestedInput
  }

  export type MateriaCorrelativaUncheckedUpdateInput = {
    materiaPrerequisitoId?: IntFieldUpdateOperationsInput | number
    correlativaId?: IntFieldUpdateOperationsInput | number
    estatusCorrelativa?: EnumEstatusCorrelativaFieldUpdateOperationsInput | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaCorrelativaCreateManyInput = {
    materiaPrerequisitoId: number
    correlativaId: number
    estatusCorrelativa: $Enums.EstatusCorrelativa
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type MateriaCorrelativaUpdateManyMutationInput = {
    estatusCorrelativa?: EnumEstatusCorrelativaFieldUpdateOperationsInput | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaCorrelativaUncheckedUpdateManyInput = {
    materiaPrerequisitoId?: IntFieldUpdateOperationsInput | number
    correlativaId?: IntFieldUpdateOperationsInput | number
    estatusCorrelativa?: EnumEstatusCorrelativaFieldUpdateOperationsInput | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaCreateInput = {
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    usuarioSolicito: UserCreateNestedOneWithoutReservasSolicitadasInput
    usuarioAprobador?: UserCreateNestedOneWithoutReservasAprobadasInput
    usuarioRechazado?: UserCreateNestedOneWithoutReservasRechazadasInput
    usuarioRenovo?: UserCreateNestedOneWithoutReservasRenovadasInput
    usuarioRecibio?: UserCreateNestedOneWithoutReservasRecibidasInput
    usuarioTutor?: UserCreateNestedOneWithoutReservasComoTutorInput
    reservaEquipo?: ReservaEquipoCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    reservaEquipo?: ReservaEquipoUncheckedCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaUpdateInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    usuarioSolicito?: UserUpdateOneRequiredWithoutReservasSolicitadasNestedInput
    usuarioAprobador?: UserUpdateOneWithoutReservasAprobadasNestedInput
    usuarioRechazado?: UserUpdateOneWithoutReservasRechazadasNestedInput
    usuarioRenovo?: UserUpdateOneWithoutReservasRenovadasNestedInput
    usuarioRecibio?: UserUpdateOneWithoutReservasRecibidasNestedInput
    usuarioTutor?: UserUpdateOneWithoutReservasComoTutorNestedInput
    reservaEquipo?: ReservaEquipoUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    reservaEquipo?: ReservaEquipoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type ReservaCreateManyInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
  }

  export type ReservaUpdateManyMutationInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReservaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReservaEquipoCreateInput = {
    fechaEntregado: Date | string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaEquipoInput
    equipo: EquipoCreateNestedOneWithoutReservasInput
  }

  export type ReservaEquipoUncheckedCreateInput = {
    id?: number
    fechaEntregado: Date | string
    reservaId: number
    equipoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaEquipoUpdateInput = {
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaEquipoNestedInput
    equipo?: EquipoUpdateOneRequiredWithoutReservasNestedInput
  }

  export type ReservaEquipoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaId?: IntFieldUpdateOperationsInput | number
    equipoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaEquipoCreateManyInput = {
    id?: number
    fechaEntregado: Date | string
    reservaId: number
    equipoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaEquipoUpdateManyMutationInput = {
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaEquipoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaId?: IntFieldUpdateOperationsInput | number
    equipoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLibroCreateInput = {
    fechaEntregado: Date | string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLibroInput
    libro: LibroCreateNestedOneWithoutReservasInput
  }

  export type ReservaLibroUncheckedCreateInput = {
    id?: number
    fechaEntregado: Date | string
    reservaId: number
    libroId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLibroUpdateInput = {
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLibroNestedInput
    libro?: LibroUpdateOneRequiredWithoutReservasNestedInput
  }

  export type ReservaLibroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaId?: IntFieldUpdateOperationsInput | number
    libroId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLibroCreateManyInput = {
    id?: number
    fechaEntregado: Date | string
    reservaId: number
    libroId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLibroUpdateManyMutationInput = {
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLibroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaId?: IntFieldUpdateOperationsInput | number
    libroId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoCreateInput = {
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    sede: SedeCreateNestedOneWithoutReservaLaboratorioCerradoInput
    laboratorio?: LaboratorioCreateNestedOneWithoutReservaLaboratorioCerradoInput
    curso?: CursoCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalMateria?: MateriaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalDocente?: UserCreateNestedOneWithoutReservaLaboratorioCerradoInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoUncheckedCreateInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoUpdateInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    sede?: SedeUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    laboratorio?: LaboratorioUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    curso?: CursoUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalMateria?: MateriaUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalDocente?: UserUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoCreateManyInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoUpdateManyMutationInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoEquipoCreateInput = {
    cantidad: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservaLaboratorioCerrado: ReservaLaboratorioCerradoCreateNestedOneWithoutEquipoReservadoInput
    equipoTipo: EquipoTipoCreateNestedOneWithoutReservaLaboratorioCerradoEquipoInput
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedCreateInput = {
    id?: number
    cantidad: number
    reservaLaboratorioCerradoId: number
    equipoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoEquipoUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneRequiredWithoutEquipoReservadoNestedInput
    equipoTipo?: EquipoTipoUpdateOneRequiredWithoutReservaLaboratorioCerradoEquipoNestedInput
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    reservaLaboratorioCerradoId?: IntFieldUpdateOperationsInput | number
    equipoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoEquipoCreateManyInput = {
    id?: number
    cantidad: number
    reservaLaboratorioCerradoId: number
    equipoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoEquipoUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    reservaLaboratorioCerradoId?: IntFieldUpdateOperationsInput | number
    equipoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioAbiertoCreateInput = {
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLaboratorioAbiertoInput
    sede: SedeCreateNestedOneWithoutReservaLaboratorioAbiertoInput
    laboratorio?: LaboratorioCreateNestedOneWithoutReservaLaboratorioAbiertoInput
    equipoReservado?: ReservaLaboratorioAbiertoEquipoCreateNestedManyWithoutReservaLaboratorioAbiertoInput
  }

  export type ReservaLaboratorioAbiertoUncheckedCreateInput = {
    id?: number
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioAbiertoInput
  }

  export type ReservaLaboratorioAbiertoUpdateInput = {
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLaboratorioAbiertoNestedInput
    sede?: SedeUpdateOneRequiredWithoutReservaLaboratorioAbiertoNestedInput
    laboratorio?: LaboratorioUpdateOneWithoutReservaLaboratorioAbiertoNestedInput
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUpdateManyWithoutReservaLaboratorioAbiertoNestedInput
  }

  export type ReservaLaboratorioAbiertoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutReservaLaboratorioAbiertoNestedInput
  }

  export type ReservaLaboratorioAbiertoCreateManyInput = {
    id?: number
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioAbiertoUpdateManyMutationInput = {
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioAbiertoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioAbiertoEquipoCreateInput = {
    cantidad: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservaLaboratorioAbierto: ReservaLaboratorioAbiertoCreateNestedOneWithoutEquipoReservadoInput
    equipoTipo: EquipoTipoCreateNestedOneWithoutReservaLaboratorioAbiertoEquipoInput
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedCreateInput = {
    id?: number
    cantidad: number
    reservaLaboratorioAbiertoId: number
    equipoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioAbiertoEquipoUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneRequiredWithoutEquipoReservadoNestedInput
    equipoTipo?: EquipoTipoUpdateOneRequiredWithoutReservaLaboratorioAbiertoEquipoNestedInput
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    reservaLaboratorioAbiertoId?: IntFieldUpdateOperationsInput | number
    equipoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioAbiertoEquipoCreateManyInput = {
    id?: number
    cantidad: number
    reservaLaboratorioAbiertoId: number
    equipoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioAbiertoEquipoUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    reservaLaboratorioAbiertoId?: IntFieldUpdateOperationsInput | number
    equipoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type PantallaCreateInput = {
    docente: string
    materia?: string | null
    laboratorio?: string | null
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    usuarioCreadorId: string
    fechaCreacion?: Date | string
    sede: SedeCreateNestedOneWithoutPantallaInput
  }

  export type PantallaUncheckedCreateInput = {
    id?: number
    sedeId: number
    docente: string
    materia?: string | null
    laboratorio?: string | null
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    usuarioCreadorId: string
    fechaCreacion?: Date | string
  }

  export type PantallaUpdateInput = {
    docente?: StringFieldUpdateOperationsInput | string
    materia?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    sede?: SedeUpdateOneRequiredWithoutPantallaNestedInput
  }

  export type PantallaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    docente?: StringFieldUpdateOperationsInput | string
    materia?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PantallaCreateManyInput = {
    id?: number
    sedeId: number
    docente: string
    materia?: string | null
    laboratorio?: string | null
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    usuarioCreadorId: string
    fechaCreacion?: Date | string
  }

  export type PantallaUpdateManyMutationInput = {
    docente?: StringFieldUpdateOperationsInput | string
    materia?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PantallaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    docente?: StringFieldUpdateOperationsInput | string
    materia?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountCreateInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    refresh_expires_in?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    refresh_token_expires_in?: number | null
    user: UserCreateNestedOneWithoutAccountsInput
  }

  export type AccountUncheckedCreateInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    refresh_expires_in?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    refresh_token_expires_in?: number | null
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    refresh_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    user?: UserUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    refresh_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AccountCreateManyInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    refresh_expires_in?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    refresh_token_expires_in?: number | null
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    refresh_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    refresh_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SessionCreateInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateManyInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUncheckedCreateInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateManyInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateManyMutationInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateManyInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SedeCreateInput = {
    nombre: string
    cursos?: CursoCreateNestedManyWithoutSedeInput
    equipos?: EquipoCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioCreateNestedManyWithoutSedeInput
    libros?: LibroCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateInput = {
    id?: number
    nombre: string
    cursos?: CursoUncheckedCreateNestedManyWithoutSedeInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioUncheckedCreateNestedManyWithoutSedeInput
    libros?: LibroUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUpdateManyWithoutSedeNestedInput
    libros?: LibroUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUncheckedUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUncheckedUpdateManyWithoutSedeNestedInput
    libros?: LibroUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type SedeCreateManyInput = {
    id?: number
    nombre: string
  }

  export type SedeUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type SedeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TutorCreateInput = {
    diasHorarios: string
    activo: boolean
    especialidad: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    usuario: UserCreateNestedOneWithoutTutorInput
  }

  export type TutorUncheckedCreateInput = {
    userId: string
    diasHorarios: string
    activo: boolean
    especialidad: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type TutorUpdateInput = {
    diasHorarios?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    especialidad?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuario?: UserUpdateOneRequiredWithoutTutorNestedInput
  }

  export type TutorUncheckedUpdateInput = {
    userId?: StringFieldUpdateOperationsInput | string
    diasHorarios?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    especialidad?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type TutorCreateManyInput = {
    userId: string
    diasHorarios: string
    activo: boolean
    especialidad: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type TutorUpdateManyMutationInput = {
    diasHorarios?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    especialidad?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type TutorUncheckedUpdateManyInput = {
    userId?: StringFieldUpdateOperationsInput | string
    diasHorarios?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    especialidad?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioRolCreateInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    usuario: UserCreateNestedOneWithoutUsuarioRolInput
    rol: RolCreateNestedOneWithoutUsuariosInput
  }

  export type UsuarioRolUncheckedCreateInput = {
    userId: string
    rolId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type UsuarioRolUpdateInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuario?: UserUpdateOneRequiredWithoutUsuarioRolNestedInput
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
  }

  export type UsuarioRolUncheckedUpdateInput = {
    userId?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioRolCreateManyInput = {
    userId: string
    rolId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type UsuarioRolUpdateManyMutationInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioRolUncheckedUpdateManyInput = {
    userId?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type RolCreateInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    usuarios?: UsuarioRolCreateNestedManyWithoutRolInput
    rolPermiso?: RolPermisoCreateNestedManyWithoutRolInput
  }

  export type RolUncheckedCreateInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    usuarios?: UsuarioRolUncheckedCreateNestedManyWithoutRolInput
    rolPermiso?: RolPermisoUncheckedCreateNestedManyWithoutRolInput
  }

  export type RolUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioRolUpdateManyWithoutRolNestedInput
    rolPermiso?: RolPermisoUpdateManyWithoutRolNestedInput
  }

  export type RolUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioRolUncheckedUpdateManyWithoutRolNestedInput
    rolPermiso?: RolPermisoUncheckedUpdateManyWithoutRolNestedInput
  }

  export type RolCreateManyInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type RolUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type RolUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type RolPermisoCreateInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    rol: RolCreateNestedOneWithoutRolPermisoInput
    permiso: PermisoCreateNestedOneWithoutRolPermisoInput
  }

  export type RolPermisoUncheckedCreateInput = {
    rolId: number
    permisoId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type RolPermisoUpdateInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    rol?: RolUpdateOneRequiredWithoutRolPermisoNestedInput
    permiso?: PermisoUpdateOneRequiredWithoutRolPermisoNestedInput
  }

  export type RolPermisoUncheckedUpdateInput = {
    rolId?: IntFieldUpdateOperationsInput | number
    permisoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type RolPermisoCreateManyInput = {
    rolId: number
    permisoId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type RolPermisoUpdateManyMutationInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type RolPermisoUncheckedUpdateManyInput = {
    rolId?: IntFieldUpdateOperationsInput | number
    permisoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type PermisoCreateInput = {
    sgeNombre: $Enums.SgeNombre
    nombre: string
    rubro: string
    incluido?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    rolPermiso?: RolPermisoCreateNestedManyWithoutPermisoInput
  }

  export type PermisoUncheckedCreateInput = {
    id?: number
    sgeNombre: $Enums.SgeNombre
    nombre: string
    rubro: string
    incluido?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    rolPermiso?: RolPermisoUncheckedCreateNestedManyWithoutPermisoInput
  }

  export type PermisoUpdateInput = {
    sgeNombre?: EnumSgeNombreFieldUpdateOperationsInput | $Enums.SgeNombre
    nombre?: StringFieldUpdateOperationsInput | string
    rubro?: StringFieldUpdateOperationsInput | string
    incluido?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    rolPermiso?: RolPermisoUpdateManyWithoutPermisoNestedInput
  }

  export type PermisoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sgeNombre?: EnumSgeNombreFieldUpdateOperationsInput | $Enums.SgeNombre
    nombre?: StringFieldUpdateOperationsInput | string
    rubro?: StringFieldUpdateOperationsInput | string
    incluido?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    rolPermiso?: RolPermisoUncheckedUpdateManyWithoutPermisoNestedInput
  }

  export type PermisoCreateManyInput = {
    id?: number
    sgeNombre: $Enums.SgeNombre
    nombre: string
    rubro: string
    incluido?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type PermisoUpdateManyMutationInput = {
    sgeNombre?: EnumSgeNombreFieldUpdateOperationsInput | $Enums.SgeNombre
    nombre?: StringFieldUpdateOperationsInput | string
    rubro?: StringFieldUpdateOperationsInput | string
    incluido?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type PermisoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sgeNombre?: EnumSgeNombreFieldUpdateOperationsInput | $Enums.SgeNombre
    nombre?: StringFieldUpdateOperationsInput | string
    rubro?: StringFieldUpdateOperationsInput | string
    incluido?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ProvinciaCreateInput = {
    iso: string
    nombre: string
    pais: PaisCreateNestedOneWithoutProvinciasInput
    usuarios?: UserCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciaUncheckedCreateInput = {
    iso: string
    nombre: string
    paisIso: string
    usuarios?: UserUncheckedCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciaUpdateInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    pais?: PaisUpdateOneRequiredWithoutProvinciasNestedInput
    usuarios?: UserUpdateManyWithoutProvinciaNestedInput
  }

  export type ProvinciaUncheckedUpdateInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    paisIso?: StringFieldUpdateOperationsInput | string
    usuarios?: UserUncheckedUpdateManyWithoutProvinciaNestedInput
  }

  export type ProvinciaCreateManyInput = {
    iso: string
    nombre: string
    paisIso: string
  }

  export type ProvinciaUpdateManyMutationInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProvinciaUncheckedUpdateManyInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    paisIso?: StringFieldUpdateOperationsInput | string
  }

  export type PaisCreateInput = {
    iso: string
    nombreEspanol: string
    nombreIngles: string
    iso3: string
    codigoNumerico: number
    usuarios?: UserCreateNestedManyWithoutPaisInput
    provincias?: ProvinciaCreateNestedManyWithoutPaisInput
  }

  export type PaisUncheckedCreateInput = {
    iso: string
    nombreEspanol: string
    nombreIngles: string
    iso3: string
    codigoNumerico: number
    usuarios?: UserUncheckedCreateNestedManyWithoutPaisInput
    provincias?: ProvinciaUncheckedCreateNestedManyWithoutPaisInput
  }

  export type PaisUpdateInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombreEspanol?: StringFieldUpdateOperationsInput | string
    nombreIngles?: StringFieldUpdateOperationsInput | string
    iso3?: StringFieldUpdateOperationsInput | string
    codigoNumerico?: IntFieldUpdateOperationsInput | number
    usuarios?: UserUpdateManyWithoutPaisNestedInput
    provincias?: ProvinciaUpdateManyWithoutPaisNestedInput
  }

  export type PaisUncheckedUpdateInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombreEspanol?: StringFieldUpdateOperationsInput | string
    nombreIngles?: StringFieldUpdateOperationsInput | string
    iso3?: StringFieldUpdateOperationsInput | string
    codigoNumerico?: IntFieldUpdateOperationsInput | number
    usuarios?: UserUncheckedUpdateManyWithoutPaisNestedInput
    provincias?: ProvinciaUncheckedUpdateManyWithoutPaisNestedInput
  }

  export type PaisCreateManyInput = {
    iso: string
    nombreEspanol: string
    nombreIngles: string
    iso3: string
    codigoNumerico: number
  }

  export type PaisUpdateManyMutationInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombreEspanol?: StringFieldUpdateOperationsInput | string
    nombreIngles?: StringFieldUpdateOperationsInput | string
    iso3?: StringFieldUpdateOperationsInput | string
    codigoNumerico?: IntFieldUpdateOperationsInput | number
  }

  export type PaisUncheckedUpdateManyInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombreEspanol?: StringFieldUpdateOperationsInput | string
    nombreIngles?: StringFieldUpdateOperationsInput | string
    iso3?: StringFieldUpdateOperationsInput | string
    codigoNumerico?: IntFieldUpdateOperationsInput | number
  }

  export type DocumentoTipoCreateInput = {
    nombre: string
    usuarios?: UserCreateNestedManyWithoutDocumentoTipoInput
  }

  export type DocumentoTipoUncheckedCreateInput = {
    id?: number
    nombre: string
    usuarios?: UserUncheckedCreateNestedManyWithoutDocumentoTipoInput
  }

  export type DocumentoTipoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuarios?: UserUpdateManyWithoutDocumentoTipoNestedInput
  }

  export type DocumentoTipoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuarios?: UserUncheckedUpdateManyWithoutDocumentoTipoNestedInput
  }

  export type DocumentoTipoCreateManyInput = {
    id?: number
    nombre: string
  }

  export type DocumentoTipoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentoTipoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type LibroMateriaListRelationFilter = {
    every?: LibroMateriaWhereInput
    some?: LibroMateriaWhereInput
    none?: LibroMateriaWhereInput
  }

  export type LaboratorioScalarRelationFilter = {
    is?: LaboratorioWhereInput
    isNot?: LaboratorioWhereInput
  }

  export type ArmarioNullableScalarRelationFilter = {
    is?: ArmarioWhereInput | null
    isNot?: ArmarioWhereInput | null
  }

  export type EstanteNullableScalarRelationFilter = {
    is?: EstanteWhereInput | null
    isNot?: EstanteWhereInput | null
  }

  export type LibroAutorScalarRelationFilter = {
    is?: LibroAutorWhereInput
    isNot?: LibroAutorWhereInput
  }

  export type LibroIdiomaScalarRelationFilter = {
    is?: LibroIdiomaWhereInput
    isNot?: LibroIdiomaWhereInput
  }

  export type LibroEditorialScalarRelationFilter = {
    is?: LibroEditorialWhereInput
    isNot?: LibroEditorialWhereInput
  }

  export type SedeScalarRelationFilter = {
    is?: SedeWhereInput
    isNot?: SedeWhereInput
  }

  export type ReservaLibroListRelationFilter = {
    every?: ReservaLibroWhereInput
    some?: ReservaLibroWhereInput
    none?: ReservaLibroWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type LibroMateriaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservaLibroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LibroCountOrderByAggregateInput = {
    id?: SortOrder
    bibliotecaId?: SortOrder
    inventarioId?: SortOrder
    titulo?: SortOrder
    anio?: SortOrder
    isbn?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrder
    estanteId?: SortOrder
    autorId?: SortOrder
    idiomaId?: SortOrder
    editorialId?: SortOrder
    sedeId?: SortOrder
    disponible?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type LibroAvgOrderByAggregateInput = {
    id?: SortOrder
    anio?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrder
    estanteId?: SortOrder
    autorId?: SortOrder
    idiomaId?: SortOrder
    editorialId?: SortOrder
    sedeId?: SortOrder
  }

  export type LibroMaxOrderByAggregateInput = {
    id?: SortOrder
    bibliotecaId?: SortOrder
    inventarioId?: SortOrder
    titulo?: SortOrder
    anio?: SortOrder
    isbn?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrder
    estanteId?: SortOrder
    autorId?: SortOrder
    idiomaId?: SortOrder
    editorialId?: SortOrder
    sedeId?: SortOrder
    disponible?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type LibroMinOrderByAggregateInput = {
    id?: SortOrder
    bibliotecaId?: SortOrder
    inventarioId?: SortOrder
    titulo?: SortOrder
    anio?: SortOrder
    isbn?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrder
    estanteId?: SortOrder
    autorId?: SortOrder
    idiomaId?: SortOrder
    editorialId?: SortOrder
    sedeId?: SortOrder
    disponible?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type LibroSumOrderByAggregateInput = {
    id?: SortOrder
    anio?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrder
    estanteId?: SortOrder
    autorId?: SortOrder
    idiomaId?: SortOrder
    editorialId?: SortOrder
    sedeId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type LibroScalarRelationFilter = {
    is?: LibroWhereInput
    isNot?: LibroWhereInput
  }

  export type MateriaScalarRelationFilter = {
    is?: MateriaWhereInput
    isNot?: MateriaWhereInput
  }

  export type LibroMateriaLibroIdMateriaIdCompoundUniqueInput = {
    libroId: number
    materiaId: number
  }

  export type LibroMateriaCountOrderByAggregateInput = {
    libroId?: SortOrder
    materiaId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroMateriaAvgOrderByAggregateInput = {
    libroId?: SortOrder
    materiaId?: SortOrder
  }

  export type LibroMateriaMaxOrderByAggregateInput = {
    libroId?: SortOrder
    materiaId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroMateriaMinOrderByAggregateInput = {
    libroId?: SortOrder
    materiaId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroMateriaSumOrderByAggregateInput = {
    libroId?: SortOrder
    materiaId?: SortOrder
  }

  export type LibroListRelationFilter = {
    every?: LibroWhereInput
    some?: LibroWhereInput
    none?: LibroWhereInput
  }

  export type LibroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LibroAutorCountOrderByAggregateInput = {
    id?: SortOrder
    autorNombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroAutorAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LibroAutorMaxOrderByAggregateInput = {
    id?: SortOrder
    autorNombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroAutorMinOrderByAggregateInput = {
    id?: SortOrder
    autorNombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroAutorSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LibroIdiomaCountOrderByAggregateInput = {
    id?: SortOrder
    idioma?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroIdiomaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LibroIdiomaMaxOrderByAggregateInput = {
    id?: SortOrder
    idioma?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroIdiomaMinOrderByAggregateInput = {
    id?: SortOrder
    idioma?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroIdiomaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LibroEditorialCountOrderByAggregateInput = {
    id?: SortOrder
    editorial?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroEditorialAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LibroEditorialMaxOrderByAggregateInput = {
    id?: SortOrder
    editorial?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroEditorialMinOrderByAggregateInput = {
    id?: SortOrder
    editorial?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type LibroEditorialSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumCursoDiaFilter<$PrismaModel = never> = {
    equals?: $Enums.CursoDia | EnumCursoDiaFieldRefInput<$PrismaModel>
    in?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel>
    not?: NestedEnumCursoDiaFilter<$PrismaModel> | $Enums.CursoDia
  }

  export type EnumCursoDiaNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CursoDia | EnumCursoDiaFieldRefInput<$PrismaModel> | null
    in?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCursoDiaNullableFilter<$PrismaModel> | $Enums.CursoDia | null
  }

  export type EnumTurnoCursoFilter<$PrismaModel = never> = {
    equals?: $Enums.TurnoCurso | EnumTurnoCursoFieldRefInput<$PrismaModel>
    in?: $Enums.TurnoCurso[] | ListEnumTurnoCursoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TurnoCurso[] | ListEnumTurnoCursoFieldRefInput<$PrismaModel>
    not?: NestedEnumTurnoCursoFilter<$PrismaModel> | $Enums.TurnoCurso
  }

  export type CursoAyudanteListRelationFilter = {
    every?: CursoAyudanteWhereInput
    some?: CursoAyudanteWhereInput
    none?: CursoAyudanteWhereInput
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type DivisionScalarRelationFilter = {
    is?: DivisionWhereInput
    isNot?: DivisionWhereInput
  }

  export type ReservaLaboratorioCerradoListRelationFilter = {
    every?: ReservaLaboratorioCerradoWhereInput
    some?: ReservaLaboratorioCerradoWhereInput
    none?: ReservaLaboratorioCerradoWhereInput
  }

  export type CursoAyudanteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservaLaboratorioCerradoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CursoCountOrderByAggregateInput = {
    id?: SortOrder
    horaInicio1?: SortOrder
    duracion1?: SortOrder
    horaInicio2?: SortOrder
    duracion2?: SortOrder
    dia1?: SortOrder
    dia2?: SortOrder
    profesorId?: SortOrder
    anioDeCarrera?: SortOrder
    activo?: SortOrder
    ac?: SortOrder
    sedeId?: SortOrder
    materiaId?: SortOrder
    divisionId?: SortOrder
    turno?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type CursoAvgOrderByAggregateInput = {
    id?: SortOrder
    anioDeCarrera?: SortOrder
    sedeId?: SortOrder
    materiaId?: SortOrder
    divisionId?: SortOrder
  }

  export type CursoMaxOrderByAggregateInput = {
    id?: SortOrder
    horaInicio1?: SortOrder
    duracion1?: SortOrder
    horaInicio2?: SortOrder
    duracion2?: SortOrder
    dia1?: SortOrder
    dia2?: SortOrder
    profesorId?: SortOrder
    anioDeCarrera?: SortOrder
    activo?: SortOrder
    ac?: SortOrder
    sedeId?: SortOrder
    materiaId?: SortOrder
    divisionId?: SortOrder
    turno?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type CursoMinOrderByAggregateInput = {
    id?: SortOrder
    horaInicio1?: SortOrder
    duracion1?: SortOrder
    horaInicio2?: SortOrder
    duracion2?: SortOrder
    dia1?: SortOrder
    dia2?: SortOrder
    profesorId?: SortOrder
    anioDeCarrera?: SortOrder
    activo?: SortOrder
    ac?: SortOrder
    sedeId?: SortOrder
    materiaId?: SortOrder
    divisionId?: SortOrder
    turno?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type CursoSumOrderByAggregateInput = {
    id?: SortOrder
    anioDeCarrera?: SortOrder
    sedeId?: SortOrder
    materiaId?: SortOrder
    divisionId?: SortOrder
  }

  export type EnumCursoDiaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CursoDia | EnumCursoDiaFieldRefInput<$PrismaModel>
    in?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel>
    not?: NestedEnumCursoDiaWithAggregatesFilter<$PrismaModel> | $Enums.CursoDia
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCursoDiaFilter<$PrismaModel>
    _max?: NestedEnumCursoDiaFilter<$PrismaModel>
  }

  export type EnumCursoDiaNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CursoDia | EnumCursoDiaFieldRefInput<$PrismaModel> | null
    in?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCursoDiaNullableWithAggregatesFilter<$PrismaModel> | $Enums.CursoDia | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCursoDiaNullableFilter<$PrismaModel>
    _max?: NestedEnumCursoDiaNullableFilter<$PrismaModel>
  }

  export type EnumTurnoCursoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TurnoCurso | EnumTurnoCursoFieldRefInput<$PrismaModel>
    in?: $Enums.TurnoCurso[] | ListEnumTurnoCursoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TurnoCurso[] | ListEnumTurnoCursoFieldRefInput<$PrismaModel>
    not?: NestedEnumTurnoCursoWithAggregatesFilter<$PrismaModel> | $Enums.TurnoCurso
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTurnoCursoFilter<$PrismaModel>
    _max?: NestedEnumTurnoCursoFilter<$PrismaModel>
  }

  export type CursoScalarRelationFilter = {
    is?: CursoWhereInput
    isNot?: CursoWhereInput
  }

  export type CursoAyudanteCursoIdUserIdCompoundUniqueInput = {
    cursoId: number
    userId: string
  }

  export type CursoAyudanteCountOrderByAggregateInput = {
    cursoId?: SortOrder
    userId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaModificacion?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type CursoAyudanteAvgOrderByAggregateInput = {
    cursoId?: SortOrder
  }

  export type CursoAyudanteMaxOrderByAggregateInput = {
    cursoId?: SortOrder
    userId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaModificacion?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type CursoAyudanteMinOrderByAggregateInput = {
    cursoId?: SortOrder
    userId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaModificacion?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type CursoAyudanteSumOrderByAggregateInput = {
    cursoId?: SortOrder
  }

  export type CursoListRelationFilter = {
    every?: CursoWhereInput
    some?: CursoWhereInput
    none?: CursoWhereInput
  }

  export type CursoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DivisionCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    anio?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaModificacion?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type DivisionAvgOrderByAggregateInput = {
    id?: SortOrder
    anio?: SortOrder
  }

  export type DivisionMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    anio?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaModificacion?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type DivisionMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    anio?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaModificacion?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type DivisionSumOrderByAggregateInput = {
    id?: SortOrder
    anio?: SortOrder
  }

  export type EquipoTipoScalarRelationFilter = {
    is?: EquipoTipoWhereInput
    isNot?: EquipoTipoWhereInput
  }

  export type EquipoMarcaScalarRelationFilter = {
    is?: EquipoMarcaWhereInput
    isNot?: EquipoMarcaWhereInput
  }

  export type EquipoEstadoScalarRelationFilter = {
    is?: EquipoEstadoWhereInput
    isNot?: EquipoEstadoWhereInput
  }

  export type ReservaEquipoListRelationFilter = {
    every?: ReservaEquipoWhereInput
    some?: ReservaEquipoWhereInput
    none?: ReservaEquipoWhereInput
  }

  export type ReservaEquipoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipoCountOrderByAggregateInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    modelo?: SortOrder
    numeroSerie?: SortOrder
    observaciones?: SortOrder
    palabrasClave?: SortOrder
    imagen?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrder
    estanteId?: SortOrder
    estadoId?: SortOrder
    disponible?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type EquipoAvgOrderByAggregateInput = {
    id?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrder
    estanteId?: SortOrder
    estadoId?: SortOrder
  }

  export type EquipoMaxOrderByAggregateInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    modelo?: SortOrder
    numeroSerie?: SortOrder
    observaciones?: SortOrder
    palabrasClave?: SortOrder
    imagen?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrder
    estanteId?: SortOrder
    estadoId?: SortOrder
    disponible?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type EquipoMinOrderByAggregateInput = {
    id?: SortOrder
    inventarioId?: SortOrder
    modelo?: SortOrder
    numeroSerie?: SortOrder
    observaciones?: SortOrder
    palabrasClave?: SortOrder
    imagen?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrder
    estanteId?: SortOrder
    estadoId?: SortOrder
    disponible?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type EquipoSumOrderByAggregateInput = {
    id?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    armarioId?: SortOrder
    estanteId?: SortOrder
    estadoId?: SortOrder
  }

  export type EquipoListRelationFilter = {
    every?: EquipoWhereInput
    some?: EquipoWhereInput
    none?: EquipoWhereInput
  }

  export type EquipoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipoMarcaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type EquipoMarcaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EquipoMarcaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type EquipoMarcaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type EquipoMarcaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ReservaLaboratorioCerradoEquipoListRelationFilter = {
    every?: ReservaLaboratorioCerradoEquipoWhereInput
    some?: ReservaLaboratorioCerradoEquipoWhereInput
    none?: ReservaLaboratorioCerradoEquipoWhereInput
  }

  export type ReservaLaboratorioAbiertoEquipoListRelationFilter = {
    every?: ReservaLaboratorioAbiertoEquipoWhereInput
    some?: ReservaLaboratorioAbiertoEquipoWhereInput
    none?: ReservaLaboratorioAbiertoEquipoWhereInput
  }

  export type ReservaLaboratorioCerradoEquipoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservaLaboratorioAbiertoEquipoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipoTipoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    imagen?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type EquipoTipoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EquipoTipoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    imagen?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type EquipoTipoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    imagen?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type EquipoTipoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EquipoEstadoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type EquipoEstadoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EquipoEstadoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type EquipoEstadoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type EquipoEstadoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SoftwareLaboratorioListRelationFilter = {
    every?: SoftwareLaboratorioWhereInput
    some?: SoftwareLaboratorioWhereInput
    none?: SoftwareLaboratorioWhereInput
  }

  export type ArmarioListRelationFilter = {
    every?: ArmarioWhereInput
    some?: ArmarioWhereInput
    none?: ArmarioWhereInput
  }

  export type ReservaLaboratorioAbiertoListRelationFilter = {
    every?: ReservaLaboratorioAbiertoWhereInput
    some?: ReservaLaboratorioAbiertoWhereInput
    none?: ReservaLaboratorioAbiertoWhereInput
  }

  export type SoftwareLaboratorioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ArmarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservaLaboratorioAbiertoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LaboratorioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tienePc?: SortOrder
    esReservable?: SortOrder
    incluirEnReporte?: SortOrder
    sedeId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type LaboratorioAvgOrderByAggregateInput = {
    id?: SortOrder
    sedeId?: SortOrder
  }

  export type LaboratorioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tienePc?: SortOrder
    esReservable?: SortOrder
    incluirEnReporte?: SortOrder
    sedeId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type LaboratorioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tienePc?: SortOrder
    esReservable?: SortOrder
    incluirEnReporte?: SortOrder
    sedeId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type LaboratorioSumOrderByAggregateInput = {
    id?: SortOrder
    sedeId?: SortOrder
  }

  export type EstanteListRelationFilter = {
    every?: EstanteWhereInput
    some?: EstanteWhereInput
    none?: EstanteWhereInput
  }

  export type EstanteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ArmarioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ArmarioAvgOrderByAggregateInput = {
    id?: SortOrder
    laboratorioId?: SortOrder
  }

  export type ArmarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ArmarioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ArmarioSumOrderByAggregateInput = {
    id?: SortOrder
    laboratorioId?: SortOrder
  }

  export type ArmarioScalarRelationFilter = {
    is?: ArmarioWhereInput
    isNot?: ArmarioWhereInput
  }

  export type EstanteCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    armarioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type EstanteAvgOrderByAggregateInput = {
    id?: SortOrder
    armarioId?: SortOrder
  }

  export type EstanteMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    armarioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type EstanteMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    armarioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type EstanteSumOrderByAggregateInput = {
    id?: SortOrder
    armarioId?: SortOrder
  }

  export type SoftwareCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    version?: SortOrder
    estado?: SortOrder
    windows?: SortOrder
    linux?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type SoftwareAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SoftwareMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    version?: SortOrder
    estado?: SortOrder
    windows?: SortOrder
    linux?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type SoftwareMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    version?: SortOrder
    estado?: SortOrder
    windows?: SortOrder
    linux?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type SoftwareSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SoftwareScalarRelationFilter = {
    is?: SoftwareWhereInput
    isNot?: SoftwareWhereInput
  }

  export type SoftwareLaboratorioSoftwareIdLaboratorioIdCompoundUniqueInput = {
    softwareId: number
    laboratorioId: number
  }

  export type SoftwareLaboratorioCountOrderByAggregateInput = {
    softwareId?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type SoftwareLaboratorioAvgOrderByAggregateInput = {
    softwareId?: SortOrder
    laboratorioId?: SortOrder
  }

  export type SoftwareLaboratorioMaxOrderByAggregateInput = {
    softwareId?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type SoftwareLaboratorioMinOrderByAggregateInput = {
    softwareId?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type SoftwareLaboratorioSumOrderByAggregateInput = {
    softwareId?: SortOrder
    laboratorioId?: SortOrder
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type MailsCountOrderByAggregateInput = {
    id?: SortOrder
    emisor?: SortOrder
    para?: SortOrder
    cc?: SortOrder
    cco?: SortOrder
    contenido?: SortOrder
    asunto?: SortOrder
    fechaEnvio?: SortOrder
  }

  export type MailsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MailsMaxOrderByAggregateInput = {
    id?: SortOrder
    emisor?: SortOrder
    para?: SortOrder
    cc?: SortOrder
    cco?: SortOrder
    asunto?: SortOrder
    fechaEnvio?: SortOrder
  }

  export type MailsMinOrderByAggregateInput = {
    id?: SortOrder
    emisor?: SortOrder
    para?: SortOrder
    cc?: SortOrder
    cco?: SortOrder
    asunto?: SortOrder
    fechaEnvio?: SortOrder
  }

  export type MailsSumOrderByAggregateInput = {
    id?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type EnumMateriaDuracionFilter<$PrismaModel = never> = {
    equals?: $Enums.MateriaDuracion | EnumMateriaDuracionFieldRefInput<$PrismaModel>
    in?: $Enums.MateriaDuracion[] | ListEnumMateriaDuracionFieldRefInput<$PrismaModel>
    notIn?: $Enums.MateriaDuracion[] | ListEnumMateriaDuracionFieldRefInput<$PrismaModel>
    not?: NestedEnumMateriaDuracionFilter<$PrismaModel> | $Enums.MateriaDuracion
  }

  export type EnumMateriaTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.MateriaTipo | EnumMateriaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.MateriaTipo[] | ListEnumMateriaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MateriaTipo[] | ListEnumMateriaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumMateriaTipoFilter<$PrismaModel> | $Enums.MateriaTipo
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type MateriaJefeTpListRelationFilter = {
    every?: MateriaJefeTpWhereInput
    some?: MateriaJefeTpWhereInput
    none?: MateriaJefeTpWhereInput
  }

  export type MateriaCorrelativaListRelationFilter = {
    every?: MateriaCorrelativaWhereInput
    some?: MateriaCorrelativaWhereInput
    none?: MateriaCorrelativaWhereInput
  }

  export type MateriaJefeTpOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MateriaCorrelativaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MateriaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    anio?: SortOrder
    duracion?: SortOrder
    tipo?: SortOrder
    directorUsuarioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type MateriaAvgOrderByAggregateInput = {
    id?: SortOrder
    anio?: SortOrder
  }

  export type MateriaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    anio?: SortOrder
    duracion?: SortOrder
    tipo?: SortOrder
    directorUsuarioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type MateriaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    anio?: SortOrder
    duracion?: SortOrder
    tipo?: SortOrder
    directorUsuarioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type MateriaSumOrderByAggregateInput = {
    id?: SortOrder
    anio?: SortOrder
  }

  export type EnumMateriaDuracionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MateriaDuracion | EnumMateriaDuracionFieldRefInput<$PrismaModel>
    in?: $Enums.MateriaDuracion[] | ListEnumMateriaDuracionFieldRefInput<$PrismaModel>
    notIn?: $Enums.MateriaDuracion[] | ListEnumMateriaDuracionFieldRefInput<$PrismaModel>
    not?: NestedEnumMateriaDuracionWithAggregatesFilter<$PrismaModel> | $Enums.MateriaDuracion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMateriaDuracionFilter<$PrismaModel>
    _max?: NestedEnumMateriaDuracionFilter<$PrismaModel>
  }

  export type EnumMateriaTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MateriaTipo | EnumMateriaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.MateriaTipo[] | ListEnumMateriaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MateriaTipo[] | ListEnumMateriaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumMateriaTipoWithAggregatesFilter<$PrismaModel> | $Enums.MateriaTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMateriaTipoFilter<$PrismaModel>
    _max?: NestedEnumMateriaTipoFilter<$PrismaModel>
  }

  export type MateriaJefeTpMateriaIdUserIdCompoundUniqueInput = {
    materiaId: number
    userId: string
  }

  export type MateriaJefeTpCountOrderByAggregateInput = {
    materiaId?: SortOrder
    userId?: SortOrder
  }

  export type MateriaJefeTpAvgOrderByAggregateInput = {
    materiaId?: SortOrder
  }

  export type MateriaJefeTpMaxOrderByAggregateInput = {
    materiaId?: SortOrder
    userId?: SortOrder
  }

  export type MateriaJefeTpMinOrderByAggregateInput = {
    materiaId?: SortOrder
    userId?: SortOrder
  }

  export type MateriaJefeTpSumOrderByAggregateInput = {
    materiaId?: SortOrder
  }

  export type EnumEstatusCorrelativaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstatusCorrelativa | EnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    in?: $Enums.EstatusCorrelativa[] | ListEnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstatusCorrelativa[] | ListEnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstatusCorrelativaFilter<$PrismaModel> | $Enums.EstatusCorrelativa
  }

  export type MateriaCorrelativaEstatusCorrelativaMateriaPrerequisitoIdCorrelativaIdCompoundUniqueInput = {
    estatusCorrelativa: $Enums.EstatusCorrelativa
    materiaPrerequisitoId: number
    correlativaId: number
  }

  export type MateriaCorrelativaCountOrderByAggregateInput = {
    materiaPrerequisitoId?: SortOrder
    correlativaId?: SortOrder
    estatusCorrelativa?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type MateriaCorrelativaAvgOrderByAggregateInput = {
    materiaPrerequisitoId?: SortOrder
    correlativaId?: SortOrder
  }

  export type MateriaCorrelativaMaxOrderByAggregateInput = {
    materiaPrerequisitoId?: SortOrder
    correlativaId?: SortOrder
    estatusCorrelativa?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type MateriaCorrelativaMinOrderByAggregateInput = {
    materiaPrerequisitoId?: SortOrder
    correlativaId?: SortOrder
    estatusCorrelativa?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type MateriaCorrelativaSumOrderByAggregateInput = {
    materiaPrerequisitoId?: SortOrder
    correlativaId?: SortOrder
  }

  export type EnumEstatusCorrelativaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstatusCorrelativa | EnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    in?: $Enums.EstatusCorrelativa[] | ListEnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstatusCorrelativa[] | ListEnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstatusCorrelativaWithAggregatesFilter<$PrismaModel> | $Enums.EstatusCorrelativa
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstatusCorrelativaFilter<$PrismaModel>
    _max?: NestedEnumEstatusCorrelativaFilter<$PrismaModel>
  }

  export type EnumReservaEstatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaEstatus | EnumReservaEstatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaEstatus[] | ListEnumReservaEstatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaEstatus[] | ListEnumReservaEstatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaEstatusFilter<$PrismaModel> | $Enums.ReservaEstatus
  }

  export type EnumReservaTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaTipo | EnumReservaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaTipo[] | ListEnumReservaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaTipo[] | ListEnumReservaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaTipoFilter<$PrismaModel> | $Enums.ReservaTipo
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type ReservaEquipoNullableScalarRelationFilter = {
    is?: ReservaEquipoWhereInput | null
    isNot?: ReservaEquipoWhereInput | null
  }

  export type ReservaLibroNullableScalarRelationFilter = {
    is?: ReservaLibroWhereInput | null
    isNot?: ReservaLibroWhereInput | null
  }

  export type ReservaLaboratorioCerradoNullableScalarRelationFilter = {
    is?: ReservaLaboratorioCerradoWhereInput | null
    isNot?: ReservaLaboratorioCerradoWhereInput | null
  }

  export type ReservaLaboratorioAbiertoNullableScalarRelationFilter = {
    is?: ReservaLaboratorioAbiertoWhereInput | null
    isNot?: ReservaLaboratorioAbiertoWhereInput | null
  }

  export type ReservaCountOrderByAggregateInput = {
    id?: SortOrder
    estatus?: SortOrder
    fechaHoraInicio?: SortOrder
    fechaHoraFin?: SortOrder
    tipo?: SortOrder
    asistio?: SortOrder
    motivoRechazo?: SortOrder
    usuarioSolicitoId?: SortOrder
    usuarioAprobadorId?: SortOrder
    usuarioRechazadoId?: SortOrder
    usuarioRenovoId?: SortOrder
    usuarioRecibioId?: SortOrder
    usuarioTutorId?: SortOrder
    fechaRenovacion?: SortOrder
    fechaAprobacion?: SortOrder
    fechaRechazo?: SortOrder
    fechaRecibido?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    mostrarEnPantalla?: SortOrder
  }

  export type ReservaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ReservaMaxOrderByAggregateInput = {
    id?: SortOrder
    estatus?: SortOrder
    fechaHoraInicio?: SortOrder
    fechaHoraFin?: SortOrder
    tipo?: SortOrder
    asistio?: SortOrder
    motivoRechazo?: SortOrder
    usuarioSolicitoId?: SortOrder
    usuarioAprobadorId?: SortOrder
    usuarioRechazadoId?: SortOrder
    usuarioRenovoId?: SortOrder
    usuarioRecibioId?: SortOrder
    usuarioTutorId?: SortOrder
    fechaRenovacion?: SortOrder
    fechaAprobacion?: SortOrder
    fechaRechazo?: SortOrder
    fechaRecibido?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    mostrarEnPantalla?: SortOrder
  }

  export type ReservaMinOrderByAggregateInput = {
    id?: SortOrder
    estatus?: SortOrder
    fechaHoraInicio?: SortOrder
    fechaHoraFin?: SortOrder
    tipo?: SortOrder
    asistio?: SortOrder
    motivoRechazo?: SortOrder
    usuarioSolicitoId?: SortOrder
    usuarioAprobadorId?: SortOrder
    usuarioRechazadoId?: SortOrder
    usuarioRenovoId?: SortOrder
    usuarioRecibioId?: SortOrder
    usuarioTutorId?: SortOrder
    fechaRenovacion?: SortOrder
    fechaAprobacion?: SortOrder
    fechaRechazo?: SortOrder
    fechaRecibido?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    mostrarEnPantalla?: SortOrder
  }

  export type ReservaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumReservaEstatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaEstatus | EnumReservaEstatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaEstatus[] | ListEnumReservaEstatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaEstatus[] | ListEnumReservaEstatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaEstatusWithAggregatesFilter<$PrismaModel> | $Enums.ReservaEstatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservaEstatusFilter<$PrismaModel>
    _max?: NestedEnumReservaEstatusFilter<$PrismaModel>
  }

  export type EnumReservaTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaTipo | EnumReservaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaTipo[] | ListEnumReservaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaTipo[] | ListEnumReservaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaTipoWithAggregatesFilter<$PrismaModel> | $Enums.ReservaTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservaTipoFilter<$PrismaModel>
    _max?: NestedEnumReservaTipoFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type ReservaScalarRelationFilter = {
    is?: ReservaWhereInput
    isNot?: ReservaWhereInput
  }

  export type EquipoScalarRelationFilter = {
    is?: EquipoWhereInput
    isNot?: EquipoWhereInput
  }

  export type ReservaEquipoCountOrderByAggregateInput = {
    id?: SortOrder
    fechaEntregado?: SortOrder
    reservaId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaEquipoAvgOrderByAggregateInput = {
    id?: SortOrder
    reservaId?: SortOrder
    equipoId?: SortOrder
  }

  export type ReservaEquipoMaxOrderByAggregateInput = {
    id?: SortOrder
    fechaEntregado?: SortOrder
    reservaId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaEquipoMinOrderByAggregateInput = {
    id?: SortOrder
    fechaEntregado?: SortOrder
    reservaId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaEquipoSumOrderByAggregateInput = {
    id?: SortOrder
    reservaId?: SortOrder
    equipoId?: SortOrder
  }

  export type ReservaLibroCountOrderByAggregateInput = {
    id?: SortOrder
    fechaEntregado?: SortOrder
    reservaId?: SortOrder
    libroId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLibroAvgOrderByAggregateInput = {
    id?: SortOrder
    reservaId?: SortOrder
    libroId?: SortOrder
  }

  export type ReservaLibroMaxOrderByAggregateInput = {
    id?: SortOrder
    fechaEntregado?: SortOrder
    reservaId?: SortOrder
    libroId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLibroMinOrderByAggregateInput = {
    id?: SortOrder
    fechaEntregado?: SortOrder
    reservaId?: SortOrder
    libroId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLibroSumOrderByAggregateInput = {
    id?: SortOrder
    reservaId?: SortOrder
    libroId?: SortOrder
  }

  export type LaboratorioNullableScalarRelationFilter = {
    is?: LaboratorioWhereInput | null
    isNot?: LaboratorioWhereInput | null
  }

  export type CursoNullableScalarRelationFilter = {
    is?: CursoWhereInput | null
    isNot?: CursoWhereInput | null
  }

  export type MateriaNullableScalarRelationFilter = {
    is?: MateriaWhereInput | null
    isNot?: MateriaWhereInput | null
  }

  export type ReservaLaboratorioCerradoCountOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
    requierePC?: SortOrder
    requiereProyector?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    cursoId?: SortOrder
    esDiscrecional?: SortOrder
    discrecionalTitulo?: SortOrder
    discrecionalMateriaId?: SortOrder
    discrecionalDocenteId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioCerradoAvgOrderByAggregateInput = {
    id?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    cursoId?: SortOrder
    discrecionalMateriaId?: SortOrder
  }

  export type ReservaLaboratorioCerradoMaxOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
    requierePC?: SortOrder
    requiereProyector?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    cursoId?: SortOrder
    esDiscrecional?: SortOrder
    discrecionalTitulo?: SortOrder
    discrecionalMateriaId?: SortOrder
    discrecionalDocenteId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioCerradoMinOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
    requierePC?: SortOrder
    requiereProyector?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    cursoId?: SortOrder
    esDiscrecional?: SortOrder
    discrecionalTitulo?: SortOrder
    discrecionalMateriaId?: SortOrder
    discrecionalDocenteId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioCerradoSumOrderByAggregateInput = {
    id?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    cursoId?: SortOrder
    discrecionalMateriaId?: SortOrder
  }

  export type ReservaLaboratorioCerradoScalarRelationFilter = {
    is?: ReservaLaboratorioCerradoWhereInput
    isNot?: ReservaLaboratorioCerradoWhereInput
  }

  export type ReservaLaboratorioCerradoEquipoCountOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioCerradoId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioCerradoEquipoAvgOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioCerradoId?: SortOrder
    equipoId?: SortOrder
  }

  export type ReservaLaboratorioCerradoEquipoMaxOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioCerradoId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioCerradoEquipoMinOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioCerradoId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioCerradoEquipoSumOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioCerradoId?: SortOrder
    equipoId?: SortOrder
  }

  export type EnumLaboratorioAbiertoTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.LaboratorioAbiertoTipo | EnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    in?: $Enums.LaboratorioAbiertoTipo[] | ListEnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.LaboratorioAbiertoTipo[] | ListEnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumLaboratorioAbiertoTipoFilter<$PrismaModel> | $Enums.LaboratorioAbiertoTipo
  }

  export type ReservaLaboratorioAbiertoCountOrderByAggregateInput = {
    id?: SortOrder
    especialidad?: SortOrder
    descripcion?: SortOrder
    concurrentes?: SortOrder
    laboratorioAbiertoTipo?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioAbiertoAvgOrderByAggregateInput = {
    id?: SortOrder
    concurrentes?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
  }

  export type ReservaLaboratorioAbiertoMaxOrderByAggregateInput = {
    id?: SortOrder
    especialidad?: SortOrder
    descripcion?: SortOrder
    concurrentes?: SortOrder
    laboratorioAbiertoTipo?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioAbiertoMinOrderByAggregateInput = {
    id?: SortOrder
    especialidad?: SortOrder
    descripcion?: SortOrder
    concurrentes?: SortOrder
    laboratorioAbiertoTipo?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioAbiertoSumOrderByAggregateInput = {
    id?: SortOrder
    concurrentes?: SortOrder
    reservaId?: SortOrder
    sedeId?: SortOrder
    laboratorioId?: SortOrder
  }

  export type EnumLaboratorioAbiertoTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LaboratorioAbiertoTipo | EnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    in?: $Enums.LaboratorioAbiertoTipo[] | ListEnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.LaboratorioAbiertoTipo[] | ListEnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumLaboratorioAbiertoTipoWithAggregatesFilter<$PrismaModel> | $Enums.LaboratorioAbiertoTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLaboratorioAbiertoTipoFilter<$PrismaModel>
    _max?: NestedEnumLaboratorioAbiertoTipoFilter<$PrismaModel>
  }

  export type ReservaLaboratorioAbiertoScalarRelationFilter = {
    is?: ReservaLaboratorioAbiertoWhereInput
    isNot?: ReservaLaboratorioAbiertoWhereInput
  }

  export type ReservaLaboratorioAbiertoEquipoCountOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioAbiertoId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioAbiertoEquipoAvgOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioAbiertoId?: SortOrder
    equipoId?: SortOrder
  }

  export type ReservaLaboratorioAbiertoEquipoMaxOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioAbiertoId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioAbiertoEquipoMinOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioAbiertoId?: SortOrder
    equipoId?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type ReservaLaboratorioAbiertoEquipoSumOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    reservaLaboratorioAbiertoId?: SortOrder
    equipoId?: SortOrder
  }

  export type PantallaCountOrderByAggregateInput = {
    id?: SortOrder
    sedeId?: SortOrder
    docente?: SortOrder
    materia?: SortOrder
    laboratorio?: SortOrder
    fechaHoraInicio?: SortOrder
    fechaHoraFin?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type PantallaAvgOrderByAggregateInput = {
    id?: SortOrder
    sedeId?: SortOrder
  }

  export type PantallaMaxOrderByAggregateInput = {
    id?: SortOrder
    sedeId?: SortOrder
    docente?: SortOrder
    materia?: SortOrder
    laboratorio?: SortOrder
    fechaHoraInicio?: SortOrder
    fechaHoraFin?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type PantallaMinOrderByAggregateInput = {
    id?: SortOrder
    sedeId?: SortOrder
    docente?: SortOrder
    materia?: SortOrder
    laboratorio?: SortOrder
    fechaHoraInicio?: SortOrder
    fechaHoraFin?: SortOrder
    usuarioCreadorId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type PantallaSumOrderByAggregateInput = {
    id?: SortOrder
    sedeId?: SortOrder
  }

  export type AccountProviderProviderAccountIdCompoundUniqueInput = {
    provider: string
    providerAccountId: string
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    refresh_expires_in?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    refresh_token_expires_in?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    expires_at?: SortOrder
    refresh_expires_in?: SortOrder
    refresh_token_expires_in?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    refresh_expires_in?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    refresh_token_expires_in?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    refresh_expires_in?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    refresh_token_expires_in?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    expires_at?: SortOrder
    refresh_expires_in?: SortOrder
    refresh_token_expires_in?: SortOrder
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenIdentifierTokenCompoundUniqueInput = {
    identifier: string
    token: string
  }

  export type VerificationTokenCountOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMaxOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMinOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type LaboratorioListRelationFilter = {
    every?: LaboratorioWhereInput
    some?: LaboratorioWhereInput
    none?: LaboratorioWhereInput
  }

  export type PantallaListRelationFilter = {
    every?: PantallaWhereInput
    some?: PantallaWhereInput
    none?: PantallaWhereInput
  }

  export type LaboratorioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PantallaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SedeCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type SedeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SedeMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type SedeMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type SedeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type DocumentoTipoNullableScalarRelationFilter = {
    is?: DocumentoTipoWhereInput | null
    isNot?: DocumentoTipoWhereInput | null
  }

  export type ProvinciaNullableScalarRelationFilter = {
    is?: ProvinciaWhereInput | null
    isNot?: ProvinciaWhereInput | null
  }

  export type PaisNullableScalarRelationFilter = {
    is?: PaisWhereInput | null
    isNot?: PaisWhereInput | null
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type UsuarioRolListRelationFilter = {
    every?: UsuarioRolWhereInput
    some?: UsuarioRolWhereInput
    none?: UsuarioRolWhereInput
  }

  export type ReservaListRelationFilter = {
    every?: ReservaWhereInput
    some?: ReservaWhereInput
    none?: ReservaWhereInput
  }

  export type MateriaListRelationFilter = {
    every?: MateriaWhereInput
    some?: MateriaWhereInput
    none?: MateriaWhereInput
  }

  export type TutorNullableScalarRelationFilter = {
    is?: TutorWhereInput | null
    isNot?: TutorWhereInput | null
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioRolOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MateriaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    fechaNacimiento?: SortOrder
    direccion?: SortOrder
    piso?: SortOrder
    departamento?: SortOrder
    ciudad?: SortOrder
    codigoPostal?: SortOrder
    telefonoCasa?: SortOrder
    telefonoCelular?: SortOrder
    telefonoLaboral?: SortOrder
    documentoNumero?: SortOrder
    legajo?: SortOrder
    gitlab?: SortOrder
    penalizaciones?: SortOrder
    esDocente?: SortOrder
    esTutor?: SortOrder
    fechaRegistro?: SortOrder
    fechaUltimoAcceso?: SortOrder
    fechaUltimaActualizacion?: SortOrder
    documentoTipoId?: SortOrder
    provinciaIso?: SortOrder
    paisIso?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    penalizaciones?: SortOrder
    documentoTipoId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    fechaNacimiento?: SortOrder
    direccion?: SortOrder
    piso?: SortOrder
    departamento?: SortOrder
    ciudad?: SortOrder
    codigoPostal?: SortOrder
    telefonoCasa?: SortOrder
    telefonoCelular?: SortOrder
    telefonoLaboral?: SortOrder
    documentoNumero?: SortOrder
    legajo?: SortOrder
    gitlab?: SortOrder
    penalizaciones?: SortOrder
    esDocente?: SortOrder
    esTutor?: SortOrder
    fechaRegistro?: SortOrder
    fechaUltimoAcceso?: SortOrder
    fechaUltimaActualizacion?: SortOrder
    documentoTipoId?: SortOrder
    provinciaIso?: SortOrder
    paisIso?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    fechaNacimiento?: SortOrder
    direccion?: SortOrder
    piso?: SortOrder
    departamento?: SortOrder
    ciudad?: SortOrder
    codigoPostal?: SortOrder
    telefonoCasa?: SortOrder
    telefonoCelular?: SortOrder
    telefonoLaboral?: SortOrder
    documentoNumero?: SortOrder
    legajo?: SortOrder
    gitlab?: SortOrder
    penalizaciones?: SortOrder
    esDocente?: SortOrder
    esTutor?: SortOrder
    fechaRegistro?: SortOrder
    fechaUltimoAcceso?: SortOrder
    fechaUltimaActualizacion?: SortOrder
    documentoTipoId?: SortOrder
    provinciaIso?: SortOrder
    paisIso?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    penalizaciones?: SortOrder
    documentoTipoId?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type TutorCountOrderByAggregateInput = {
    userId?: SortOrder
    diasHorarios?: SortOrder
    activo?: SortOrder
    especialidad?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type TutorMaxOrderByAggregateInput = {
    userId?: SortOrder
    diasHorarios?: SortOrder
    activo?: SortOrder
    especialidad?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type TutorMinOrderByAggregateInput = {
    userId?: SortOrder
    diasHorarios?: SortOrder
    activo?: SortOrder
    especialidad?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type RolScalarRelationFilter = {
    is?: RolWhereInput
    isNot?: RolWhereInput
  }

  export type UsuarioRolUserIdRolIdCompoundUniqueInput = {
    userId: string
    rolId: number
  }

  export type UsuarioRolCountOrderByAggregateInput = {
    userId?: SortOrder
    rolId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type UsuarioRolAvgOrderByAggregateInput = {
    rolId?: SortOrder
  }

  export type UsuarioRolMaxOrderByAggregateInput = {
    userId?: SortOrder
    rolId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type UsuarioRolMinOrderByAggregateInput = {
    userId?: SortOrder
    rolId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type UsuarioRolSumOrderByAggregateInput = {
    rolId?: SortOrder
  }

  export type RolPermisoListRelationFilter = {
    every?: RolPermisoWhereInput
    some?: RolPermisoWhereInput
    none?: RolPermisoWhereInput
  }

  export type RolPermisoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RolCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type RolAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RolMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type RolMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type RolSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PermisoScalarRelationFilter = {
    is?: PermisoWhereInput
    isNot?: PermisoWhereInput
  }

  export type RolPermisoRolIdPermisoIdCompoundUniqueInput = {
    rolId: number
    permisoId: number
  }

  export type RolPermisoCountOrderByAggregateInput = {
    rolId?: SortOrder
    permisoId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type RolPermisoAvgOrderByAggregateInput = {
    rolId?: SortOrder
    permisoId?: SortOrder
  }

  export type RolPermisoMaxOrderByAggregateInput = {
    rolId?: SortOrder
    permisoId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type RolPermisoMinOrderByAggregateInput = {
    rolId?: SortOrder
    permisoId?: SortOrder
    fechaCreacion?: SortOrder
    usuarioCreadorId?: SortOrder
  }

  export type RolPermisoSumOrderByAggregateInput = {
    rolId?: SortOrder
    permisoId?: SortOrder
  }

  export type EnumSgeNombreFilter<$PrismaModel = never> = {
    equals?: $Enums.SgeNombre | EnumSgeNombreFieldRefInput<$PrismaModel>
    in?: $Enums.SgeNombre[] | ListEnumSgeNombreFieldRefInput<$PrismaModel>
    notIn?: $Enums.SgeNombre[] | ListEnumSgeNombreFieldRefInput<$PrismaModel>
    not?: NestedEnumSgeNombreFilter<$PrismaModel> | $Enums.SgeNombre
  }

  export type PermisoNombreRubroCompoundUniqueInput = {
    nombre: string
    rubro: string
  }

  export type PermisoCountOrderByAggregateInput = {
    id?: SortOrder
    sgeNombre?: SortOrder
    nombre?: SortOrder
    rubro?: SortOrder
    incluido?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type PermisoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PermisoMaxOrderByAggregateInput = {
    id?: SortOrder
    sgeNombre?: SortOrder
    nombre?: SortOrder
    rubro?: SortOrder
    incluido?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type PermisoMinOrderByAggregateInput = {
    id?: SortOrder
    sgeNombre?: SortOrder
    nombre?: SortOrder
    rubro?: SortOrder
    incluido?: SortOrder
    fechaCreacion?: SortOrder
    fechaModificacion?: SortOrder
    usuarioCreadorId?: SortOrder
    usuarioModificadorId?: SortOrder
  }

  export type PermisoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumSgeNombreWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SgeNombre | EnumSgeNombreFieldRefInput<$PrismaModel>
    in?: $Enums.SgeNombre[] | ListEnumSgeNombreFieldRefInput<$PrismaModel>
    notIn?: $Enums.SgeNombre[] | ListEnumSgeNombreFieldRefInput<$PrismaModel>
    not?: NestedEnumSgeNombreWithAggregatesFilter<$PrismaModel> | $Enums.SgeNombre
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSgeNombreFilter<$PrismaModel>
    _max?: NestedEnumSgeNombreFilter<$PrismaModel>
  }

  export type PaisScalarRelationFilter = {
    is?: PaisWhereInput
    isNot?: PaisWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProvinciaIsoPaisIsoCompoundUniqueInput = {
    iso: string
    paisIso: string
  }

  export type ProvinciaCountOrderByAggregateInput = {
    iso?: SortOrder
    nombre?: SortOrder
    paisIso?: SortOrder
  }

  export type ProvinciaMaxOrderByAggregateInput = {
    iso?: SortOrder
    nombre?: SortOrder
    paisIso?: SortOrder
  }

  export type ProvinciaMinOrderByAggregateInput = {
    iso?: SortOrder
    nombre?: SortOrder
    paisIso?: SortOrder
  }

  export type ProvinciaListRelationFilter = {
    every?: ProvinciaWhereInput
    some?: ProvinciaWhereInput
    none?: ProvinciaWhereInput
  }

  export type ProvinciaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaisCountOrderByAggregateInput = {
    iso?: SortOrder
    nombreEspanol?: SortOrder
    nombreIngles?: SortOrder
    iso3?: SortOrder
    codigoNumerico?: SortOrder
  }

  export type PaisAvgOrderByAggregateInput = {
    codigoNumerico?: SortOrder
  }

  export type PaisMaxOrderByAggregateInput = {
    iso?: SortOrder
    nombreEspanol?: SortOrder
    nombreIngles?: SortOrder
    iso3?: SortOrder
    codigoNumerico?: SortOrder
  }

  export type PaisMinOrderByAggregateInput = {
    iso?: SortOrder
    nombreEspanol?: SortOrder
    nombreIngles?: SortOrder
    iso3?: SortOrder
    codigoNumerico?: SortOrder
  }

  export type PaisSumOrderByAggregateInput = {
    codigoNumerico?: SortOrder
  }

  export type DocumentoTipoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type DocumentoTipoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DocumentoTipoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type DocumentoTipoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type DocumentoTipoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LibroMateriaCreateNestedManyWithoutLibroInput = {
    create?: XOR<LibroMateriaCreateWithoutLibroInput, LibroMateriaUncheckedCreateWithoutLibroInput> | LibroMateriaCreateWithoutLibroInput[] | LibroMateriaUncheckedCreateWithoutLibroInput[]
    connectOrCreate?: LibroMateriaCreateOrConnectWithoutLibroInput | LibroMateriaCreateOrConnectWithoutLibroInput[]
    createMany?: LibroMateriaCreateManyLibroInputEnvelope
    connect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
  }

  export type LaboratorioCreateNestedOneWithoutLibrosInput = {
    create?: XOR<LaboratorioCreateWithoutLibrosInput, LaboratorioUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutLibrosInput
    connect?: LaboratorioWhereUniqueInput
  }

  export type ArmarioCreateNestedOneWithoutLibrosInput = {
    create?: XOR<ArmarioCreateWithoutLibrosInput, ArmarioUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: ArmarioCreateOrConnectWithoutLibrosInput
    connect?: ArmarioWhereUniqueInput
  }

  export type EstanteCreateNestedOneWithoutLibrosInput = {
    create?: XOR<EstanteCreateWithoutLibrosInput, EstanteUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: EstanteCreateOrConnectWithoutLibrosInput
    connect?: EstanteWhereUniqueInput
  }

  export type LibroAutorCreateNestedOneWithoutLibrosInput = {
    create?: XOR<LibroAutorCreateWithoutLibrosInput, LibroAutorUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: LibroAutorCreateOrConnectWithoutLibrosInput
    connect?: LibroAutorWhereUniqueInput
  }

  export type LibroIdiomaCreateNestedOneWithoutLibrosInput = {
    create?: XOR<LibroIdiomaCreateWithoutLibrosInput, LibroIdiomaUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: LibroIdiomaCreateOrConnectWithoutLibrosInput
    connect?: LibroIdiomaWhereUniqueInput
  }

  export type LibroEditorialCreateNestedOneWithoutLibrosInput = {
    create?: XOR<LibroEditorialCreateWithoutLibrosInput, LibroEditorialUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: LibroEditorialCreateOrConnectWithoutLibrosInput
    connect?: LibroEditorialWhereUniqueInput
  }

  export type SedeCreateNestedOneWithoutLibrosInput = {
    create?: XOR<SedeCreateWithoutLibrosInput, SedeUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: SedeCreateOrConnectWithoutLibrosInput
    connect?: SedeWhereUniqueInput
  }

  export type ReservaLibroCreateNestedManyWithoutLibroInput = {
    create?: XOR<ReservaLibroCreateWithoutLibroInput, ReservaLibroUncheckedCreateWithoutLibroInput> | ReservaLibroCreateWithoutLibroInput[] | ReservaLibroUncheckedCreateWithoutLibroInput[]
    connectOrCreate?: ReservaLibroCreateOrConnectWithoutLibroInput | ReservaLibroCreateOrConnectWithoutLibroInput[]
    createMany?: ReservaLibroCreateManyLibroInputEnvelope
    connect?: ReservaLibroWhereUniqueInput | ReservaLibroWhereUniqueInput[]
  }

  export type LibroMateriaUncheckedCreateNestedManyWithoutLibroInput = {
    create?: XOR<LibroMateriaCreateWithoutLibroInput, LibroMateriaUncheckedCreateWithoutLibroInput> | LibroMateriaCreateWithoutLibroInput[] | LibroMateriaUncheckedCreateWithoutLibroInput[]
    connectOrCreate?: LibroMateriaCreateOrConnectWithoutLibroInput | LibroMateriaCreateOrConnectWithoutLibroInput[]
    createMany?: LibroMateriaCreateManyLibroInputEnvelope
    connect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
  }

  export type ReservaLibroUncheckedCreateNestedManyWithoutLibroInput = {
    create?: XOR<ReservaLibroCreateWithoutLibroInput, ReservaLibroUncheckedCreateWithoutLibroInput> | ReservaLibroCreateWithoutLibroInput[] | ReservaLibroUncheckedCreateWithoutLibroInput[]
    connectOrCreate?: ReservaLibroCreateOrConnectWithoutLibroInput | ReservaLibroCreateOrConnectWithoutLibroInput[]
    createMany?: ReservaLibroCreateManyLibroInputEnvelope
    connect?: ReservaLibroWhereUniqueInput | ReservaLibroWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type LibroMateriaUpdateManyWithoutLibroNestedInput = {
    create?: XOR<LibroMateriaCreateWithoutLibroInput, LibroMateriaUncheckedCreateWithoutLibroInput> | LibroMateriaCreateWithoutLibroInput[] | LibroMateriaUncheckedCreateWithoutLibroInput[]
    connectOrCreate?: LibroMateriaCreateOrConnectWithoutLibroInput | LibroMateriaCreateOrConnectWithoutLibroInput[]
    upsert?: LibroMateriaUpsertWithWhereUniqueWithoutLibroInput | LibroMateriaUpsertWithWhereUniqueWithoutLibroInput[]
    createMany?: LibroMateriaCreateManyLibroInputEnvelope
    set?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    disconnect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    delete?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    connect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    update?: LibroMateriaUpdateWithWhereUniqueWithoutLibroInput | LibroMateriaUpdateWithWhereUniqueWithoutLibroInput[]
    updateMany?: LibroMateriaUpdateManyWithWhereWithoutLibroInput | LibroMateriaUpdateManyWithWhereWithoutLibroInput[]
    deleteMany?: LibroMateriaScalarWhereInput | LibroMateriaScalarWhereInput[]
  }

  export type LaboratorioUpdateOneRequiredWithoutLibrosNestedInput = {
    create?: XOR<LaboratorioCreateWithoutLibrosInput, LaboratorioUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutLibrosInput
    upsert?: LaboratorioUpsertWithoutLibrosInput
    connect?: LaboratorioWhereUniqueInput
    update?: XOR<XOR<LaboratorioUpdateToOneWithWhereWithoutLibrosInput, LaboratorioUpdateWithoutLibrosInput>, LaboratorioUncheckedUpdateWithoutLibrosInput>
  }

  export type ArmarioUpdateOneWithoutLibrosNestedInput = {
    create?: XOR<ArmarioCreateWithoutLibrosInput, ArmarioUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: ArmarioCreateOrConnectWithoutLibrosInput
    upsert?: ArmarioUpsertWithoutLibrosInput
    disconnect?: ArmarioWhereInput | boolean
    delete?: ArmarioWhereInput | boolean
    connect?: ArmarioWhereUniqueInput
    update?: XOR<XOR<ArmarioUpdateToOneWithWhereWithoutLibrosInput, ArmarioUpdateWithoutLibrosInput>, ArmarioUncheckedUpdateWithoutLibrosInput>
  }

  export type EstanteUpdateOneWithoutLibrosNestedInput = {
    create?: XOR<EstanteCreateWithoutLibrosInput, EstanteUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: EstanteCreateOrConnectWithoutLibrosInput
    upsert?: EstanteUpsertWithoutLibrosInput
    disconnect?: EstanteWhereInput | boolean
    delete?: EstanteWhereInput | boolean
    connect?: EstanteWhereUniqueInput
    update?: XOR<XOR<EstanteUpdateToOneWithWhereWithoutLibrosInput, EstanteUpdateWithoutLibrosInput>, EstanteUncheckedUpdateWithoutLibrosInput>
  }

  export type LibroAutorUpdateOneRequiredWithoutLibrosNestedInput = {
    create?: XOR<LibroAutorCreateWithoutLibrosInput, LibroAutorUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: LibroAutorCreateOrConnectWithoutLibrosInput
    upsert?: LibroAutorUpsertWithoutLibrosInput
    connect?: LibroAutorWhereUniqueInput
    update?: XOR<XOR<LibroAutorUpdateToOneWithWhereWithoutLibrosInput, LibroAutorUpdateWithoutLibrosInput>, LibroAutorUncheckedUpdateWithoutLibrosInput>
  }

  export type LibroIdiomaUpdateOneRequiredWithoutLibrosNestedInput = {
    create?: XOR<LibroIdiomaCreateWithoutLibrosInput, LibroIdiomaUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: LibroIdiomaCreateOrConnectWithoutLibrosInput
    upsert?: LibroIdiomaUpsertWithoutLibrosInput
    connect?: LibroIdiomaWhereUniqueInput
    update?: XOR<XOR<LibroIdiomaUpdateToOneWithWhereWithoutLibrosInput, LibroIdiomaUpdateWithoutLibrosInput>, LibroIdiomaUncheckedUpdateWithoutLibrosInput>
  }

  export type LibroEditorialUpdateOneRequiredWithoutLibrosNestedInput = {
    create?: XOR<LibroEditorialCreateWithoutLibrosInput, LibroEditorialUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: LibroEditorialCreateOrConnectWithoutLibrosInput
    upsert?: LibroEditorialUpsertWithoutLibrosInput
    connect?: LibroEditorialWhereUniqueInput
    update?: XOR<XOR<LibroEditorialUpdateToOneWithWhereWithoutLibrosInput, LibroEditorialUpdateWithoutLibrosInput>, LibroEditorialUncheckedUpdateWithoutLibrosInput>
  }

  export type SedeUpdateOneRequiredWithoutLibrosNestedInput = {
    create?: XOR<SedeCreateWithoutLibrosInput, SedeUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: SedeCreateOrConnectWithoutLibrosInput
    upsert?: SedeUpsertWithoutLibrosInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutLibrosInput, SedeUpdateWithoutLibrosInput>, SedeUncheckedUpdateWithoutLibrosInput>
  }

  export type ReservaLibroUpdateManyWithoutLibroNestedInput = {
    create?: XOR<ReservaLibroCreateWithoutLibroInput, ReservaLibroUncheckedCreateWithoutLibroInput> | ReservaLibroCreateWithoutLibroInput[] | ReservaLibroUncheckedCreateWithoutLibroInput[]
    connectOrCreate?: ReservaLibroCreateOrConnectWithoutLibroInput | ReservaLibroCreateOrConnectWithoutLibroInput[]
    upsert?: ReservaLibroUpsertWithWhereUniqueWithoutLibroInput | ReservaLibroUpsertWithWhereUniqueWithoutLibroInput[]
    createMany?: ReservaLibroCreateManyLibroInputEnvelope
    set?: ReservaLibroWhereUniqueInput | ReservaLibroWhereUniqueInput[]
    disconnect?: ReservaLibroWhereUniqueInput | ReservaLibroWhereUniqueInput[]
    delete?: ReservaLibroWhereUniqueInput | ReservaLibroWhereUniqueInput[]
    connect?: ReservaLibroWhereUniqueInput | ReservaLibroWhereUniqueInput[]
    update?: ReservaLibroUpdateWithWhereUniqueWithoutLibroInput | ReservaLibroUpdateWithWhereUniqueWithoutLibroInput[]
    updateMany?: ReservaLibroUpdateManyWithWhereWithoutLibroInput | ReservaLibroUpdateManyWithWhereWithoutLibroInput[]
    deleteMany?: ReservaLibroScalarWhereInput | ReservaLibroScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type LibroMateriaUncheckedUpdateManyWithoutLibroNestedInput = {
    create?: XOR<LibroMateriaCreateWithoutLibroInput, LibroMateriaUncheckedCreateWithoutLibroInput> | LibroMateriaCreateWithoutLibroInput[] | LibroMateriaUncheckedCreateWithoutLibroInput[]
    connectOrCreate?: LibroMateriaCreateOrConnectWithoutLibroInput | LibroMateriaCreateOrConnectWithoutLibroInput[]
    upsert?: LibroMateriaUpsertWithWhereUniqueWithoutLibroInput | LibroMateriaUpsertWithWhereUniqueWithoutLibroInput[]
    createMany?: LibroMateriaCreateManyLibroInputEnvelope
    set?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    disconnect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    delete?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    connect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    update?: LibroMateriaUpdateWithWhereUniqueWithoutLibroInput | LibroMateriaUpdateWithWhereUniqueWithoutLibroInput[]
    updateMany?: LibroMateriaUpdateManyWithWhereWithoutLibroInput | LibroMateriaUpdateManyWithWhereWithoutLibroInput[]
    deleteMany?: LibroMateriaScalarWhereInput | LibroMateriaScalarWhereInput[]
  }

  export type ReservaLibroUncheckedUpdateManyWithoutLibroNestedInput = {
    create?: XOR<ReservaLibroCreateWithoutLibroInput, ReservaLibroUncheckedCreateWithoutLibroInput> | ReservaLibroCreateWithoutLibroInput[] | ReservaLibroUncheckedCreateWithoutLibroInput[]
    connectOrCreate?: ReservaLibroCreateOrConnectWithoutLibroInput | ReservaLibroCreateOrConnectWithoutLibroInput[]
    upsert?: ReservaLibroUpsertWithWhereUniqueWithoutLibroInput | ReservaLibroUpsertWithWhereUniqueWithoutLibroInput[]
    createMany?: ReservaLibroCreateManyLibroInputEnvelope
    set?: ReservaLibroWhereUniqueInput | ReservaLibroWhereUniqueInput[]
    disconnect?: ReservaLibroWhereUniqueInput | ReservaLibroWhereUniqueInput[]
    delete?: ReservaLibroWhereUniqueInput | ReservaLibroWhereUniqueInput[]
    connect?: ReservaLibroWhereUniqueInput | ReservaLibroWhereUniqueInput[]
    update?: ReservaLibroUpdateWithWhereUniqueWithoutLibroInput | ReservaLibroUpdateWithWhereUniqueWithoutLibroInput[]
    updateMany?: ReservaLibroUpdateManyWithWhereWithoutLibroInput | ReservaLibroUpdateManyWithWhereWithoutLibroInput[]
    deleteMany?: ReservaLibroScalarWhereInput | ReservaLibroScalarWhereInput[]
  }

  export type LibroCreateNestedOneWithoutMateriasInput = {
    create?: XOR<LibroCreateWithoutMateriasInput, LibroUncheckedCreateWithoutMateriasInput>
    connectOrCreate?: LibroCreateOrConnectWithoutMateriasInput
    connect?: LibroWhereUniqueInput
  }

  export type MateriaCreateNestedOneWithoutLibrosInput = {
    create?: XOR<MateriaCreateWithoutLibrosInput, MateriaUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutLibrosInput
    connect?: MateriaWhereUniqueInput
  }

  export type LibroUpdateOneRequiredWithoutMateriasNestedInput = {
    create?: XOR<LibroCreateWithoutMateriasInput, LibroUncheckedCreateWithoutMateriasInput>
    connectOrCreate?: LibroCreateOrConnectWithoutMateriasInput
    upsert?: LibroUpsertWithoutMateriasInput
    connect?: LibroWhereUniqueInput
    update?: XOR<XOR<LibroUpdateToOneWithWhereWithoutMateriasInput, LibroUpdateWithoutMateriasInput>, LibroUncheckedUpdateWithoutMateriasInput>
  }

  export type MateriaUpdateOneRequiredWithoutLibrosNestedInput = {
    create?: XOR<MateriaCreateWithoutLibrosInput, MateriaUncheckedCreateWithoutLibrosInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutLibrosInput
    upsert?: MateriaUpsertWithoutLibrosInput
    connect?: MateriaWhereUniqueInput
    update?: XOR<XOR<MateriaUpdateToOneWithWhereWithoutLibrosInput, MateriaUpdateWithoutLibrosInput>, MateriaUncheckedUpdateWithoutLibrosInput>
  }

  export type LibroCreateNestedManyWithoutAutorInput = {
    create?: XOR<LibroCreateWithoutAutorInput, LibroUncheckedCreateWithoutAutorInput> | LibroCreateWithoutAutorInput[] | LibroUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutAutorInput | LibroCreateOrConnectWithoutAutorInput[]
    createMany?: LibroCreateManyAutorInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type LibroUncheckedCreateNestedManyWithoutAutorInput = {
    create?: XOR<LibroCreateWithoutAutorInput, LibroUncheckedCreateWithoutAutorInput> | LibroCreateWithoutAutorInput[] | LibroUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutAutorInput | LibroCreateOrConnectWithoutAutorInput[]
    createMany?: LibroCreateManyAutorInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type LibroUpdateManyWithoutAutorNestedInput = {
    create?: XOR<LibroCreateWithoutAutorInput, LibroUncheckedCreateWithoutAutorInput> | LibroCreateWithoutAutorInput[] | LibroUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutAutorInput | LibroCreateOrConnectWithoutAutorInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutAutorInput | LibroUpsertWithWhereUniqueWithoutAutorInput[]
    createMany?: LibroCreateManyAutorInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutAutorInput | LibroUpdateWithWhereUniqueWithoutAutorInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutAutorInput | LibroUpdateManyWithWhereWithoutAutorInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type LibroUncheckedUpdateManyWithoutAutorNestedInput = {
    create?: XOR<LibroCreateWithoutAutorInput, LibroUncheckedCreateWithoutAutorInput> | LibroCreateWithoutAutorInput[] | LibroUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutAutorInput | LibroCreateOrConnectWithoutAutorInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutAutorInput | LibroUpsertWithWhereUniqueWithoutAutorInput[]
    createMany?: LibroCreateManyAutorInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutAutorInput | LibroUpdateWithWhereUniqueWithoutAutorInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutAutorInput | LibroUpdateManyWithWhereWithoutAutorInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type LibroCreateNestedManyWithoutIdiomaInput = {
    create?: XOR<LibroCreateWithoutIdiomaInput, LibroUncheckedCreateWithoutIdiomaInput> | LibroCreateWithoutIdiomaInput[] | LibroUncheckedCreateWithoutIdiomaInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutIdiomaInput | LibroCreateOrConnectWithoutIdiomaInput[]
    createMany?: LibroCreateManyIdiomaInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type LibroUncheckedCreateNestedManyWithoutIdiomaInput = {
    create?: XOR<LibroCreateWithoutIdiomaInput, LibroUncheckedCreateWithoutIdiomaInput> | LibroCreateWithoutIdiomaInput[] | LibroUncheckedCreateWithoutIdiomaInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutIdiomaInput | LibroCreateOrConnectWithoutIdiomaInput[]
    createMany?: LibroCreateManyIdiomaInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type LibroUpdateManyWithoutIdiomaNestedInput = {
    create?: XOR<LibroCreateWithoutIdiomaInput, LibroUncheckedCreateWithoutIdiomaInput> | LibroCreateWithoutIdiomaInput[] | LibroUncheckedCreateWithoutIdiomaInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutIdiomaInput | LibroCreateOrConnectWithoutIdiomaInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutIdiomaInput | LibroUpsertWithWhereUniqueWithoutIdiomaInput[]
    createMany?: LibroCreateManyIdiomaInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutIdiomaInput | LibroUpdateWithWhereUniqueWithoutIdiomaInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutIdiomaInput | LibroUpdateManyWithWhereWithoutIdiomaInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type LibroUncheckedUpdateManyWithoutIdiomaNestedInput = {
    create?: XOR<LibroCreateWithoutIdiomaInput, LibroUncheckedCreateWithoutIdiomaInput> | LibroCreateWithoutIdiomaInput[] | LibroUncheckedCreateWithoutIdiomaInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutIdiomaInput | LibroCreateOrConnectWithoutIdiomaInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutIdiomaInput | LibroUpsertWithWhereUniqueWithoutIdiomaInput[]
    createMany?: LibroCreateManyIdiomaInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutIdiomaInput | LibroUpdateWithWhereUniqueWithoutIdiomaInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutIdiomaInput | LibroUpdateManyWithWhereWithoutIdiomaInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type LibroCreateNestedManyWithoutEditorialInput = {
    create?: XOR<LibroCreateWithoutEditorialInput, LibroUncheckedCreateWithoutEditorialInput> | LibroCreateWithoutEditorialInput[] | LibroUncheckedCreateWithoutEditorialInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutEditorialInput | LibroCreateOrConnectWithoutEditorialInput[]
    createMany?: LibroCreateManyEditorialInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type LibroUncheckedCreateNestedManyWithoutEditorialInput = {
    create?: XOR<LibroCreateWithoutEditorialInput, LibroUncheckedCreateWithoutEditorialInput> | LibroCreateWithoutEditorialInput[] | LibroUncheckedCreateWithoutEditorialInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutEditorialInput | LibroCreateOrConnectWithoutEditorialInput[]
    createMany?: LibroCreateManyEditorialInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type LibroUpdateManyWithoutEditorialNestedInput = {
    create?: XOR<LibroCreateWithoutEditorialInput, LibroUncheckedCreateWithoutEditorialInput> | LibroCreateWithoutEditorialInput[] | LibroUncheckedCreateWithoutEditorialInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutEditorialInput | LibroCreateOrConnectWithoutEditorialInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutEditorialInput | LibroUpsertWithWhereUniqueWithoutEditorialInput[]
    createMany?: LibroCreateManyEditorialInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutEditorialInput | LibroUpdateWithWhereUniqueWithoutEditorialInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutEditorialInput | LibroUpdateManyWithWhereWithoutEditorialInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type LibroUncheckedUpdateManyWithoutEditorialNestedInput = {
    create?: XOR<LibroCreateWithoutEditorialInput, LibroUncheckedCreateWithoutEditorialInput> | LibroCreateWithoutEditorialInput[] | LibroUncheckedCreateWithoutEditorialInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutEditorialInput | LibroCreateOrConnectWithoutEditorialInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutEditorialInput | LibroUpsertWithWhereUniqueWithoutEditorialInput[]
    createMany?: LibroCreateManyEditorialInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutEditorialInput | LibroUpdateWithWhereUniqueWithoutEditorialInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutEditorialInput | LibroUpdateManyWithWhereWithoutEditorialInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type CursoAyudanteCreateNestedManyWithoutCursoInput = {
    create?: XOR<CursoAyudanteCreateWithoutCursoInput, CursoAyudanteUncheckedCreateWithoutCursoInput> | CursoAyudanteCreateWithoutCursoInput[] | CursoAyudanteUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: CursoAyudanteCreateOrConnectWithoutCursoInput | CursoAyudanteCreateOrConnectWithoutCursoInput[]
    createMany?: CursoAyudanteCreateManyCursoInputEnvelope
    connect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCursosComoProfesorInput = {
    create?: XOR<UserCreateWithoutCursosComoProfesorInput, UserUncheckedCreateWithoutCursosComoProfesorInput>
    connectOrCreate?: UserCreateOrConnectWithoutCursosComoProfesorInput
    connect?: UserWhereUniqueInput
  }

  export type SedeCreateNestedOneWithoutCursosInput = {
    create?: XOR<SedeCreateWithoutCursosInput, SedeUncheckedCreateWithoutCursosInput>
    connectOrCreate?: SedeCreateOrConnectWithoutCursosInput
    connect?: SedeWhereUniqueInput
  }

  export type MateriaCreateNestedOneWithoutCursosInput = {
    create?: XOR<MateriaCreateWithoutCursosInput, MateriaUncheckedCreateWithoutCursosInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutCursosInput
    connect?: MateriaWhereUniqueInput
  }

  export type DivisionCreateNestedOneWithoutCursosInput = {
    create?: XOR<DivisionCreateWithoutCursosInput, DivisionUncheckedCreateWithoutCursosInput>
    connectOrCreate?: DivisionCreateOrConnectWithoutCursosInput
    connect?: DivisionWhereUniqueInput
  }

  export type ReservaLaboratorioCerradoCreateNestedManyWithoutCursoInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutCursoInput, ReservaLaboratorioCerradoUncheckedCreateWithoutCursoInput> | ReservaLaboratorioCerradoCreateWithoutCursoInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutCursoInput | ReservaLaboratorioCerradoCreateOrConnectWithoutCursoInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyCursoInputEnvelope
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
  }

  export type CursoAyudanteUncheckedCreateNestedManyWithoutCursoInput = {
    create?: XOR<CursoAyudanteCreateWithoutCursoInput, CursoAyudanteUncheckedCreateWithoutCursoInput> | CursoAyudanteCreateWithoutCursoInput[] | CursoAyudanteUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: CursoAyudanteCreateOrConnectWithoutCursoInput | CursoAyudanteCreateOrConnectWithoutCursoInput[]
    createMany?: CursoAyudanteCreateManyCursoInputEnvelope
    connect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
  }

  export type ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutCursoInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutCursoInput, ReservaLaboratorioCerradoUncheckedCreateWithoutCursoInput> | ReservaLaboratorioCerradoCreateWithoutCursoInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutCursoInput | ReservaLaboratorioCerradoCreateOrConnectWithoutCursoInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyCursoInputEnvelope
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
  }

  export type EnumCursoDiaFieldUpdateOperationsInput = {
    set?: $Enums.CursoDia
  }

  export type NullableEnumCursoDiaFieldUpdateOperationsInput = {
    set?: $Enums.CursoDia | null
  }

  export type EnumTurnoCursoFieldUpdateOperationsInput = {
    set?: $Enums.TurnoCurso
  }

  export type CursoAyudanteUpdateManyWithoutCursoNestedInput = {
    create?: XOR<CursoAyudanteCreateWithoutCursoInput, CursoAyudanteUncheckedCreateWithoutCursoInput> | CursoAyudanteCreateWithoutCursoInput[] | CursoAyudanteUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: CursoAyudanteCreateOrConnectWithoutCursoInput | CursoAyudanteCreateOrConnectWithoutCursoInput[]
    upsert?: CursoAyudanteUpsertWithWhereUniqueWithoutCursoInput | CursoAyudanteUpsertWithWhereUniqueWithoutCursoInput[]
    createMany?: CursoAyudanteCreateManyCursoInputEnvelope
    set?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    disconnect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    delete?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    connect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    update?: CursoAyudanteUpdateWithWhereUniqueWithoutCursoInput | CursoAyudanteUpdateWithWhereUniqueWithoutCursoInput[]
    updateMany?: CursoAyudanteUpdateManyWithWhereWithoutCursoInput | CursoAyudanteUpdateManyWithWhereWithoutCursoInput[]
    deleteMany?: CursoAyudanteScalarWhereInput | CursoAyudanteScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutCursosComoProfesorNestedInput = {
    create?: XOR<UserCreateWithoutCursosComoProfesorInput, UserUncheckedCreateWithoutCursosComoProfesorInput>
    connectOrCreate?: UserCreateOrConnectWithoutCursosComoProfesorInput
    upsert?: UserUpsertWithoutCursosComoProfesorInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCursosComoProfesorInput, UserUpdateWithoutCursosComoProfesorInput>, UserUncheckedUpdateWithoutCursosComoProfesorInput>
  }

  export type SedeUpdateOneRequiredWithoutCursosNestedInput = {
    create?: XOR<SedeCreateWithoutCursosInput, SedeUncheckedCreateWithoutCursosInput>
    connectOrCreate?: SedeCreateOrConnectWithoutCursosInput
    upsert?: SedeUpsertWithoutCursosInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutCursosInput, SedeUpdateWithoutCursosInput>, SedeUncheckedUpdateWithoutCursosInput>
  }

  export type MateriaUpdateOneRequiredWithoutCursosNestedInput = {
    create?: XOR<MateriaCreateWithoutCursosInput, MateriaUncheckedCreateWithoutCursosInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutCursosInput
    upsert?: MateriaUpsertWithoutCursosInput
    connect?: MateriaWhereUniqueInput
    update?: XOR<XOR<MateriaUpdateToOneWithWhereWithoutCursosInput, MateriaUpdateWithoutCursosInput>, MateriaUncheckedUpdateWithoutCursosInput>
  }

  export type DivisionUpdateOneRequiredWithoutCursosNestedInput = {
    create?: XOR<DivisionCreateWithoutCursosInput, DivisionUncheckedCreateWithoutCursosInput>
    connectOrCreate?: DivisionCreateOrConnectWithoutCursosInput
    upsert?: DivisionUpsertWithoutCursosInput
    connect?: DivisionWhereUniqueInput
    update?: XOR<XOR<DivisionUpdateToOneWithWhereWithoutCursosInput, DivisionUpdateWithoutCursosInput>, DivisionUncheckedUpdateWithoutCursosInput>
  }

  export type ReservaLaboratorioCerradoUpdateManyWithoutCursoNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutCursoInput, ReservaLaboratorioCerradoUncheckedCreateWithoutCursoInput> | ReservaLaboratorioCerradoCreateWithoutCursoInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutCursoInput | ReservaLaboratorioCerradoCreateOrConnectWithoutCursoInput[]
    upsert?: ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutCursoInput | ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutCursoInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyCursoInputEnvelope
    set?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutCursoInput | ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutCursoInput[]
    updateMany?: ReservaLaboratorioCerradoUpdateManyWithWhereWithoutCursoInput | ReservaLaboratorioCerradoUpdateManyWithWhereWithoutCursoInput[]
    deleteMany?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
  }

  export type CursoAyudanteUncheckedUpdateManyWithoutCursoNestedInput = {
    create?: XOR<CursoAyudanteCreateWithoutCursoInput, CursoAyudanteUncheckedCreateWithoutCursoInput> | CursoAyudanteCreateWithoutCursoInput[] | CursoAyudanteUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: CursoAyudanteCreateOrConnectWithoutCursoInput | CursoAyudanteCreateOrConnectWithoutCursoInput[]
    upsert?: CursoAyudanteUpsertWithWhereUniqueWithoutCursoInput | CursoAyudanteUpsertWithWhereUniqueWithoutCursoInput[]
    createMany?: CursoAyudanteCreateManyCursoInputEnvelope
    set?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    disconnect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    delete?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    connect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    update?: CursoAyudanteUpdateWithWhereUniqueWithoutCursoInput | CursoAyudanteUpdateWithWhereUniqueWithoutCursoInput[]
    updateMany?: CursoAyudanteUpdateManyWithWhereWithoutCursoInput | CursoAyudanteUpdateManyWithWhereWithoutCursoInput[]
    deleteMany?: CursoAyudanteScalarWhereInput | CursoAyudanteScalarWhereInput[]
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateManyWithoutCursoNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutCursoInput, ReservaLaboratorioCerradoUncheckedCreateWithoutCursoInput> | ReservaLaboratorioCerradoCreateWithoutCursoInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutCursoInput | ReservaLaboratorioCerradoCreateOrConnectWithoutCursoInput[]
    upsert?: ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutCursoInput | ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutCursoInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyCursoInputEnvelope
    set?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutCursoInput | ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutCursoInput[]
    updateMany?: ReservaLaboratorioCerradoUpdateManyWithWhereWithoutCursoInput | ReservaLaboratorioCerradoUpdateManyWithWhereWithoutCursoInput[]
    deleteMany?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
  }

  export type CursoCreateNestedOneWithoutAyudantesInput = {
    create?: XOR<CursoCreateWithoutAyudantesInput, CursoUncheckedCreateWithoutAyudantesInput>
    connectOrCreate?: CursoCreateOrConnectWithoutAyudantesInput
    connect?: CursoWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCursosComoAyudanteInput = {
    create?: XOR<UserCreateWithoutCursosComoAyudanteInput, UserUncheckedCreateWithoutCursosComoAyudanteInput>
    connectOrCreate?: UserCreateOrConnectWithoutCursosComoAyudanteInput
    connect?: UserWhereUniqueInput
  }

  export type CursoUpdateOneRequiredWithoutAyudantesNestedInput = {
    create?: XOR<CursoCreateWithoutAyudantesInput, CursoUncheckedCreateWithoutAyudantesInput>
    connectOrCreate?: CursoCreateOrConnectWithoutAyudantesInput
    upsert?: CursoUpsertWithoutAyudantesInput
    connect?: CursoWhereUniqueInput
    update?: XOR<XOR<CursoUpdateToOneWithWhereWithoutAyudantesInput, CursoUpdateWithoutAyudantesInput>, CursoUncheckedUpdateWithoutAyudantesInput>
  }

  export type UserUpdateOneRequiredWithoutCursosComoAyudanteNestedInput = {
    create?: XOR<UserCreateWithoutCursosComoAyudanteInput, UserUncheckedCreateWithoutCursosComoAyudanteInput>
    connectOrCreate?: UserCreateOrConnectWithoutCursosComoAyudanteInput
    upsert?: UserUpsertWithoutCursosComoAyudanteInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCursosComoAyudanteInput, UserUpdateWithoutCursosComoAyudanteInput>, UserUncheckedUpdateWithoutCursosComoAyudanteInput>
  }

  export type CursoCreateNestedManyWithoutDivisionInput = {
    create?: XOR<CursoCreateWithoutDivisionInput, CursoUncheckedCreateWithoutDivisionInput> | CursoCreateWithoutDivisionInput[] | CursoUncheckedCreateWithoutDivisionInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutDivisionInput | CursoCreateOrConnectWithoutDivisionInput[]
    createMany?: CursoCreateManyDivisionInputEnvelope
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
  }

  export type CursoUncheckedCreateNestedManyWithoutDivisionInput = {
    create?: XOR<CursoCreateWithoutDivisionInput, CursoUncheckedCreateWithoutDivisionInput> | CursoCreateWithoutDivisionInput[] | CursoUncheckedCreateWithoutDivisionInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutDivisionInput | CursoCreateOrConnectWithoutDivisionInput[]
    createMany?: CursoCreateManyDivisionInputEnvelope
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
  }

  export type CursoUpdateManyWithoutDivisionNestedInput = {
    create?: XOR<CursoCreateWithoutDivisionInput, CursoUncheckedCreateWithoutDivisionInput> | CursoCreateWithoutDivisionInput[] | CursoUncheckedCreateWithoutDivisionInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutDivisionInput | CursoCreateOrConnectWithoutDivisionInput[]
    upsert?: CursoUpsertWithWhereUniqueWithoutDivisionInput | CursoUpsertWithWhereUniqueWithoutDivisionInput[]
    createMany?: CursoCreateManyDivisionInputEnvelope
    set?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    disconnect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    delete?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    update?: CursoUpdateWithWhereUniqueWithoutDivisionInput | CursoUpdateWithWhereUniqueWithoutDivisionInput[]
    updateMany?: CursoUpdateManyWithWhereWithoutDivisionInput | CursoUpdateManyWithWhereWithoutDivisionInput[]
    deleteMany?: CursoScalarWhereInput | CursoScalarWhereInput[]
  }

  export type CursoUncheckedUpdateManyWithoutDivisionNestedInput = {
    create?: XOR<CursoCreateWithoutDivisionInput, CursoUncheckedCreateWithoutDivisionInput> | CursoCreateWithoutDivisionInput[] | CursoUncheckedCreateWithoutDivisionInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutDivisionInput | CursoCreateOrConnectWithoutDivisionInput[]
    upsert?: CursoUpsertWithWhereUniqueWithoutDivisionInput | CursoUpsertWithWhereUniqueWithoutDivisionInput[]
    createMany?: CursoCreateManyDivisionInputEnvelope
    set?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    disconnect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    delete?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    update?: CursoUpdateWithWhereUniqueWithoutDivisionInput | CursoUpdateWithWhereUniqueWithoutDivisionInput[]
    updateMany?: CursoUpdateManyWithWhereWithoutDivisionInput | CursoUpdateManyWithWhereWithoutDivisionInput[]
    deleteMany?: CursoScalarWhereInput | CursoScalarWhereInput[]
  }

  export type EquipoTipoCreateNestedOneWithoutEquiposInput = {
    create?: XOR<EquipoTipoCreateWithoutEquiposInput, EquipoTipoUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: EquipoTipoCreateOrConnectWithoutEquiposInput
    connect?: EquipoTipoWhereUniqueInput
  }

  export type EquipoMarcaCreateNestedOneWithoutEquiposInput = {
    create?: XOR<EquipoMarcaCreateWithoutEquiposInput, EquipoMarcaUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: EquipoMarcaCreateOrConnectWithoutEquiposInput
    connect?: EquipoMarcaWhereUniqueInput
  }

  export type SedeCreateNestedOneWithoutEquiposInput = {
    create?: XOR<SedeCreateWithoutEquiposInput, SedeUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: SedeCreateOrConnectWithoutEquiposInput
    connect?: SedeWhereUniqueInput
  }

  export type LaboratorioCreateNestedOneWithoutEquiposInput = {
    create?: XOR<LaboratorioCreateWithoutEquiposInput, LaboratorioUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutEquiposInput
    connect?: LaboratorioWhereUniqueInput
  }

  export type ArmarioCreateNestedOneWithoutEquiposInput = {
    create?: XOR<ArmarioCreateWithoutEquiposInput, ArmarioUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: ArmarioCreateOrConnectWithoutEquiposInput
    connect?: ArmarioWhereUniqueInput
  }

  export type EstanteCreateNestedOneWithoutEquiposInput = {
    create?: XOR<EstanteCreateWithoutEquiposInput, EstanteUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: EstanteCreateOrConnectWithoutEquiposInput
    connect?: EstanteWhereUniqueInput
  }

  export type EquipoEstadoCreateNestedOneWithoutEquiposInput = {
    create?: XOR<EquipoEstadoCreateWithoutEquiposInput, EquipoEstadoUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: EquipoEstadoCreateOrConnectWithoutEquiposInput
    connect?: EquipoEstadoWhereUniqueInput
  }

  export type ReservaEquipoCreateNestedManyWithoutEquipoInput = {
    create?: XOR<ReservaEquipoCreateWithoutEquipoInput, ReservaEquipoUncheckedCreateWithoutEquipoInput> | ReservaEquipoCreateWithoutEquipoInput[] | ReservaEquipoUncheckedCreateWithoutEquipoInput[]
    connectOrCreate?: ReservaEquipoCreateOrConnectWithoutEquipoInput | ReservaEquipoCreateOrConnectWithoutEquipoInput[]
    createMany?: ReservaEquipoCreateManyEquipoInputEnvelope
    connect?: ReservaEquipoWhereUniqueInput | ReservaEquipoWhereUniqueInput[]
  }

  export type ReservaEquipoUncheckedCreateNestedManyWithoutEquipoInput = {
    create?: XOR<ReservaEquipoCreateWithoutEquipoInput, ReservaEquipoUncheckedCreateWithoutEquipoInput> | ReservaEquipoCreateWithoutEquipoInput[] | ReservaEquipoUncheckedCreateWithoutEquipoInput[]
    connectOrCreate?: ReservaEquipoCreateOrConnectWithoutEquipoInput | ReservaEquipoCreateOrConnectWithoutEquipoInput[]
    createMany?: ReservaEquipoCreateManyEquipoInputEnvelope
    connect?: ReservaEquipoWhereUniqueInput | ReservaEquipoWhereUniqueInput[]
  }

  export type EquipoTipoUpdateOneRequiredWithoutEquiposNestedInput = {
    create?: XOR<EquipoTipoCreateWithoutEquiposInput, EquipoTipoUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: EquipoTipoCreateOrConnectWithoutEquiposInput
    upsert?: EquipoTipoUpsertWithoutEquiposInput
    connect?: EquipoTipoWhereUniqueInput
    update?: XOR<XOR<EquipoTipoUpdateToOneWithWhereWithoutEquiposInput, EquipoTipoUpdateWithoutEquiposInput>, EquipoTipoUncheckedUpdateWithoutEquiposInput>
  }

  export type EquipoMarcaUpdateOneRequiredWithoutEquiposNestedInput = {
    create?: XOR<EquipoMarcaCreateWithoutEquiposInput, EquipoMarcaUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: EquipoMarcaCreateOrConnectWithoutEquiposInput
    upsert?: EquipoMarcaUpsertWithoutEquiposInput
    connect?: EquipoMarcaWhereUniqueInput
    update?: XOR<XOR<EquipoMarcaUpdateToOneWithWhereWithoutEquiposInput, EquipoMarcaUpdateWithoutEquiposInput>, EquipoMarcaUncheckedUpdateWithoutEquiposInput>
  }

  export type SedeUpdateOneRequiredWithoutEquiposNestedInput = {
    create?: XOR<SedeCreateWithoutEquiposInput, SedeUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: SedeCreateOrConnectWithoutEquiposInput
    upsert?: SedeUpsertWithoutEquiposInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutEquiposInput, SedeUpdateWithoutEquiposInput>, SedeUncheckedUpdateWithoutEquiposInput>
  }

  export type LaboratorioUpdateOneRequiredWithoutEquiposNestedInput = {
    create?: XOR<LaboratorioCreateWithoutEquiposInput, LaboratorioUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutEquiposInput
    upsert?: LaboratorioUpsertWithoutEquiposInput
    connect?: LaboratorioWhereUniqueInput
    update?: XOR<XOR<LaboratorioUpdateToOneWithWhereWithoutEquiposInput, LaboratorioUpdateWithoutEquiposInput>, LaboratorioUncheckedUpdateWithoutEquiposInput>
  }

  export type ArmarioUpdateOneWithoutEquiposNestedInput = {
    create?: XOR<ArmarioCreateWithoutEquiposInput, ArmarioUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: ArmarioCreateOrConnectWithoutEquiposInput
    upsert?: ArmarioUpsertWithoutEquiposInput
    disconnect?: ArmarioWhereInput | boolean
    delete?: ArmarioWhereInput | boolean
    connect?: ArmarioWhereUniqueInput
    update?: XOR<XOR<ArmarioUpdateToOneWithWhereWithoutEquiposInput, ArmarioUpdateWithoutEquiposInput>, ArmarioUncheckedUpdateWithoutEquiposInput>
  }

  export type EstanteUpdateOneWithoutEquiposNestedInput = {
    create?: XOR<EstanteCreateWithoutEquiposInput, EstanteUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: EstanteCreateOrConnectWithoutEquiposInput
    upsert?: EstanteUpsertWithoutEquiposInput
    disconnect?: EstanteWhereInput | boolean
    delete?: EstanteWhereInput | boolean
    connect?: EstanteWhereUniqueInput
    update?: XOR<XOR<EstanteUpdateToOneWithWhereWithoutEquiposInput, EstanteUpdateWithoutEquiposInput>, EstanteUncheckedUpdateWithoutEquiposInput>
  }

  export type EquipoEstadoUpdateOneRequiredWithoutEquiposNestedInput = {
    create?: XOR<EquipoEstadoCreateWithoutEquiposInput, EquipoEstadoUncheckedCreateWithoutEquiposInput>
    connectOrCreate?: EquipoEstadoCreateOrConnectWithoutEquiposInput
    upsert?: EquipoEstadoUpsertWithoutEquiposInput
    connect?: EquipoEstadoWhereUniqueInput
    update?: XOR<XOR<EquipoEstadoUpdateToOneWithWhereWithoutEquiposInput, EquipoEstadoUpdateWithoutEquiposInput>, EquipoEstadoUncheckedUpdateWithoutEquiposInput>
  }

  export type ReservaEquipoUpdateManyWithoutEquipoNestedInput = {
    create?: XOR<ReservaEquipoCreateWithoutEquipoInput, ReservaEquipoUncheckedCreateWithoutEquipoInput> | ReservaEquipoCreateWithoutEquipoInput[] | ReservaEquipoUncheckedCreateWithoutEquipoInput[]
    connectOrCreate?: ReservaEquipoCreateOrConnectWithoutEquipoInput | ReservaEquipoCreateOrConnectWithoutEquipoInput[]
    upsert?: ReservaEquipoUpsertWithWhereUniqueWithoutEquipoInput | ReservaEquipoUpsertWithWhereUniqueWithoutEquipoInput[]
    createMany?: ReservaEquipoCreateManyEquipoInputEnvelope
    set?: ReservaEquipoWhereUniqueInput | ReservaEquipoWhereUniqueInput[]
    disconnect?: ReservaEquipoWhereUniqueInput | ReservaEquipoWhereUniqueInput[]
    delete?: ReservaEquipoWhereUniqueInput | ReservaEquipoWhereUniqueInput[]
    connect?: ReservaEquipoWhereUniqueInput | ReservaEquipoWhereUniqueInput[]
    update?: ReservaEquipoUpdateWithWhereUniqueWithoutEquipoInput | ReservaEquipoUpdateWithWhereUniqueWithoutEquipoInput[]
    updateMany?: ReservaEquipoUpdateManyWithWhereWithoutEquipoInput | ReservaEquipoUpdateManyWithWhereWithoutEquipoInput[]
    deleteMany?: ReservaEquipoScalarWhereInput | ReservaEquipoScalarWhereInput[]
  }

  export type ReservaEquipoUncheckedUpdateManyWithoutEquipoNestedInput = {
    create?: XOR<ReservaEquipoCreateWithoutEquipoInput, ReservaEquipoUncheckedCreateWithoutEquipoInput> | ReservaEquipoCreateWithoutEquipoInput[] | ReservaEquipoUncheckedCreateWithoutEquipoInput[]
    connectOrCreate?: ReservaEquipoCreateOrConnectWithoutEquipoInput | ReservaEquipoCreateOrConnectWithoutEquipoInput[]
    upsert?: ReservaEquipoUpsertWithWhereUniqueWithoutEquipoInput | ReservaEquipoUpsertWithWhereUniqueWithoutEquipoInput[]
    createMany?: ReservaEquipoCreateManyEquipoInputEnvelope
    set?: ReservaEquipoWhereUniqueInput | ReservaEquipoWhereUniqueInput[]
    disconnect?: ReservaEquipoWhereUniqueInput | ReservaEquipoWhereUniqueInput[]
    delete?: ReservaEquipoWhereUniqueInput | ReservaEquipoWhereUniqueInput[]
    connect?: ReservaEquipoWhereUniqueInput | ReservaEquipoWhereUniqueInput[]
    update?: ReservaEquipoUpdateWithWhereUniqueWithoutEquipoInput | ReservaEquipoUpdateWithWhereUniqueWithoutEquipoInput[]
    updateMany?: ReservaEquipoUpdateManyWithWhereWithoutEquipoInput | ReservaEquipoUpdateManyWithWhereWithoutEquipoInput[]
    deleteMany?: ReservaEquipoScalarWhereInput | ReservaEquipoScalarWhereInput[]
  }

  export type EquipoCreateNestedManyWithoutMarcaInput = {
    create?: XOR<EquipoCreateWithoutMarcaInput, EquipoUncheckedCreateWithoutMarcaInput> | EquipoCreateWithoutMarcaInput[] | EquipoUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutMarcaInput | EquipoCreateOrConnectWithoutMarcaInput[]
    createMany?: EquipoCreateManyMarcaInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type EquipoUncheckedCreateNestedManyWithoutMarcaInput = {
    create?: XOR<EquipoCreateWithoutMarcaInput, EquipoUncheckedCreateWithoutMarcaInput> | EquipoCreateWithoutMarcaInput[] | EquipoUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutMarcaInput | EquipoCreateOrConnectWithoutMarcaInput[]
    createMany?: EquipoCreateManyMarcaInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type EquipoUpdateManyWithoutMarcaNestedInput = {
    create?: XOR<EquipoCreateWithoutMarcaInput, EquipoUncheckedCreateWithoutMarcaInput> | EquipoCreateWithoutMarcaInput[] | EquipoUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutMarcaInput | EquipoCreateOrConnectWithoutMarcaInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutMarcaInput | EquipoUpsertWithWhereUniqueWithoutMarcaInput[]
    createMany?: EquipoCreateManyMarcaInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutMarcaInput | EquipoUpdateWithWhereUniqueWithoutMarcaInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutMarcaInput | EquipoUpdateManyWithWhereWithoutMarcaInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type EquipoUncheckedUpdateManyWithoutMarcaNestedInput = {
    create?: XOR<EquipoCreateWithoutMarcaInput, EquipoUncheckedCreateWithoutMarcaInput> | EquipoCreateWithoutMarcaInput[] | EquipoUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutMarcaInput | EquipoCreateOrConnectWithoutMarcaInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutMarcaInput | EquipoUpsertWithWhereUniqueWithoutMarcaInput[]
    createMany?: EquipoCreateManyMarcaInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutMarcaInput | EquipoUpdateWithWhereUniqueWithoutMarcaInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutMarcaInput | EquipoUpdateManyWithWhereWithoutMarcaInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type EquipoCreateNestedManyWithoutTipoInput = {
    create?: XOR<EquipoCreateWithoutTipoInput, EquipoUncheckedCreateWithoutTipoInput> | EquipoCreateWithoutTipoInput[] | EquipoUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutTipoInput | EquipoCreateOrConnectWithoutTipoInput[]
    createMany?: EquipoCreateManyTipoInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutEquipoTipoInput = {
    create?: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutEquipoTipoInput> | ReservaLaboratorioCerradoEquipoCreateWithoutEquipoTipoInput[] | ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutEquipoTipoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutEquipoTipoInput | ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutEquipoTipoInput[]
    createMany?: ReservaLaboratorioCerradoEquipoCreateManyEquipoTipoInputEnvelope
    connect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
  }

  export type ReservaLaboratorioAbiertoEquipoCreateNestedManyWithoutEquipoTipoInput = {
    create?: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutEquipoTipoInput> | ReservaLaboratorioAbiertoEquipoCreateWithoutEquipoTipoInput[] | ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutEquipoTipoInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutEquipoTipoInput | ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutEquipoTipoInput[]
    createMany?: ReservaLaboratorioAbiertoEquipoCreateManyEquipoTipoInputEnvelope
    connect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
  }

  export type EquipoUncheckedCreateNestedManyWithoutTipoInput = {
    create?: XOR<EquipoCreateWithoutTipoInput, EquipoUncheckedCreateWithoutTipoInput> | EquipoCreateWithoutTipoInput[] | EquipoUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutTipoInput | EquipoCreateOrConnectWithoutTipoInput[]
    createMany?: EquipoCreateManyTipoInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutEquipoTipoInput = {
    create?: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutEquipoTipoInput> | ReservaLaboratorioCerradoEquipoCreateWithoutEquipoTipoInput[] | ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutEquipoTipoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutEquipoTipoInput | ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutEquipoTipoInput[]
    createMany?: ReservaLaboratorioCerradoEquipoCreateManyEquipoTipoInputEnvelope
    connect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedCreateNestedManyWithoutEquipoTipoInput = {
    create?: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutEquipoTipoInput> | ReservaLaboratorioAbiertoEquipoCreateWithoutEquipoTipoInput[] | ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutEquipoTipoInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutEquipoTipoInput | ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutEquipoTipoInput[]
    createMany?: ReservaLaboratorioAbiertoEquipoCreateManyEquipoTipoInputEnvelope
    connect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
  }

  export type EquipoUpdateManyWithoutTipoNestedInput = {
    create?: XOR<EquipoCreateWithoutTipoInput, EquipoUncheckedCreateWithoutTipoInput> | EquipoCreateWithoutTipoInput[] | EquipoUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutTipoInput | EquipoCreateOrConnectWithoutTipoInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutTipoInput | EquipoUpsertWithWhereUniqueWithoutTipoInput[]
    createMany?: EquipoCreateManyTipoInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutTipoInput | EquipoUpdateWithWhereUniqueWithoutTipoInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutTipoInput | EquipoUpdateManyWithWhereWithoutTipoInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type ReservaLaboratorioCerradoEquipoUpdateManyWithoutEquipoTipoNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutEquipoTipoInput> | ReservaLaboratorioCerradoEquipoCreateWithoutEquipoTipoInput[] | ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutEquipoTipoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutEquipoTipoInput | ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutEquipoTipoInput[]
    upsert?: ReservaLaboratorioCerradoEquipoUpsertWithWhereUniqueWithoutEquipoTipoInput | ReservaLaboratorioCerradoEquipoUpsertWithWhereUniqueWithoutEquipoTipoInput[]
    createMany?: ReservaLaboratorioCerradoEquipoCreateManyEquipoTipoInputEnvelope
    set?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoEquipoUpdateWithWhereUniqueWithoutEquipoTipoInput | ReservaLaboratorioCerradoEquipoUpdateWithWhereUniqueWithoutEquipoTipoInput[]
    updateMany?: ReservaLaboratorioCerradoEquipoUpdateManyWithWhereWithoutEquipoTipoInput | ReservaLaboratorioCerradoEquipoUpdateManyWithWhereWithoutEquipoTipoInput[]
    deleteMany?: ReservaLaboratorioCerradoEquipoScalarWhereInput | ReservaLaboratorioCerradoEquipoScalarWhereInput[]
  }

  export type ReservaLaboratorioAbiertoEquipoUpdateManyWithoutEquipoTipoNestedInput = {
    create?: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutEquipoTipoInput> | ReservaLaboratorioAbiertoEquipoCreateWithoutEquipoTipoInput[] | ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutEquipoTipoInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutEquipoTipoInput | ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutEquipoTipoInput[]
    upsert?: ReservaLaboratorioAbiertoEquipoUpsertWithWhereUniqueWithoutEquipoTipoInput | ReservaLaboratorioAbiertoEquipoUpsertWithWhereUniqueWithoutEquipoTipoInput[]
    createMany?: ReservaLaboratorioAbiertoEquipoCreateManyEquipoTipoInputEnvelope
    set?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    delete?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    connect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    update?: ReservaLaboratorioAbiertoEquipoUpdateWithWhereUniqueWithoutEquipoTipoInput | ReservaLaboratorioAbiertoEquipoUpdateWithWhereUniqueWithoutEquipoTipoInput[]
    updateMany?: ReservaLaboratorioAbiertoEquipoUpdateManyWithWhereWithoutEquipoTipoInput | ReservaLaboratorioAbiertoEquipoUpdateManyWithWhereWithoutEquipoTipoInput[]
    deleteMany?: ReservaLaboratorioAbiertoEquipoScalarWhereInput | ReservaLaboratorioAbiertoEquipoScalarWhereInput[]
  }

  export type EquipoUncheckedUpdateManyWithoutTipoNestedInput = {
    create?: XOR<EquipoCreateWithoutTipoInput, EquipoUncheckedCreateWithoutTipoInput> | EquipoCreateWithoutTipoInput[] | EquipoUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutTipoInput | EquipoCreateOrConnectWithoutTipoInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutTipoInput | EquipoUpsertWithWhereUniqueWithoutTipoInput[]
    createMany?: EquipoCreateManyTipoInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutTipoInput | EquipoUpdateWithWhereUniqueWithoutTipoInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutTipoInput | EquipoUpdateManyWithWhereWithoutTipoInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutEquipoTipoNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutEquipoTipoInput> | ReservaLaboratorioCerradoEquipoCreateWithoutEquipoTipoInput[] | ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutEquipoTipoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutEquipoTipoInput | ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutEquipoTipoInput[]
    upsert?: ReservaLaboratorioCerradoEquipoUpsertWithWhereUniqueWithoutEquipoTipoInput | ReservaLaboratorioCerradoEquipoUpsertWithWhereUniqueWithoutEquipoTipoInput[]
    createMany?: ReservaLaboratorioCerradoEquipoCreateManyEquipoTipoInputEnvelope
    set?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoEquipoUpdateWithWhereUniqueWithoutEquipoTipoInput | ReservaLaboratorioCerradoEquipoUpdateWithWhereUniqueWithoutEquipoTipoInput[]
    updateMany?: ReservaLaboratorioCerradoEquipoUpdateManyWithWhereWithoutEquipoTipoInput | ReservaLaboratorioCerradoEquipoUpdateManyWithWhereWithoutEquipoTipoInput[]
    deleteMany?: ReservaLaboratorioCerradoEquipoScalarWhereInput | ReservaLaboratorioCerradoEquipoScalarWhereInput[]
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutEquipoTipoNestedInput = {
    create?: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutEquipoTipoInput> | ReservaLaboratorioAbiertoEquipoCreateWithoutEquipoTipoInput[] | ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutEquipoTipoInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutEquipoTipoInput | ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutEquipoTipoInput[]
    upsert?: ReservaLaboratorioAbiertoEquipoUpsertWithWhereUniqueWithoutEquipoTipoInput | ReservaLaboratorioAbiertoEquipoUpsertWithWhereUniqueWithoutEquipoTipoInput[]
    createMany?: ReservaLaboratorioAbiertoEquipoCreateManyEquipoTipoInputEnvelope
    set?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    delete?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    connect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    update?: ReservaLaboratorioAbiertoEquipoUpdateWithWhereUniqueWithoutEquipoTipoInput | ReservaLaboratorioAbiertoEquipoUpdateWithWhereUniqueWithoutEquipoTipoInput[]
    updateMany?: ReservaLaboratorioAbiertoEquipoUpdateManyWithWhereWithoutEquipoTipoInput | ReservaLaboratorioAbiertoEquipoUpdateManyWithWhereWithoutEquipoTipoInput[]
    deleteMany?: ReservaLaboratorioAbiertoEquipoScalarWhereInput | ReservaLaboratorioAbiertoEquipoScalarWhereInput[]
  }

  export type EquipoCreateNestedManyWithoutEstadoInput = {
    create?: XOR<EquipoCreateWithoutEstadoInput, EquipoUncheckedCreateWithoutEstadoInput> | EquipoCreateWithoutEstadoInput[] | EquipoUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutEstadoInput | EquipoCreateOrConnectWithoutEstadoInput[]
    createMany?: EquipoCreateManyEstadoInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type EquipoUncheckedCreateNestedManyWithoutEstadoInput = {
    create?: XOR<EquipoCreateWithoutEstadoInput, EquipoUncheckedCreateWithoutEstadoInput> | EquipoCreateWithoutEstadoInput[] | EquipoUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutEstadoInput | EquipoCreateOrConnectWithoutEstadoInput[]
    createMany?: EquipoCreateManyEstadoInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type EquipoUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<EquipoCreateWithoutEstadoInput, EquipoUncheckedCreateWithoutEstadoInput> | EquipoCreateWithoutEstadoInput[] | EquipoUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutEstadoInput | EquipoCreateOrConnectWithoutEstadoInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutEstadoInput | EquipoUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: EquipoCreateManyEstadoInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutEstadoInput | EquipoUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutEstadoInput | EquipoUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type EquipoUncheckedUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<EquipoCreateWithoutEstadoInput, EquipoUncheckedCreateWithoutEstadoInput> | EquipoCreateWithoutEstadoInput[] | EquipoUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutEstadoInput | EquipoCreateOrConnectWithoutEstadoInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutEstadoInput | EquipoUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: EquipoCreateManyEstadoInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutEstadoInput | EquipoUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutEstadoInput | EquipoUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type SedeCreateNestedOneWithoutLaboratoriosInput = {
    create?: XOR<SedeCreateWithoutLaboratoriosInput, SedeUncheckedCreateWithoutLaboratoriosInput>
    connectOrCreate?: SedeCreateOrConnectWithoutLaboratoriosInput
    connect?: SedeWhereUniqueInput
  }

  export type SoftwareLaboratorioCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<SoftwareLaboratorioCreateWithoutLaboratorioInput, SoftwareLaboratorioUncheckedCreateWithoutLaboratorioInput> | SoftwareLaboratorioCreateWithoutLaboratorioInput[] | SoftwareLaboratorioUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: SoftwareLaboratorioCreateOrConnectWithoutLaboratorioInput | SoftwareLaboratorioCreateOrConnectWithoutLaboratorioInput[]
    createMany?: SoftwareLaboratorioCreateManyLaboratorioInputEnvelope
    connect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
  }

  export type ArmarioCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<ArmarioCreateWithoutLaboratorioInput, ArmarioUncheckedCreateWithoutLaboratorioInput> | ArmarioCreateWithoutLaboratorioInput[] | ArmarioUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ArmarioCreateOrConnectWithoutLaboratorioInput | ArmarioCreateOrConnectWithoutLaboratorioInput[]
    createMany?: ArmarioCreateManyLaboratorioInputEnvelope
    connect?: ArmarioWhereUniqueInput | ArmarioWhereUniqueInput[]
  }

  export type EquipoCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<EquipoCreateWithoutLaboratorioInput, EquipoUncheckedCreateWithoutLaboratorioInput> | EquipoCreateWithoutLaboratorioInput[] | EquipoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutLaboratorioInput | EquipoCreateOrConnectWithoutLaboratorioInput[]
    createMany?: EquipoCreateManyLaboratorioInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type LibroCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<LibroCreateWithoutLaboratorioInput, LibroUncheckedCreateWithoutLaboratorioInput> | LibroCreateWithoutLaboratorioInput[] | LibroUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutLaboratorioInput | LibroCreateOrConnectWithoutLaboratorioInput[]
    createMany?: LibroCreateManyLaboratorioInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type ReservaLaboratorioCerradoCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutLaboratorioInput, ReservaLaboratorioCerradoUncheckedCreateWithoutLaboratorioInput> | ReservaLaboratorioCerradoCreateWithoutLaboratorioInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutLaboratorioInput | ReservaLaboratorioCerradoCreateOrConnectWithoutLaboratorioInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyLaboratorioInputEnvelope
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
  }

  export type ReservaLaboratorioAbiertoCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutLaboratorioInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutLaboratorioInput> | ReservaLaboratorioAbiertoCreateWithoutLaboratorioInput[] | ReservaLaboratorioAbiertoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutLaboratorioInput | ReservaLaboratorioAbiertoCreateOrConnectWithoutLaboratorioInput[]
    createMany?: ReservaLaboratorioAbiertoCreateManyLaboratorioInputEnvelope
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
  }

  export type SoftwareLaboratorioUncheckedCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<SoftwareLaboratorioCreateWithoutLaboratorioInput, SoftwareLaboratorioUncheckedCreateWithoutLaboratorioInput> | SoftwareLaboratorioCreateWithoutLaboratorioInput[] | SoftwareLaboratorioUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: SoftwareLaboratorioCreateOrConnectWithoutLaboratorioInput | SoftwareLaboratorioCreateOrConnectWithoutLaboratorioInput[]
    createMany?: SoftwareLaboratorioCreateManyLaboratorioInputEnvelope
    connect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
  }

  export type ArmarioUncheckedCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<ArmarioCreateWithoutLaboratorioInput, ArmarioUncheckedCreateWithoutLaboratorioInput> | ArmarioCreateWithoutLaboratorioInput[] | ArmarioUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ArmarioCreateOrConnectWithoutLaboratorioInput | ArmarioCreateOrConnectWithoutLaboratorioInput[]
    createMany?: ArmarioCreateManyLaboratorioInputEnvelope
    connect?: ArmarioWhereUniqueInput | ArmarioWhereUniqueInput[]
  }

  export type EquipoUncheckedCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<EquipoCreateWithoutLaboratorioInput, EquipoUncheckedCreateWithoutLaboratorioInput> | EquipoCreateWithoutLaboratorioInput[] | EquipoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutLaboratorioInput | EquipoCreateOrConnectWithoutLaboratorioInput[]
    createMany?: EquipoCreateManyLaboratorioInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type LibroUncheckedCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<LibroCreateWithoutLaboratorioInput, LibroUncheckedCreateWithoutLaboratorioInput> | LibroCreateWithoutLaboratorioInput[] | LibroUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutLaboratorioInput | LibroCreateOrConnectWithoutLaboratorioInput[]
    createMany?: LibroCreateManyLaboratorioInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutLaboratorioInput, ReservaLaboratorioCerradoUncheckedCreateWithoutLaboratorioInput> | ReservaLaboratorioCerradoCreateWithoutLaboratorioInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutLaboratorioInput | ReservaLaboratorioCerradoCreateOrConnectWithoutLaboratorioInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyLaboratorioInputEnvelope
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
  }

  export type ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutLaboratorioInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutLaboratorioInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutLaboratorioInput> | ReservaLaboratorioAbiertoCreateWithoutLaboratorioInput[] | ReservaLaboratorioAbiertoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutLaboratorioInput | ReservaLaboratorioAbiertoCreateOrConnectWithoutLaboratorioInput[]
    createMany?: ReservaLaboratorioAbiertoCreateManyLaboratorioInputEnvelope
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
  }

  export type SedeUpdateOneRequiredWithoutLaboratoriosNestedInput = {
    create?: XOR<SedeCreateWithoutLaboratoriosInput, SedeUncheckedCreateWithoutLaboratoriosInput>
    connectOrCreate?: SedeCreateOrConnectWithoutLaboratoriosInput
    upsert?: SedeUpsertWithoutLaboratoriosInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutLaboratoriosInput, SedeUpdateWithoutLaboratoriosInput>, SedeUncheckedUpdateWithoutLaboratoriosInput>
  }

  export type SoftwareLaboratorioUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<SoftwareLaboratorioCreateWithoutLaboratorioInput, SoftwareLaboratorioUncheckedCreateWithoutLaboratorioInput> | SoftwareLaboratorioCreateWithoutLaboratorioInput[] | SoftwareLaboratorioUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: SoftwareLaboratorioCreateOrConnectWithoutLaboratorioInput | SoftwareLaboratorioCreateOrConnectWithoutLaboratorioInput[]
    upsert?: SoftwareLaboratorioUpsertWithWhereUniqueWithoutLaboratorioInput | SoftwareLaboratorioUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: SoftwareLaboratorioCreateManyLaboratorioInputEnvelope
    set?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    disconnect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    delete?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    connect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    update?: SoftwareLaboratorioUpdateWithWhereUniqueWithoutLaboratorioInput | SoftwareLaboratorioUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: SoftwareLaboratorioUpdateManyWithWhereWithoutLaboratorioInput | SoftwareLaboratorioUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: SoftwareLaboratorioScalarWhereInput | SoftwareLaboratorioScalarWhereInput[]
  }

  export type ArmarioUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<ArmarioCreateWithoutLaboratorioInput, ArmarioUncheckedCreateWithoutLaboratorioInput> | ArmarioCreateWithoutLaboratorioInput[] | ArmarioUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ArmarioCreateOrConnectWithoutLaboratorioInput | ArmarioCreateOrConnectWithoutLaboratorioInput[]
    upsert?: ArmarioUpsertWithWhereUniqueWithoutLaboratorioInput | ArmarioUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: ArmarioCreateManyLaboratorioInputEnvelope
    set?: ArmarioWhereUniqueInput | ArmarioWhereUniqueInput[]
    disconnect?: ArmarioWhereUniqueInput | ArmarioWhereUniqueInput[]
    delete?: ArmarioWhereUniqueInput | ArmarioWhereUniqueInput[]
    connect?: ArmarioWhereUniqueInput | ArmarioWhereUniqueInput[]
    update?: ArmarioUpdateWithWhereUniqueWithoutLaboratorioInput | ArmarioUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: ArmarioUpdateManyWithWhereWithoutLaboratorioInput | ArmarioUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: ArmarioScalarWhereInput | ArmarioScalarWhereInput[]
  }

  export type EquipoUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<EquipoCreateWithoutLaboratorioInput, EquipoUncheckedCreateWithoutLaboratorioInput> | EquipoCreateWithoutLaboratorioInput[] | EquipoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutLaboratorioInput | EquipoCreateOrConnectWithoutLaboratorioInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutLaboratorioInput | EquipoUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: EquipoCreateManyLaboratorioInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutLaboratorioInput | EquipoUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutLaboratorioInput | EquipoUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type LibroUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<LibroCreateWithoutLaboratorioInput, LibroUncheckedCreateWithoutLaboratorioInput> | LibroCreateWithoutLaboratorioInput[] | LibroUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutLaboratorioInput | LibroCreateOrConnectWithoutLaboratorioInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutLaboratorioInput | LibroUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: LibroCreateManyLaboratorioInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutLaboratorioInput | LibroUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutLaboratorioInput | LibroUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type ReservaLaboratorioCerradoUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutLaboratorioInput, ReservaLaboratorioCerradoUncheckedCreateWithoutLaboratorioInput> | ReservaLaboratorioCerradoCreateWithoutLaboratorioInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutLaboratorioInput | ReservaLaboratorioCerradoCreateOrConnectWithoutLaboratorioInput[]
    upsert?: ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutLaboratorioInput | ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyLaboratorioInputEnvelope
    set?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutLaboratorioInput | ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: ReservaLaboratorioCerradoUpdateManyWithWhereWithoutLaboratorioInput | ReservaLaboratorioCerradoUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
  }

  export type ReservaLaboratorioAbiertoUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutLaboratorioInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutLaboratorioInput> | ReservaLaboratorioAbiertoCreateWithoutLaboratorioInput[] | ReservaLaboratorioAbiertoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutLaboratorioInput | ReservaLaboratorioAbiertoCreateOrConnectWithoutLaboratorioInput[]
    upsert?: ReservaLaboratorioAbiertoUpsertWithWhereUniqueWithoutLaboratorioInput | ReservaLaboratorioAbiertoUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: ReservaLaboratorioAbiertoCreateManyLaboratorioInputEnvelope
    set?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    delete?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    update?: ReservaLaboratorioAbiertoUpdateWithWhereUniqueWithoutLaboratorioInput | ReservaLaboratorioAbiertoUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: ReservaLaboratorioAbiertoUpdateManyWithWhereWithoutLaboratorioInput | ReservaLaboratorioAbiertoUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: ReservaLaboratorioAbiertoScalarWhereInput | ReservaLaboratorioAbiertoScalarWhereInput[]
  }

  export type SoftwareLaboratorioUncheckedUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<SoftwareLaboratorioCreateWithoutLaboratorioInput, SoftwareLaboratorioUncheckedCreateWithoutLaboratorioInput> | SoftwareLaboratorioCreateWithoutLaboratorioInput[] | SoftwareLaboratorioUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: SoftwareLaboratorioCreateOrConnectWithoutLaboratorioInput | SoftwareLaboratorioCreateOrConnectWithoutLaboratorioInput[]
    upsert?: SoftwareLaboratorioUpsertWithWhereUniqueWithoutLaboratorioInput | SoftwareLaboratorioUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: SoftwareLaboratorioCreateManyLaboratorioInputEnvelope
    set?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    disconnect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    delete?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    connect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    update?: SoftwareLaboratorioUpdateWithWhereUniqueWithoutLaboratorioInput | SoftwareLaboratorioUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: SoftwareLaboratorioUpdateManyWithWhereWithoutLaboratorioInput | SoftwareLaboratorioUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: SoftwareLaboratorioScalarWhereInput | SoftwareLaboratorioScalarWhereInput[]
  }

  export type ArmarioUncheckedUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<ArmarioCreateWithoutLaboratorioInput, ArmarioUncheckedCreateWithoutLaboratorioInput> | ArmarioCreateWithoutLaboratorioInput[] | ArmarioUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ArmarioCreateOrConnectWithoutLaboratorioInput | ArmarioCreateOrConnectWithoutLaboratorioInput[]
    upsert?: ArmarioUpsertWithWhereUniqueWithoutLaboratorioInput | ArmarioUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: ArmarioCreateManyLaboratorioInputEnvelope
    set?: ArmarioWhereUniqueInput | ArmarioWhereUniqueInput[]
    disconnect?: ArmarioWhereUniqueInput | ArmarioWhereUniqueInput[]
    delete?: ArmarioWhereUniqueInput | ArmarioWhereUniqueInput[]
    connect?: ArmarioWhereUniqueInput | ArmarioWhereUniqueInput[]
    update?: ArmarioUpdateWithWhereUniqueWithoutLaboratorioInput | ArmarioUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: ArmarioUpdateManyWithWhereWithoutLaboratorioInput | ArmarioUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: ArmarioScalarWhereInput | ArmarioScalarWhereInput[]
  }

  export type EquipoUncheckedUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<EquipoCreateWithoutLaboratorioInput, EquipoUncheckedCreateWithoutLaboratorioInput> | EquipoCreateWithoutLaboratorioInput[] | EquipoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutLaboratorioInput | EquipoCreateOrConnectWithoutLaboratorioInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutLaboratorioInput | EquipoUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: EquipoCreateManyLaboratorioInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutLaboratorioInput | EquipoUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutLaboratorioInput | EquipoUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type LibroUncheckedUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<LibroCreateWithoutLaboratorioInput, LibroUncheckedCreateWithoutLaboratorioInput> | LibroCreateWithoutLaboratorioInput[] | LibroUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutLaboratorioInput | LibroCreateOrConnectWithoutLaboratorioInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutLaboratorioInput | LibroUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: LibroCreateManyLaboratorioInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutLaboratorioInput | LibroUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutLaboratorioInput | LibroUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutLaboratorioInput, ReservaLaboratorioCerradoUncheckedCreateWithoutLaboratorioInput> | ReservaLaboratorioCerradoCreateWithoutLaboratorioInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutLaboratorioInput | ReservaLaboratorioCerradoCreateOrConnectWithoutLaboratorioInput[]
    upsert?: ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutLaboratorioInput | ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyLaboratorioInputEnvelope
    set?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutLaboratorioInput | ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: ReservaLaboratorioCerradoUpdateManyWithWhereWithoutLaboratorioInput | ReservaLaboratorioCerradoUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
  }

  export type ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutLaboratorioNestedInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutLaboratorioInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutLaboratorioInput> | ReservaLaboratorioAbiertoCreateWithoutLaboratorioInput[] | ReservaLaboratorioAbiertoUncheckedCreateWithoutLaboratorioInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutLaboratorioInput | ReservaLaboratorioAbiertoCreateOrConnectWithoutLaboratorioInput[]
    upsert?: ReservaLaboratorioAbiertoUpsertWithWhereUniqueWithoutLaboratorioInput | ReservaLaboratorioAbiertoUpsertWithWhereUniqueWithoutLaboratorioInput[]
    createMany?: ReservaLaboratorioAbiertoCreateManyLaboratorioInputEnvelope
    set?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    delete?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    update?: ReservaLaboratorioAbiertoUpdateWithWhereUniqueWithoutLaboratorioInput | ReservaLaboratorioAbiertoUpdateWithWhereUniqueWithoutLaboratorioInput[]
    updateMany?: ReservaLaboratorioAbiertoUpdateManyWithWhereWithoutLaboratorioInput | ReservaLaboratorioAbiertoUpdateManyWithWhereWithoutLaboratorioInput[]
    deleteMany?: ReservaLaboratorioAbiertoScalarWhereInput | ReservaLaboratorioAbiertoScalarWhereInput[]
  }

  export type LaboratorioCreateNestedOneWithoutArmariosInput = {
    create?: XOR<LaboratorioCreateWithoutArmariosInput, LaboratorioUncheckedCreateWithoutArmariosInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutArmariosInput
    connect?: LaboratorioWhereUniqueInput
  }

  export type EstanteCreateNestedManyWithoutArmarioInput = {
    create?: XOR<EstanteCreateWithoutArmarioInput, EstanteUncheckedCreateWithoutArmarioInput> | EstanteCreateWithoutArmarioInput[] | EstanteUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: EstanteCreateOrConnectWithoutArmarioInput | EstanteCreateOrConnectWithoutArmarioInput[]
    createMany?: EstanteCreateManyArmarioInputEnvelope
    connect?: EstanteWhereUniqueInput | EstanteWhereUniqueInput[]
  }

  export type EquipoCreateNestedManyWithoutArmarioInput = {
    create?: XOR<EquipoCreateWithoutArmarioInput, EquipoUncheckedCreateWithoutArmarioInput> | EquipoCreateWithoutArmarioInput[] | EquipoUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutArmarioInput | EquipoCreateOrConnectWithoutArmarioInput[]
    createMany?: EquipoCreateManyArmarioInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type LibroCreateNestedManyWithoutArmarioInput = {
    create?: XOR<LibroCreateWithoutArmarioInput, LibroUncheckedCreateWithoutArmarioInput> | LibroCreateWithoutArmarioInput[] | LibroUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutArmarioInput | LibroCreateOrConnectWithoutArmarioInput[]
    createMany?: LibroCreateManyArmarioInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type EstanteUncheckedCreateNestedManyWithoutArmarioInput = {
    create?: XOR<EstanteCreateWithoutArmarioInput, EstanteUncheckedCreateWithoutArmarioInput> | EstanteCreateWithoutArmarioInput[] | EstanteUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: EstanteCreateOrConnectWithoutArmarioInput | EstanteCreateOrConnectWithoutArmarioInput[]
    createMany?: EstanteCreateManyArmarioInputEnvelope
    connect?: EstanteWhereUniqueInput | EstanteWhereUniqueInput[]
  }

  export type EquipoUncheckedCreateNestedManyWithoutArmarioInput = {
    create?: XOR<EquipoCreateWithoutArmarioInput, EquipoUncheckedCreateWithoutArmarioInput> | EquipoCreateWithoutArmarioInput[] | EquipoUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutArmarioInput | EquipoCreateOrConnectWithoutArmarioInput[]
    createMany?: EquipoCreateManyArmarioInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type LibroUncheckedCreateNestedManyWithoutArmarioInput = {
    create?: XOR<LibroCreateWithoutArmarioInput, LibroUncheckedCreateWithoutArmarioInput> | LibroCreateWithoutArmarioInput[] | LibroUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutArmarioInput | LibroCreateOrConnectWithoutArmarioInput[]
    createMany?: LibroCreateManyArmarioInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type LaboratorioUpdateOneRequiredWithoutArmariosNestedInput = {
    create?: XOR<LaboratorioCreateWithoutArmariosInput, LaboratorioUncheckedCreateWithoutArmariosInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutArmariosInput
    upsert?: LaboratorioUpsertWithoutArmariosInput
    connect?: LaboratorioWhereUniqueInput
    update?: XOR<XOR<LaboratorioUpdateToOneWithWhereWithoutArmariosInput, LaboratorioUpdateWithoutArmariosInput>, LaboratorioUncheckedUpdateWithoutArmariosInput>
  }

  export type EstanteUpdateManyWithoutArmarioNestedInput = {
    create?: XOR<EstanteCreateWithoutArmarioInput, EstanteUncheckedCreateWithoutArmarioInput> | EstanteCreateWithoutArmarioInput[] | EstanteUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: EstanteCreateOrConnectWithoutArmarioInput | EstanteCreateOrConnectWithoutArmarioInput[]
    upsert?: EstanteUpsertWithWhereUniqueWithoutArmarioInput | EstanteUpsertWithWhereUniqueWithoutArmarioInput[]
    createMany?: EstanteCreateManyArmarioInputEnvelope
    set?: EstanteWhereUniqueInput | EstanteWhereUniqueInput[]
    disconnect?: EstanteWhereUniqueInput | EstanteWhereUniqueInput[]
    delete?: EstanteWhereUniqueInput | EstanteWhereUniqueInput[]
    connect?: EstanteWhereUniqueInput | EstanteWhereUniqueInput[]
    update?: EstanteUpdateWithWhereUniqueWithoutArmarioInput | EstanteUpdateWithWhereUniqueWithoutArmarioInput[]
    updateMany?: EstanteUpdateManyWithWhereWithoutArmarioInput | EstanteUpdateManyWithWhereWithoutArmarioInput[]
    deleteMany?: EstanteScalarWhereInput | EstanteScalarWhereInput[]
  }

  export type EquipoUpdateManyWithoutArmarioNestedInput = {
    create?: XOR<EquipoCreateWithoutArmarioInput, EquipoUncheckedCreateWithoutArmarioInput> | EquipoCreateWithoutArmarioInput[] | EquipoUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutArmarioInput | EquipoCreateOrConnectWithoutArmarioInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutArmarioInput | EquipoUpsertWithWhereUniqueWithoutArmarioInput[]
    createMany?: EquipoCreateManyArmarioInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutArmarioInput | EquipoUpdateWithWhereUniqueWithoutArmarioInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutArmarioInput | EquipoUpdateManyWithWhereWithoutArmarioInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type LibroUpdateManyWithoutArmarioNestedInput = {
    create?: XOR<LibroCreateWithoutArmarioInput, LibroUncheckedCreateWithoutArmarioInput> | LibroCreateWithoutArmarioInput[] | LibroUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutArmarioInput | LibroCreateOrConnectWithoutArmarioInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutArmarioInput | LibroUpsertWithWhereUniqueWithoutArmarioInput[]
    createMany?: LibroCreateManyArmarioInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutArmarioInput | LibroUpdateWithWhereUniqueWithoutArmarioInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutArmarioInput | LibroUpdateManyWithWhereWithoutArmarioInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type EstanteUncheckedUpdateManyWithoutArmarioNestedInput = {
    create?: XOR<EstanteCreateWithoutArmarioInput, EstanteUncheckedCreateWithoutArmarioInput> | EstanteCreateWithoutArmarioInput[] | EstanteUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: EstanteCreateOrConnectWithoutArmarioInput | EstanteCreateOrConnectWithoutArmarioInput[]
    upsert?: EstanteUpsertWithWhereUniqueWithoutArmarioInput | EstanteUpsertWithWhereUniqueWithoutArmarioInput[]
    createMany?: EstanteCreateManyArmarioInputEnvelope
    set?: EstanteWhereUniqueInput | EstanteWhereUniqueInput[]
    disconnect?: EstanteWhereUniqueInput | EstanteWhereUniqueInput[]
    delete?: EstanteWhereUniqueInput | EstanteWhereUniqueInput[]
    connect?: EstanteWhereUniqueInput | EstanteWhereUniqueInput[]
    update?: EstanteUpdateWithWhereUniqueWithoutArmarioInput | EstanteUpdateWithWhereUniqueWithoutArmarioInput[]
    updateMany?: EstanteUpdateManyWithWhereWithoutArmarioInput | EstanteUpdateManyWithWhereWithoutArmarioInput[]
    deleteMany?: EstanteScalarWhereInput | EstanteScalarWhereInput[]
  }

  export type EquipoUncheckedUpdateManyWithoutArmarioNestedInput = {
    create?: XOR<EquipoCreateWithoutArmarioInput, EquipoUncheckedCreateWithoutArmarioInput> | EquipoCreateWithoutArmarioInput[] | EquipoUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutArmarioInput | EquipoCreateOrConnectWithoutArmarioInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutArmarioInput | EquipoUpsertWithWhereUniqueWithoutArmarioInput[]
    createMany?: EquipoCreateManyArmarioInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutArmarioInput | EquipoUpdateWithWhereUniqueWithoutArmarioInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutArmarioInput | EquipoUpdateManyWithWhereWithoutArmarioInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type LibroUncheckedUpdateManyWithoutArmarioNestedInput = {
    create?: XOR<LibroCreateWithoutArmarioInput, LibroUncheckedCreateWithoutArmarioInput> | LibroCreateWithoutArmarioInput[] | LibroUncheckedCreateWithoutArmarioInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutArmarioInput | LibroCreateOrConnectWithoutArmarioInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutArmarioInput | LibroUpsertWithWhereUniqueWithoutArmarioInput[]
    createMany?: LibroCreateManyArmarioInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutArmarioInput | LibroUpdateWithWhereUniqueWithoutArmarioInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutArmarioInput | LibroUpdateManyWithWhereWithoutArmarioInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type ArmarioCreateNestedOneWithoutEstantesInput = {
    create?: XOR<ArmarioCreateWithoutEstantesInput, ArmarioUncheckedCreateWithoutEstantesInput>
    connectOrCreate?: ArmarioCreateOrConnectWithoutEstantesInput
    connect?: ArmarioWhereUniqueInput
  }

  export type EquipoCreateNestedManyWithoutEstanteInput = {
    create?: XOR<EquipoCreateWithoutEstanteInput, EquipoUncheckedCreateWithoutEstanteInput> | EquipoCreateWithoutEstanteInput[] | EquipoUncheckedCreateWithoutEstanteInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutEstanteInput | EquipoCreateOrConnectWithoutEstanteInput[]
    createMany?: EquipoCreateManyEstanteInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type LibroCreateNestedManyWithoutEstanteInput = {
    create?: XOR<LibroCreateWithoutEstanteInput, LibroUncheckedCreateWithoutEstanteInput> | LibroCreateWithoutEstanteInput[] | LibroUncheckedCreateWithoutEstanteInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutEstanteInput | LibroCreateOrConnectWithoutEstanteInput[]
    createMany?: LibroCreateManyEstanteInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type EquipoUncheckedCreateNestedManyWithoutEstanteInput = {
    create?: XOR<EquipoCreateWithoutEstanteInput, EquipoUncheckedCreateWithoutEstanteInput> | EquipoCreateWithoutEstanteInput[] | EquipoUncheckedCreateWithoutEstanteInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutEstanteInput | EquipoCreateOrConnectWithoutEstanteInput[]
    createMany?: EquipoCreateManyEstanteInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type LibroUncheckedCreateNestedManyWithoutEstanteInput = {
    create?: XOR<LibroCreateWithoutEstanteInput, LibroUncheckedCreateWithoutEstanteInput> | LibroCreateWithoutEstanteInput[] | LibroUncheckedCreateWithoutEstanteInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutEstanteInput | LibroCreateOrConnectWithoutEstanteInput[]
    createMany?: LibroCreateManyEstanteInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type ArmarioUpdateOneRequiredWithoutEstantesNestedInput = {
    create?: XOR<ArmarioCreateWithoutEstantesInput, ArmarioUncheckedCreateWithoutEstantesInput>
    connectOrCreate?: ArmarioCreateOrConnectWithoutEstantesInput
    upsert?: ArmarioUpsertWithoutEstantesInput
    connect?: ArmarioWhereUniqueInput
    update?: XOR<XOR<ArmarioUpdateToOneWithWhereWithoutEstantesInput, ArmarioUpdateWithoutEstantesInput>, ArmarioUncheckedUpdateWithoutEstantesInput>
  }

  export type EquipoUpdateManyWithoutEstanteNestedInput = {
    create?: XOR<EquipoCreateWithoutEstanteInput, EquipoUncheckedCreateWithoutEstanteInput> | EquipoCreateWithoutEstanteInput[] | EquipoUncheckedCreateWithoutEstanteInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutEstanteInput | EquipoCreateOrConnectWithoutEstanteInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutEstanteInput | EquipoUpsertWithWhereUniqueWithoutEstanteInput[]
    createMany?: EquipoCreateManyEstanteInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutEstanteInput | EquipoUpdateWithWhereUniqueWithoutEstanteInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutEstanteInput | EquipoUpdateManyWithWhereWithoutEstanteInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type LibroUpdateManyWithoutEstanteNestedInput = {
    create?: XOR<LibroCreateWithoutEstanteInput, LibroUncheckedCreateWithoutEstanteInput> | LibroCreateWithoutEstanteInput[] | LibroUncheckedCreateWithoutEstanteInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutEstanteInput | LibroCreateOrConnectWithoutEstanteInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutEstanteInput | LibroUpsertWithWhereUniqueWithoutEstanteInput[]
    createMany?: LibroCreateManyEstanteInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutEstanteInput | LibroUpdateWithWhereUniqueWithoutEstanteInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutEstanteInput | LibroUpdateManyWithWhereWithoutEstanteInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type EquipoUncheckedUpdateManyWithoutEstanteNestedInput = {
    create?: XOR<EquipoCreateWithoutEstanteInput, EquipoUncheckedCreateWithoutEstanteInput> | EquipoCreateWithoutEstanteInput[] | EquipoUncheckedCreateWithoutEstanteInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutEstanteInput | EquipoCreateOrConnectWithoutEstanteInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutEstanteInput | EquipoUpsertWithWhereUniqueWithoutEstanteInput[]
    createMany?: EquipoCreateManyEstanteInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutEstanteInput | EquipoUpdateWithWhereUniqueWithoutEstanteInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutEstanteInput | EquipoUpdateManyWithWhereWithoutEstanteInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type LibroUncheckedUpdateManyWithoutEstanteNestedInput = {
    create?: XOR<LibroCreateWithoutEstanteInput, LibroUncheckedCreateWithoutEstanteInput> | LibroCreateWithoutEstanteInput[] | LibroUncheckedCreateWithoutEstanteInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutEstanteInput | LibroCreateOrConnectWithoutEstanteInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutEstanteInput | LibroUpsertWithWhereUniqueWithoutEstanteInput[]
    createMany?: LibroCreateManyEstanteInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutEstanteInput | LibroUpdateWithWhereUniqueWithoutEstanteInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutEstanteInput | LibroUpdateManyWithWhereWithoutEstanteInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type SoftwareLaboratorioCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<SoftwareLaboratorioCreateWithoutSoftwareInput, SoftwareLaboratorioUncheckedCreateWithoutSoftwareInput> | SoftwareLaboratorioCreateWithoutSoftwareInput[] | SoftwareLaboratorioUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareLaboratorioCreateOrConnectWithoutSoftwareInput | SoftwareLaboratorioCreateOrConnectWithoutSoftwareInput[]
    createMany?: SoftwareLaboratorioCreateManySoftwareInputEnvelope
    connect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
  }

  export type SoftwareLaboratorioUncheckedCreateNestedManyWithoutSoftwareInput = {
    create?: XOR<SoftwareLaboratorioCreateWithoutSoftwareInput, SoftwareLaboratorioUncheckedCreateWithoutSoftwareInput> | SoftwareLaboratorioCreateWithoutSoftwareInput[] | SoftwareLaboratorioUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareLaboratorioCreateOrConnectWithoutSoftwareInput | SoftwareLaboratorioCreateOrConnectWithoutSoftwareInput[]
    createMany?: SoftwareLaboratorioCreateManySoftwareInputEnvelope
    connect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
  }

  export type SoftwareLaboratorioUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<SoftwareLaboratorioCreateWithoutSoftwareInput, SoftwareLaboratorioUncheckedCreateWithoutSoftwareInput> | SoftwareLaboratorioCreateWithoutSoftwareInput[] | SoftwareLaboratorioUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareLaboratorioCreateOrConnectWithoutSoftwareInput | SoftwareLaboratorioCreateOrConnectWithoutSoftwareInput[]
    upsert?: SoftwareLaboratorioUpsertWithWhereUniqueWithoutSoftwareInput | SoftwareLaboratorioUpsertWithWhereUniqueWithoutSoftwareInput[]
    createMany?: SoftwareLaboratorioCreateManySoftwareInputEnvelope
    set?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    disconnect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    delete?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    connect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    update?: SoftwareLaboratorioUpdateWithWhereUniqueWithoutSoftwareInput | SoftwareLaboratorioUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: SoftwareLaboratorioUpdateManyWithWhereWithoutSoftwareInput | SoftwareLaboratorioUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: SoftwareLaboratorioScalarWhereInput | SoftwareLaboratorioScalarWhereInput[]
  }

  export type SoftwareLaboratorioUncheckedUpdateManyWithoutSoftwareNestedInput = {
    create?: XOR<SoftwareLaboratorioCreateWithoutSoftwareInput, SoftwareLaboratorioUncheckedCreateWithoutSoftwareInput> | SoftwareLaboratorioCreateWithoutSoftwareInput[] | SoftwareLaboratorioUncheckedCreateWithoutSoftwareInput[]
    connectOrCreate?: SoftwareLaboratorioCreateOrConnectWithoutSoftwareInput | SoftwareLaboratorioCreateOrConnectWithoutSoftwareInput[]
    upsert?: SoftwareLaboratorioUpsertWithWhereUniqueWithoutSoftwareInput | SoftwareLaboratorioUpsertWithWhereUniqueWithoutSoftwareInput[]
    createMany?: SoftwareLaboratorioCreateManySoftwareInputEnvelope
    set?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    disconnect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    delete?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    connect?: SoftwareLaboratorioWhereUniqueInput | SoftwareLaboratorioWhereUniqueInput[]
    update?: SoftwareLaboratorioUpdateWithWhereUniqueWithoutSoftwareInput | SoftwareLaboratorioUpdateWithWhereUniqueWithoutSoftwareInput[]
    updateMany?: SoftwareLaboratorioUpdateManyWithWhereWithoutSoftwareInput | SoftwareLaboratorioUpdateManyWithWhereWithoutSoftwareInput[]
    deleteMany?: SoftwareLaboratorioScalarWhereInput | SoftwareLaboratorioScalarWhereInput[]
  }

  export type SoftwareCreateNestedOneWithoutLaboratoriosInput = {
    create?: XOR<SoftwareCreateWithoutLaboratoriosInput, SoftwareUncheckedCreateWithoutLaboratoriosInput>
    connectOrCreate?: SoftwareCreateOrConnectWithoutLaboratoriosInput
    connect?: SoftwareWhereUniqueInput
  }

  export type LaboratorioCreateNestedOneWithoutSoftwareInput = {
    create?: XOR<LaboratorioCreateWithoutSoftwareInput, LaboratorioUncheckedCreateWithoutSoftwareInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutSoftwareInput
    connect?: LaboratorioWhereUniqueInput
  }

  export type SoftwareUpdateOneRequiredWithoutLaboratoriosNestedInput = {
    create?: XOR<SoftwareCreateWithoutLaboratoriosInput, SoftwareUncheckedCreateWithoutLaboratoriosInput>
    connectOrCreate?: SoftwareCreateOrConnectWithoutLaboratoriosInput
    upsert?: SoftwareUpsertWithoutLaboratoriosInput
    connect?: SoftwareWhereUniqueInput
    update?: XOR<XOR<SoftwareUpdateToOneWithWhereWithoutLaboratoriosInput, SoftwareUpdateWithoutLaboratoriosInput>, SoftwareUncheckedUpdateWithoutLaboratoriosInput>
  }

  export type LaboratorioUpdateOneRequiredWithoutSoftwareNestedInput = {
    create?: XOR<LaboratorioCreateWithoutSoftwareInput, LaboratorioUncheckedCreateWithoutSoftwareInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutSoftwareInput
    upsert?: LaboratorioUpsertWithoutSoftwareInput
    connect?: LaboratorioWhereUniqueInput
    update?: XOR<XOR<LaboratorioUpdateToOneWithWhereWithoutSoftwareInput, LaboratorioUpdateWithoutSoftwareInput>, LaboratorioUncheckedUpdateWithoutSoftwareInput>
  }

  export type UserCreateNestedOneWithoutMateriasDirectorInput = {
    create?: XOR<UserCreateWithoutMateriasDirectorInput, UserUncheckedCreateWithoutMateriasDirectorInput>
    connectOrCreate?: UserCreateOrConnectWithoutMateriasDirectorInput
    connect?: UserWhereUniqueInput
  }

  export type MateriaJefeTpCreateNestedManyWithoutMateriaInput = {
    create?: XOR<MateriaJefeTpCreateWithoutMateriaInput, MateriaJefeTpUncheckedCreateWithoutMateriaInput> | MateriaJefeTpCreateWithoutMateriaInput[] | MateriaJefeTpUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: MateriaJefeTpCreateOrConnectWithoutMateriaInput | MateriaJefeTpCreateOrConnectWithoutMateriaInput[]
    createMany?: MateriaJefeTpCreateManyMateriaInputEnvelope
    connect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
  }

  export type CursoCreateNestedManyWithoutMateriaInput = {
    create?: XOR<CursoCreateWithoutMateriaInput, CursoUncheckedCreateWithoutMateriaInput> | CursoCreateWithoutMateriaInput[] | CursoUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutMateriaInput | CursoCreateOrConnectWithoutMateriaInput[]
    createMany?: CursoCreateManyMateriaInputEnvelope
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
  }

  export type LibroMateriaCreateNestedManyWithoutMateriaInput = {
    create?: XOR<LibroMateriaCreateWithoutMateriaInput, LibroMateriaUncheckedCreateWithoutMateriaInput> | LibroMateriaCreateWithoutMateriaInput[] | LibroMateriaUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: LibroMateriaCreateOrConnectWithoutMateriaInput | LibroMateriaCreateOrConnectWithoutMateriaInput[]
    createMany?: LibroMateriaCreateManyMateriaInputEnvelope
    connect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
  }

  export type MateriaCorrelativaCreateNestedManyWithoutMateriaPrerequisitoInput = {
    create?: XOR<MateriaCorrelativaCreateWithoutMateriaPrerequisitoInput, MateriaCorrelativaUncheckedCreateWithoutMateriaPrerequisitoInput> | MateriaCorrelativaCreateWithoutMateriaPrerequisitoInput[] | MateriaCorrelativaUncheckedCreateWithoutMateriaPrerequisitoInput[]
    connectOrCreate?: MateriaCorrelativaCreateOrConnectWithoutMateriaPrerequisitoInput | MateriaCorrelativaCreateOrConnectWithoutMateriaPrerequisitoInput[]
    createMany?: MateriaCorrelativaCreateManyMateriaPrerequisitoInputEnvelope
    connect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
  }

  export type MateriaCorrelativaCreateNestedManyWithoutCorrelativaInput = {
    create?: XOR<MateriaCorrelativaCreateWithoutCorrelativaInput, MateriaCorrelativaUncheckedCreateWithoutCorrelativaInput> | MateriaCorrelativaCreateWithoutCorrelativaInput[] | MateriaCorrelativaUncheckedCreateWithoutCorrelativaInput[]
    connectOrCreate?: MateriaCorrelativaCreateOrConnectWithoutCorrelativaInput | MateriaCorrelativaCreateOrConnectWithoutCorrelativaInput[]
    createMany?: MateriaCorrelativaCreateManyCorrelativaInputEnvelope
    connect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
  }

  export type ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalMateriaInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalMateriaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalMateriaInput> | ReservaLaboratorioCerradoCreateWithoutDiscrecionalMateriaInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalMateriaInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalMateriaInput | ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalMateriaInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyDiscrecionalMateriaInputEnvelope
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
  }

  export type MateriaJefeTpUncheckedCreateNestedManyWithoutMateriaInput = {
    create?: XOR<MateriaJefeTpCreateWithoutMateriaInput, MateriaJefeTpUncheckedCreateWithoutMateriaInput> | MateriaJefeTpCreateWithoutMateriaInput[] | MateriaJefeTpUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: MateriaJefeTpCreateOrConnectWithoutMateriaInput | MateriaJefeTpCreateOrConnectWithoutMateriaInput[]
    createMany?: MateriaJefeTpCreateManyMateriaInputEnvelope
    connect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
  }

  export type CursoUncheckedCreateNestedManyWithoutMateriaInput = {
    create?: XOR<CursoCreateWithoutMateriaInput, CursoUncheckedCreateWithoutMateriaInput> | CursoCreateWithoutMateriaInput[] | CursoUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutMateriaInput | CursoCreateOrConnectWithoutMateriaInput[]
    createMany?: CursoCreateManyMateriaInputEnvelope
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
  }

  export type LibroMateriaUncheckedCreateNestedManyWithoutMateriaInput = {
    create?: XOR<LibroMateriaCreateWithoutMateriaInput, LibroMateriaUncheckedCreateWithoutMateriaInput> | LibroMateriaCreateWithoutMateriaInput[] | LibroMateriaUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: LibroMateriaCreateOrConnectWithoutMateriaInput | LibroMateriaCreateOrConnectWithoutMateriaInput[]
    createMany?: LibroMateriaCreateManyMateriaInputEnvelope
    connect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
  }

  export type MateriaCorrelativaUncheckedCreateNestedManyWithoutMateriaPrerequisitoInput = {
    create?: XOR<MateriaCorrelativaCreateWithoutMateriaPrerequisitoInput, MateriaCorrelativaUncheckedCreateWithoutMateriaPrerequisitoInput> | MateriaCorrelativaCreateWithoutMateriaPrerequisitoInput[] | MateriaCorrelativaUncheckedCreateWithoutMateriaPrerequisitoInput[]
    connectOrCreate?: MateriaCorrelativaCreateOrConnectWithoutMateriaPrerequisitoInput | MateriaCorrelativaCreateOrConnectWithoutMateriaPrerequisitoInput[]
    createMany?: MateriaCorrelativaCreateManyMateriaPrerequisitoInputEnvelope
    connect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
  }

  export type MateriaCorrelativaUncheckedCreateNestedManyWithoutCorrelativaInput = {
    create?: XOR<MateriaCorrelativaCreateWithoutCorrelativaInput, MateriaCorrelativaUncheckedCreateWithoutCorrelativaInput> | MateriaCorrelativaCreateWithoutCorrelativaInput[] | MateriaCorrelativaUncheckedCreateWithoutCorrelativaInput[]
    connectOrCreate?: MateriaCorrelativaCreateOrConnectWithoutCorrelativaInput | MateriaCorrelativaCreateOrConnectWithoutCorrelativaInput[]
    createMany?: MateriaCorrelativaCreateManyCorrelativaInputEnvelope
    connect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
  }

  export type ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalMateriaInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalMateriaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalMateriaInput> | ReservaLaboratorioCerradoCreateWithoutDiscrecionalMateriaInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalMateriaInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalMateriaInput | ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalMateriaInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyDiscrecionalMateriaInputEnvelope
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
  }

  export type EnumMateriaDuracionFieldUpdateOperationsInput = {
    set?: $Enums.MateriaDuracion
  }

  export type EnumMateriaTipoFieldUpdateOperationsInput = {
    set?: $Enums.MateriaTipo
  }

  export type UserUpdateOneWithoutMateriasDirectorNestedInput = {
    create?: XOR<UserCreateWithoutMateriasDirectorInput, UserUncheckedCreateWithoutMateriasDirectorInput>
    connectOrCreate?: UserCreateOrConnectWithoutMateriasDirectorInput
    upsert?: UserUpsertWithoutMateriasDirectorInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMateriasDirectorInput, UserUpdateWithoutMateriasDirectorInput>, UserUncheckedUpdateWithoutMateriasDirectorInput>
  }

  export type MateriaJefeTpUpdateManyWithoutMateriaNestedInput = {
    create?: XOR<MateriaJefeTpCreateWithoutMateriaInput, MateriaJefeTpUncheckedCreateWithoutMateriaInput> | MateriaJefeTpCreateWithoutMateriaInput[] | MateriaJefeTpUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: MateriaJefeTpCreateOrConnectWithoutMateriaInput | MateriaJefeTpCreateOrConnectWithoutMateriaInput[]
    upsert?: MateriaJefeTpUpsertWithWhereUniqueWithoutMateriaInput | MateriaJefeTpUpsertWithWhereUniqueWithoutMateriaInput[]
    createMany?: MateriaJefeTpCreateManyMateriaInputEnvelope
    set?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    disconnect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    delete?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    connect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    update?: MateriaJefeTpUpdateWithWhereUniqueWithoutMateriaInput | MateriaJefeTpUpdateWithWhereUniqueWithoutMateriaInput[]
    updateMany?: MateriaJefeTpUpdateManyWithWhereWithoutMateriaInput | MateriaJefeTpUpdateManyWithWhereWithoutMateriaInput[]
    deleteMany?: MateriaJefeTpScalarWhereInput | MateriaJefeTpScalarWhereInput[]
  }

  export type CursoUpdateManyWithoutMateriaNestedInput = {
    create?: XOR<CursoCreateWithoutMateriaInput, CursoUncheckedCreateWithoutMateriaInput> | CursoCreateWithoutMateriaInput[] | CursoUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutMateriaInput | CursoCreateOrConnectWithoutMateriaInput[]
    upsert?: CursoUpsertWithWhereUniqueWithoutMateriaInput | CursoUpsertWithWhereUniqueWithoutMateriaInput[]
    createMany?: CursoCreateManyMateriaInputEnvelope
    set?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    disconnect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    delete?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    update?: CursoUpdateWithWhereUniqueWithoutMateriaInput | CursoUpdateWithWhereUniqueWithoutMateriaInput[]
    updateMany?: CursoUpdateManyWithWhereWithoutMateriaInput | CursoUpdateManyWithWhereWithoutMateriaInput[]
    deleteMany?: CursoScalarWhereInput | CursoScalarWhereInput[]
  }

  export type LibroMateriaUpdateManyWithoutMateriaNestedInput = {
    create?: XOR<LibroMateriaCreateWithoutMateriaInput, LibroMateriaUncheckedCreateWithoutMateriaInput> | LibroMateriaCreateWithoutMateriaInput[] | LibroMateriaUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: LibroMateriaCreateOrConnectWithoutMateriaInput | LibroMateriaCreateOrConnectWithoutMateriaInput[]
    upsert?: LibroMateriaUpsertWithWhereUniqueWithoutMateriaInput | LibroMateriaUpsertWithWhereUniqueWithoutMateriaInput[]
    createMany?: LibroMateriaCreateManyMateriaInputEnvelope
    set?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    disconnect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    delete?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    connect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    update?: LibroMateriaUpdateWithWhereUniqueWithoutMateriaInput | LibroMateriaUpdateWithWhereUniqueWithoutMateriaInput[]
    updateMany?: LibroMateriaUpdateManyWithWhereWithoutMateriaInput | LibroMateriaUpdateManyWithWhereWithoutMateriaInput[]
    deleteMany?: LibroMateriaScalarWhereInput | LibroMateriaScalarWhereInput[]
  }

  export type MateriaCorrelativaUpdateManyWithoutMateriaPrerequisitoNestedInput = {
    create?: XOR<MateriaCorrelativaCreateWithoutMateriaPrerequisitoInput, MateriaCorrelativaUncheckedCreateWithoutMateriaPrerequisitoInput> | MateriaCorrelativaCreateWithoutMateriaPrerequisitoInput[] | MateriaCorrelativaUncheckedCreateWithoutMateriaPrerequisitoInput[]
    connectOrCreate?: MateriaCorrelativaCreateOrConnectWithoutMateriaPrerequisitoInput | MateriaCorrelativaCreateOrConnectWithoutMateriaPrerequisitoInput[]
    upsert?: MateriaCorrelativaUpsertWithWhereUniqueWithoutMateriaPrerequisitoInput | MateriaCorrelativaUpsertWithWhereUniqueWithoutMateriaPrerequisitoInput[]
    createMany?: MateriaCorrelativaCreateManyMateriaPrerequisitoInputEnvelope
    set?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    disconnect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    delete?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    connect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    update?: MateriaCorrelativaUpdateWithWhereUniqueWithoutMateriaPrerequisitoInput | MateriaCorrelativaUpdateWithWhereUniqueWithoutMateriaPrerequisitoInput[]
    updateMany?: MateriaCorrelativaUpdateManyWithWhereWithoutMateriaPrerequisitoInput | MateriaCorrelativaUpdateManyWithWhereWithoutMateriaPrerequisitoInput[]
    deleteMany?: MateriaCorrelativaScalarWhereInput | MateriaCorrelativaScalarWhereInput[]
  }

  export type MateriaCorrelativaUpdateManyWithoutCorrelativaNestedInput = {
    create?: XOR<MateriaCorrelativaCreateWithoutCorrelativaInput, MateriaCorrelativaUncheckedCreateWithoutCorrelativaInput> | MateriaCorrelativaCreateWithoutCorrelativaInput[] | MateriaCorrelativaUncheckedCreateWithoutCorrelativaInput[]
    connectOrCreate?: MateriaCorrelativaCreateOrConnectWithoutCorrelativaInput | MateriaCorrelativaCreateOrConnectWithoutCorrelativaInput[]
    upsert?: MateriaCorrelativaUpsertWithWhereUniqueWithoutCorrelativaInput | MateriaCorrelativaUpsertWithWhereUniqueWithoutCorrelativaInput[]
    createMany?: MateriaCorrelativaCreateManyCorrelativaInputEnvelope
    set?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    disconnect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    delete?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    connect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    update?: MateriaCorrelativaUpdateWithWhereUniqueWithoutCorrelativaInput | MateriaCorrelativaUpdateWithWhereUniqueWithoutCorrelativaInput[]
    updateMany?: MateriaCorrelativaUpdateManyWithWhereWithoutCorrelativaInput | MateriaCorrelativaUpdateManyWithWhereWithoutCorrelativaInput[]
    deleteMany?: MateriaCorrelativaScalarWhereInput | MateriaCorrelativaScalarWhereInput[]
  }

  export type ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalMateriaNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalMateriaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalMateriaInput> | ReservaLaboratorioCerradoCreateWithoutDiscrecionalMateriaInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalMateriaInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalMateriaInput | ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalMateriaInput[]
    upsert?: ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutDiscrecionalMateriaInput | ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutDiscrecionalMateriaInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyDiscrecionalMateriaInputEnvelope
    set?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutDiscrecionalMateriaInput | ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutDiscrecionalMateriaInput[]
    updateMany?: ReservaLaboratorioCerradoUpdateManyWithWhereWithoutDiscrecionalMateriaInput | ReservaLaboratorioCerradoUpdateManyWithWhereWithoutDiscrecionalMateriaInput[]
    deleteMany?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
  }

  export type MateriaJefeTpUncheckedUpdateManyWithoutMateriaNestedInput = {
    create?: XOR<MateriaJefeTpCreateWithoutMateriaInput, MateriaJefeTpUncheckedCreateWithoutMateriaInput> | MateriaJefeTpCreateWithoutMateriaInput[] | MateriaJefeTpUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: MateriaJefeTpCreateOrConnectWithoutMateriaInput | MateriaJefeTpCreateOrConnectWithoutMateriaInput[]
    upsert?: MateriaJefeTpUpsertWithWhereUniqueWithoutMateriaInput | MateriaJefeTpUpsertWithWhereUniqueWithoutMateriaInput[]
    createMany?: MateriaJefeTpCreateManyMateriaInputEnvelope
    set?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    disconnect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    delete?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    connect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    update?: MateriaJefeTpUpdateWithWhereUniqueWithoutMateriaInput | MateriaJefeTpUpdateWithWhereUniqueWithoutMateriaInput[]
    updateMany?: MateriaJefeTpUpdateManyWithWhereWithoutMateriaInput | MateriaJefeTpUpdateManyWithWhereWithoutMateriaInput[]
    deleteMany?: MateriaJefeTpScalarWhereInput | MateriaJefeTpScalarWhereInput[]
  }

  export type CursoUncheckedUpdateManyWithoutMateriaNestedInput = {
    create?: XOR<CursoCreateWithoutMateriaInput, CursoUncheckedCreateWithoutMateriaInput> | CursoCreateWithoutMateriaInput[] | CursoUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutMateriaInput | CursoCreateOrConnectWithoutMateriaInput[]
    upsert?: CursoUpsertWithWhereUniqueWithoutMateriaInput | CursoUpsertWithWhereUniqueWithoutMateriaInput[]
    createMany?: CursoCreateManyMateriaInputEnvelope
    set?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    disconnect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    delete?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    update?: CursoUpdateWithWhereUniqueWithoutMateriaInput | CursoUpdateWithWhereUniqueWithoutMateriaInput[]
    updateMany?: CursoUpdateManyWithWhereWithoutMateriaInput | CursoUpdateManyWithWhereWithoutMateriaInput[]
    deleteMany?: CursoScalarWhereInput | CursoScalarWhereInput[]
  }

  export type LibroMateriaUncheckedUpdateManyWithoutMateriaNestedInput = {
    create?: XOR<LibroMateriaCreateWithoutMateriaInput, LibroMateriaUncheckedCreateWithoutMateriaInput> | LibroMateriaCreateWithoutMateriaInput[] | LibroMateriaUncheckedCreateWithoutMateriaInput[]
    connectOrCreate?: LibroMateriaCreateOrConnectWithoutMateriaInput | LibroMateriaCreateOrConnectWithoutMateriaInput[]
    upsert?: LibroMateriaUpsertWithWhereUniqueWithoutMateriaInput | LibroMateriaUpsertWithWhereUniqueWithoutMateriaInput[]
    createMany?: LibroMateriaCreateManyMateriaInputEnvelope
    set?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    disconnect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    delete?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    connect?: LibroMateriaWhereUniqueInput | LibroMateriaWhereUniqueInput[]
    update?: LibroMateriaUpdateWithWhereUniqueWithoutMateriaInput | LibroMateriaUpdateWithWhereUniqueWithoutMateriaInput[]
    updateMany?: LibroMateriaUpdateManyWithWhereWithoutMateriaInput | LibroMateriaUpdateManyWithWhereWithoutMateriaInput[]
    deleteMany?: LibroMateriaScalarWhereInput | LibroMateriaScalarWhereInput[]
  }

  export type MateriaCorrelativaUncheckedUpdateManyWithoutMateriaPrerequisitoNestedInput = {
    create?: XOR<MateriaCorrelativaCreateWithoutMateriaPrerequisitoInput, MateriaCorrelativaUncheckedCreateWithoutMateriaPrerequisitoInput> | MateriaCorrelativaCreateWithoutMateriaPrerequisitoInput[] | MateriaCorrelativaUncheckedCreateWithoutMateriaPrerequisitoInput[]
    connectOrCreate?: MateriaCorrelativaCreateOrConnectWithoutMateriaPrerequisitoInput | MateriaCorrelativaCreateOrConnectWithoutMateriaPrerequisitoInput[]
    upsert?: MateriaCorrelativaUpsertWithWhereUniqueWithoutMateriaPrerequisitoInput | MateriaCorrelativaUpsertWithWhereUniqueWithoutMateriaPrerequisitoInput[]
    createMany?: MateriaCorrelativaCreateManyMateriaPrerequisitoInputEnvelope
    set?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    disconnect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    delete?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    connect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    update?: MateriaCorrelativaUpdateWithWhereUniqueWithoutMateriaPrerequisitoInput | MateriaCorrelativaUpdateWithWhereUniqueWithoutMateriaPrerequisitoInput[]
    updateMany?: MateriaCorrelativaUpdateManyWithWhereWithoutMateriaPrerequisitoInput | MateriaCorrelativaUpdateManyWithWhereWithoutMateriaPrerequisitoInput[]
    deleteMany?: MateriaCorrelativaScalarWhereInput | MateriaCorrelativaScalarWhereInput[]
  }

  export type MateriaCorrelativaUncheckedUpdateManyWithoutCorrelativaNestedInput = {
    create?: XOR<MateriaCorrelativaCreateWithoutCorrelativaInput, MateriaCorrelativaUncheckedCreateWithoutCorrelativaInput> | MateriaCorrelativaCreateWithoutCorrelativaInput[] | MateriaCorrelativaUncheckedCreateWithoutCorrelativaInput[]
    connectOrCreate?: MateriaCorrelativaCreateOrConnectWithoutCorrelativaInput | MateriaCorrelativaCreateOrConnectWithoutCorrelativaInput[]
    upsert?: MateriaCorrelativaUpsertWithWhereUniqueWithoutCorrelativaInput | MateriaCorrelativaUpsertWithWhereUniqueWithoutCorrelativaInput[]
    createMany?: MateriaCorrelativaCreateManyCorrelativaInputEnvelope
    set?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    disconnect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    delete?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    connect?: MateriaCorrelativaWhereUniqueInput | MateriaCorrelativaWhereUniqueInput[]
    update?: MateriaCorrelativaUpdateWithWhereUniqueWithoutCorrelativaInput | MateriaCorrelativaUpdateWithWhereUniqueWithoutCorrelativaInput[]
    updateMany?: MateriaCorrelativaUpdateManyWithWhereWithoutCorrelativaInput | MateriaCorrelativaUpdateManyWithWhereWithoutCorrelativaInput[]
    deleteMany?: MateriaCorrelativaScalarWhereInput | MateriaCorrelativaScalarWhereInput[]
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalMateriaNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalMateriaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalMateriaInput> | ReservaLaboratorioCerradoCreateWithoutDiscrecionalMateriaInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalMateriaInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalMateriaInput | ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalMateriaInput[]
    upsert?: ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutDiscrecionalMateriaInput | ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutDiscrecionalMateriaInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyDiscrecionalMateriaInputEnvelope
    set?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutDiscrecionalMateriaInput | ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutDiscrecionalMateriaInput[]
    updateMany?: ReservaLaboratorioCerradoUpdateManyWithWhereWithoutDiscrecionalMateriaInput | ReservaLaboratorioCerradoUpdateManyWithWhereWithoutDiscrecionalMateriaInput[]
    deleteMany?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
  }

  export type MateriaCreateNestedOneWithoutJefeTrabajoPracticosInput = {
    create?: XOR<MateriaCreateWithoutJefeTrabajoPracticosInput, MateriaUncheckedCreateWithoutJefeTrabajoPracticosInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutJefeTrabajoPracticosInput
    connect?: MateriaWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMateriaJefeTpInput = {
    create?: XOR<UserCreateWithoutMateriaJefeTpInput, UserUncheckedCreateWithoutMateriaJefeTpInput>
    connectOrCreate?: UserCreateOrConnectWithoutMateriaJefeTpInput
    connect?: UserWhereUniqueInput
  }

  export type MateriaUpdateOneRequiredWithoutJefeTrabajoPracticosNestedInput = {
    create?: XOR<MateriaCreateWithoutJefeTrabajoPracticosInput, MateriaUncheckedCreateWithoutJefeTrabajoPracticosInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutJefeTrabajoPracticosInput
    upsert?: MateriaUpsertWithoutJefeTrabajoPracticosInput
    connect?: MateriaWhereUniqueInput
    update?: XOR<XOR<MateriaUpdateToOneWithWhereWithoutJefeTrabajoPracticosInput, MateriaUpdateWithoutJefeTrabajoPracticosInput>, MateriaUncheckedUpdateWithoutJefeTrabajoPracticosInput>
  }

  export type UserUpdateOneRequiredWithoutMateriaJefeTpNestedInput = {
    create?: XOR<UserCreateWithoutMateriaJefeTpInput, UserUncheckedCreateWithoutMateriaJefeTpInput>
    connectOrCreate?: UserCreateOrConnectWithoutMateriaJefeTpInput
    upsert?: UserUpsertWithoutMateriaJefeTpInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMateriaJefeTpInput, UserUpdateWithoutMateriaJefeTpInput>, UserUncheckedUpdateWithoutMateriaJefeTpInput>
  }

  export type MateriaCreateNestedOneWithoutMateriaPrerequisitoInput = {
    create?: XOR<MateriaCreateWithoutMateriaPrerequisitoInput, MateriaUncheckedCreateWithoutMateriaPrerequisitoInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutMateriaPrerequisitoInput
    connect?: MateriaWhereUniqueInput
  }

  export type MateriaCreateNestedOneWithoutCorrelativaInput = {
    create?: XOR<MateriaCreateWithoutCorrelativaInput, MateriaUncheckedCreateWithoutCorrelativaInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutCorrelativaInput
    connect?: MateriaWhereUniqueInput
  }

  export type EnumEstatusCorrelativaFieldUpdateOperationsInput = {
    set?: $Enums.EstatusCorrelativa
  }

  export type MateriaUpdateOneRequiredWithoutMateriaPrerequisitoNestedInput = {
    create?: XOR<MateriaCreateWithoutMateriaPrerequisitoInput, MateriaUncheckedCreateWithoutMateriaPrerequisitoInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutMateriaPrerequisitoInput
    upsert?: MateriaUpsertWithoutMateriaPrerequisitoInput
    connect?: MateriaWhereUniqueInput
    update?: XOR<XOR<MateriaUpdateToOneWithWhereWithoutMateriaPrerequisitoInput, MateriaUpdateWithoutMateriaPrerequisitoInput>, MateriaUncheckedUpdateWithoutMateriaPrerequisitoInput>
  }

  export type MateriaUpdateOneRequiredWithoutCorrelativaNestedInput = {
    create?: XOR<MateriaCreateWithoutCorrelativaInput, MateriaUncheckedCreateWithoutCorrelativaInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutCorrelativaInput
    upsert?: MateriaUpsertWithoutCorrelativaInput
    connect?: MateriaWhereUniqueInput
    update?: XOR<XOR<MateriaUpdateToOneWithWhereWithoutCorrelativaInput, MateriaUpdateWithoutCorrelativaInput>, MateriaUncheckedUpdateWithoutCorrelativaInput>
  }

  export type UserCreateNestedOneWithoutReservasSolicitadasInput = {
    create?: XOR<UserCreateWithoutReservasSolicitadasInput, UserUncheckedCreateWithoutReservasSolicitadasInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasSolicitadasInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReservasAprobadasInput = {
    create?: XOR<UserCreateWithoutReservasAprobadasInput, UserUncheckedCreateWithoutReservasAprobadasInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasAprobadasInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReservasRechazadasInput = {
    create?: XOR<UserCreateWithoutReservasRechazadasInput, UserUncheckedCreateWithoutReservasRechazadasInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasRechazadasInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReservasRenovadasInput = {
    create?: XOR<UserCreateWithoutReservasRenovadasInput, UserUncheckedCreateWithoutReservasRenovadasInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasRenovadasInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReservasRecibidasInput = {
    create?: XOR<UserCreateWithoutReservasRecibidasInput, UserUncheckedCreateWithoutReservasRecibidasInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasRecibidasInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReservasComoTutorInput = {
    create?: XOR<UserCreateWithoutReservasComoTutorInput, UserUncheckedCreateWithoutReservasComoTutorInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasComoTutorInput
    connect?: UserWhereUniqueInput
  }

  export type ReservaEquipoCreateNestedOneWithoutReservaInput = {
    create?: XOR<ReservaEquipoCreateWithoutReservaInput, ReservaEquipoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaEquipoCreateOrConnectWithoutReservaInput
    connect?: ReservaEquipoWhereUniqueInput
  }

  export type ReservaLibroCreateNestedOneWithoutReservaInput = {
    create?: XOR<ReservaLibroCreateWithoutReservaInput, ReservaLibroUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLibroCreateOrConnectWithoutReservaInput
    connect?: ReservaLibroWhereUniqueInput
  }

  export type ReservaLaboratorioCerradoCreateNestedOneWithoutReservaInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutReservaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutReservaInput
    connect?: ReservaLaboratorioCerradoWhereUniqueInput
  }

  export type ReservaLaboratorioAbiertoCreateNestedOneWithoutReservaInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutReservaInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutReservaInput
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput
  }

  export type ReservaEquipoUncheckedCreateNestedOneWithoutReservaInput = {
    create?: XOR<ReservaEquipoCreateWithoutReservaInput, ReservaEquipoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaEquipoCreateOrConnectWithoutReservaInput
    connect?: ReservaEquipoWhereUniqueInput
  }

  export type ReservaLibroUncheckedCreateNestedOneWithoutReservaInput = {
    create?: XOR<ReservaLibroCreateWithoutReservaInput, ReservaLibroUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLibroCreateOrConnectWithoutReservaInput
    connect?: ReservaLibroWhereUniqueInput
  }

  export type ReservaLaboratorioCerradoUncheckedCreateNestedOneWithoutReservaInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutReservaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutReservaInput
    connect?: ReservaLaboratorioCerradoWhereUniqueInput
  }

  export type ReservaLaboratorioAbiertoUncheckedCreateNestedOneWithoutReservaInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutReservaInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutReservaInput
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput
  }

  export type EnumReservaEstatusFieldUpdateOperationsInput = {
    set?: $Enums.ReservaEstatus
  }

  export type EnumReservaTipoFieldUpdateOperationsInput = {
    set?: $Enums.ReservaTipo
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UserUpdateOneRequiredWithoutReservasSolicitadasNestedInput = {
    create?: XOR<UserCreateWithoutReservasSolicitadasInput, UserUncheckedCreateWithoutReservasSolicitadasInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasSolicitadasInput
    upsert?: UserUpsertWithoutReservasSolicitadasInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReservasSolicitadasInput, UserUpdateWithoutReservasSolicitadasInput>, UserUncheckedUpdateWithoutReservasSolicitadasInput>
  }

  export type UserUpdateOneWithoutReservasAprobadasNestedInput = {
    create?: XOR<UserCreateWithoutReservasAprobadasInput, UserUncheckedCreateWithoutReservasAprobadasInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasAprobadasInput
    upsert?: UserUpsertWithoutReservasAprobadasInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReservasAprobadasInput, UserUpdateWithoutReservasAprobadasInput>, UserUncheckedUpdateWithoutReservasAprobadasInput>
  }

  export type UserUpdateOneWithoutReservasRechazadasNestedInput = {
    create?: XOR<UserCreateWithoutReservasRechazadasInput, UserUncheckedCreateWithoutReservasRechazadasInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasRechazadasInput
    upsert?: UserUpsertWithoutReservasRechazadasInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReservasRechazadasInput, UserUpdateWithoutReservasRechazadasInput>, UserUncheckedUpdateWithoutReservasRechazadasInput>
  }

  export type UserUpdateOneWithoutReservasRenovadasNestedInput = {
    create?: XOR<UserCreateWithoutReservasRenovadasInput, UserUncheckedCreateWithoutReservasRenovadasInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasRenovadasInput
    upsert?: UserUpsertWithoutReservasRenovadasInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReservasRenovadasInput, UserUpdateWithoutReservasRenovadasInput>, UserUncheckedUpdateWithoutReservasRenovadasInput>
  }

  export type UserUpdateOneWithoutReservasRecibidasNestedInput = {
    create?: XOR<UserCreateWithoutReservasRecibidasInput, UserUncheckedCreateWithoutReservasRecibidasInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasRecibidasInput
    upsert?: UserUpsertWithoutReservasRecibidasInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReservasRecibidasInput, UserUpdateWithoutReservasRecibidasInput>, UserUncheckedUpdateWithoutReservasRecibidasInput>
  }

  export type UserUpdateOneWithoutReservasComoTutorNestedInput = {
    create?: XOR<UserCreateWithoutReservasComoTutorInput, UserUncheckedCreateWithoutReservasComoTutorInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservasComoTutorInput
    upsert?: UserUpsertWithoutReservasComoTutorInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReservasComoTutorInput, UserUpdateWithoutReservasComoTutorInput>, UserUncheckedUpdateWithoutReservasComoTutorInput>
  }

  export type ReservaEquipoUpdateOneWithoutReservaNestedInput = {
    create?: XOR<ReservaEquipoCreateWithoutReservaInput, ReservaEquipoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaEquipoCreateOrConnectWithoutReservaInput
    upsert?: ReservaEquipoUpsertWithoutReservaInput
    disconnect?: ReservaEquipoWhereInput | boolean
    delete?: ReservaEquipoWhereInput | boolean
    connect?: ReservaEquipoWhereUniqueInput
    update?: XOR<XOR<ReservaEquipoUpdateToOneWithWhereWithoutReservaInput, ReservaEquipoUpdateWithoutReservaInput>, ReservaEquipoUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaLibroUpdateOneWithoutReservaNestedInput = {
    create?: XOR<ReservaLibroCreateWithoutReservaInput, ReservaLibroUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLibroCreateOrConnectWithoutReservaInput
    upsert?: ReservaLibroUpsertWithoutReservaInput
    disconnect?: ReservaLibroWhereInput | boolean
    delete?: ReservaLibroWhereInput | boolean
    connect?: ReservaLibroWhereUniqueInput
    update?: XOR<XOR<ReservaLibroUpdateToOneWithWhereWithoutReservaInput, ReservaLibroUpdateWithoutReservaInput>, ReservaLibroUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaLaboratorioCerradoUpdateOneWithoutReservaNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutReservaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutReservaInput
    upsert?: ReservaLaboratorioCerradoUpsertWithoutReservaInput
    disconnect?: ReservaLaboratorioCerradoWhereInput | boolean
    delete?: ReservaLaboratorioCerradoWhereInput | boolean
    connect?: ReservaLaboratorioCerradoWhereUniqueInput
    update?: XOR<XOR<ReservaLaboratorioCerradoUpdateToOneWithWhereWithoutReservaInput, ReservaLaboratorioCerradoUpdateWithoutReservaInput>, ReservaLaboratorioCerradoUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaLaboratorioAbiertoUpdateOneWithoutReservaNestedInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutReservaInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutReservaInput
    upsert?: ReservaLaboratorioAbiertoUpsertWithoutReservaInput
    disconnect?: ReservaLaboratorioAbiertoWhereInput | boolean
    delete?: ReservaLaboratorioAbiertoWhereInput | boolean
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput
    update?: XOR<XOR<ReservaLaboratorioAbiertoUpdateToOneWithWhereWithoutReservaInput, ReservaLaboratorioAbiertoUpdateWithoutReservaInput>, ReservaLaboratorioAbiertoUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaEquipoUncheckedUpdateOneWithoutReservaNestedInput = {
    create?: XOR<ReservaEquipoCreateWithoutReservaInput, ReservaEquipoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaEquipoCreateOrConnectWithoutReservaInput
    upsert?: ReservaEquipoUpsertWithoutReservaInput
    disconnect?: ReservaEquipoWhereInput | boolean
    delete?: ReservaEquipoWhereInput | boolean
    connect?: ReservaEquipoWhereUniqueInput
    update?: XOR<XOR<ReservaEquipoUpdateToOneWithWhereWithoutReservaInput, ReservaEquipoUpdateWithoutReservaInput>, ReservaEquipoUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaLibroUncheckedUpdateOneWithoutReservaNestedInput = {
    create?: XOR<ReservaLibroCreateWithoutReservaInput, ReservaLibroUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLibroCreateOrConnectWithoutReservaInput
    upsert?: ReservaLibroUpsertWithoutReservaInput
    disconnect?: ReservaLibroWhereInput | boolean
    delete?: ReservaLibroWhereInput | boolean
    connect?: ReservaLibroWhereUniqueInput
    update?: XOR<XOR<ReservaLibroUpdateToOneWithWhereWithoutReservaInput, ReservaLibroUpdateWithoutReservaInput>, ReservaLibroUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateOneWithoutReservaNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutReservaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutReservaInput
    upsert?: ReservaLaboratorioCerradoUpsertWithoutReservaInput
    disconnect?: ReservaLaboratorioCerradoWhereInput | boolean
    delete?: ReservaLaboratorioCerradoWhereInput | boolean
    connect?: ReservaLaboratorioCerradoWhereUniqueInput
    update?: XOR<XOR<ReservaLaboratorioCerradoUpdateToOneWithWhereWithoutReservaInput, ReservaLaboratorioCerradoUpdateWithoutReservaInput>, ReservaLaboratorioCerradoUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaLaboratorioAbiertoUncheckedUpdateOneWithoutReservaNestedInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutReservaInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutReservaInput>
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutReservaInput
    upsert?: ReservaLaboratorioAbiertoUpsertWithoutReservaInput
    disconnect?: ReservaLaboratorioAbiertoWhereInput | boolean
    delete?: ReservaLaboratorioAbiertoWhereInput | boolean
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput
    update?: XOR<XOR<ReservaLaboratorioAbiertoUpdateToOneWithWhereWithoutReservaInput, ReservaLaboratorioAbiertoUpdateWithoutReservaInput>, ReservaLaboratorioAbiertoUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaCreateNestedOneWithoutReservaEquipoInput = {
    create?: XOR<ReservaCreateWithoutReservaEquipoInput, ReservaUncheckedCreateWithoutReservaEquipoInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutReservaEquipoInput
    connect?: ReservaWhereUniqueInput
  }

  export type EquipoCreateNestedOneWithoutReservasInput = {
    create?: XOR<EquipoCreateWithoutReservasInput, EquipoUncheckedCreateWithoutReservasInput>
    connectOrCreate?: EquipoCreateOrConnectWithoutReservasInput
    connect?: EquipoWhereUniqueInput
  }

  export type ReservaUpdateOneRequiredWithoutReservaEquipoNestedInput = {
    create?: XOR<ReservaCreateWithoutReservaEquipoInput, ReservaUncheckedCreateWithoutReservaEquipoInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutReservaEquipoInput
    upsert?: ReservaUpsertWithoutReservaEquipoInput
    connect?: ReservaWhereUniqueInput
    update?: XOR<XOR<ReservaUpdateToOneWithWhereWithoutReservaEquipoInput, ReservaUpdateWithoutReservaEquipoInput>, ReservaUncheckedUpdateWithoutReservaEquipoInput>
  }

  export type EquipoUpdateOneRequiredWithoutReservasNestedInput = {
    create?: XOR<EquipoCreateWithoutReservasInput, EquipoUncheckedCreateWithoutReservasInput>
    connectOrCreate?: EquipoCreateOrConnectWithoutReservasInput
    upsert?: EquipoUpsertWithoutReservasInput
    connect?: EquipoWhereUniqueInput
    update?: XOR<XOR<EquipoUpdateToOneWithWhereWithoutReservasInput, EquipoUpdateWithoutReservasInput>, EquipoUncheckedUpdateWithoutReservasInput>
  }

  export type ReservaCreateNestedOneWithoutReservaLibroInput = {
    create?: XOR<ReservaCreateWithoutReservaLibroInput, ReservaUncheckedCreateWithoutReservaLibroInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutReservaLibroInput
    connect?: ReservaWhereUniqueInput
  }

  export type LibroCreateNestedOneWithoutReservasInput = {
    create?: XOR<LibroCreateWithoutReservasInput, LibroUncheckedCreateWithoutReservasInput>
    connectOrCreate?: LibroCreateOrConnectWithoutReservasInput
    connect?: LibroWhereUniqueInput
  }

  export type ReservaUpdateOneRequiredWithoutReservaLibroNestedInput = {
    create?: XOR<ReservaCreateWithoutReservaLibroInput, ReservaUncheckedCreateWithoutReservaLibroInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutReservaLibroInput
    upsert?: ReservaUpsertWithoutReservaLibroInput
    connect?: ReservaWhereUniqueInput
    update?: XOR<XOR<ReservaUpdateToOneWithWhereWithoutReservaLibroInput, ReservaUpdateWithoutReservaLibroInput>, ReservaUncheckedUpdateWithoutReservaLibroInput>
  }

  export type LibroUpdateOneRequiredWithoutReservasNestedInput = {
    create?: XOR<LibroCreateWithoutReservasInput, LibroUncheckedCreateWithoutReservasInput>
    connectOrCreate?: LibroCreateOrConnectWithoutReservasInput
    upsert?: LibroUpsertWithoutReservasInput
    connect?: LibroWhereUniqueInput
    update?: XOR<XOR<LibroUpdateToOneWithWhereWithoutReservasInput, LibroUpdateWithoutReservasInput>, LibroUncheckedUpdateWithoutReservasInput>
  }

  export type ReservaCreateNestedOneWithoutReservaLaboratorioCerradoInput = {
    create?: XOR<ReservaCreateWithoutReservaLaboratorioCerradoInput, ReservaUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutReservaLaboratorioCerradoInput
    connect?: ReservaWhereUniqueInput
  }

  export type SedeCreateNestedOneWithoutReservaLaboratorioCerradoInput = {
    create?: XOR<SedeCreateWithoutReservaLaboratorioCerradoInput, SedeUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: SedeCreateOrConnectWithoutReservaLaboratorioCerradoInput
    connect?: SedeWhereUniqueInput
  }

  export type LaboratorioCreateNestedOneWithoutReservaLaboratorioCerradoInput = {
    create?: XOR<LaboratorioCreateWithoutReservaLaboratorioCerradoInput, LaboratorioUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutReservaLaboratorioCerradoInput
    connect?: LaboratorioWhereUniqueInput
  }

  export type CursoCreateNestedOneWithoutReservaLaboratorioCerradoInput = {
    create?: XOR<CursoCreateWithoutReservaLaboratorioCerradoInput, CursoUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: CursoCreateOrConnectWithoutReservaLaboratorioCerradoInput
    connect?: CursoWhereUniqueInput
  }

  export type MateriaCreateNestedOneWithoutReservaLaboratorioCerradoInput = {
    create?: XOR<MateriaCreateWithoutReservaLaboratorioCerradoInput, MateriaUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutReservaLaboratorioCerradoInput
    connect?: MateriaWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReservaLaboratorioCerradoInput = {
    create?: XOR<UserCreateWithoutReservaLaboratorioCerradoInput, UserUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservaLaboratorioCerradoInput
    connect?: UserWhereUniqueInput
  }

  export type ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutReservaLaboratorioCerradoInput = {
    create?: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutReservaLaboratorioCerradoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutReservaLaboratorioCerradoInput> | ReservaLaboratorioCerradoEquipoCreateWithoutReservaLaboratorioCerradoInput[] | ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutReservaLaboratorioCerradoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutReservaLaboratorioCerradoInput | ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutReservaLaboratorioCerradoInput[]
    createMany?: ReservaLaboratorioCerradoEquipoCreateManyReservaLaboratorioCerradoInputEnvelope
    connect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioCerradoInput = {
    create?: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutReservaLaboratorioCerradoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutReservaLaboratorioCerradoInput> | ReservaLaboratorioCerradoEquipoCreateWithoutReservaLaboratorioCerradoInput[] | ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutReservaLaboratorioCerradoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutReservaLaboratorioCerradoInput | ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutReservaLaboratorioCerradoInput[]
    createMany?: ReservaLaboratorioCerradoEquipoCreateManyReservaLaboratorioCerradoInputEnvelope
    connect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
  }

  export type ReservaUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput = {
    create?: XOR<ReservaCreateWithoutReservaLaboratorioCerradoInput, ReservaUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutReservaLaboratorioCerradoInput
    upsert?: ReservaUpsertWithoutReservaLaboratorioCerradoInput
    connect?: ReservaWhereUniqueInput
    update?: XOR<XOR<ReservaUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput, ReservaUpdateWithoutReservaLaboratorioCerradoInput>, ReservaUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type SedeUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput = {
    create?: XOR<SedeCreateWithoutReservaLaboratorioCerradoInput, SedeUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: SedeCreateOrConnectWithoutReservaLaboratorioCerradoInput
    upsert?: SedeUpsertWithoutReservaLaboratorioCerradoInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput, SedeUpdateWithoutReservaLaboratorioCerradoInput>, SedeUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type LaboratorioUpdateOneWithoutReservaLaboratorioCerradoNestedInput = {
    create?: XOR<LaboratorioCreateWithoutReservaLaboratorioCerradoInput, LaboratorioUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutReservaLaboratorioCerradoInput
    upsert?: LaboratorioUpsertWithoutReservaLaboratorioCerradoInput
    disconnect?: LaboratorioWhereInput | boolean
    delete?: LaboratorioWhereInput | boolean
    connect?: LaboratorioWhereUniqueInput
    update?: XOR<XOR<LaboratorioUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput, LaboratorioUpdateWithoutReservaLaboratorioCerradoInput>, LaboratorioUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type CursoUpdateOneWithoutReservaLaboratorioCerradoNestedInput = {
    create?: XOR<CursoCreateWithoutReservaLaboratorioCerradoInput, CursoUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: CursoCreateOrConnectWithoutReservaLaboratorioCerradoInput
    upsert?: CursoUpsertWithoutReservaLaboratorioCerradoInput
    disconnect?: CursoWhereInput | boolean
    delete?: CursoWhereInput | boolean
    connect?: CursoWhereUniqueInput
    update?: XOR<XOR<CursoUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput, CursoUpdateWithoutReservaLaboratorioCerradoInput>, CursoUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type MateriaUpdateOneWithoutReservaLaboratorioCerradoNestedInput = {
    create?: XOR<MateriaCreateWithoutReservaLaboratorioCerradoInput, MateriaUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: MateriaCreateOrConnectWithoutReservaLaboratorioCerradoInput
    upsert?: MateriaUpsertWithoutReservaLaboratorioCerradoInput
    disconnect?: MateriaWhereInput | boolean
    delete?: MateriaWhereInput | boolean
    connect?: MateriaWhereUniqueInput
    update?: XOR<XOR<MateriaUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput, MateriaUpdateWithoutReservaLaboratorioCerradoInput>, MateriaUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type UserUpdateOneWithoutReservaLaboratorioCerradoNestedInput = {
    create?: XOR<UserCreateWithoutReservaLaboratorioCerradoInput, UserUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservaLaboratorioCerradoInput
    upsert?: UserUpsertWithoutReservaLaboratorioCerradoInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput, UserUpdateWithoutReservaLaboratorioCerradoInput>, UserUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type ReservaLaboratorioCerradoEquipoUpdateManyWithoutReservaLaboratorioCerradoNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutReservaLaboratorioCerradoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutReservaLaboratorioCerradoInput> | ReservaLaboratorioCerradoEquipoCreateWithoutReservaLaboratorioCerradoInput[] | ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutReservaLaboratorioCerradoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutReservaLaboratorioCerradoInput | ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutReservaLaboratorioCerradoInput[]
    upsert?: ReservaLaboratorioCerradoEquipoUpsertWithWhereUniqueWithoutReservaLaboratorioCerradoInput | ReservaLaboratorioCerradoEquipoUpsertWithWhereUniqueWithoutReservaLaboratorioCerradoInput[]
    createMany?: ReservaLaboratorioCerradoEquipoCreateManyReservaLaboratorioCerradoInputEnvelope
    set?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoEquipoUpdateWithWhereUniqueWithoutReservaLaboratorioCerradoInput | ReservaLaboratorioCerradoEquipoUpdateWithWhereUniqueWithoutReservaLaboratorioCerradoInput[]
    updateMany?: ReservaLaboratorioCerradoEquipoUpdateManyWithWhereWithoutReservaLaboratorioCerradoInput | ReservaLaboratorioCerradoEquipoUpdateManyWithWhereWithoutReservaLaboratorioCerradoInput[]
    deleteMany?: ReservaLaboratorioCerradoEquipoScalarWhereInput | ReservaLaboratorioCerradoEquipoScalarWhereInput[]
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutReservaLaboratorioCerradoNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutReservaLaboratorioCerradoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutReservaLaboratorioCerradoInput> | ReservaLaboratorioCerradoEquipoCreateWithoutReservaLaboratorioCerradoInput[] | ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutReservaLaboratorioCerradoInput[]
    connectOrCreate?: ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutReservaLaboratorioCerradoInput | ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutReservaLaboratorioCerradoInput[]
    upsert?: ReservaLaboratorioCerradoEquipoUpsertWithWhereUniqueWithoutReservaLaboratorioCerradoInput | ReservaLaboratorioCerradoEquipoUpsertWithWhereUniqueWithoutReservaLaboratorioCerradoInput[]
    createMany?: ReservaLaboratorioCerradoEquipoCreateManyReservaLaboratorioCerradoInputEnvelope
    set?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoEquipoWhereUniqueInput | ReservaLaboratorioCerradoEquipoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoEquipoUpdateWithWhereUniqueWithoutReservaLaboratorioCerradoInput | ReservaLaboratorioCerradoEquipoUpdateWithWhereUniqueWithoutReservaLaboratorioCerradoInput[]
    updateMany?: ReservaLaboratorioCerradoEquipoUpdateManyWithWhereWithoutReservaLaboratorioCerradoInput | ReservaLaboratorioCerradoEquipoUpdateManyWithWhereWithoutReservaLaboratorioCerradoInput[]
    deleteMany?: ReservaLaboratorioCerradoEquipoScalarWhereInput | ReservaLaboratorioCerradoEquipoScalarWhereInput[]
  }

  export type ReservaLaboratorioCerradoCreateNestedOneWithoutEquipoReservadoInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutEquipoReservadoInput, ReservaLaboratorioCerradoUncheckedCreateWithoutEquipoReservadoInput>
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutEquipoReservadoInput
    connect?: ReservaLaboratorioCerradoWhereUniqueInput
  }

  export type EquipoTipoCreateNestedOneWithoutReservaLaboratorioCerradoEquipoInput = {
    create?: XOR<EquipoTipoCreateWithoutReservaLaboratorioCerradoEquipoInput, EquipoTipoUncheckedCreateWithoutReservaLaboratorioCerradoEquipoInput>
    connectOrCreate?: EquipoTipoCreateOrConnectWithoutReservaLaboratorioCerradoEquipoInput
    connect?: EquipoTipoWhereUniqueInput
  }

  export type ReservaLaboratorioCerradoUpdateOneRequiredWithoutEquipoReservadoNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutEquipoReservadoInput, ReservaLaboratorioCerradoUncheckedCreateWithoutEquipoReservadoInput>
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutEquipoReservadoInput
    upsert?: ReservaLaboratorioCerradoUpsertWithoutEquipoReservadoInput
    connect?: ReservaLaboratorioCerradoWhereUniqueInput
    update?: XOR<XOR<ReservaLaboratorioCerradoUpdateToOneWithWhereWithoutEquipoReservadoInput, ReservaLaboratorioCerradoUpdateWithoutEquipoReservadoInput>, ReservaLaboratorioCerradoUncheckedUpdateWithoutEquipoReservadoInput>
  }

  export type EquipoTipoUpdateOneRequiredWithoutReservaLaboratorioCerradoEquipoNestedInput = {
    create?: XOR<EquipoTipoCreateWithoutReservaLaboratorioCerradoEquipoInput, EquipoTipoUncheckedCreateWithoutReservaLaboratorioCerradoEquipoInput>
    connectOrCreate?: EquipoTipoCreateOrConnectWithoutReservaLaboratorioCerradoEquipoInput
    upsert?: EquipoTipoUpsertWithoutReservaLaboratorioCerradoEquipoInput
    connect?: EquipoTipoWhereUniqueInput
    update?: XOR<XOR<EquipoTipoUpdateToOneWithWhereWithoutReservaLaboratorioCerradoEquipoInput, EquipoTipoUpdateWithoutReservaLaboratorioCerradoEquipoInput>, EquipoTipoUncheckedUpdateWithoutReservaLaboratorioCerradoEquipoInput>
  }

  export type ReservaCreateNestedOneWithoutReservaLaboratorioAbiertoInput = {
    create?: XOR<ReservaCreateWithoutReservaLaboratorioAbiertoInput, ReservaUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutReservaLaboratorioAbiertoInput
    connect?: ReservaWhereUniqueInput
  }

  export type SedeCreateNestedOneWithoutReservaLaboratorioAbiertoInput = {
    create?: XOR<SedeCreateWithoutReservaLaboratorioAbiertoInput, SedeUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
    connectOrCreate?: SedeCreateOrConnectWithoutReservaLaboratorioAbiertoInput
    connect?: SedeWhereUniqueInput
  }

  export type LaboratorioCreateNestedOneWithoutReservaLaboratorioAbiertoInput = {
    create?: XOR<LaboratorioCreateWithoutReservaLaboratorioAbiertoInput, LaboratorioUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutReservaLaboratorioAbiertoInput
    connect?: LaboratorioWhereUniqueInput
  }

  export type ReservaLaboratorioAbiertoEquipoCreateNestedManyWithoutReservaLaboratorioAbiertoInput = {
    create?: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutReservaLaboratorioAbiertoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutReservaLaboratorioAbiertoInput> | ReservaLaboratorioAbiertoEquipoCreateWithoutReservaLaboratorioAbiertoInput[] | ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutReservaLaboratorioAbiertoInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutReservaLaboratorioAbiertoInput | ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutReservaLaboratorioAbiertoInput[]
    createMany?: ReservaLaboratorioAbiertoEquipoCreateManyReservaLaboratorioAbiertoInputEnvelope
    connect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioAbiertoInput = {
    create?: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutReservaLaboratorioAbiertoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutReservaLaboratorioAbiertoInput> | ReservaLaboratorioAbiertoEquipoCreateWithoutReservaLaboratorioAbiertoInput[] | ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutReservaLaboratorioAbiertoInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutReservaLaboratorioAbiertoInput | ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutReservaLaboratorioAbiertoInput[]
    createMany?: ReservaLaboratorioAbiertoEquipoCreateManyReservaLaboratorioAbiertoInputEnvelope
    connect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
  }

  export type EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput = {
    set?: $Enums.LaboratorioAbiertoTipo
  }

  export type ReservaUpdateOneRequiredWithoutReservaLaboratorioAbiertoNestedInput = {
    create?: XOR<ReservaCreateWithoutReservaLaboratorioAbiertoInput, ReservaUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutReservaLaboratorioAbiertoInput
    upsert?: ReservaUpsertWithoutReservaLaboratorioAbiertoInput
    connect?: ReservaWhereUniqueInput
    update?: XOR<XOR<ReservaUpdateToOneWithWhereWithoutReservaLaboratorioAbiertoInput, ReservaUpdateWithoutReservaLaboratorioAbiertoInput>, ReservaUncheckedUpdateWithoutReservaLaboratorioAbiertoInput>
  }

  export type SedeUpdateOneRequiredWithoutReservaLaboratorioAbiertoNestedInput = {
    create?: XOR<SedeCreateWithoutReservaLaboratorioAbiertoInput, SedeUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
    connectOrCreate?: SedeCreateOrConnectWithoutReservaLaboratorioAbiertoInput
    upsert?: SedeUpsertWithoutReservaLaboratorioAbiertoInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutReservaLaboratorioAbiertoInput, SedeUpdateWithoutReservaLaboratorioAbiertoInput>, SedeUncheckedUpdateWithoutReservaLaboratorioAbiertoInput>
  }

  export type LaboratorioUpdateOneWithoutReservaLaboratorioAbiertoNestedInput = {
    create?: XOR<LaboratorioCreateWithoutReservaLaboratorioAbiertoInput, LaboratorioUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
    connectOrCreate?: LaboratorioCreateOrConnectWithoutReservaLaboratorioAbiertoInput
    upsert?: LaboratorioUpsertWithoutReservaLaboratorioAbiertoInput
    disconnect?: LaboratorioWhereInput | boolean
    delete?: LaboratorioWhereInput | boolean
    connect?: LaboratorioWhereUniqueInput
    update?: XOR<XOR<LaboratorioUpdateToOneWithWhereWithoutReservaLaboratorioAbiertoInput, LaboratorioUpdateWithoutReservaLaboratorioAbiertoInput>, LaboratorioUncheckedUpdateWithoutReservaLaboratorioAbiertoInput>
  }

  export type ReservaLaboratorioAbiertoEquipoUpdateManyWithoutReservaLaboratorioAbiertoNestedInput = {
    create?: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutReservaLaboratorioAbiertoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutReservaLaboratorioAbiertoInput> | ReservaLaboratorioAbiertoEquipoCreateWithoutReservaLaboratorioAbiertoInput[] | ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutReservaLaboratorioAbiertoInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutReservaLaboratorioAbiertoInput | ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutReservaLaboratorioAbiertoInput[]
    upsert?: ReservaLaboratorioAbiertoEquipoUpsertWithWhereUniqueWithoutReservaLaboratorioAbiertoInput | ReservaLaboratorioAbiertoEquipoUpsertWithWhereUniqueWithoutReservaLaboratorioAbiertoInput[]
    createMany?: ReservaLaboratorioAbiertoEquipoCreateManyReservaLaboratorioAbiertoInputEnvelope
    set?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    delete?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    connect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    update?: ReservaLaboratorioAbiertoEquipoUpdateWithWhereUniqueWithoutReservaLaboratorioAbiertoInput | ReservaLaboratorioAbiertoEquipoUpdateWithWhereUniqueWithoutReservaLaboratorioAbiertoInput[]
    updateMany?: ReservaLaboratorioAbiertoEquipoUpdateManyWithWhereWithoutReservaLaboratorioAbiertoInput | ReservaLaboratorioAbiertoEquipoUpdateManyWithWhereWithoutReservaLaboratorioAbiertoInput[]
    deleteMany?: ReservaLaboratorioAbiertoEquipoScalarWhereInput | ReservaLaboratorioAbiertoEquipoScalarWhereInput[]
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutReservaLaboratorioAbiertoNestedInput = {
    create?: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutReservaLaboratorioAbiertoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutReservaLaboratorioAbiertoInput> | ReservaLaboratorioAbiertoEquipoCreateWithoutReservaLaboratorioAbiertoInput[] | ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutReservaLaboratorioAbiertoInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutReservaLaboratorioAbiertoInput | ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutReservaLaboratorioAbiertoInput[]
    upsert?: ReservaLaboratorioAbiertoEquipoUpsertWithWhereUniqueWithoutReservaLaboratorioAbiertoInput | ReservaLaboratorioAbiertoEquipoUpsertWithWhereUniqueWithoutReservaLaboratorioAbiertoInput[]
    createMany?: ReservaLaboratorioAbiertoEquipoCreateManyReservaLaboratorioAbiertoInputEnvelope
    set?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    delete?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    connect?: ReservaLaboratorioAbiertoEquipoWhereUniqueInput | ReservaLaboratorioAbiertoEquipoWhereUniqueInput[]
    update?: ReservaLaboratorioAbiertoEquipoUpdateWithWhereUniqueWithoutReservaLaboratorioAbiertoInput | ReservaLaboratorioAbiertoEquipoUpdateWithWhereUniqueWithoutReservaLaboratorioAbiertoInput[]
    updateMany?: ReservaLaboratorioAbiertoEquipoUpdateManyWithWhereWithoutReservaLaboratorioAbiertoInput | ReservaLaboratorioAbiertoEquipoUpdateManyWithWhereWithoutReservaLaboratorioAbiertoInput[]
    deleteMany?: ReservaLaboratorioAbiertoEquipoScalarWhereInput | ReservaLaboratorioAbiertoEquipoScalarWhereInput[]
  }

  export type ReservaLaboratorioAbiertoCreateNestedOneWithoutEquipoReservadoInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutEquipoReservadoInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutEquipoReservadoInput>
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutEquipoReservadoInput
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput
  }

  export type EquipoTipoCreateNestedOneWithoutReservaLaboratorioAbiertoEquipoInput = {
    create?: XOR<EquipoTipoCreateWithoutReservaLaboratorioAbiertoEquipoInput, EquipoTipoUncheckedCreateWithoutReservaLaboratorioAbiertoEquipoInput>
    connectOrCreate?: EquipoTipoCreateOrConnectWithoutReservaLaboratorioAbiertoEquipoInput
    connect?: EquipoTipoWhereUniqueInput
  }

  export type ReservaLaboratorioAbiertoUpdateOneRequiredWithoutEquipoReservadoNestedInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutEquipoReservadoInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutEquipoReservadoInput>
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutEquipoReservadoInput
    upsert?: ReservaLaboratorioAbiertoUpsertWithoutEquipoReservadoInput
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput
    update?: XOR<XOR<ReservaLaboratorioAbiertoUpdateToOneWithWhereWithoutEquipoReservadoInput, ReservaLaboratorioAbiertoUpdateWithoutEquipoReservadoInput>, ReservaLaboratorioAbiertoUncheckedUpdateWithoutEquipoReservadoInput>
  }

  export type EquipoTipoUpdateOneRequiredWithoutReservaLaboratorioAbiertoEquipoNestedInput = {
    create?: XOR<EquipoTipoCreateWithoutReservaLaboratorioAbiertoEquipoInput, EquipoTipoUncheckedCreateWithoutReservaLaboratorioAbiertoEquipoInput>
    connectOrCreate?: EquipoTipoCreateOrConnectWithoutReservaLaboratorioAbiertoEquipoInput
    upsert?: EquipoTipoUpsertWithoutReservaLaboratorioAbiertoEquipoInput
    connect?: EquipoTipoWhereUniqueInput
    update?: XOR<XOR<EquipoTipoUpdateToOneWithWhereWithoutReservaLaboratorioAbiertoEquipoInput, EquipoTipoUpdateWithoutReservaLaboratorioAbiertoEquipoInput>, EquipoTipoUncheckedUpdateWithoutReservaLaboratorioAbiertoEquipoInput>
  }

  export type SedeCreateNestedOneWithoutPantallaInput = {
    create?: XOR<SedeCreateWithoutPantallaInput, SedeUncheckedCreateWithoutPantallaInput>
    connectOrCreate?: SedeCreateOrConnectWithoutPantallaInput
    connect?: SedeWhereUniqueInput
  }

  export type SedeUpdateOneRequiredWithoutPantallaNestedInput = {
    create?: XOR<SedeCreateWithoutPantallaInput, SedeUncheckedCreateWithoutPantallaInput>
    connectOrCreate?: SedeCreateOrConnectWithoutPantallaInput
    upsert?: SedeUpsertWithoutPantallaInput
    connect?: SedeWhereUniqueInput
    update?: XOR<XOR<SedeUpdateToOneWithWhereWithoutPantallaInput, SedeUpdateWithoutPantallaInput>, SedeUncheckedUpdateWithoutPantallaInput>
  }

  export type UserCreateNestedOneWithoutAccountsInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutAccountsNestedInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    upsert?: UserUpsertWithoutAccountsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountsInput, UserUpdateWithoutAccountsInput>, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type CursoCreateNestedManyWithoutSedeInput = {
    create?: XOR<CursoCreateWithoutSedeInput, CursoUncheckedCreateWithoutSedeInput> | CursoCreateWithoutSedeInput[] | CursoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutSedeInput | CursoCreateOrConnectWithoutSedeInput[]
    createMany?: CursoCreateManySedeInputEnvelope
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
  }

  export type EquipoCreateNestedManyWithoutSedeInput = {
    create?: XOR<EquipoCreateWithoutSedeInput, EquipoUncheckedCreateWithoutSedeInput> | EquipoCreateWithoutSedeInput[] | EquipoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutSedeInput | EquipoCreateOrConnectWithoutSedeInput[]
    createMany?: EquipoCreateManySedeInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type LaboratorioCreateNestedManyWithoutSedeInput = {
    create?: XOR<LaboratorioCreateWithoutSedeInput, LaboratorioUncheckedCreateWithoutSedeInput> | LaboratorioCreateWithoutSedeInput[] | LaboratorioUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: LaboratorioCreateOrConnectWithoutSedeInput | LaboratorioCreateOrConnectWithoutSedeInput[]
    createMany?: LaboratorioCreateManySedeInputEnvelope
    connect?: LaboratorioWhereUniqueInput | LaboratorioWhereUniqueInput[]
  }

  export type LibroCreateNestedManyWithoutSedeInput = {
    create?: XOR<LibroCreateWithoutSedeInput, LibroUncheckedCreateWithoutSedeInput> | LibroCreateWithoutSedeInput[] | LibroUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutSedeInput | LibroCreateOrConnectWithoutSedeInput[]
    createMany?: LibroCreateManySedeInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type ReservaLaboratorioAbiertoCreateNestedManyWithoutSedeInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutSedeInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutSedeInput> | ReservaLaboratorioAbiertoCreateWithoutSedeInput[] | ReservaLaboratorioAbiertoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutSedeInput | ReservaLaboratorioAbiertoCreateOrConnectWithoutSedeInput[]
    createMany?: ReservaLaboratorioAbiertoCreateManySedeInputEnvelope
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
  }

  export type ReservaLaboratorioCerradoCreateNestedManyWithoutSedeInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutSedeInput, ReservaLaboratorioCerradoUncheckedCreateWithoutSedeInput> | ReservaLaboratorioCerradoCreateWithoutSedeInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutSedeInput | ReservaLaboratorioCerradoCreateOrConnectWithoutSedeInput[]
    createMany?: ReservaLaboratorioCerradoCreateManySedeInputEnvelope
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
  }

  export type PantallaCreateNestedManyWithoutSedeInput = {
    create?: XOR<PantallaCreateWithoutSedeInput, PantallaUncheckedCreateWithoutSedeInput> | PantallaCreateWithoutSedeInput[] | PantallaUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: PantallaCreateOrConnectWithoutSedeInput | PantallaCreateOrConnectWithoutSedeInput[]
    createMany?: PantallaCreateManySedeInputEnvelope
    connect?: PantallaWhereUniqueInput | PantallaWhereUniqueInput[]
  }

  export type CursoUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<CursoCreateWithoutSedeInput, CursoUncheckedCreateWithoutSedeInput> | CursoCreateWithoutSedeInput[] | CursoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutSedeInput | CursoCreateOrConnectWithoutSedeInput[]
    createMany?: CursoCreateManySedeInputEnvelope
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
  }

  export type EquipoUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<EquipoCreateWithoutSedeInput, EquipoUncheckedCreateWithoutSedeInput> | EquipoCreateWithoutSedeInput[] | EquipoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutSedeInput | EquipoCreateOrConnectWithoutSedeInput[]
    createMany?: EquipoCreateManySedeInputEnvelope
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
  }

  export type LaboratorioUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<LaboratorioCreateWithoutSedeInput, LaboratorioUncheckedCreateWithoutSedeInput> | LaboratorioCreateWithoutSedeInput[] | LaboratorioUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: LaboratorioCreateOrConnectWithoutSedeInput | LaboratorioCreateOrConnectWithoutSedeInput[]
    createMany?: LaboratorioCreateManySedeInputEnvelope
    connect?: LaboratorioWhereUniqueInput | LaboratorioWhereUniqueInput[]
  }

  export type LibroUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<LibroCreateWithoutSedeInput, LibroUncheckedCreateWithoutSedeInput> | LibroCreateWithoutSedeInput[] | LibroUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutSedeInput | LibroCreateOrConnectWithoutSedeInput[]
    createMany?: LibroCreateManySedeInputEnvelope
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
  }

  export type ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutSedeInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutSedeInput> | ReservaLaboratorioAbiertoCreateWithoutSedeInput[] | ReservaLaboratorioAbiertoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutSedeInput | ReservaLaboratorioAbiertoCreateOrConnectWithoutSedeInput[]
    createMany?: ReservaLaboratorioAbiertoCreateManySedeInputEnvelope
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
  }

  export type ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutSedeInput, ReservaLaboratorioCerradoUncheckedCreateWithoutSedeInput> | ReservaLaboratorioCerradoCreateWithoutSedeInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutSedeInput | ReservaLaboratorioCerradoCreateOrConnectWithoutSedeInput[]
    createMany?: ReservaLaboratorioCerradoCreateManySedeInputEnvelope
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
  }

  export type PantallaUncheckedCreateNestedManyWithoutSedeInput = {
    create?: XOR<PantallaCreateWithoutSedeInput, PantallaUncheckedCreateWithoutSedeInput> | PantallaCreateWithoutSedeInput[] | PantallaUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: PantallaCreateOrConnectWithoutSedeInput | PantallaCreateOrConnectWithoutSedeInput[]
    createMany?: PantallaCreateManySedeInputEnvelope
    connect?: PantallaWhereUniqueInput | PantallaWhereUniqueInput[]
  }

  export type CursoUpdateManyWithoutSedeNestedInput = {
    create?: XOR<CursoCreateWithoutSedeInput, CursoUncheckedCreateWithoutSedeInput> | CursoCreateWithoutSedeInput[] | CursoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutSedeInput | CursoCreateOrConnectWithoutSedeInput[]
    upsert?: CursoUpsertWithWhereUniqueWithoutSedeInput | CursoUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: CursoCreateManySedeInputEnvelope
    set?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    disconnect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    delete?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    update?: CursoUpdateWithWhereUniqueWithoutSedeInput | CursoUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: CursoUpdateManyWithWhereWithoutSedeInput | CursoUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: CursoScalarWhereInput | CursoScalarWhereInput[]
  }

  export type EquipoUpdateManyWithoutSedeNestedInput = {
    create?: XOR<EquipoCreateWithoutSedeInput, EquipoUncheckedCreateWithoutSedeInput> | EquipoCreateWithoutSedeInput[] | EquipoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutSedeInput | EquipoCreateOrConnectWithoutSedeInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutSedeInput | EquipoUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: EquipoCreateManySedeInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutSedeInput | EquipoUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutSedeInput | EquipoUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type LaboratorioUpdateManyWithoutSedeNestedInput = {
    create?: XOR<LaboratorioCreateWithoutSedeInput, LaboratorioUncheckedCreateWithoutSedeInput> | LaboratorioCreateWithoutSedeInput[] | LaboratorioUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: LaboratorioCreateOrConnectWithoutSedeInput | LaboratorioCreateOrConnectWithoutSedeInput[]
    upsert?: LaboratorioUpsertWithWhereUniqueWithoutSedeInput | LaboratorioUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: LaboratorioCreateManySedeInputEnvelope
    set?: LaboratorioWhereUniqueInput | LaboratorioWhereUniqueInput[]
    disconnect?: LaboratorioWhereUniqueInput | LaboratorioWhereUniqueInput[]
    delete?: LaboratorioWhereUniqueInput | LaboratorioWhereUniqueInput[]
    connect?: LaboratorioWhereUniqueInput | LaboratorioWhereUniqueInput[]
    update?: LaboratorioUpdateWithWhereUniqueWithoutSedeInput | LaboratorioUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: LaboratorioUpdateManyWithWhereWithoutSedeInput | LaboratorioUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: LaboratorioScalarWhereInput | LaboratorioScalarWhereInput[]
  }

  export type LibroUpdateManyWithoutSedeNestedInput = {
    create?: XOR<LibroCreateWithoutSedeInput, LibroUncheckedCreateWithoutSedeInput> | LibroCreateWithoutSedeInput[] | LibroUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutSedeInput | LibroCreateOrConnectWithoutSedeInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutSedeInput | LibroUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: LibroCreateManySedeInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutSedeInput | LibroUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutSedeInput | LibroUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type ReservaLaboratorioAbiertoUpdateManyWithoutSedeNestedInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutSedeInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutSedeInput> | ReservaLaboratorioAbiertoCreateWithoutSedeInput[] | ReservaLaboratorioAbiertoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutSedeInput | ReservaLaboratorioAbiertoCreateOrConnectWithoutSedeInput[]
    upsert?: ReservaLaboratorioAbiertoUpsertWithWhereUniqueWithoutSedeInput | ReservaLaboratorioAbiertoUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: ReservaLaboratorioAbiertoCreateManySedeInputEnvelope
    set?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    delete?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    update?: ReservaLaboratorioAbiertoUpdateWithWhereUniqueWithoutSedeInput | ReservaLaboratorioAbiertoUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: ReservaLaboratorioAbiertoUpdateManyWithWhereWithoutSedeInput | ReservaLaboratorioAbiertoUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: ReservaLaboratorioAbiertoScalarWhereInput | ReservaLaboratorioAbiertoScalarWhereInput[]
  }

  export type ReservaLaboratorioCerradoUpdateManyWithoutSedeNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutSedeInput, ReservaLaboratorioCerradoUncheckedCreateWithoutSedeInput> | ReservaLaboratorioCerradoCreateWithoutSedeInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutSedeInput | ReservaLaboratorioCerradoCreateOrConnectWithoutSedeInput[]
    upsert?: ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutSedeInput | ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: ReservaLaboratorioCerradoCreateManySedeInputEnvelope
    set?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutSedeInput | ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: ReservaLaboratorioCerradoUpdateManyWithWhereWithoutSedeInput | ReservaLaboratorioCerradoUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
  }

  export type PantallaUpdateManyWithoutSedeNestedInput = {
    create?: XOR<PantallaCreateWithoutSedeInput, PantallaUncheckedCreateWithoutSedeInput> | PantallaCreateWithoutSedeInput[] | PantallaUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: PantallaCreateOrConnectWithoutSedeInput | PantallaCreateOrConnectWithoutSedeInput[]
    upsert?: PantallaUpsertWithWhereUniqueWithoutSedeInput | PantallaUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: PantallaCreateManySedeInputEnvelope
    set?: PantallaWhereUniqueInput | PantallaWhereUniqueInput[]
    disconnect?: PantallaWhereUniqueInput | PantallaWhereUniqueInput[]
    delete?: PantallaWhereUniqueInput | PantallaWhereUniqueInput[]
    connect?: PantallaWhereUniqueInput | PantallaWhereUniqueInput[]
    update?: PantallaUpdateWithWhereUniqueWithoutSedeInput | PantallaUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: PantallaUpdateManyWithWhereWithoutSedeInput | PantallaUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: PantallaScalarWhereInput | PantallaScalarWhereInput[]
  }

  export type CursoUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<CursoCreateWithoutSedeInput, CursoUncheckedCreateWithoutSedeInput> | CursoCreateWithoutSedeInput[] | CursoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutSedeInput | CursoCreateOrConnectWithoutSedeInput[]
    upsert?: CursoUpsertWithWhereUniqueWithoutSedeInput | CursoUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: CursoCreateManySedeInputEnvelope
    set?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    disconnect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    delete?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    update?: CursoUpdateWithWhereUniqueWithoutSedeInput | CursoUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: CursoUpdateManyWithWhereWithoutSedeInput | CursoUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: CursoScalarWhereInput | CursoScalarWhereInput[]
  }

  export type EquipoUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<EquipoCreateWithoutSedeInput, EquipoUncheckedCreateWithoutSedeInput> | EquipoCreateWithoutSedeInput[] | EquipoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: EquipoCreateOrConnectWithoutSedeInput | EquipoCreateOrConnectWithoutSedeInput[]
    upsert?: EquipoUpsertWithWhereUniqueWithoutSedeInput | EquipoUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: EquipoCreateManySedeInputEnvelope
    set?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    disconnect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    delete?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    connect?: EquipoWhereUniqueInput | EquipoWhereUniqueInput[]
    update?: EquipoUpdateWithWhereUniqueWithoutSedeInput | EquipoUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: EquipoUpdateManyWithWhereWithoutSedeInput | EquipoUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
  }

  export type LaboratorioUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<LaboratorioCreateWithoutSedeInput, LaboratorioUncheckedCreateWithoutSedeInput> | LaboratorioCreateWithoutSedeInput[] | LaboratorioUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: LaboratorioCreateOrConnectWithoutSedeInput | LaboratorioCreateOrConnectWithoutSedeInput[]
    upsert?: LaboratorioUpsertWithWhereUniqueWithoutSedeInput | LaboratorioUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: LaboratorioCreateManySedeInputEnvelope
    set?: LaboratorioWhereUniqueInput | LaboratorioWhereUniqueInput[]
    disconnect?: LaboratorioWhereUniqueInput | LaboratorioWhereUniqueInput[]
    delete?: LaboratorioWhereUniqueInput | LaboratorioWhereUniqueInput[]
    connect?: LaboratorioWhereUniqueInput | LaboratorioWhereUniqueInput[]
    update?: LaboratorioUpdateWithWhereUniqueWithoutSedeInput | LaboratorioUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: LaboratorioUpdateManyWithWhereWithoutSedeInput | LaboratorioUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: LaboratorioScalarWhereInput | LaboratorioScalarWhereInput[]
  }

  export type LibroUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<LibroCreateWithoutSedeInput, LibroUncheckedCreateWithoutSedeInput> | LibroCreateWithoutSedeInput[] | LibroUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: LibroCreateOrConnectWithoutSedeInput | LibroCreateOrConnectWithoutSedeInput[]
    upsert?: LibroUpsertWithWhereUniqueWithoutSedeInput | LibroUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: LibroCreateManySedeInputEnvelope
    set?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    disconnect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    delete?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    connect?: LibroWhereUniqueInput | LibroWhereUniqueInput[]
    update?: LibroUpdateWithWhereUniqueWithoutSedeInput | LibroUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: LibroUpdateManyWithWhereWithoutSedeInput | LibroUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: LibroScalarWhereInput | LibroScalarWhereInput[]
  }

  export type ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<ReservaLaboratorioAbiertoCreateWithoutSedeInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutSedeInput> | ReservaLaboratorioAbiertoCreateWithoutSedeInput[] | ReservaLaboratorioAbiertoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ReservaLaboratorioAbiertoCreateOrConnectWithoutSedeInput | ReservaLaboratorioAbiertoCreateOrConnectWithoutSedeInput[]
    upsert?: ReservaLaboratorioAbiertoUpsertWithWhereUniqueWithoutSedeInput | ReservaLaboratorioAbiertoUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: ReservaLaboratorioAbiertoCreateManySedeInputEnvelope
    set?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    delete?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    connect?: ReservaLaboratorioAbiertoWhereUniqueInput | ReservaLaboratorioAbiertoWhereUniqueInput[]
    update?: ReservaLaboratorioAbiertoUpdateWithWhereUniqueWithoutSedeInput | ReservaLaboratorioAbiertoUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: ReservaLaboratorioAbiertoUpdateManyWithWhereWithoutSedeInput | ReservaLaboratorioAbiertoUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: ReservaLaboratorioAbiertoScalarWhereInput | ReservaLaboratorioAbiertoScalarWhereInput[]
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutSedeInput, ReservaLaboratorioCerradoUncheckedCreateWithoutSedeInput> | ReservaLaboratorioCerradoCreateWithoutSedeInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutSedeInput | ReservaLaboratorioCerradoCreateOrConnectWithoutSedeInput[]
    upsert?: ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutSedeInput | ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: ReservaLaboratorioCerradoCreateManySedeInputEnvelope
    set?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutSedeInput | ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: ReservaLaboratorioCerradoUpdateManyWithWhereWithoutSedeInput | ReservaLaboratorioCerradoUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
  }

  export type PantallaUncheckedUpdateManyWithoutSedeNestedInput = {
    create?: XOR<PantallaCreateWithoutSedeInput, PantallaUncheckedCreateWithoutSedeInput> | PantallaCreateWithoutSedeInput[] | PantallaUncheckedCreateWithoutSedeInput[]
    connectOrCreate?: PantallaCreateOrConnectWithoutSedeInput | PantallaCreateOrConnectWithoutSedeInput[]
    upsert?: PantallaUpsertWithWhereUniqueWithoutSedeInput | PantallaUpsertWithWhereUniqueWithoutSedeInput[]
    createMany?: PantallaCreateManySedeInputEnvelope
    set?: PantallaWhereUniqueInput | PantallaWhereUniqueInput[]
    disconnect?: PantallaWhereUniqueInput | PantallaWhereUniqueInput[]
    delete?: PantallaWhereUniqueInput | PantallaWhereUniqueInput[]
    connect?: PantallaWhereUniqueInput | PantallaWhereUniqueInput[]
    update?: PantallaUpdateWithWhereUniqueWithoutSedeInput | PantallaUpdateWithWhereUniqueWithoutSedeInput[]
    updateMany?: PantallaUpdateManyWithWhereWithoutSedeInput | PantallaUpdateManyWithWhereWithoutSedeInput[]
    deleteMany?: PantallaScalarWhereInput | PantallaScalarWhereInput[]
  }

  export type DocumentoTipoCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<DocumentoTipoCreateWithoutUsuariosInput, DocumentoTipoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: DocumentoTipoCreateOrConnectWithoutUsuariosInput
    connect?: DocumentoTipoWhereUniqueInput
  }

  export type ProvinciaCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<ProvinciaCreateWithoutUsuariosInput, ProvinciaUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: ProvinciaCreateOrConnectWithoutUsuariosInput
    connect?: ProvinciaWhereUniqueInput
  }

  export type PaisCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<PaisCreateWithoutUsuariosInput, PaisUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: PaisCreateOrConnectWithoutUsuariosInput
    connect?: PaisWhereUniqueInput
  }

  export type AccountCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type UsuarioRolCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<UsuarioRolCreateWithoutUsuarioInput, UsuarioRolUncheckedCreateWithoutUsuarioInput> | UsuarioRolCreateWithoutUsuarioInput[] | UsuarioRolUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioRolCreateOrConnectWithoutUsuarioInput | UsuarioRolCreateOrConnectWithoutUsuarioInput[]
    createMany?: UsuarioRolCreateManyUsuarioInputEnvelope
    connect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
  }

  export type ReservaCreateNestedManyWithoutUsuarioSolicitoInput = {
    create?: XOR<ReservaCreateWithoutUsuarioSolicitoInput, ReservaUncheckedCreateWithoutUsuarioSolicitoInput> | ReservaCreateWithoutUsuarioSolicitoInput[] | ReservaUncheckedCreateWithoutUsuarioSolicitoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioSolicitoInput | ReservaCreateOrConnectWithoutUsuarioSolicitoInput[]
    createMany?: ReservaCreateManyUsuarioSolicitoInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type ReservaCreateNestedManyWithoutUsuarioRenovoInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRenovoInput, ReservaUncheckedCreateWithoutUsuarioRenovoInput> | ReservaCreateWithoutUsuarioRenovoInput[] | ReservaUncheckedCreateWithoutUsuarioRenovoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRenovoInput | ReservaCreateOrConnectWithoutUsuarioRenovoInput[]
    createMany?: ReservaCreateManyUsuarioRenovoInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type ReservaCreateNestedManyWithoutUsuarioTutorInput = {
    create?: XOR<ReservaCreateWithoutUsuarioTutorInput, ReservaUncheckedCreateWithoutUsuarioTutorInput> | ReservaCreateWithoutUsuarioTutorInput[] | ReservaUncheckedCreateWithoutUsuarioTutorInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioTutorInput | ReservaCreateOrConnectWithoutUsuarioTutorInput[]
    createMany?: ReservaCreateManyUsuarioTutorInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type ReservaCreateNestedManyWithoutUsuarioAprobadorInput = {
    create?: XOR<ReservaCreateWithoutUsuarioAprobadorInput, ReservaUncheckedCreateWithoutUsuarioAprobadorInput> | ReservaCreateWithoutUsuarioAprobadorInput[] | ReservaUncheckedCreateWithoutUsuarioAprobadorInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioAprobadorInput | ReservaCreateOrConnectWithoutUsuarioAprobadorInput[]
    createMany?: ReservaCreateManyUsuarioAprobadorInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type ReservaCreateNestedManyWithoutUsuarioRechazadoInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRechazadoInput, ReservaUncheckedCreateWithoutUsuarioRechazadoInput> | ReservaCreateWithoutUsuarioRechazadoInput[] | ReservaUncheckedCreateWithoutUsuarioRechazadoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRechazadoInput | ReservaCreateOrConnectWithoutUsuarioRechazadoInput[]
    createMany?: ReservaCreateManyUsuarioRechazadoInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type ReservaCreateNestedManyWithoutUsuarioRecibioInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRecibioInput, ReservaUncheckedCreateWithoutUsuarioRecibioInput> | ReservaCreateWithoutUsuarioRecibioInput[] | ReservaUncheckedCreateWithoutUsuarioRecibioInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRecibioInput | ReservaCreateOrConnectWithoutUsuarioRecibioInput[]
    createMany?: ReservaCreateManyUsuarioRecibioInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type CursoAyudanteCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CursoAyudanteCreateWithoutUsuarioInput, CursoAyudanteUncheckedCreateWithoutUsuarioInput> | CursoAyudanteCreateWithoutUsuarioInput[] | CursoAyudanteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CursoAyudanteCreateOrConnectWithoutUsuarioInput | CursoAyudanteCreateOrConnectWithoutUsuarioInput[]
    createMany?: CursoAyudanteCreateManyUsuarioInputEnvelope
    connect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
  }

  export type CursoCreateNestedManyWithoutProfesorInput = {
    create?: XOR<CursoCreateWithoutProfesorInput, CursoUncheckedCreateWithoutProfesorInput> | CursoCreateWithoutProfesorInput[] | CursoUncheckedCreateWithoutProfesorInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutProfesorInput | CursoCreateOrConnectWithoutProfesorInput[]
    createMany?: CursoCreateManyProfesorInputEnvelope
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
  }

  export type MateriaJefeTpCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MateriaJefeTpCreateWithoutUsuarioInput, MateriaJefeTpUncheckedCreateWithoutUsuarioInput> | MateriaJefeTpCreateWithoutUsuarioInput[] | MateriaJefeTpUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MateriaJefeTpCreateOrConnectWithoutUsuarioInput | MateriaJefeTpCreateOrConnectWithoutUsuarioInput[]
    createMany?: MateriaJefeTpCreateManyUsuarioInputEnvelope
    connect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
  }

  export type MateriaCreateNestedManyWithoutDirectorUsuarioInput = {
    create?: XOR<MateriaCreateWithoutDirectorUsuarioInput, MateriaUncheckedCreateWithoutDirectorUsuarioInput> | MateriaCreateWithoutDirectorUsuarioInput[] | MateriaUncheckedCreateWithoutDirectorUsuarioInput[]
    connectOrCreate?: MateriaCreateOrConnectWithoutDirectorUsuarioInput | MateriaCreateOrConnectWithoutDirectorUsuarioInput[]
    createMany?: MateriaCreateManyDirectorUsuarioInputEnvelope
    connect?: MateriaWhereUniqueInput | MateriaWhereUniqueInput[]
  }

  export type TutorCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<TutorCreateWithoutUsuarioInput, TutorUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: TutorCreateOrConnectWithoutUsuarioInput
    connect?: TutorWhereUniqueInput
  }

  export type ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalDocenteInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalDocenteInput> | ReservaLaboratorioCerradoCreateWithoutDiscrecionalDocenteInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalDocenteInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalDocenteInput | ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalDocenteInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyDiscrecionalDocenteInputEnvelope
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<UsuarioRolCreateWithoutUsuarioInput, UsuarioRolUncheckedCreateWithoutUsuarioInput> | UsuarioRolCreateWithoutUsuarioInput[] | UsuarioRolUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioRolCreateOrConnectWithoutUsuarioInput | UsuarioRolCreateOrConnectWithoutUsuarioInput[]
    createMany?: UsuarioRolCreateManyUsuarioInputEnvelope
    connect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
  }

  export type ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput = {
    create?: XOR<ReservaCreateWithoutUsuarioSolicitoInput, ReservaUncheckedCreateWithoutUsuarioSolicitoInput> | ReservaCreateWithoutUsuarioSolicitoInput[] | ReservaUncheckedCreateWithoutUsuarioSolicitoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioSolicitoInput | ReservaCreateOrConnectWithoutUsuarioSolicitoInput[]
    createMany?: ReservaCreateManyUsuarioSolicitoInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRenovoInput, ReservaUncheckedCreateWithoutUsuarioRenovoInput> | ReservaCreateWithoutUsuarioRenovoInput[] | ReservaUncheckedCreateWithoutUsuarioRenovoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRenovoInput | ReservaCreateOrConnectWithoutUsuarioRenovoInput[]
    createMany?: ReservaCreateManyUsuarioRenovoInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput = {
    create?: XOR<ReservaCreateWithoutUsuarioTutorInput, ReservaUncheckedCreateWithoutUsuarioTutorInput> | ReservaCreateWithoutUsuarioTutorInput[] | ReservaUncheckedCreateWithoutUsuarioTutorInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioTutorInput | ReservaCreateOrConnectWithoutUsuarioTutorInput[]
    createMany?: ReservaCreateManyUsuarioTutorInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput = {
    create?: XOR<ReservaCreateWithoutUsuarioAprobadorInput, ReservaUncheckedCreateWithoutUsuarioAprobadorInput> | ReservaCreateWithoutUsuarioAprobadorInput[] | ReservaUncheckedCreateWithoutUsuarioAprobadorInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioAprobadorInput | ReservaCreateOrConnectWithoutUsuarioAprobadorInput[]
    createMany?: ReservaCreateManyUsuarioAprobadorInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRechazadoInput, ReservaUncheckedCreateWithoutUsuarioRechazadoInput> | ReservaCreateWithoutUsuarioRechazadoInput[] | ReservaUncheckedCreateWithoutUsuarioRechazadoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRechazadoInput | ReservaCreateOrConnectWithoutUsuarioRechazadoInput[]
    createMany?: ReservaCreateManyUsuarioRechazadoInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRecibioInput, ReservaUncheckedCreateWithoutUsuarioRecibioInput> | ReservaCreateWithoutUsuarioRecibioInput[] | ReservaUncheckedCreateWithoutUsuarioRecibioInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRecibioInput | ReservaCreateOrConnectWithoutUsuarioRecibioInput[]
    createMany?: ReservaCreateManyUsuarioRecibioInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CursoAyudanteCreateWithoutUsuarioInput, CursoAyudanteUncheckedCreateWithoutUsuarioInput> | CursoAyudanteCreateWithoutUsuarioInput[] | CursoAyudanteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CursoAyudanteCreateOrConnectWithoutUsuarioInput | CursoAyudanteCreateOrConnectWithoutUsuarioInput[]
    createMany?: CursoAyudanteCreateManyUsuarioInputEnvelope
    connect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
  }

  export type CursoUncheckedCreateNestedManyWithoutProfesorInput = {
    create?: XOR<CursoCreateWithoutProfesorInput, CursoUncheckedCreateWithoutProfesorInput> | CursoCreateWithoutProfesorInput[] | CursoUncheckedCreateWithoutProfesorInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutProfesorInput | CursoCreateOrConnectWithoutProfesorInput[]
    createMany?: CursoCreateManyProfesorInputEnvelope
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
  }

  export type MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MateriaJefeTpCreateWithoutUsuarioInput, MateriaJefeTpUncheckedCreateWithoutUsuarioInput> | MateriaJefeTpCreateWithoutUsuarioInput[] | MateriaJefeTpUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MateriaJefeTpCreateOrConnectWithoutUsuarioInput | MateriaJefeTpCreateOrConnectWithoutUsuarioInput[]
    createMany?: MateriaJefeTpCreateManyUsuarioInputEnvelope
    connect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
  }

  export type MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput = {
    create?: XOR<MateriaCreateWithoutDirectorUsuarioInput, MateriaUncheckedCreateWithoutDirectorUsuarioInput> | MateriaCreateWithoutDirectorUsuarioInput[] | MateriaUncheckedCreateWithoutDirectorUsuarioInput[]
    connectOrCreate?: MateriaCreateOrConnectWithoutDirectorUsuarioInput | MateriaCreateOrConnectWithoutDirectorUsuarioInput[]
    createMany?: MateriaCreateManyDirectorUsuarioInputEnvelope
    connect?: MateriaWhereUniqueInput | MateriaWhereUniqueInput[]
  }

  export type TutorUncheckedCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<TutorCreateWithoutUsuarioInput, TutorUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: TutorCreateOrConnectWithoutUsuarioInput
    connect?: TutorWhereUniqueInput
  }

  export type ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalDocenteInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalDocenteInput> | ReservaLaboratorioCerradoCreateWithoutDiscrecionalDocenteInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalDocenteInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalDocenteInput | ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalDocenteInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyDiscrecionalDocenteInputEnvelope
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type DocumentoTipoUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<DocumentoTipoCreateWithoutUsuariosInput, DocumentoTipoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: DocumentoTipoCreateOrConnectWithoutUsuariosInput
    upsert?: DocumentoTipoUpsertWithoutUsuariosInput
    disconnect?: DocumentoTipoWhereInput | boolean
    delete?: DocumentoTipoWhereInput | boolean
    connect?: DocumentoTipoWhereUniqueInput
    update?: XOR<XOR<DocumentoTipoUpdateToOneWithWhereWithoutUsuariosInput, DocumentoTipoUpdateWithoutUsuariosInput>, DocumentoTipoUncheckedUpdateWithoutUsuariosInput>
  }

  export type ProvinciaUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<ProvinciaCreateWithoutUsuariosInput, ProvinciaUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: ProvinciaCreateOrConnectWithoutUsuariosInput
    upsert?: ProvinciaUpsertWithoutUsuariosInput
    disconnect?: ProvinciaWhereInput | boolean
    delete?: ProvinciaWhereInput | boolean
    connect?: ProvinciaWhereUniqueInput
    update?: XOR<XOR<ProvinciaUpdateToOneWithWhereWithoutUsuariosInput, ProvinciaUpdateWithoutUsuariosInput>, ProvinciaUncheckedUpdateWithoutUsuariosInput>
  }

  export type PaisUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<PaisCreateWithoutUsuariosInput, PaisUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: PaisCreateOrConnectWithoutUsuariosInput
    upsert?: PaisUpsertWithoutUsuariosInput
    disconnect?: PaisWhereInput | boolean
    delete?: PaisWhereInput | boolean
    connect?: PaisWhereUniqueInput
    update?: XOR<XOR<PaisUpdateToOneWithWhereWithoutUsuariosInput, PaisUpdateWithoutUsuariosInput>, PaisUncheckedUpdateWithoutUsuariosInput>
  }

  export type AccountUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type UsuarioRolUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<UsuarioRolCreateWithoutUsuarioInput, UsuarioRolUncheckedCreateWithoutUsuarioInput> | UsuarioRolCreateWithoutUsuarioInput[] | UsuarioRolUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioRolCreateOrConnectWithoutUsuarioInput | UsuarioRolCreateOrConnectWithoutUsuarioInput[]
    upsert?: UsuarioRolUpsertWithWhereUniqueWithoutUsuarioInput | UsuarioRolUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: UsuarioRolCreateManyUsuarioInputEnvelope
    set?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    disconnect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    delete?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    connect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    update?: UsuarioRolUpdateWithWhereUniqueWithoutUsuarioInput | UsuarioRolUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: UsuarioRolUpdateManyWithWhereWithoutUsuarioInput | UsuarioRolUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: UsuarioRolScalarWhereInput | UsuarioRolScalarWhereInput[]
  }

  export type ReservaUpdateManyWithoutUsuarioSolicitoNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioSolicitoInput, ReservaUncheckedCreateWithoutUsuarioSolicitoInput> | ReservaCreateWithoutUsuarioSolicitoInput[] | ReservaUncheckedCreateWithoutUsuarioSolicitoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioSolicitoInput | ReservaCreateOrConnectWithoutUsuarioSolicitoInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioSolicitoInput | ReservaUpsertWithWhereUniqueWithoutUsuarioSolicitoInput[]
    createMany?: ReservaCreateManyUsuarioSolicitoInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioSolicitoInput | ReservaUpdateWithWhereUniqueWithoutUsuarioSolicitoInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioSolicitoInput | ReservaUpdateManyWithWhereWithoutUsuarioSolicitoInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type ReservaUpdateManyWithoutUsuarioRenovoNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRenovoInput, ReservaUncheckedCreateWithoutUsuarioRenovoInput> | ReservaCreateWithoutUsuarioRenovoInput[] | ReservaUncheckedCreateWithoutUsuarioRenovoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRenovoInput | ReservaCreateOrConnectWithoutUsuarioRenovoInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioRenovoInput | ReservaUpsertWithWhereUniqueWithoutUsuarioRenovoInput[]
    createMany?: ReservaCreateManyUsuarioRenovoInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioRenovoInput | ReservaUpdateWithWhereUniqueWithoutUsuarioRenovoInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioRenovoInput | ReservaUpdateManyWithWhereWithoutUsuarioRenovoInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type ReservaUpdateManyWithoutUsuarioTutorNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioTutorInput, ReservaUncheckedCreateWithoutUsuarioTutorInput> | ReservaCreateWithoutUsuarioTutorInput[] | ReservaUncheckedCreateWithoutUsuarioTutorInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioTutorInput | ReservaCreateOrConnectWithoutUsuarioTutorInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioTutorInput | ReservaUpsertWithWhereUniqueWithoutUsuarioTutorInput[]
    createMany?: ReservaCreateManyUsuarioTutorInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioTutorInput | ReservaUpdateWithWhereUniqueWithoutUsuarioTutorInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioTutorInput | ReservaUpdateManyWithWhereWithoutUsuarioTutorInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type ReservaUpdateManyWithoutUsuarioAprobadorNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioAprobadorInput, ReservaUncheckedCreateWithoutUsuarioAprobadorInput> | ReservaCreateWithoutUsuarioAprobadorInput[] | ReservaUncheckedCreateWithoutUsuarioAprobadorInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioAprobadorInput | ReservaCreateOrConnectWithoutUsuarioAprobadorInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioAprobadorInput | ReservaUpsertWithWhereUniqueWithoutUsuarioAprobadorInput[]
    createMany?: ReservaCreateManyUsuarioAprobadorInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioAprobadorInput | ReservaUpdateWithWhereUniqueWithoutUsuarioAprobadorInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioAprobadorInput | ReservaUpdateManyWithWhereWithoutUsuarioAprobadorInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type ReservaUpdateManyWithoutUsuarioRechazadoNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRechazadoInput, ReservaUncheckedCreateWithoutUsuarioRechazadoInput> | ReservaCreateWithoutUsuarioRechazadoInput[] | ReservaUncheckedCreateWithoutUsuarioRechazadoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRechazadoInput | ReservaCreateOrConnectWithoutUsuarioRechazadoInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioRechazadoInput | ReservaUpsertWithWhereUniqueWithoutUsuarioRechazadoInput[]
    createMany?: ReservaCreateManyUsuarioRechazadoInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioRechazadoInput | ReservaUpdateWithWhereUniqueWithoutUsuarioRechazadoInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioRechazadoInput | ReservaUpdateManyWithWhereWithoutUsuarioRechazadoInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type ReservaUpdateManyWithoutUsuarioRecibioNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRecibioInput, ReservaUncheckedCreateWithoutUsuarioRecibioInput> | ReservaCreateWithoutUsuarioRecibioInput[] | ReservaUncheckedCreateWithoutUsuarioRecibioInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRecibioInput | ReservaCreateOrConnectWithoutUsuarioRecibioInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioRecibioInput | ReservaUpsertWithWhereUniqueWithoutUsuarioRecibioInput[]
    createMany?: ReservaCreateManyUsuarioRecibioInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioRecibioInput | ReservaUpdateWithWhereUniqueWithoutUsuarioRecibioInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioRecibioInput | ReservaUpdateManyWithWhereWithoutUsuarioRecibioInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type CursoAyudanteUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CursoAyudanteCreateWithoutUsuarioInput, CursoAyudanteUncheckedCreateWithoutUsuarioInput> | CursoAyudanteCreateWithoutUsuarioInput[] | CursoAyudanteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CursoAyudanteCreateOrConnectWithoutUsuarioInput | CursoAyudanteCreateOrConnectWithoutUsuarioInput[]
    upsert?: CursoAyudanteUpsertWithWhereUniqueWithoutUsuarioInput | CursoAyudanteUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CursoAyudanteCreateManyUsuarioInputEnvelope
    set?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    disconnect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    delete?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    connect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    update?: CursoAyudanteUpdateWithWhereUniqueWithoutUsuarioInput | CursoAyudanteUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CursoAyudanteUpdateManyWithWhereWithoutUsuarioInput | CursoAyudanteUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CursoAyudanteScalarWhereInput | CursoAyudanteScalarWhereInput[]
  }

  export type CursoUpdateManyWithoutProfesorNestedInput = {
    create?: XOR<CursoCreateWithoutProfesorInput, CursoUncheckedCreateWithoutProfesorInput> | CursoCreateWithoutProfesorInput[] | CursoUncheckedCreateWithoutProfesorInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutProfesorInput | CursoCreateOrConnectWithoutProfesorInput[]
    upsert?: CursoUpsertWithWhereUniqueWithoutProfesorInput | CursoUpsertWithWhereUniqueWithoutProfesorInput[]
    createMany?: CursoCreateManyProfesorInputEnvelope
    set?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    disconnect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    delete?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    update?: CursoUpdateWithWhereUniqueWithoutProfesorInput | CursoUpdateWithWhereUniqueWithoutProfesorInput[]
    updateMany?: CursoUpdateManyWithWhereWithoutProfesorInput | CursoUpdateManyWithWhereWithoutProfesorInput[]
    deleteMany?: CursoScalarWhereInput | CursoScalarWhereInput[]
  }

  export type MateriaJefeTpUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MateriaJefeTpCreateWithoutUsuarioInput, MateriaJefeTpUncheckedCreateWithoutUsuarioInput> | MateriaJefeTpCreateWithoutUsuarioInput[] | MateriaJefeTpUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MateriaJefeTpCreateOrConnectWithoutUsuarioInput | MateriaJefeTpCreateOrConnectWithoutUsuarioInput[]
    upsert?: MateriaJefeTpUpsertWithWhereUniqueWithoutUsuarioInput | MateriaJefeTpUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MateriaJefeTpCreateManyUsuarioInputEnvelope
    set?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    disconnect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    delete?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    connect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    update?: MateriaJefeTpUpdateWithWhereUniqueWithoutUsuarioInput | MateriaJefeTpUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MateriaJefeTpUpdateManyWithWhereWithoutUsuarioInput | MateriaJefeTpUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MateriaJefeTpScalarWhereInput | MateriaJefeTpScalarWhereInput[]
  }

  export type MateriaUpdateManyWithoutDirectorUsuarioNestedInput = {
    create?: XOR<MateriaCreateWithoutDirectorUsuarioInput, MateriaUncheckedCreateWithoutDirectorUsuarioInput> | MateriaCreateWithoutDirectorUsuarioInput[] | MateriaUncheckedCreateWithoutDirectorUsuarioInput[]
    connectOrCreate?: MateriaCreateOrConnectWithoutDirectorUsuarioInput | MateriaCreateOrConnectWithoutDirectorUsuarioInput[]
    upsert?: MateriaUpsertWithWhereUniqueWithoutDirectorUsuarioInput | MateriaUpsertWithWhereUniqueWithoutDirectorUsuarioInput[]
    createMany?: MateriaCreateManyDirectorUsuarioInputEnvelope
    set?: MateriaWhereUniqueInput | MateriaWhereUniqueInput[]
    disconnect?: MateriaWhereUniqueInput | MateriaWhereUniqueInput[]
    delete?: MateriaWhereUniqueInput | MateriaWhereUniqueInput[]
    connect?: MateriaWhereUniqueInput | MateriaWhereUniqueInput[]
    update?: MateriaUpdateWithWhereUniqueWithoutDirectorUsuarioInput | MateriaUpdateWithWhereUniqueWithoutDirectorUsuarioInput[]
    updateMany?: MateriaUpdateManyWithWhereWithoutDirectorUsuarioInput | MateriaUpdateManyWithWhereWithoutDirectorUsuarioInput[]
    deleteMany?: MateriaScalarWhereInput | MateriaScalarWhereInput[]
  }

  export type TutorUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<TutorCreateWithoutUsuarioInput, TutorUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: TutorCreateOrConnectWithoutUsuarioInput
    upsert?: TutorUpsertWithoutUsuarioInput
    disconnect?: TutorWhereInput | boolean
    delete?: TutorWhereInput | boolean
    connect?: TutorWhereUniqueInput
    update?: XOR<XOR<TutorUpdateToOneWithWhereWithoutUsuarioInput, TutorUpdateWithoutUsuarioInput>, TutorUncheckedUpdateWithoutUsuarioInput>
  }

  export type ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalDocenteInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalDocenteInput> | ReservaLaboratorioCerradoCreateWithoutDiscrecionalDocenteInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalDocenteInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalDocenteInput | ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalDocenteInput[]
    upsert?: ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutDiscrecionalDocenteInput | ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutDiscrecionalDocenteInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyDiscrecionalDocenteInputEnvelope
    set?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutDiscrecionalDocenteInput | ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutDiscrecionalDocenteInput[]
    updateMany?: ReservaLaboratorioCerradoUpdateManyWithWhereWithoutDiscrecionalDocenteInput | ReservaLaboratorioCerradoUpdateManyWithWhereWithoutDiscrecionalDocenteInput[]
    deleteMany?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<UsuarioRolCreateWithoutUsuarioInput, UsuarioRolUncheckedCreateWithoutUsuarioInput> | UsuarioRolCreateWithoutUsuarioInput[] | UsuarioRolUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioRolCreateOrConnectWithoutUsuarioInput | UsuarioRolCreateOrConnectWithoutUsuarioInput[]
    upsert?: UsuarioRolUpsertWithWhereUniqueWithoutUsuarioInput | UsuarioRolUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: UsuarioRolCreateManyUsuarioInputEnvelope
    set?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    disconnect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    delete?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    connect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    update?: UsuarioRolUpdateWithWhereUniqueWithoutUsuarioInput | UsuarioRolUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: UsuarioRolUpdateManyWithWhereWithoutUsuarioInput | UsuarioRolUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: UsuarioRolScalarWhereInput | UsuarioRolScalarWhereInput[]
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioSolicitoInput, ReservaUncheckedCreateWithoutUsuarioSolicitoInput> | ReservaCreateWithoutUsuarioSolicitoInput[] | ReservaUncheckedCreateWithoutUsuarioSolicitoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioSolicitoInput | ReservaCreateOrConnectWithoutUsuarioSolicitoInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioSolicitoInput | ReservaUpsertWithWhereUniqueWithoutUsuarioSolicitoInput[]
    createMany?: ReservaCreateManyUsuarioSolicitoInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioSolicitoInput | ReservaUpdateWithWhereUniqueWithoutUsuarioSolicitoInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioSolicitoInput | ReservaUpdateManyWithWhereWithoutUsuarioSolicitoInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRenovoInput, ReservaUncheckedCreateWithoutUsuarioRenovoInput> | ReservaCreateWithoutUsuarioRenovoInput[] | ReservaUncheckedCreateWithoutUsuarioRenovoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRenovoInput | ReservaCreateOrConnectWithoutUsuarioRenovoInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioRenovoInput | ReservaUpsertWithWhereUniqueWithoutUsuarioRenovoInput[]
    createMany?: ReservaCreateManyUsuarioRenovoInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioRenovoInput | ReservaUpdateWithWhereUniqueWithoutUsuarioRenovoInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioRenovoInput | ReservaUpdateManyWithWhereWithoutUsuarioRenovoInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioTutorInput, ReservaUncheckedCreateWithoutUsuarioTutorInput> | ReservaCreateWithoutUsuarioTutorInput[] | ReservaUncheckedCreateWithoutUsuarioTutorInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioTutorInput | ReservaCreateOrConnectWithoutUsuarioTutorInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioTutorInput | ReservaUpsertWithWhereUniqueWithoutUsuarioTutorInput[]
    createMany?: ReservaCreateManyUsuarioTutorInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioTutorInput | ReservaUpdateWithWhereUniqueWithoutUsuarioTutorInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioTutorInput | ReservaUpdateManyWithWhereWithoutUsuarioTutorInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioAprobadorInput, ReservaUncheckedCreateWithoutUsuarioAprobadorInput> | ReservaCreateWithoutUsuarioAprobadorInput[] | ReservaUncheckedCreateWithoutUsuarioAprobadorInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioAprobadorInput | ReservaCreateOrConnectWithoutUsuarioAprobadorInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioAprobadorInput | ReservaUpsertWithWhereUniqueWithoutUsuarioAprobadorInput[]
    createMany?: ReservaCreateManyUsuarioAprobadorInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioAprobadorInput | ReservaUpdateWithWhereUniqueWithoutUsuarioAprobadorInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioAprobadorInput | ReservaUpdateManyWithWhereWithoutUsuarioAprobadorInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRechazadoInput, ReservaUncheckedCreateWithoutUsuarioRechazadoInput> | ReservaCreateWithoutUsuarioRechazadoInput[] | ReservaUncheckedCreateWithoutUsuarioRechazadoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRechazadoInput | ReservaCreateOrConnectWithoutUsuarioRechazadoInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioRechazadoInput | ReservaUpsertWithWhereUniqueWithoutUsuarioRechazadoInput[]
    createMany?: ReservaCreateManyUsuarioRechazadoInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioRechazadoInput | ReservaUpdateWithWhereUniqueWithoutUsuarioRechazadoInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioRechazadoInput | ReservaUpdateManyWithWhereWithoutUsuarioRechazadoInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput = {
    create?: XOR<ReservaCreateWithoutUsuarioRecibioInput, ReservaUncheckedCreateWithoutUsuarioRecibioInput> | ReservaCreateWithoutUsuarioRecibioInput[] | ReservaUncheckedCreateWithoutUsuarioRecibioInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutUsuarioRecibioInput | ReservaCreateOrConnectWithoutUsuarioRecibioInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutUsuarioRecibioInput | ReservaUpsertWithWhereUniqueWithoutUsuarioRecibioInput[]
    createMany?: ReservaCreateManyUsuarioRecibioInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutUsuarioRecibioInput | ReservaUpdateWithWhereUniqueWithoutUsuarioRecibioInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutUsuarioRecibioInput | ReservaUpdateManyWithWhereWithoutUsuarioRecibioInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CursoAyudanteCreateWithoutUsuarioInput, CursoAyudanteUncheckedCreateWithoutUsuarioInput> | CursoAyudanteCreateWithoutUsuarioInput[] | CursoAyudanteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CursoAyudanteCreateOrConnectWithoutUsuarioInput | CursoAyudanteCreateOrConnectWithoutUsuarioInput[]
    upsert?: CursoAyudanteUpsertWithWhereUniqueWithoutUsuarioInput | CursoAyudanteUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CursoAyudanteCreateManyUsuarioInputEnvelope
    set?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    disconnect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    delete?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    connect?: CursoAyudanteWhereUniqueInput | CursoAyudanteWhereUniqueInput[]
    update?: CursoAyudanteUpdateWithWhereUniqueWithoutUsuarioInput | CursoAyudanteUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CursoAyudanteUpdateManyWithWhereWithoutUsuarioInput | CursoAyudanteUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CursoAyudanteScalarWhereInput | CursoAyudanteScalarWhereInput[]
  }

  export type CursoUncheckedUpdateManyWithoutProfesorNestedInput = {
    create?: XOR<CursoCreateWithoutProfesorInput, CursoUncheckedCreateWithoutProfesorInput> | CursoCreateWithoutProfesorInput[] | CursoUncheckedCreateWithoutProfesorInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutProfesorInput | CursoCreateOrConnectWithoutProfesorInput[]
    upsert?: CursoUpsertWithWhereUniqueWithoutProfesorInput | CursoUpsertWithWhereUniqueWithoutProfesorInput[]
    createMany?: CursoCreateManyProfesorInputEnvelope
    set?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    disconnect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    delete?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    update?: CursoUpdateWithWhereUniqueWithoutProfesorInput | CursoUpdateWithWhereUniqueWithoutProfesorInput[]
    updateMany?: CursoUpdateManyWithWhereWithoutProfesorInput | CursoUpdateManyWithWhereWithoutProfesorInput[]
    deleteMany?: CursoScalarWhereInput | CursoScalarWhereInput[]
  }

  export type MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MateriaJefeTpCreateWithoutUsuarioInput, MateriaJefeTpUncheckedCreateWithoutUsuarioInput> | MateriaJefeTpCreateWithoutUsuarioInput[] | MateriaJefeTpUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MateriaJefeTpCreateOrConnectWithoutUsuarioInput | MateriaJefeTpCreateOrConnectWithoutUsuarioInput[]
    upsert?: MateriaJefeTpUpsertWithWhereUniqueWithoutUsuarioInput | MateriaJefeTpUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MateriaJefeTpCreateManyUsuarioInputEnvelope
    set?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    disconnect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    delete?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    connect?: MateriaJefeTpWhereUniqueInput | MateriaJefeTpWhereUniqueInput[]
    update?: MateriaJefeTpUpdateWithWhereUniqueWithoutUsuarioInput | MateriaJefeTpUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MateriaJefeTpUpdateManyWithWhereWithoutUsuarioInput | MateriaJefeTpUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MateriaJefeTpScalarWhereInput | MateriaJefeTpScalarWhereInput[]
  }

  export type MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput = {
    create?: XOR<MateriaCreateWithoutDirectorUsuarioInput, MateriaUncheckedCreateWithoutDirectorUsuarioInput> | MateriaCreateWithoutDirectorUsuarioInput[] | MateriaUncheckedCreateWithoutDirectorUsuarioInput[]
    connectOrCreate?: MateriaCreateOrConnectWithoutDirectorUsuarioInput | MateriaCreateOrConnectWithoutDirectorUsuarioInput[]
    upsert?: MateriaUpsertWithWhereUniqueWithoutDirectorUsuarioInput | MateriaUpsertWithWhereUniqueWithoutDirectorUsuarioInput[]
    createMany?: MateriaCreateManyDirectorUsuarioInputEnvelope
    set?: MateriaWhereUniqueInput | MateriaWhereUniqueInput[]
    disconnect?: MateriaWhereUniqueInput | MateriaWhereUniqueInput[]
    delete?: MateriaWhereUniqueInput | MateriaWhereUniqueInput[]
    connect?: MateriaWhereUniqueInput | MateriaWhereUniqueInput[]
    update?: MateriaUpdateWithWhereUniqueWithoutDirectorUsuarioInput | MateriaUpdateWithWhereUniqueWithoutDirectorUsuarioInput[]
    updateMany?: MateriaUpdateManyWithWhereWithoutDirectorUsuarioInput | MateriaUpdateManyWithWhereWithoutDirectorUsuarioInput[]
    deleteMany?: MateriaScalarWhereInput | MateriaScalarWhereInput[]
  }

  export type TutorUncheckedUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<TutorCreateWithoutUsuarioInput, TutorUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: TutorCreateOrConnectWithoutUsuarioInput
    upsert?: TutorUpsertWithoutUsuarioInput
    disconnect?: TutorWhereInput | boolean
    delete?: TutorWhereInput | boolean
    connect?: TutorWhereUniqueInput
    update?: XOR<XOR<TutorUpdateToOneWithWhereWithoutUsuarioInput, TutorUpdateWithoutUsuarioInput>, TutorUncheckedUpdateWithoutUsuarioInput>
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput = {
    create?: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalDocenteInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalDocenteInput> | ReservaLaboratorioCerradoCreateWithoutDiscrecionalDocenteInput[] | ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalDocenteInput[]
    connectOrCreate?: ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalDocenteInput | ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalDocenteInput[]
    upsert?: ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutDiscrecionalDocenteInput | ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutDiscrecionalDocenteInput[]
    createMany?: ReservaLaboratorioCerradoCreateManyDiscrecionalDocenteInputEnvelope
    set?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    disconnect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    delete?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    connect?: ReservaLaboratorioCerradoWhereUniqueInput | ReservaLaboratorioCerradoWhereUniqueInput[]
    update?: ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutDiscrecionalDocenteInput | ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutDiscrecionalDocenteInput[]
    updateMany?: ReservaLaboratorioCerradoUpdateManyWithWhereWithoutDiscrecionalDocenteInput | ReservaLaboratorioCerradoUpdateManyWithWhereWithoutDiscrecionalDocenteInput[]
    deleteMany?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutTutorInput = {
    create?: XOR<UserCreateWithoutTutorInput, UserUncheckedCreateWithoutTutorInput>
    connectOrCreate?: UserCreateOrConnectWithoutTutorInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutTutorNestedInput = {
    create?: XOR<UserCreateWithoutTutorInput, UserUncheckedCreateWithoutTutorInput>
    connectOrCreate?: UserCreateOrConnectWithoutTutorInput
    upsert?: UserUpsertWithoutTutorInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTutorInput, UserUpdateWithoutTutorInput>, UserUncheckedUpdateWithoutTutorInput>
  }

  export type UserCreateNestedOneWithoutUsuarioRolInput = {
    create?: XOR<UserCreateWithoutUsuarioRolInput, UserUncheckedCreateWithoutUsuarioRolInput>
    connectOrCreate?: UserCreateOrConnectWithoutUsuarioRolInput
    connect?: UserWhereUniqueInput
  }

  export type RolCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: RolCreateOrConnectWithoutUsuariosInput
    connect?: RolWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUsuarioRolNestedInput = {
    create?: XOR<UserCreateWithoutUsuarioRolInput, UserUncheckedCreateWithoutUsuarioRolInput>
    connectOrCreate?: UserCreateOrConnectWithoutUsuarioRolInput
    upsert?: UserUpsertWithoutUsuarioRolInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUsuarioRolInput, UserUpdateWithoutUsuarioRolInput>, UserUncheckedUpdateWithoutUsuarioRolInput>
  }

  export type RolUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: RolCreateOrConnectWithoutUsuariosInput
    upsert?: RolUpsertWithoutUsuariosInput
    connect?: RolWhereUniqueInput
    update?: XOR<XOR<RolUpdateToOneWithWhereWithoutUsuariosInput, RolUpdateWithoutUsuariosInput>, RolUncheckedUpdateWithoutUsuariosInput>
  }

  export type UsuarioRolCreateNestedManyWithoutRolInput = {
    create?: XOR<UsuarioRolCreateWithoutRolInput, UsuarioRolUncheckedCreateWithoutRolInput> | UsuarioRolCreateWithoutRolInput[] | UsuarioRolUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioRolCreateOrConnectWithoutRolInput | UsuarioRolCreateOrConnectWithoutRolInput[]
    createMany?: UsuarioRolCreateManyRolInputEnvelope
    connect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
  }

  export type RolPermisoCreateNestedManyWithoutRolInput = {
    create?: XOR<RolPermisoCreateWithoutRolInput, RolPermisoUncheckedCreateWithoutRolInput> | RolPermisoCreateWithoutRolInput[] | RolPermisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: RolPermisoCreateOrConnectWithoutRolInput | RolPermisoCreateOrConnectWithoutRolInput[]
    createMany?: RolPermisoCreateManyRolInputEnvelope
    connect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
  }

  export type UsuarioRolUncheckedCreateNestedManyWithoutRolInput = {
    create?: XOR<UsuarioRolCreateWithoutRolInput, UsuarioRolUncheckedCreateWithoutRolInput> | UsuarioRolCreateWithoutRolInput[] | UsuarioRolUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioRolCreateOrConnectWithoutRolInput | UsuarioRolCreateOrConnectWithoutRolInput[]
    createMany?: UsuarioRolCreateManyRolInputEnvelope
    connect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
  }

  export type RolPermisoUncheckedCreateNestedManyWithoutRolInput = {
    create?: XOR<RolPermisoCreateWithoutRolInput, RolPermisoUncheckedCreateWithoutRolInput> | RolPermisoCreateWithoutRolInput[] | RolPermisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: RolPermisoCreateOrConnectWithoutRolInput | RolPermisoCreateOrConnectWithoutRolInput[]
    createMany?: RolPermisoCreateManyRolInputEnvelope
    connect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
  }

  export type UsuarioRolUpdateManyWithoutRolNestedInput = {
    create?: XOR<UsuarioRolCreateWithoutRolInput, UsuarioRolUncheckedCreateWithoutRolInput> | UsuarioRolCreateWithoutRolInput[] | UsuarioRolUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioRolCreateOrConnectWithoutRolInput | UsuarioRolCreateOrConnectWithoutRolInput[]
    upsert?: UsuarioRolUpsertWithWhereUniqueWithoutRolInput | UsuarioRolUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: UsuarioRolCreateManyRolInputEnvelope
    set?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    disconnect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    delete?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    connect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    update?: UsuarioRolUpdateWithWhereUniqueWithoutRolInput | UsuarioRolUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: UsuarioRolUpdateManyWithWhereWithoutRolInput | UsuarioRolUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: UsuarioRolScalarWhereInput | UsuarioRolScalarWhereInput[]
  }

  export type RolPermisoUpdateManyWithoutRolNestedInput = {
    create?: XOR<RolPermisoCreateWithoutRolInput, RolPermisoUncheckedCreateWithoutRolInput> | RolPermisoCreateWithoutRolInput[] | RolPermisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: RolPermisoCreateOrConnectWithoutRolInput | RolPermisoCreateOrConnectWithoutRolInput[]
    upsert?: RolPermisoUpsertWithWhereUniqueWithoutRolInput | RolPermisoUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: RolPermisoCreateManyRolInputEnvelope
    set?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    disconnect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    delete?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    connect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    update?: RolPermisoUpdateWithWhereUniqueWithoutRolInput | RolPermisoUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: RolPermisoUpdateManyWithWhereWithoutRolInput | RolPermisoUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: RolPermisoScalarWhereInput | RolPermisoScalarWhereInput[]
  }

  export type UsuarioRolUncheckedUpdateManyWithoutRolNestedInput = {
    create?: XOR<UsuarioRolCreateWithoutRolInput, UsuarioRolUncheckedCreateWithoutRolInput> | UsuarioRolCreateWithoutRolInput[] | UsuarioRolUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioRolCreateOrConnectWithoutRolInput | UsuarioRolCreateOrConnectWithoutRolInput[]
    upsert?: UsuarioRolUpsertWithWhereUniqueWithoutRolInput | UsuarioRolUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: UsuarioRolCreateManyRolInputEnvelope
    set?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    disconnect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    delete?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    connect?: UsuarioRolWhereUniqueInput | UsuarioRolWhereUniqueInput[]
    update?: UsuarioRolUpdateWithWhereUniqueWithoutRolInput | UsuarioRolUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: UsuarioRolUpdateManyWithWhereWithoutRolInput | UsuarioRolUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: UsuarioRolScalarWhereInput | UsuarioRolScalarWhereInput[]
  }

  export type RolPermisoUncheckedUpdateManyWithoutRolNestedInput = {
    create?: XOR<RolPermisoCreateWithoutRolInput, RolPermisoUncheckedCreateWithoutRolInput> | RolPermisoCreateWithoutRolInput[] | RolPermisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: RolPermisoCreateOrConnectWithoutRolInput | RolPermisoCreateOrConnectWithoutRolInput[]
    upsert?: RolPermisoUpsertWithWhereUniqueWithoutRolInput | RolPermisoUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: RolPermisoCreateManyRolInputEnvelope
    set?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    disconnect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    delete?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    connect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    update?: RolPermisoUpdateWithWhereUniqueWithoutRolInput | RolPermisoUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: RolPermisoUpdateManyWithWhereWithoutRolInput | RolPermisoUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: RolPermisoScalarWhereInput | RolPermisoScalarWhereInput[]
  }

  export type RolCreateNestedOneWithoutRolPermisoInput = {
    create?: XOR<RolCreateWithoutRolPermisoInput, RolUncheckedCreateWithoutRolPermisoInput>
    connectOrCreate?: RolCreateOrConnectWithoutRolPermisoInput
    connect?: RolWhereUniqueInput
  }

  export type PermisoCreateNestedOneWithoutRolPermisoInput = {
    create?: XOR<PermisoCreateWithoutRolPermisoInput, PermisoUncheckedCreateWithoutRolPermisoInput>
    connectOrCreate?: PermisoCreateOrConnectWithoutRolPermisoInput
    connect?: PermisoWhereUniqueInput
  }

  export type RolUpdateOneRequiredWithoutRolPermisoNestedInput = {
    create?: XOR<RolCreateWithoutRolPermisoInput, RolUncheckedCreateWithoutRolPermisoInput>
    connectOrCreate?: RolCreateOrConnectWithoutRolPermisoInput
    upsert?: RolUpsertWithoutRolPermisoInput
    connect?: RolWhereUniqueInput
    update?: XOR<XOR<RolUpdateToOneWithWhereWithoutRolPermisoInput, RolUpdateWithoutRolPermisoInput>, RolUncheckedUpdateWithoutRolPermisoInput>
  }

  export type PermisoUpdateOneRequiredWithoutRolPermisoNestedInput = {
    create?: XOR<PermisoCreateWithoutRolPermisoInput, PermisoUncheckedCreateWithoutRolPermisoInput>
    connectOrCreate?: PermisoCreateOrConnectWithoutRolPermisoInput
    upsert?: PermisoUpsertWithoutRolPermisoInput
    connect?: PermisoWhereUniqueInput
    update?: XOR<XOR<PermisoUpdateToOneWithWhereWithoutRolPermisoInput, PermisoUpdateWithoutRolPermisoInput>, PermisoUncheckedUpdateWithoutRolPermisoInput>
  }

  export type RolPermisoCreateNestedManyWithoutPermisoInput = {
    create?: XOR<RolPermisoCreateWithoutPermisoInput, RolPermisoUncheckedCreateWithoutPermisoInput> | RolPermisoCreateWithoutPermisoInput[] | RolPermisoUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: RolPermisoCreateOrConnectWithoutPermisoInput | RolPermisoCreateOrConnectWithoutPermisoInput[]
    createMany?: RolPermisoCreateManyPermisoInputEnvelope
    connect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
  }

  export type RolPermisoUncheckedCreateNestedManyWithoutPermisoInput = {
    create?: XOR<RolPermisoCreateWithoutPermisoInput, RolPermisoUncheckedCreateWithoutPermisoInput> | RolPermisoCreateWithoutPermisoInput[] | RolPermisoUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: RolPermisoCreateOrConnectWithoutPermisoInput | RolPermisoCreateOrConnectWithoutPermisoInput[]
    createMany?: RolPermisoCreateManyPermisoInputEnvelope
    connect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
  }

  export type EnumSgeNombreFieldUpdateOperationsInput = {
    set?: $Enums.SgeNombre
  }

  export type RolPermisoUpdateManyWithoutPermisoNestedInput = {
    create?: XOR<RolPermisoCreateWithoutPermisoInput, RolPermisoUncheckedCreateWithoutPermisoInput> | RolPermisoCreateWithoutPermisoInput[] | RolPermisoUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: RolPermisoCreateOrConnectWithoutPermisoInput | RolPermisoCreateOrConnectWithoutPermisoInput[]
    upsert?: RolPermisoUpsertWithWhereUniqueWithoutPermisoInput | RolPermisoUpsertWithWhereUniqueWithoutPermisoInput[]
    createMany?: RolPermisoCreateManyPermisoInputEnvelope
    set?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    disconnect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    delete?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    connect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    update?: RolPermisoUpdateWithWhereUniqueWithoutPermisoInput | RolPermisoUpdateWithWhereUniqueWithoutPermisoInput[]
    updateMany?: RolPermisoUpdateManyWithWhereWithoutPermisoInput | RolPermisoUpdateManyWithWhereWithoutPermisoInput[]
    deleteMany?: RolPermisoScalarWhereInput | RolPermisoScalarWhereInput[]
  }

  export type RolPermisoUncheckedUpdateManyWithoutPermisoNestedInput = {
    create?: XOR<RolPermisoCreateWithoutPermisoInput, RolPermisoUncheckedCreateWithoutPermisoInput> | RolPermisoCreateWithoutPermisoInput[] | RolPermisoUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: RolPermisoCreateOrConnectWithoutPermisoInput | RolPermisoCreateOrConnectWithoutPermisoInput[]
    upsert?: RolPermisoUpsertWithWhereUniqueWithoutPermisoInput | RolPermisoUpsertWithWhereUniqueWithoutPermisoInput[]
    createMany?: RolPermisoCreateManyPermisoInputEnvelope
    set?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    disconnect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    delete?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    connect?: RolPermisoWhereUniqueInput | RolPermisoWhereUniqueInput[]
    update?: RolPermisoUpdateWithWhereUniqueWithoutPermisoInput | RolPermisoUpdateWithWhereUniqueWithoutPermisoInput[]
    updateMany?: RolPermisoUpdateManyWithWhereWithoutPermisoInput | RolPermisoUpdateManyWithWhereWithoutPermisoInput[]
    deleteMany?: RolPermisoScalarWhereInput | RolPermisoScalarWhereInput[]
  }

  export type PaisCreateNestedOneWithoutProvinciasInput = {
    create?: XOR<PaisCreateWithoutProvinciasInput, PaisUncheckedCreateWithoutProvinciasInput>
    connectOrCreate?: PaisCreateOrConnectWithoutProvinciasInput
    connect?: PaisWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutProvinciaInput = {
    create?: XOR<UserCreateWithoutProvinciaInput, UserUncheckedCreateWithoutProvinciaInput> | UserCreateWithoutProvinciaInput[] | UserUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProvinciaInput | UserCreateOrConnectWithoutProvinciaInput[]
    createMany?: UserCreateManyProvinciaInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutProvinciaInput = {
    create?: XOR<UserCreateWithoutProvinciaInput, UserUncheckedCreateWithoutProvinciaInput> | UserCreateWithoutProvinciaInput[] | UserUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProvinciaInput | UserCreateOrConnectWithoutProvinciaInput[]
    createMany?: UserCreateManyProvinciaInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type PaisUpdateOneRequiredWithoutProvinciasNestedInput = {
    create?: XOR<PaisCreateWithoutProvinciasInput, PaisUncheckedCreateWithoutProvinciasInput>
    connectOrCreate?: PaisCreateOrConnectWithoutProvinciasInput
    upsert?: PaisUpsertWithoutProvinciasInput
    connect?: PaisWhereUniqueInput
    update?: XOR<XOR<PaisUpdateToOneWithWhereWithoutProvinciasInput, PaisUpdateWithoutProvinciasInput>, PaisUncheckedUpdateWithoutProvinciasInput>
  }

  export type UserUpdateManyWithoutProvinciaNestedInput = {
    create?: XOR<UserCreateWithoutProvinciaInput, UserUncheckedCreateWithoutProvinciaInput> | UserCreateWithoutProvinciaInput[] | UserUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProvinciaInput | UserCreateOrConnectWithoutProvinciaInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutProvinciaInput | UserUpsertWithWhereUniqueWithoutProvinciaInput[]
    createMany?: UserCreateManyProvinciaInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutProvinciaInput | UserUpdateWithWhereUniqueWithoutProvinciaInput[]
    updateMany?: UserUpdateManyWithWhereWithoutProvinciaInput | UserUpdateManyWithWhereWithoutProvinciaInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutProvinciaNestedInput = {
    create?: XOR<UserCreateWithoutProvinciaInput, UserUncheckedCreateWithoutProvinciaInput> | UserCreateWithoutProvinciaInput[] | UserUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: UserCreateOrConnectWithoutProvinciaInput | UserCreateOrConnectWithoutProvinciaInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutProvinciaInput | UserUpsertWithWhereUniqueWithoutProvinciaInput[]
    createMany?: UserCreateManyProvinciaInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutProvinciaInput | UserUpdateWithWhereUniqueWithoutProvinciaInput[]
    updateMany?: UserUpdateManyWithWhereWithoutProvinciaInput | UserUpdateManyWithWhereWithoutProvinciaInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserCreateNestedManyWithoutPaisInput = {
    create?: XOR<UserCreateWithoutPaisInput, UserUncheckedCreateWithoutPaisInput> | UserCreateWithoutPaisInput[] | UserUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPaisInput | UserCreateOrConnectWithoutPaisInput[]
    createMany?: UserCreateManyPaisInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ProvinciaCreateNestedManyWithoutPaisInput = {
    create?: XOR<ProvinciaCreateWithoutPaisInput, ProvinciaUncheckedCreateWithoutPaisInput> | ProvinciaCreateWithoutPaisInput[] | ProvinciaUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: ProvinciaCreateOrConnectWithoutPaisInput | ProvinciaCreateOrConnectWithoutPaisInput[]
    createMany?: ProvinciaCreateManyPaisInputEnvelope
    connect?: ProvinciaWhereUniqueInput | ProvinciaWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutPaisInput = {
    create?: XOR<UserCreateWithoutPaisInput, UserUncheckedCreateWithoutPaisInput> | UserCreateWithoutPaisInput[] | UserUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPaisInput | UserCreateOrConnectWithoutPaisInput[]
    createMany?: UserCreateManyPaisInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ProvinciaUncheckedCreateNestedManyWithoutPaisInput = {
    create?: XOR<ProvinciaCreateWithoutPaisInput, ProvinciaUncheckedCreateWithoutPaisInput> | ProvinciaCreateWithoutPaisInput[] | ProvinciaUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: ProvinciaCreateOrConnectWithoutPaisInput | ProvinciaCreateOrConnectWithoutPaisInput[]
    createMany?: ProvinciaCreateManyPaisInputEnvelope
    connect?: ProvinciaWhereUniqueInput | ProvinciaWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutPaisNestedInput = {
    create?: XOR<UserCreateWithoutPaisInput, UserUncheckedCreateWithoutPaisInput> | UserCreateWithoutPaisInput[] | UserUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPaisInput | UserCreateOrConnectWithoutPaisInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPaisInput | UserUpsertWithWhereUniqueWithoutPaisInput[]
    createMany?: UserCreateManyPaisInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutPaisInput | UserUpdateWithWhereUniqueWithoutPaisInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPaisInput | UserUpdateManyWithWhereWithoutPaisInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ProvinciaUpdateManyWithoutPaisNestedInput = {
    create?: XOR<ProvinciaCreateWithoutPaisInput, ProvinciaUncheckedCreateWithoutPaisInput> | ProvinciaCreateWithoutPaisInput[] | ProvinciaUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: ProvinciaCreateOrConnectWithoutPaisInput | ProvinciaCreateOrConnectWithoutPaisInput[]
    upsert?: ProvinciaUpsertWithWhereUniqueWithoutPaisInput | ProvinciaUpsertWithWhereUniqueWithoutPaisInput[]
    createMany?: ProvinciaCreateManyPaisInputEnvelope
    set?: ProvinciaWhereUniqueInput | ProvinciaWhereUniqueInput[]
    disconnect?: ProvinciaWhereUniqueInput | ProvinciaWhereUniqueInput[]
    delete?: ProvinciaWhereUniqueInput | ProvinciaWhereUniqueInput[]
    connect?: ProvinciaWhereUniqueInput | ProvinciaWhereUniqueInput[]
    update?: ProvinciaUpdateWithWhereUniqueWithoutPaisInput | ProvinciaUpdateWithWhereUniqueWithoutPaisInput[]
    updateMany?: ProvinciaUpdateManyWithWhereWithoutPaisInput | ProvinciaUpdateManyWithWhereWithoutPaisInput[]
    deleteMany?: ProvinciaScalarWhereInput | ProvinciaScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutPaisNestedInput = {
    create?: XOR<UserCreateWithoutPaisInput, UserUncheckedCreateWithoutPaisInput> | UserCreateWithoutPaisInput[] | UserUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPaisInput | UserCreateOrConnectWithoutPaisInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPaisInput | UserUpsertWithWhereUniqueWithoutPaisInput[]
    createMany?: UserCreateManyPaisInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutPaisInput | UserUpdateWithWhereUniqueWithoutPaisInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPaisInput | UserUpdateManyWithWhereWithoutPaisInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ProvinciaUncheckedUpdateManyWithoutPaisNestedInput = {
    create?: XOR<ProvinciaCreateWithoutPaisInput, ProvinciaUncheckedCreateWithoutPaisInput> | ProvinciaCreateWithoutPaisInput[] | ProvinciaUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: ProvinciaCreateOrConnectWithoutPaisInput | ProvinciaCreateOrConnectWithoutPaisInput[]
    upsert?: ProvinciaUpsertWithWhereUniqueWithoutPaisInput | ProvinciaUpsertWithWhereUniqueWithoutPaisInput[]
    createMany?: ProvinciaCreateManyPaisInputEnvelope
    set?: ProvinciaWhereUniqueInput | ProvinciaWhereUniqueInput[]
    disconnect?: ProvinciaWhereUniqueInput | ProvinciaWhereUniqueInput[]
    delete?: ProvinciaWhereUniqueInput | ProvinciaWhereUniqueInput[]
    connect?: ProvinciaWhereUniqueInput | ProvinciaWhereUniqueInput[]
    update?: ProvinciaUpdateWithWhereUniqueWithoutPaisInput | ProvinciaUpdateWithWhereUniqueWithoutPaisInput[]
    updateMany?: ProvinciaUpdateManyWithWhereWithoutPaisInput | ProvinciaUpdateManyWithWhereWithoutPaisInput[]
    deleteMany?: ProvinciaScalarWhereInput | ProvinciaScalarWhereInput[]
  }

  export type UserCreateNestedManyWithoutDocumentoTipoInput = {
    create?: XOR<UserCreateWithoutDocumentoTipoInput, UserUncheckedCreateWithoutDocumentoTipoInput> | UserCreateWithoutDocumentoTipoInput[] | UserUncheckedCreateWithoutDocumentoTipoInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDocumentoTipoInput | UserCreateOrConnectWithoutDocumentoTipoInput[]
    createMany?: UserCreateManyDocumentoTipoInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutDocumentoTipoInput = {
    create?: XOR<UserCreateWithoutDocumentoTipoInput, UserUncheckedCreateWithoutDocumentoTipoInput> | UserCreateWithoutDocumentoTipoInput[] | UserUncheckedCreateWithoutDocumentoTipoInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDocumentoTipoInput | UserCreateOrConnectWithoutDocumentoTipoInput[]
    createMany?: UserCreateManyDocumentoTipoInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutDocumentoTipoNestedInput = {
    create?: XOR<UserCreateWithoutDocumentoTipoInput, UserUncheckedCreateWithoutDocumentoTipoInput> | UserCreateWithoutDocumentoTipoInput[] | UserUncheckedCreateWithoutDocumentoTipoInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDocumentoTipoInput | UserCreateOrConnectWithoutDocumentoTipoInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutDocumentoTipoInput | UserUpsertWithWhereUniqueWithoutDocumentoTipoInput[]
    createMany?: UserCreateManyDocumentoTipoInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutDocumentoTipoInput | UserUpdateWithWhereUniqueWithoutDocumentoTipoInput[]
    updateMany?: UserUpdateManyWithWhereWithoutDocumentoTipoInput | UserUpdateManyWithWhereWithoutDocumentoTipoInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutDocumentoTipoNestedInput = {
    create?: XOR<UserCreateWithoutDocumentoTipoInput, UserUncheckedCreateWithoutDocumentoTipoInput> | UserCreateWithoutDocumentoTipoInput[] | UserUncheckedCreateWithoutDocumentoTipoInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDocumentoTipoInput | UserCreateOrConnectWithoutDocumentoTipoInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutDocumentoTipoInput | UserUpsertWithWhereUniqueWithoutDocumentoTipoInput[]
    createMany?: UserCreateManyDocumentoTipoInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutDocumentoTipoInput | UserUpdateWithWhereUniqueWithoutDocumentoTipoInput[]
    updateMany?: UserUpdateManyWithWhereWithoutDocumentoTipoInput | UserUpdateManyWithWhereWithoutDocumentoTipoInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumCursoDiaFilter<$PrismaModel = never> = {
    equals?: $Enums.CursoDia | EnumCursoDiaFieldRefInput<$PrismaModel>
    in?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel>
    not?: NestedEnumCursoDiaFilter<$PrismaModel> | $Enums.CursoDia
  }

  export type NestedEnumCursoDiaNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CursoDia | EnumCursoDiaFieldRefInput<$PrismaModel> | null
    in?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCursoDiaNullableFilter<$PrismaModel> | $Enums.CursoDia | null
  }

  export type NestedEnumTurnoCursoFilter<$PrismaModel = never> = {
    equals?: $Enums.TurnoCurso | EnumTurnoCursoFieldRefInput<$PrismaModel>
    in?: $Enums.TurnoCurso[] | ListEnumTurnoCursoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TurnoCurso[] | ListEnumTurnoCursoFieldRefInput<$PrismaModel>
    not?: NestedEnumTurnoCursoFilter<$PrismaModel> | $Enums.TurnoCurso
  }

  export type NestedEnumCursoDiaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CursoDia | EnumCursoDiaFieldRefInput<$PrismaModel>
    in?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel>
    not?: NestedEnumCursoDiaWithAggregatesFilter<$PrismaModel> | $Enums.CursoDia
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCursoDiaFilter<$PrismaModel>
    _max?: NestedEnumCursoDiaFilter<$PrismaModel>
  }

  export type NestedEnumCursoDiaNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CursoDia | EnumCursoDiaFieldRefInput<$PrismaModel> | null
    in?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CursoDia[] | ListEnumCursoDiaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCursoDiaNullableWithAggregatesFilter<$PrismaModel> | $Enums.CursoDia | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCursoDiaNullableFilter<$PrismaModel>
    _max?: NestedEnumCursoDiaNullableFilter<$PrismaModel>
  }

  export type NestedEnumTurnoCursoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TurnoCurso | EnumTurnoCursoFieldRefInput<$PrismaModel>
    in?: $Enums.TurnoCurso[] | ListEnumTurnoCursoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TurnoCurso[] | ListEnumTurnoCursoFieldRefInput<$PrismaModel>
    not?: NestedEnumTurnoCursoWithAggregatesFilter<$PrismaModel> | $Enums.TurnoCurso
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTurnoCursoFilter<$PrismaModel>
    _max?: NestedEnumTurnoCursoFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumMateriaDuracionFilter<$PrismaModel = never> = {
    equals?: $Enums.MateriaDuracion | EnumMateriaDuracionFieldRefInput<$PrismaModel>
    in?: $Enums.MateriaDuracion[] | ListEnumMateriaDuracionFieldRefInput<$PrismaModel>
    notIn?: $Enums.MateriaDuracion[] | ListEnumMateriaDuracionFieldRefInput<$PrismaModel>
    not?: NestedEnumMateriaDuracionFilter<$PrismaModel> | $Enums.MateriaDuracion
  }

  export type NestedEnumMateriaTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.MateriaTipo | EnumMateriaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.MateriaTipo[] | ListEnumMateriaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MateriaTipo[] | ListEnumMateriaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumMateriaTipoFilter<$PrismaModel> | $Enums.MateriaTipo
  }

  export type NestedEnumMateriaDuracionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MateriaDuracion | EnumMateriaDuracionFieldRefInput<$PrismaModel>
    in?: $Enums.MateriaDuracion[] | ListEnumMateriaDuracionFieldRefInput<$PrismaModel>
    notIn?: $Enums.MateriaDuracion[] | ListEnumMateriaDuracionFieldRefInput<$PrismaModel>
    not?: NestedEnumMateriaDuracionWithAggregatesFilter<$PrismaModel> | $Enums.MateriaDuracion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMateriaDuracionFilter<$PrismaModel>
    _max?: NestedEnumMateriaDuracionFilter<$PrismaModel>
  }

  export type NestedEnumMateriaTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MateriaTipo | EnumMateriaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.MateriaTipo[] | ListEnumMateriaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MateriaTipo[] | ListEnumMateriaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumMateriaTipoWithAggregatesFilter<$PrismaModel> | $Enums.MateriaTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMateriaTipoFilter<$PrismaModel>
    _max?: NestedEnumMateriaTipoFilter<$PrismaModel>
  }

  export type NestedEnumEstatusCorrelativaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstatusCorrelativa | EnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    in?: $Enums.EstatusCorrelativa[] | ListEnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstatusCorrelativa[] | ListEnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstatusCorrelativaFilter<$PrismaModel> | $Enums.EstatusCorrelativa
  }

  export type NestedEnumEstatusCorrelativaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstatusCorrelativa | EnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    in?: $Enums.EstatusCorrelativa[] | ListEnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstatusCorrelativa[] | ListEnumEstatusCorrelativaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstatusCorrelativaWithAggregatesFilter<$PrismaModel> | $Enums.EstatusCorrelativa
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstatusCorrelativaFilter<$PrismaModel>
    _max?: NestedEnumEstatusCorrelativaFilter<$PrismaModel>
  }

  export type NestedEnumReservaEstatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaEstatus | EnumReservaEstatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaEstatus[] | ListEnumReservaEstatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaEstatus[] | ListEnumReservaEstatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaEstatusFilter<$PrismaModel> | $Enums.ReservaEstatus
  }

  export type NestedEnumReservaTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaTipo | EnumReservaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaTipo[] | ListEnumReservaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaTipo[] | ListEnumReservaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaTipoFilter<$PrismaModel> | $Enums.ReservaTipo
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumReservaEstatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaEstatus | EnumReservaEstatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaEstatus[] | ListEnumReservaEstatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaEstatus[] | ListEnumReservaEstatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaEstatusWithAggregatesFilter<$PrismaModel> | $Enums.ReservaEstatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservaEstatusFilter<$PrismaModel>
    _max?: NestedEnumReservaEstatusFilter<$PrismaModel>
  }

  export type NestedEnumReservaTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaTipo | EnumReservaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaTipo[] | ListEnumReservaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaTipo[] | ListEnumReservaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaTipoWithAggregatesFilter<$PrismaModel> | $Enums.ReservaTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservaTipoFilter<$PrismaModel>
    _max?: NestedEnumReservaTipoFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumLaboratorioAbiertoTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.LaboratorioAbiertoTipo | EnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    in?: $Enums.LaboratorioAbiertoTipo[] | ListEnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.LaboratorioAbiertoTipo[] | ListEnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumLaboratorioAbiertoTipoFilter<$PrismaModel> | $Enums.LaboratorioAbiertoTipo
  }

  export type NestedEnumLaboratorioAbiertoTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LaboratorioAbiertoTipo | EnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    in?: $Enums.LaboratorioAbiertoTipo[] | ListEnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.LaboratorioAbiertoTipo[] | ListEnumLaboratorioAbiertoTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumLaboratorioAbiertoTipoWithAggregatesFilter<$PrismaModel> | $Enums.LaboratorioAbiertoTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLaboratorioAbiertoTipoFilter<$PrismaModel>
    _max?: NestedEnumLaboratorioAbiertoTipoFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumSgeNombreFilter<$PrismaModel = never> = {
    equals?: $Enums.SgeNombre | EnumSgeNombreFieldRefInput<$PrismaModel>
    in?: $Enums.SgeNombre[] | ListEnumSgeNombreFieldRefInput<$PrismaModel>
    notIn?: $Enums.SgeNombre[] | ListEnumSgeNombreFieldRefInput<$PrismaModel>
    not?: NestedEnumSgeNombreFilter<$PrismaModel> | $Enums.SgeNombre
  }

  export type NestedEnumSgeNombreWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SgeNombre | EnumSgeNombreFieldRefInput<$PrismaModel>
    in?: $Enums.SgeNombre[] | ListEnumSgeNombreFieldRefInput<$PrismaModel>
    notIn?: $Enums.SgeNombre[] | ListEnumSgeNombreFieldRefInput<$PrismaModel>
    not?: NestedEnumSgeNombreWithAggregatesFilter<$PrismaModel> | $Enums.SgeNombre
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSgeNombreFilter<$PrismaModel>
    _max?: NestedEnumSgeNombreFilter<$PrismaModel>
  }

  export type LibroMateriaCreateWithoutLibroInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    materia: MateriaCreateNestedOneWithoutLibrosInput
  }

  export type LibroMateriaUncheckedCreateWithoutLibroInput = {
    materiaId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroMateriaCreateOrConnectWithoutLibroInput = {
    where: LibroMateriaWhereUniqueInput
    create: XOR<LibroMateriaCreateWithoutLibroInput, LibroMateriaUncheckedCreateWithoutLibroInput>
  }

  export type LibroMateriaCreateManyLibroInputEnvelope = {
    data: LibroMateriaCreateManyLibroInput | LibroMateriaCreateManyLibroInput[]
    skipDuplicates?: boolean
  }

  export type LaboratorioCreateWithoutLibrosInput = {
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    sede: SedeCreateNestedOneWithoutLaboratoriosInput
    software?: SoftwareLaboratorioCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioUncheckedCreateWithoutLibrosInput = {
    id?: number
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    software?: SoftwareLaboratorioUncheckedCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioUncheckedCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioCreateOrConnectWithoutLibrosInput = {
    where: LaboratorioWhereUniqueInput
    create: XOR<LaboratorioCreateWithoutLibrosInput, LaboratorioUncheckedCreateWithoutLibrosInput>
  }

  export type ArmarioCreateWithoutLibrosInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    laboratorio: LaboratorioCreateNestedOneWithoutArmariosInput
    estantes?: EstanteCreateNestedManyWithoutArmarioInput
    equipos?: EquipoCreateNestedManyWithoutArmarioInput
  }

  export type ArmarioUncheckedCreateWithoutLibrosInput = {
    id?: number
    nombre: string
    laboratorioId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    estantes?: EstanteUncheckedCreateNestedManyWithoutArmarioInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutArmarioInput
  }

  export type ArmarioCreateOrConnectWithoutLibrosInput = {
    where: ArmarioWhereUniqueInput
    create: XOR<ArmarioCreateWithoutLibrosInput, ArmarioUncheckedCreateWithoutLibrosInput>
  }

  export type EstanteCreateWithoutLibrosInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    armario: ArmarioCreateNestedOneWithoutEstantesInput
    equipos?: EquipoCreateNestedManyWithoutEstanteInput
  }

  export type EstanteUncheckedCreateWithoutLibrosInput = {
    id?: number
    nombre: string
    armarioId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipos?: EquipoUncheckedCreateNestedManyWithoutEstanteInput
  }

  export type EstanteCreateOrConnectWithoutLibrosInput = {
    where: EstanteWhereUniqueInput
    create: XOR<EstanteCreateWithoutLibrosInput, EstanteUncheckedCreateWithoutLibrosInput>
  }

  export type LibroAutorCreateWithoutLibrosInput = {
    autorNombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroAutorUncheckedCreateWithoutLibrosInput = {
    id?: number
    autorNombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroAutorCreateOrConnectWithoutLibrosInput = {
    where: LibroAutorWhereUniqueInput
    create: XOR<LibroAutorCreateWithoutLibrosInput, LibroAutorUncheckedCreateWithoutLibrosInput>
  }

  export type LibroIdiomaCreateWithoutLibrosInput = {
    idioma: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroIdiomaUncheckedCreateWithoutLibrosInput = {
    id?: number
    idioma: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroIdiomaCreateOrConnectWithoutLibrosInput = {
    where: LibroIdiomaWhereUniqueInput
    create: XOR<LibroIdiomaCreateWithoutLibrosInput, LibroIdiomaUncheckedCreateWithoutLibrosInput>
  }

  export type LibroEditorialCreateWithoutLibrosInput = {
    editorial: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroEditorialUncheckedCreateWithoutLibrosInput = {
    id?: number
    editorial: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroEditorialCreateOrConnectWithoutLibrosInput = {
    where: LibroEditorialWhereUniqueInput
    create: XOR<LibroEditorialCreateWithoutLibrosInput, LibroEditorialUncheckedCreateWithoutLibrosInput>
  }

  export type SedeCreateWithoutLibrosInput = {
    nombre: string
    cursos?: CursoCreateNestedManyWithoutSedeInput
    equipos?: EquipoCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutLibrosInput = {
    id?: number
    nombre: string
    cursos?: CursoUncheckedCreateNestedManyWithoutSedeInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutLibrosInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutLibrosInput, SedeUncheckedCreateWithoutLibrosInput>
  }

  export type ReservaLibroCreateWithoutLibroInput = {
    fechaEntregado: Date | string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLibroInput
  }

  export type ReservaLibroUncheckedCreateWithoutLibroInput = {
    id?: number
    fechaEntregado: Date | string
    reservaId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLibroCreateOrConnectWithoutLibroInput = {
    where: ReservaLibroWhereUniqueInput
    create: XOR<ReservaLibroCreateWithoutLibroInput, ReservaLibroUncheckedCreateWithoutLibroInput>
  }

  export type ReservaLibroCreateManyLibroInputEnvelope = {
    data: ReservaLibroCreateManyLibroInput | ReservaLibroCreateManyLibroInput[]
    skipDuplicates?: boolean
  }

  export type LibroMateriaUpsertWithWhereUniqueWithoutLibroInput = {
    where: LibroMateriaWhereUniqueInput
    update: XOR<LibroMateriaUpdateWithoutLibroInput, LibroMateriaUncheckedUpdateWithoutLibroInput>
    create: XOR<LibroMateriaCreateWithoutLibroInput, LibroMateriaUncheckedCreateWithoutLibroInput>
  }

  export type LibroMateriaUpdateWithWhereUniqueWithoutLibroInput = {
    where: LibroMateriaWhereUniqueInput
    data: XOR<LibroMateriaUpdateWithoutLibroInput, LibroMateriaUncheckedUpdateWithoutLibroInput>
  }

  export type LibroMateriaUpdateManyWithWhereWithoutLibroInput = {
    where: LibroMateriaScalarWhereInput
    data: XOR<LibroMateriaUpdateManyMutationInput, LibroMateriaUncheckedUpdateManyWithoutLibroInput>
  }

  export type LibroMateriaScalarWhereInput = {
    AND?: LibroMateriaScalarWhereInput | LibroMateriaScalarWhereInput[]
    OR?: LibroMateriaScalarWhereInput[]
    NOT?: LibroMateriaScalarWhereInput | LibroMateriaScalarWhereInput[]
    libroId?: IntFilter<"LibroMateria"> | number
    materiaId?: IntFilter<"LibroMateria"> | number
    fechaCreacion?: DateTimeFilter<"LibroMateria"> | Date | string
    usuarioCreadorId?: StringFilter<"LibroMateria"> | string
  }

  export type LaboratorioUpsertWithoutLibrosInput = {
    update: XOR<LaboratorioUpdateWithoutLibrosInput, LaboratorioUncheckedUpdateWithoutLibrosInput>
    create: XOR<LaboratorioCreateWithoutLibrosInput, LaboratorioUncheckedCreateWithoutLibrosInput>
    where?: LaboratorioWhereInput
  }

  export type LaboratorioUpdateToOneWithWhereWithoutLibrosInput = {
    where?: LaboratorioWhereInput
    data: XOR<LaboratorioUpdateWithoutLibrosInput, LaboratorioUncheckedUpdateWithoutLibrosInput>
  }

  export type LaboratorioUpdateWithoutLibrosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    sede?: SedeUpdateOneRequiredWithoutLaboratoriosNestedInput
    software?: SoftwareLaboratorioUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutLaboratorioNestedInput
  }

  export type LaboratorioUncheckedUpdateWithoutLibrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    sedeId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    software?: SoftwareLaboratorioUncheckedUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUncheckedUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutLaboratorioNestedInput
  }

  export type ArmarioUpsertWithoutLibrosInput = {
    update: XOR<ArmarioUpdateWithoutLibrosInput, ArmarioUncheckedUpdateWithoutLibrosInput>
    create: XOR<ArmarioCreateWithoutLibrosInput, ArmarioUncheckedCreateWithoutLibrosInput>
    where?: ArmarioWhereInput
  }

  export type ArmarioUpdateToOneWithWhereWithoutLibrosInput = {
    where?: ArmarioWhereInput
    data: XOR<ArmarioUpdateWithoutLibrosInput, ArmarioUncheckedUpdateWithoutLibrosInput>
  }

  export type ArmarioUpdateWithoutLibrosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    laboratorio?: LaboratorioUpdateOneRequiredWithoutArmariosNestedInput
    estantes?: EstanteUpdateManyWithoutArmarioNestedInput
    equipos?: EquipoUpdateManyWithoutArmarioNestedInput
  }

  export type ArmarioUncheckedUpdateWithoutLibrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    laboratorioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    estantes?: EstanteUncheckedUpdateManyWithoutArmarioNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutArmarioNestedInput
  }

  export type EstanteUpsertWithoutLibrosInput = {
    update: XOR<EstanteUpdateWithoutLibrosInput, EstanteUncheckedUpdateWithoutLibrosInput>
    create: XOR<EstanteCreateWithoutLibrosInput, EstanteUncheckedCreateWithoutLibrosInput>
    where?: EstanteWhereInput
  }

  export type EstanteUpdateToOneWithWhereWithoutLibrosInput = {
    where?: EstanteWhereInput
    data: XOR<EstanteUpdateWithoutLibrosInput, EstanteUncheckedUpdateWithoutLibrosInput>
  }

  export type EstanteUpdateWithoutLibrosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    armario?: ArmarioUpdateOneRequiredWithoutEstantesNestedInput
    equipos?: EquipoUpdateManyWithoutEstanteNestedInput
  }

  export type EstanteUncheckedUpdateWithoutLibrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    armarioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUncheckedUpdateManyWithoutEstanteNestedInput
  }

  export type LibroAutorUpsertWithoutLibrosInput = {
    update: XOR<LibroAutorUpdateWithoutLibrosInput, LibroAutorUncheckedUpdateWithoutLibrosInput>
    create: XOR<LibroAutorCreateWithoutLibrosInput, LibroAutorUncheckedCreateWithoutLibrosInput>
    where?: LibroAutorWhereInput
  }

  export type LibroAutorUpdateToOneWithWhereWithoutLibrosInput = {
    where?: LibroAutorWhereInput
    data: XOR<LibroAutorUpdateWithoutLibrosInput, LibroAutorUncheckedUpdateWithoutLibrosInput>
  }

  export type LibroAutorUpdateWithoutLibrosInput = {
    autorNombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroAutorUncheckedUpdateWithoutLibrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    autorNombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroIdiomaUpsertWithoutLibrosInput = {
    update: XOR<LibroIdiomaUpdateWithoutLibrosInput, LibroIdiomaUncheckedUpdateWithoutLibrosInput>
    create: XOR<LibroIdiomaCreateWithoutLibrosInput, LibroIdiomaUncheckedCreateWithoutLibrosInput>
    where?: LibroIdiomaWhereInput
  }

  export type LibroIdiomaUpdateToOneWithWhereWithoutLibrosInput = {
    where?: LibroIdiomaWhereInput
    data: XOR<LibroIdiomaUpdateWithoutLibrosInput, LibroIdiomaUncheckedUpdateWithoutLibrosInput>
  }

  export type LibroIdiomaUpdateWithoutLibrosInput = {
    idioma?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroIdiomaUncheckedUpdateWithoutLibrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    idioma?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroEditorialUpsertWithoutLibrosInput = {
    update: XOR<LibroEditorialUpdateWithoutLibrosInput, LibroEditorialUncheckedUpdateWithoutLibrosInput>
    create: XOR<LibroEditorialCreateWithoutLibrosInput, LibroEditorialUncheckedCreateWithoutLibrosInput>
    where?: LibroEditorialWhereInput
  }

  export type LibroEditorialUpdateToOneWithWhereWithoutLibrosInput = {
    where?: LibroEditorialWhereInput
    data: XOR<LibroEditorialUpdateWithoutLibrosInput, LibroEditorialUncheckedUpdateWithoutLibrosInput>
  }

  export type LibroEditorialUpdateWithoutLibrosInput = {
    editorial?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroEditorialUncheckedUpdateWithoutLibrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    editorial?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SedeUpsertWithoutLibrosInput = {
    update: XOR<SedeUpdateWithoutLibrosInput, SedeUncheckedUpdateWithoutLibrosInput>
    create: XOR<SedeCreateWithoutLibrosInput, SedeUncheckedCreateWithoutLibrosInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutLibrosInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutLibrosInput, SedeUncheckedUpdateWithoutLibrosInput>
  }

  export type SedeUpdateWithoutLibrosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutLibrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUncheckedUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type ReservaLibroUpsertWithWhereUniqueWithoutLibroInput = {
    where: ReservaLibroWhereUniqueInput
    update: XOR<ReservaLibroUpdateWithoutLibroInput, ReservaLibroUncheckedUpdateWithoutLibroInput>
    create: XOR<ReservaLibroCreateWithoutLibroInput, ReservaLibroUncheckedCreateWithoutLibroInput>
  }

  export type ReservaLibroUpdateWithWhereUniqueWithoutLibroInput = {
    where: ReservaLibroWhereUniqueInput
    data: XOR<ReservaLibroUpdateWithoutLibroInput, ReservaLibroUncheckedUpdateWithoutLibroInput>
  }

  export type ReservaLibroUpdateManyWithWhereWithoutLibroInput = {
    where: ReservaLibroScalarWhereInput
    data: XOR<ReservaLibroUpdateManyMutationInput, ReservaLibroUncheckedUpdateManyWithoutLibroInput>
  }

  export type ReservaLibroScalarWhereInput = {
    AND?: ReservaLibroScalarWhereInput | ReservaLibroScalarWhereInput[]
    OR?: ReservaLibroScalarWhereInput[]
    NOT?: ReservaLibroScalarWhereInput | ReservaLibroScalarWhereInput[]
    id?: IntFilter<"ReservaLibro"> | number
    fechaEntregado?: DateTimeFilter<"ReservaLibro"> | Date | string
    reservaId?: IntFilter<"ReservaLibro"> | number
    libroId?: IntFilter<"ReservaLibro"> | number
    fechaCreacion?: DateTimeFilter<"ReservaLibro"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLibro"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLibro"> | string
    usuarioModificadorId?: StringFilter<"ReservaLibro"> | string
  }

  export type LibroCreateWithoutMateriasInput = {
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    laboratorio: LaboratorioCreateNestedOneWithoutLibrosInput
    armario?: ArmarioCreateNestedOneWithoutLibrosInput
    estante?: EstanteCreateNestedOneWithoutLibrosInput
    autor: LibroAutorCreateNestedOneWithoutLibrosInput
    idioma: LibroIdiomaCreateNestedOneWithoutLibrosInput
    editorial: LibroEditorialCreateNestedOneWithoutLibrosInput
    sede: SedeCreateNestedOneWithoutLibrosInput
    reservas?: ReservaLibroCreateNestedManyWithoutLibroInput
  }

  export type LibroUncheckedCreateWithoutMateriasInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservas?: ReservaLibroUncheckedCreateNestedManyWithoutLibroInput
  }

  export type LibroCreateOrConnectWithoutMateriasInput = {
    where: LibroWhereUniqueInput
    create: XOR<LibroCreateWithoutMateriasInput, LibroUncheckedCreateWithoutMateriasInput>
  }

  export type MateriaCreateWithoutLibrosInput = {
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    directorUsuario?: UserCreateNestedOneWithoutMateriasDirectorInput
    jefeTrabajoPracticos?: MateriaJefeTpCreateNestedManyWithoutMateriaInput
    cursos?: CursoCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaUncheckedCreateWithoutLibrosInput = {
    id?: number
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    directorUsuarioId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedCreateNestedManyWithoutMateriaInput
    cursos?: CursoUncheckedCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaUncheckedCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaCreateOrConnectWithoutLibrosInput = {
    where: MateriaWhereUniqueInput
    create: XOR<MateriaCreateWithoutLibrosInput, MateriaUncheckedCreateWithoutLibrosInput>
  }

  export type LibroUpsertWithoutMateriasInput = {
    update: XOR<LibroUpdateWithoutMateriasInput, LibroUncheckedUpdateWithoutMateriasInput>
    create: XOR<LibroCreateWithoutMateriasInput, LibroUncheckedCreateWithoutMateriasInput>
    where?: LibroWhereInput
  }

  export type LibroUpdateToOneWithWhereWithoutMateriasInput = {
    where?: LibroWhereInput
    data: XOR<LibroUpdateWithoutMateriasInput, LibroUncheckedUpdateWithoutMateriasInput>
  }

  export type LibroUpdateWithoutMateriasInput = {
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    laboratorio?: LaboratorioUpdateOneRequiredWithoutLibrosNestedInput
    armario?: ArmarioUpdateOneWithoutLibrosNestedInput
    estante?: EstanteUpdateOneWithoutLibrosNestedInput
    autor?: LibroAutorUpdateOneRequiredWithoutLibrosNestedInput
    idioma?: LibroIdiomaUpdateOneRequiredWithoutLibrosNestedInput
    editorial?: LibroEditorialUpdateOneRequiredWithoutLibrosNestedInput
    sede?: SedeUpdateOneRequiredWithoutLibrosNestedInput
    reservas?: ReservaLibroUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateWithoutMateriasInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservas?: ReservaLibroUncheckedUpdateManyWithoutLibroNestedInput
  }

  export type MateriaUpsertWithoutLibrosInput = {
    update: XOR<MateriaUpdateWithoutLibrosInput, MateriaUncheckedUpdateWithoutLibrosInput>
    create: XOR<MateriaCreateWithoutLibrosInput, MateriaUncheckedCreateWithoutLibrosInput>
    where?: MateriaWhereInput
  }

  export type MateriaUpdateToOneWithWhereWithoutLibrosInput = {
    where?: MateriaWhereInput
    data: XOR<MateriaUpdateWithoutLibrosInput, MateriaUncheckedUpdateWithoutLibrosInput>
  }

  export type MateriaUpdateWithoutLibrosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    directorUsuario?: UserUpdateOneWithoutMateriasDirectorNestedInput
    jefeTrabajoPracticos?: MateriaJefeTpUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type MateriaUncheckedUpdateWithoutLibrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    directorUsuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUncheckedUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUncheckedUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type LibroCreateWithoutAutorInput = {
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaCreateNestedManyWithoutLibroInput
    laboratorio: LaboratorioCreateNestedOneWithoutLibrosInput
    armario?: ArmarioCreateNestedOneWithoutLibrosInput
    estante?: EstanteCreateNestedOneWithoutLibrosInput
    idioma: LibroIdiomaCreateNestedOneWithoutLibrosInput
    editorial: LibroEditorialCreateNestedOneWithoutLibrosInput
    sede: SedeCreateNestedOneWithoutLibrosInput
    reservas?: ReservaLibroCreateNestedManyWithoutLibroInput
  }

  export type LibroUncheckedCreateWithoutAutorInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaUncheckedCreateNestedManyWithoutLibroInput
    reservas?: ReservaLibroUncheckedCreateNestedManyWithoutLibroInput
  }

  export type LibroCreateOrConnectWithoutAutorInput = {
    where: LibroWhereUniqueInput
    create: XOR<LibroCreateWithoutAutorInput, LibroUncheckedCreateWithoutAutorInput>
  }

  export type LibroCreateManyAutorInputEnvelope = {
    data: LibroCreateManyAutorInput | LibroCreateManyAutorInput[]
    skipDuplicates?: boolean
  }

  export type LibroUpsertWithWhereUniqueWithoutAutorInput = {
    where: LibroWhereUniqueInput
    update: XOR<LibroUpdateWithoutAutorInput, LibroUncheckedUpdateWithoutAutorInput>
    create: XOR<LibroCreateWithoutAutorInput, LibroUncheckedCreateWithoutAutorInput>
  }

  export type LibroUpdateWithWhereUniqueWithoutAutorInput = {
    where: LibroWhereUniqueInput
    data: XOR<LibroUpdateWithoutAutorInput, LibroUncheckedUpdateWithoutAutorInput>
  }

  export type LibroUpdateManyWithWhereWithoutAutorInput = {
    where: LibroScalarWhereInput
    data: XOR<LibroUpdateManyMutationInput, LibroUncheckedUpdateManyWithoutAutorInput>
  }

  export type LibroScalarWhereInput = {
    AND?: LibroScalarWhereInput | LibroScalarWhereInput[]
    OR?: LibroScalarWhereInput[]
    NOT?: LibroScalarWhereInput | LibroScalarWhereInput[]
    id?: IntFilter<"Libro"> | number
    bibliotecaId?: StringNullableFilter<"Libro"> | string | null
    inventarioId?: StringFilter<"Libro"> | string
    titulo?: StringFilter<"Libro"> | string
    anio?: IntFilter<"Libro"> | number
    isbn?: StringNullableFilter<"Libro"> | string | null
    laboratorioId?: IntFilter<"Libro"> | number
    armarioId?: IntNullableFilter<"Libro"> | number | null
    estanteId?: IntNullableFilter<"Libro"> | number | null
    autorId?: IntFilter<"Libro"> | number
    idiomaId?: IntFilter<"Libro"> | number
    editorialId?: IntFilter<"Libro"> | number
    sedeId?: IntFilter<"Libro"> | number
    disponible?: BoolFilter<"Libro"> | boolean
    fechaCreacion?: DateTimeFilter<"Libro"> | Date | string
    fechaModificacion?: DateTimeFilter<"Libro"> | Date | string
    usuarioCreadorId?: StringFilter<"Libro"> | string
    usuarioModificadorId?: StringFilter<"Libro"> | string
  }

  export type LibroCreateWithoutIdiomaInput = {
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaCreateNestedManyWithoutLibroInput
    laboratorio: LaboratorioCreateNestedOneWithoutLibrosInput
    armario?: ArmarioCreateNestedOneWithoutLibrosInput
    estante?: EstanteCreateNestedOneWithoutLibrosInput
    autor: LibroAutorCreateNestedOneWithoutLibrosInput
    editorial: LibroEditorialCreateNestedOneWithoutLibrosInput
    sede: SedeCreateNestedOneWithoutLibrosInput
    reservas?: ReservaLibroCreateNestedManyWithoutLibroInput
  }

  export type LibroUncheckedCreateWithoutIdiomaInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaUncheckedCreateNestedManyWithoutLibroInput
    reservas?: ReservaLibroUncheckedCreateNestedManyWithoutLibroInput
  }

  export type LibroCreateOrConnectWithoutIdiomaInput = {
    where: LibroWhereUniqueInput
    create: XOR<LibroCreateWithoutIdiomaInput, LibroUncheckedCreateWithoutIdiomaInput>
  }

  export type LibroCreateManyIdiomaInputEnvelope = {
    data: LibroCreateManyIdiomaInput | LibroCreateManyIdiomaInput[]
    skipDuplicates?: boolean
  }

  export type LibroUpsertWithWhereUniqueWithoutIdiomaInput = {
    where: LibroWhereUniqueInput
    update: XOR<LibroUpdateWithoutIdiomaInput, LibroUncheckedUpdateWithoutIdiomaInput>
    create: XOR<LibroCreateWithoutIdiomaInput, LibroUncheckedCreateWithoutIdiomaInput>
  }

  export type LibroUpdateWithWhereUniqueWithoutIdiomaInput = {
    where: LibroWhereUniqueInput
    data: XOR<LibroUpdateWithoutIdiomaInput, LibroUncheckedUpdateWithoutIdiomaInput>
  }

  export type LibroUpdateManyWithWhereWithoutIdiomaInput = {
    where: LibroScalarWhereInput
    data: XOR<LibroUpdateManyMutationInput, LibroUncheckedUpdateManyWithoutIdiomaInput>
  }

  export type LibroCreateWithoutEditorialInput = {
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaCreateNestedManyWithoutLibroInput
    laboratorio: LaboratorioCreateNestedOneWithoutLibrosInput
    armario?: ArmarioCreateNestedOneWithoutLibrosInput
    estante?: EstanteCreateNestedOneWithoutLibrosInput
    autor: LibroAutorCreateNestedOneWithoutLibrosInput
    idioma: LibroIdiomaCreateNestedOneWithoutLibrosInput
    sede: SedeCreateNestedOneWithoutLibrosInput
    reservas?: ReservaLibroCreateNestedManyWithoutLibroInput
  }

  export type LibroUncheckedCreateWithoutEditorialInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    idiomaId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaUncheckedCreateNestedManyWithoutLibroInput
    reservas?: ReservaLibroUncheckedCreateNestedManyWithoutLibroInput
  }

  export type LibroCreateOrConnectWithoutEditorialInput = {
    where: LibroWhereUniqueInput
    create: XOR<LibroCreateWithoutEditorialInput, LibroUncheckedCreateWithoutEditorialInput>
  }

  export type LibroCreateManyEditorialInputEnvelope = {
    data: LibroCreateManyEditorialInput | LibroCreateManyEditorialInput[]
    skipDuplicates?: boolean
  }

  export type LibroUpsertWithWhereUniqueWithoutEditorialInput = {
    where: LibroWhereUniqueInput
    update: XOR<LibroUpdateWithoutEditorialInput, LibroUncheckedUpdateWithoutEditorialInput>
    create: XOR<LibroCreateWithoutEditorialInput, LibroUncheckedCreateWithoutEditorialInput>
  }

  export type LibroUpdateWithWhereUniqueWithoutEditorialInput = {
    where: LibroWhereUniqueInput
    data: XOR<LibroUpdateWithoutEditorialInput, LibroUncheckedUpdateWithoutEditorialInput>
  }

  export type LibroUpdateManyWithWhereWithoutEditorialInput = {
    where: LibroScalarWhereInput
    data: XOR<LibroUpdateManyMutationInput, LibroUncheckedUpdateManyWithoutEditorialInput>
  }

  export type CursoAyudanteCreateWithoutCursoInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
    usuario: UserCreateNestedOneWithoutCursosComoAyudanteInput
  }

  export type CursoAyudanteUncheckedCreateWithoutCursoInput = {
    userId: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
  }

  export type CursoAyudanteCreateOrConnectWithoutCursoInput = {
    where: CursoAyudanteWhereUniqueInput
    create: XOR<CursoAyudanteCreateWithoutCursoInput, CursoAyudanteUncheckedCreateWithoutCursoInput>
  }

  export type CursoAyudanteCreateManyCursoInputEnvelope = {
    data: CursoAyudanteCreateManyCursoInput | CursoAyudanteCreateManyCursoInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCursosComoProfesorInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutCursosComoProfesorInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutCursosComoProfesorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCursosComoProfesorInput, UserUncheckedCreateWithoutCursosComoProfesorInput>
  }

  export type SedeCreateWithoutCursosInput = {
    nombre: string
    equipos?: EquipoCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioCreateNestedManyWithoutSedeInput
    libros?: LibroCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutCursosInput = {
    id?: number
    nombre: string
    equipos?: EquipoUncheckedCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioUncheckedCreateNestedManyWithoutSedeInput
    libros?: LibroUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutCursosInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutCursosInput, SedeUncheckedCreateWithoutCursosInput>
  }

  export type MateriaCreateWithoutCursosInput = {
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    directorUsuario?: UserCreateNestedOneWithoutMateriasDirectorInput
    jefeTrabajoPracticos?: MateriaJefeTpCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaUncheckedCreateWithoutCursosInput = {
    id?: number
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    directorUsuarioId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaUncheckedCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaUncheckedCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaCreateOrConnectWithoutCursosInput = {
    where: MateriaWhereUniqueInput
    create: XOR<MateriaCreateWithoutCursosInput, MateriaUncheckedCreateWithoutCursosInput>
  }

  export type DivisionCreateWithoutCursosInput = {
    nombre: string
    anio: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
  }

  export type DivisionUncheckedCreateWithoutCursosInput = {
    id?: number
    nombre: string
    anio: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
  }

  export type DivisionCreateOrConnectWithoutCursosInput = {
    where: DivisionWhereUniqueInput
    create: XOR<DivisionCreateWithoutCursosInput, DivisionUncheckedCreateWithoutCursosInput>
  }

  export type ReservaLaboratorioCerradoCreateWithoutCursoInput = {
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    sede: SedeCreateNestedOneWithoutReservaLaboratorioCerradoInput
    laboratorio?: LaboratorioCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalMateria?: MateriaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalDocente?: UserCreateNestedOneWithoutReservaLaboratorioCerradoInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoUncheckedCreateWithoutCursoInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoCreateOrConnectWithoutCursoInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    create: XOR<ReservaLaboratorioCerradoCreateWithoutCursoInput, ReservaLaboratorioCerradoUncheckedCreateWithoutCursoInput>
  }

  export type ReservaLaboratorioCerradoCreateManyCursoInputEnvelope = {
    data: ReservaLaboratorioCerradoCreateManyCursoInput | ReservaLaboratorioCerradoCreateManyCursoInput[]
    skipDuplicates?: boolean
  }

  export type CursoAyudanteUpsertWithWhereUniqueWithoutCursoInput = {
    where: CursoAyudanteWhereUniqueInput
    update: XOR<CursoAyudanteUpdateWithoutCursoInput, CursoAyudanteUncheckedUpdateWithoutCursoInput>
    create: XOR<CursoAyudanteCreateWithoutCursoInput, CursoAyudanteUncheckedCreateWithoutCursoInput>
  }

  export type CursoAyudanteUpdateWithWhereUniqueWithoutCursoInput = {
    where: CursoAyudanteWhereUniqueInput
    data: XOR<CursoAyudanteUpdateWithoutCursoInput, CursoAyudanteUncheckedUpdateWithoutCursoInput>
  }

  export type CursoAyudanteUpdateManyWithWhereWithoutCursoInput = {
    where: CursoAyudanteScalarWhereInput
    data: XOR<CursoAyudanteUpdateManyMutationInput, CursoAyudanteUncheckedUpdateManyWithoutCursoInput>
  }

  export type CursoAyudanteScalarWhereInput = {
    AND?: CursoAyudanteScalarWhereInput | CursoAyudanteScalarWhereInput[]
    OR?: CursoAyudanteScalarWhereInput[]
    NOT?: CursoAyudanteScalarWhereInput | CursoAyudanteScalarWhereInput[]
    cursoId?: IntFilter<"CursoAyudante"> | number
    userId?: StringFilter<"CursoAyudante"> | string
    fechaCreacion?: DateTimeFilter<"CursoAyudante"> | Date | string
    usuarioCreadorId?: StringFilter<"CursoAyudante"> | string
    fechaModificacion?: DateTimeFilter<"CursoAyudante"> | Date | string
    usuarioModificadorId?: StringFilter<"CursoAyudante"> | string
  }

  export type UserUpsertWithoutCursosComoProfesorInput = {
    update: XOR<UserUpdateWithoutCursosComoProfesorInput, UserUncheckedUpdateWithoutCursosComoProfesorInput>
    create: XOR<UserCreateWithoutCursosComoProfesorInput, UserUncheckedCreateWithoutCursosComoProfesorInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCursosComoProfesorInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCursosComoProfesorInput, UserUncheckedUpdateWithoutCursosComoProfesorInput>
  }

  export type UserUpdateWithoutCursosComoProfesorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutCursosComoProfesorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type SedeUpsertWithoutCursosInput = {
    update: XOR<SedeUpdateWithoutCursosInput, SedeUncheckedUpdateWithoutCursosInput>
    create: XOR<SedeCreateWithoutCursosInput, SedeUncheckedCreateWithoutCursosInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutCursosInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutCursosInput, SedeUncheckedUpdateWithoutCursosInput>
  }

  export type SedeUpdateWithoutCursosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUpdateManyWithoutSedeNestedInput
    libros?: LibroUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutCursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUncheckedUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUncheckedUpdateManyWithoutSedeNestedInput
    libros?: LibroUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type MateriaUpsertWithoutCursosInput = {
    update: XOR<MateriaUpdateWithoutCursosInput, MateriaUncheckedUpdateWithoutCursosInput>
    create: XOR<MateriaCreateWithoutCursosInput, MateriaUncheckedCreateWithoutCursosInput>
    where?: MateriaWhereInput
  }

  export type MateriaUpdateToOneWithWhereWithoutCursosInput = {
    where?: MateriaWhereInput
    data: XOR<MateriaUpdateWithoutCursosInput, MateriaUncheckedUpdateWithoutCursosInput>
  }

  export type MateriaUpdateWithoutCursosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    directorUsuario?: UserUpdateOneWithoutMateriasDirectorNestedInput
    jefeTrabajoPracticos?: MateriaJefeTpUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type MateriaUncheckedUpdateWithoutCursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    directorUsuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUncheckedUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUncheckedUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type DivisionUpsertWithoutCursosInput = {
    update: XOR<DivisionUpdateWithoutCursosInput, DivisionUncheckedUpdateWithoutCursosInput>
    create: XOR<DivisionCreateWithoutCursosInput, DivisionUncheckedCreateWithoutCursosInput>
    where?: DivisionWhereInput
  }

  export type DivisionUpdateToOneWithWhereWithoutCursosInput = {
    where?: DivisionWhereInput
    data: XOR<DivisionUpdateWithoutCursosInput, DivisionUncheckedUpdateWithoutCursosInput>
  }

  export type DivisionUpdateWithoutCursosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type DivisionUncheckedUpdateWithoutCursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutCursoInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    update: XOR<ReservaLaboratorioCerradoUpdateWithoutCursoInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutCursoInput>
    create: XOR<ReservaLaboratorioCerradoCreateWithoutCursoInput, ReservaLaboratorioCerradoUncheckedCreateWithoutCursoInput>
  }

  export type ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutCursoInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    data: XOR<ReservaLaboratorioCerradoUpdateWithoutCursoInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutCursoInput>
  }

  export type ReservaLaboratorioCerradoUpdateManyWithWhereWithoutCursoInput = {
    where: ReservaLaboratorioCerradoScalarWhereInput
    data: XOR<ReservaLaboratorioCerradoUpdateManyMutationInput, ReservaLaboratorioCerradoUncheckedUpdateManyWithoutCursoInput>
  }

  export type ReservaLaboratorioCerradoScalarWhereInput = {
    AND?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
    OR?: ReservaLaboratorioCerradoScalarWhereInput[]
    NOT?: ReservaLaboratorioCerradoScalarWhereInput | ReservaLaboratorioCerradoScalarWhereInput[]
    id?: IntFilter<"ReservaLaboratorioCerrado"> | number
    descripcion?: StringFilter<"ReservaLaboratorioCerrado"> | string
    requierePC?: BoolFilter<"ReservaLaboratorioCerrado"> | boolean
    requiereProyector?: BoolFilter<"ReservaLaboratorioCerrado"> | boolean
    reservaId?: IntFilter<"ReservaLaboratorioCerrado"> | number
    sedeId?: IntFilter<"ReservaLaboratorioCerrado"> | number
    laboratorioId?: IntNullableFilter<"ReservaLaboratorioCerrado"> | number | null
    cursoId?: IntNullableFilter<"ReservaLaboratorioCerrado"> | number | null
    esDiscrecional?: BoolFilter<"ReservaLaboratorioCerrado"> | boolean
    discrecionalTitulo?: StringFilter<"ReservaLaboratorioCerrado"> | string
    discrecionalMateriaId?: IntNullableFilter<"ReservaLaboratorioCerrado"> | number | null
    discrecionalDocenteId?: StringNullableFilter<"ReservaLaboratorioCerrado"> | string | null
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioCerrado"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioCerrado"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioCerrado"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioCerrado"> | string
  }

  export type CursoCreateWithoutAyudantesInput = {
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    anioDeCarrera: number
    activo: boolean
    ac: string
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    profesor: UserCreateNestedOneWithoutCursosComoProfesorInput
    sede: SedeCreateNestedOneWithoutCursosInput
    materia: MateriaCreateNestedOneWithoutCursosInput
    division: DivisionCreateNestedOneWithoutCursosInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutCursoInput
  }

  export type CursoUncheckedCreateWithoutAyudantesInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    profesorId: string
    anioDeCarrera: number
    activo: boolean
    ac: string
    sedeId: number
    materiaId: number
    divisionId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutCursoInput
  }

  export type CursoCreateOrConnectWithoutAyudantesInput = {
    where: CursoWhereUniqueInput
    create: XOR<CursoCreateWithoutAyudantesInput, CursoUncheckedCreateWithoutAyudantesInput>
  }

  export type UserCreateWithoutCursosComoAyudanteInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutCursosComoAyudanteInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutCursosComoAyudanteInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCursosComoAyudanteInput, UserUncheckedCreateWithoutCursosComoAyudanteInput>
  }

  export type CursoUpsertWithoutAyudantesInput = {
    update: XOR<CursoUpdateWithoutAyudantesInput, CursoUncheckedUpdateWithoutAyudantesInput>
    create: XOR<CursoCreateWithoutAyudantesInput, CursoUncheckedCreateWithoutAyudantesInput>
    where?: CursoWhereInput
  }

  export type CursoUpdateToOneWithWhereWithoutAyudantesInput = {
    where?: CursoWhereInput
    data: XOR<CursoUpdateWithoutAyudantesInput, CursoUncheckedUpdateWithoutAyudantesInput>
  }

  export type CursoUpdateWithoutAyudantesInput = {
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    profesor?: UserUpdateOneRequiredWithoutCursosComoProfesorNestedInput
    sede?: SedeUpdateOneRequiredWithoutCursosNestedInput
    materia?: MateriaUpdateOneRequiredWithoutCursosNestedInput
    division?: DivisionUpdateOneRequiredWithoutCursosNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateWithoutAyudantesInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    profesorId?: StringFieldUpdateOperationsInput | string
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    sedeId?: IntFieldUpdateOperationsInput | number
    materiaId?: IntFieldUpdateOperationsInput | number
    divisionId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutCursoNestedInput
  }

  export type UserUpsertWithoutCursosComoAyudanteInput = {
    update: XOR<UserUpdateWithoutCursosComoAyudanteInput, UserUncheckedUpdateWithoutCursosComoAyudanteInput>
    create: XOR<UserCreateWithoutCursosComoAyudanteInput, UserUncheckedCreateWithoutCursosComoAyudanteInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCursosComoAyudanteInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCursosComoAyudanteInput, UserUncheckedUpdateWithoutCursosComoAyudanteInput>
  }

  export type UserUpdateWithoutCursosComoAyudanteInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutCursosComoAyudanteInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type CursoCreateWithoutDivisionInput = {
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    anioDeCarrera: number
    activo: boolean
    ac: string
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteCreateNestedManyWithoutCursoInput
    profesor: UserCreateNestedOneWithoutCursosComoProfesorInput
    sede: SedeCreateNestedOneWithoutCursosInput
    materia: MateriaCreateNestedOneWithoutCursosInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutCursoInput
  }

  export type CursoUncheckedCreateWithoutDivisionInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    profesorId: string
    anioDeCarrera: number
    activo: boolean
    ac: string
    sedeId: number
    materiaId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteUncheckedCreateNestedManyWithoutCursoInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutCursoInput
  }

  export type CursoCreateOrConnectWithoutDivisionInput = {
    where: CursoWhereUniqueInput
    create: XOR<CursoCreateWithoutDivisionInput, CursoUncheckedCreateWithoutDivisionInput>
  }

  export type CursoCreateManyDivisionInputEnvelope = {
    data: CursoCreateManyDivisionInput | CursoCreateManyDivisionInput[]
    skipDuplicates?: boolean
  }

  export type CursoUpsertWithWhereUniqueWithoutDivisionInput = {
    where: CursoWhereUniqueInput
    update: XOR<CursoUpdateWithoutDivisionInput, CursoUncheckedUpdateWithoutDivisionInput>
    create: XOR<CursoCreateWithoutDivisionInput, CursoUncheckedCreateWithoutDivisionInput>
  }

  export type CursoUpdateWithWhereUniqueWithoutDivisionInput = {
    where: CursoWhereUniqueInput
    data: XOR<CursoUpdateWithoutDivisionInput, CursoUncheckedUpdateWithoutDivisionInput>
  }

  export type CursoUpdateManyWithWhereWithoutDivisionInput = {
    where: CursoScalarWhereInput
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyWithoutDivisionInput>
  }

  export type CursoScalarWhereInput = {
    AND?: CursoScalarWhereInput | CursoScalarWhereInput[]
    OR?: CursoScalarWhereInput[]
    NOT?: CursoScalarWhereInput | CursoScalarWhereInput[]
    id?: IntFilter<"Curso"> | number
    horaInicio1?: StringFilter<"Curso"> | string
    duracion1?: StringFilter<"Curso"> | string
    horaInicio2?: StringNullableFilter<"Curso"> | string | null
    duracion2?: StringNullableFilter<"Curso"> | string | null
    dia1?: EnumCursoDiaFilter<"Curso"> | $Enums.CursoDia
    dia2?: EnumCursoDiaNullableFilter<"Curso"> | $Enums.CursoDia | null
    profesorId?: StringFilter<"Curso"> | string
    anioDeCarrera?: IntFilter<"Curso"> | number
    activo?: BoolFilter<"Curso"> | boolean
    ac?: StringFilter<"Curso"> | string
    sedeId?: IntFilter<"Curso"> | number
    materiaId?: IntFilter<"Curso"> | number
    divisionId?: IntFilter<"Curso"> | number
    turno?: EnumTurnoCursoFilter<"Curso"> | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFilter<"Curso"> | Date | string
    fechaModificacion?: DateTimeFilter<"Curso"> | Date | string
    usuarioCreadorId?: StringFilter<"Curso"> | string
    usuarioModificadorId?: StringFilter<"Curso"> | string
  }

  export type EquipoTipoCreateWithoutEquiposInput = {
    nombre: string
    imagen?: string | null
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutEquipoTipoInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoCreateNestedManyWithoutEquipoTipoInput
  }

  export type EquipoTipoUncheckedCreateWithoutEquiposInput = {
    id?: number
    nombre: string
    imagen?: string | null
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutEquipoTipoInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoUncheckedCreateNestedManyWithoutEquipoTipoInput
  }

  export type EquipoTipoCreateOrConnectWithoutEquiposInput = {
    where: EquipoTipoWhereUniqueInput
    create: XOR<EquipoTipoCreateWithoutEquiposInput, EquipoTipoUncheckedCreateWithoutEquiposInput>
  }

  export type EquipoMarcaCreateWithoutEquiposInput = {
    nombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type EquipoMarcaUncheckedCreateWithoutEquiposInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type EquipoMarcaCreateOrConnectWithoutEquiposInput = {
    where: EquipoMarcaWhereUniqueInput
    create: XOR<EquipoMarcaCreateWithoutEquiposInput, EquipoMarcaUncheckedCreateWithoutEquiposInput>
  }

  export type SedeCreateWithoutEquiposInput = {
    nombre: string
    cursos?: CursoCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioCreateNestedManyWithoutSedeInput
    libros?: LibroCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutEquiposInput = {
    id?: number
    nombre: string
    cursos?: CursoUncheckedCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioUncheckedCreateNestedManyWithoutSedeInput
    libros?: LibroUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutEquiposInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutEquiposInput, SedeUncheckedCreateWithoutEquiposInput>
  }

  export type LaboratorioCreateWithoutEquiposInput = {
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    sede: SedeCreateNestedOneWithoutLaboratoriosInput
    software?: SoftwareLaboratorioCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioCreateNestedManyWithoutLaboratorioInput
    libros?: LibroCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioUncheckedCreateWithoutEquiposInput = {
    id?: number
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    software?: SoftwareLaboratorioUncheckedCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioUncheckedCreateNestedManyWithoutLaboratorioInput
    libros?: LibroUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioCreateOrConnectWithoutEquiposInput = {
    where: LaboratorioWhereUniqueInput
    create: XOR<LaboratorioCreateWithoutEquiposInput, LaboratorioUncheckedCreateWithoutEquiposInput>
  }

  export type ArmarioCreateWithoutEquiposInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    laboratorio: LaboratorioCreateNestedOneWithoutArmariosInput
    estantes?: EstanteCreateNestedManyWithoutArmarioInput
    libros?: LibroCreateNestedManyWithoutArmarioInput
  }

  export type ArmarioUncheckedCreateWithoutEquiposInput = {
    id?: number
    nombre: string
    laboratorioId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    estantes?: EstanteUncheckedCreateNestedManyWithoutArmarioInput
    libros?: LibroUncheckedCreateNestedManyWithoutArmarioInput
  }

  export type ArmarioCreateOrConnectWithoutEquiposInput = {
    where: ArmarioWhereUniqueInput
    create: XOR<ArmarioCreateWithoutEquiposInput, ArmarioUncheckedCreateWithoutEquiposInput>
  }

  export type EstanteCreateWithoutEquiposInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    armario: ArmarioCreateNestedOneWithoutEstantesInput
    libros?: LibroCreateNestedManyWithoutEstanteInput
  }

  export type EstanteUncheckedCreateWithoutEquiposInput = {
    id?: number
    nombre: string
    armarioId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    libros?: LibroUncheckedCreateNestedManyWithoutEstanteInput
  }

  export type EstanteCreateOrConnectWithoutEquiposInput = {
    where: EstanteWhereUniqueInput
    create: XOR<EstanteCreateWithoutEquiposInput, EstanteUncheckedCreateWithoutEquiposInput>
  }

  export type EquipoEstadoCreateWithoutEquiposInput = {
    nombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type EquipoEstadoUncheckedCreateWithoutEquiposInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type EquipoEstadoCreateOrConnectWithoutEquiposInput = {
    where: EquipoEstadoWhereUniqueInput
    create: XOR<EquipoEstadoCreateWithoutEquiposInput, EquipoEstadoUncheckedCreateWithoutEquiposInput>
  }

  export type ReservaEquipoCreateWithoutEquipoInput = {
    fechaEntregado: Date | string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaEquipoInput
  }

  export type ReservaEquipoUncheckedCreateWithoutEquipoInput = {
    id?: number
    fechaEntregado: Date | string
    reservaId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaEquipoCreateOrConnectWithoutEquipoInput = {
    where: ReservaEquipoWhereUniqueInput
    create: XOR<ReservaEquipoCreateWithoutEquipoInput, ReservaEquipoUncheckedCreateWithoutEquipoInput>
  }

  export type ReservaEquipoCreateManyEquipoInputEnvelope = {
    data: ReservaEquipoCreateManyEquipoInput | ReservaEquipoCreateManyEquipoInput[]
    skipDuplicates?: boolean
  }

  export type EquipoTipoUpsertWithoutEquiposInput = {
    update: XOR<EquipoTipoUpdateWithoutEquiposInput, EquipoTipoUncheckedUpdateWithoutEquiposInput>
    create: XOR<EquipoTipoCreateWithoutEquiposInput, EquipoTipoUncheckedCreateWithoutEquiposInput>
    where?: EquipoTipoWhereInput
  }

  export type EquipoTipoUpdateToOneWithWhereWithoutEquiposInput = {
    where?: EquipoTipoWhereInput
    data: XOR<EquipoTipoUpdateWithoutEquiposInput, EquipoTipoUncheckedUpdateWithoutEquiposInput>
  }

  export type EquipoTipoUpdateWithoutEquiposInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoUpdateManyWithoutEquipoTipoNestedInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoUpdateManyWithoutEquipoTipoNestedInput
  }

  export type EquipoTipoUncheckedUpdateWithoutEquiposInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutEquipoTipoNestedInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutEquipoTipoNestedInput
  }

  export type EquipoMarcaUpsertWithoutEquiposInput = {
    update: XOR<EquipoMarcaUpdateWithoutEquiposInput, EquipoMarcaUncheckedUpdateWithoutEquiposInput>
    create: XOR<EquipoMarcaCreateWithoutEquiposInput, EquipoMarcaUncheckedCreateWithoutEquiposInput>
    where?: EquipoMarcaWhereInput
  }

  export type EquipoMarcaUpdateToOneWithWhereWithoutEquiposInput = {
    where?: EquipoMarcaWhereInput
    data: XOR<EquipoMarcaUpdateWithoutEquiposInput, EquipoMarcaUncheckedUpdateWithoutEquiposInput>
  }

  export type EquipoMarcaUpdateWithoutEquiposInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoMarcaUncheckedUpdateWithoutEquiposInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SedeUpsertWithoutEquiposInput = {
    update: XOR<SedeUpdateWithoutEquiposInput, SedeUncheckedUpdateWithoutEquiposInput>
    create: XOR<SedeCreateWithoutEquiposInput, SedeUncheckedCreateWithoutEquiposInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutEquiposInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutEquiposInput, SedeUncheckedUpdateWithoutEquiposInput>
  }

  export type SedeUpdateWithoutEquiposInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUpdateManyWithoutSedeNestedInput
    libros?: LibroUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutEquiposInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUncheckedUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUncheckedUpdateManyWithoutSedeNestedInput
    libros?: LibroUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type LaboratorioUpsertWithoutEquiposInput = {
    update: XOR<LaboratorioUpdateWithoutEquiposInput, LaboratorioUncheckedUpdateWithoutEquiposInput>
    create: XOR<LaboratorioCreateWithoutEquiposInput, LaboratorioUncheckedCreateWithoutEquiposInput>
    where?: LaboratorioWhereInput
  }

  export type LaboratorioUpdateToOneWithWhereWithoutEquiposInput = {
    where?: LaboratorioWhereInput
    data: XOR<LaboratorioUpdateWithoutEquiposInput, LaboratorioUncheckedUpdateWithoutEquiposInput>
  }

  export type LaboratorioUpdateWithoutEquiposInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    sede?: SedeUpdateOneRequiredWithoutLaboratoriosNestedInput
    software?: SoftwareLaboratorioUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutLaboratorioNestedInput
  }

  export type LaboratorioUncheckedUpdateWithoutEquiposInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    sedeId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    software?: SoftwareLaboratorioUncheckedUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUncheckedUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutLaboratorioNestedInput
  }

  export type ArmarioUpsertWithoutEquiposInput = {
    update: XOR<ArmarioUpdateWithoutEquiposInput, ArmarioUncheckedUpdateWithoutEquiposInput>
    create: XOR<ArmarioCreateWithoutEquiposInput, ArmarioUncheckedCreateWithoutEquiposInput>
    where?: ArmarioWhereInput
  }

  export type ArmarioUpdateToOneWithWhereWithoutEquiposInput = {
    where?: ArmarioWhereInput
    data: XOR<ArmarioUpdateWithoutEquiposInput, ArmarioUncheckedUpdateWithoutEquiposInput>
  }

  export type ArmarioUpdateWithoutEquiposInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    laboratorio?: LaboratorioUpdateOneRequiredWithoutArmariosNestedInput
    estantes?: EstanteUpdateManyWithoutArmarioNestedInput
    libros?: LibroUpdateManyWithoutArmarioNestedInput
  }

  export type ArmarioUncheckedUpdateWithoutEquiposInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    laboratorioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    estantes?: EstanteUncheckedUpdateManyWithoutArmarioNestedInput
    libros?: LibroUncheckedUpdateManyWithoutArmarioNestedInput
  }

  export type EstanteUpsertWithoutEquiposInput = {
    update: XOR<EstanteUpdateWithoutEquiposInput, EstanteUncheckedUpdateWithoutEquiposInput>
    create: XOR<EstanteCreateWithoutEquiposInput, EstanteUncheckedCreateWithoutEquiposInput>
    where?: EstanteWhereInput
  }

  export type EstanteUpdateToOneWithWhereWithoutEquiposInput = {
    where?: EstanteWhereInput
    data: XOR<EstanteUpdateWithoutEquiposInput, EstanteUncheckedUpdateWithoutEquiposInput>
  }

  export type EstanteUpdateWithoutEquiposInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    armario?: ArmarioUpdateOneRequiredWithoutEstantesNestedInput
    libros?: LibroUpdateManyWithoutEstanteNestedInput
  }

  export type EstanteUncheckedUpdateWithoutEquiposInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    armarioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    libros?: LibroUncheckedUpdateManyWithoutEstanteNestedInput
  }

  export type EquipoEstadoUpsertWithoutEquiposInput = {
    update: XOR<EquipoEstadoUpdateWithoutEquiposInput, EquipoEstadoUncheckedUpdateWithoutEquiposInput>
    create: XOR<EquipoEstadoCreateWithoutEquiposInput, EquipoEstadoUncheckedCreateWithoutEquiposInput>
    where?: EquipoEstadoWhereInput
  }

  export type EquipoEstadoUpdateToOneWithWhereWithoutEquiposInput = {
    where?: EquipoEstadoWhereInput
    data: XOR<EquipoEstadoUpdateWithoutEquiposInput, EquipoEstadoUncheckedUpdateWithoutEquiposInput>
  }

  export type EquipoEstadoUpdateWithoutEquiposInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoEstadoUncheckedUpdateWithoutEquiposInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaEquipoUpsertWithWhereUniqueWithoutEquipoInput = {
    where: ReservaEquipoWhereUniqueInput
    update: XOR<ReservaEquipoUpdateWithoutEquipoInput, ReservaEquipoUncheckedUpdateWithoutEquipoInput>
    create: XOR<ReservaEquipoCreateWithoutEquipoInput, ReservaEquipoUncheckedCreateWithoutEquipoInput>
  }

  export type ReservaEquipoUpdateWithWhereUniqueWithoutEquipoInput = {
    where: ReservaEquipoWhereUniqueInput
    data: XOR<ReservaEquipoUpdateWithoutEquipoInput, ReservaEquipoUncheckedUpdateWithoutEquipoInput>
  }

  export type ReservaEquipoUpdateManyWithWhereWithoutEquipoInput = {
    where: ReservaEquipoScalarWhereInput
    data: XOR<ReservaEquipoUpdateManyMutationInput, ReservaEquipoUncheckedUpdateManyWithoutEquipoInput>
  }

  export type ReservaEquipoScalarWhereInput = {
    AND?: ReservaEquipoScalarWhereInput | ReservaEquipoScalarWhereInput[]
    OR?: ReservaEquipoScalarWhereInput[]
    NOT?: ReservaEquipoScalarWhereInput | ReservaEquipoScalarWhereInput[]
    id?: IntFilter<"ReservaEquipo"> | number
    fechaEntregado?: DateTimeFilter<"ReservaEquipo"> | Date | string
    reservaId?: IntFilter<"ReservaEquipo"> | number
    equipoId?: IntFilter<"ReservaEquipo"> | number
    fechaCreacion?: DateTimeFilter<"ReservaEquipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaEquipo"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaEquipo"> | string
    usuarioModificadorId?: StringFilter<"ReservaEquipo"> | string
  }

  export type EquipoCreateWithoutMarcaInput = {
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    tipo: EquipoTipoCreateNestedOneWithoutEquiposInput
    sede: SedeCreateNestedOneWithoutEquiposInput
    laboratorio: LaboratorioCreateNestedOneWithoutEquiposInput
    armario?: ArmarioCreateNestedOneWithoutEquiposInput
    estante?: EstanteCreateNestedOneWithoutEquiposInput
    estado: EquipoEstadoCreateNestedOneWithoutEquiposInput
    reservas?: ReservaEquipoCreateNestedManyWithoutEquipoInput
  }

  export type EquipoUncheckedCreateWithoutMarcaInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    sedeId: number
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservas?: ReservaEquipoUncheckedCreateNestedManyWithoutEquipoInput
  }

  export type EquipoCreateOrConnectWithoutMarcaInput = {
    where: EquipoWhereUniqueInput
    create: XOR<EquipoCreateWithoutMarcaInput, EquipoUncheckedCreateWithoutMarcaInput>
  }

  export type EquipoCreateManyMarcaInputEnvelope = {
    data: EquipoCreateManyMarcaInput | EquipoCreateManyMarcaInput[]
    skipDuplicates?: boolean
  }

  export type EquipoUpsertWithWhereUniqueWithoutMarcaInput = {
    where: EquipoWhereUniqueInput
    update: XOR<EquipoUpdateWithoutMarcaInput, EquipoUncheckedUpdateWithoutMarcaInput>
    create: XOR<EquipoCreateWithoutMarcaInput, EquipoUncheckedCreateWithoutMarcaInput>
  }

  export type EquipoUpdateWithWhereUniqueWithoutMarcaInput = {
    where: EquipoWhereUniqueInput
    data: XOR<EquipoUpdateWithoutMarcaInput, EquipoUncheckedUpdateWithoutMarcaInput>
  }

  export type EquipoUpdateManyWithWhereWithoutMarcaInput = {
    where: EquipoScalarWhereInput
    data: XOR<EquipoUpdateManyMutationInput, EquipoUncheckedUpdateManyWithoutMarcaInput>
  }

  export type EquipoScalarWhereInput = {
    AND?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
    OR?: EquipoScalarWhereInput[]
    NOT?: EquipoScalarWhereInput | EquipoScalarWhereInput[]
    id?: IntFilter<"Equipo"> | number
    inventarioId?: StringFilter<"Equipo"> | string
    modelo?: StringNullableFilter<"Equipo"> | string | null
    numeroSerie?: StringNullableFilter<"Equipo"> | string | null
    observaciones?: StringNullableFilter<"Equipo"> | string | null
    palabrasClave?: StringNullableFilter<"Equipo"> | string | null
    imagen?: StringNullableFilter<"Equipo"> | string | null
    tipoId?: IntFilter<"Equipo"> | number
    marcaId?: IntFilter<"Equipo"> | number
    sedeId?: IntFilter<"Equipo"> | number
    laboratorioId?: IntFilter<"Equipo"> | number
    armarioId?: IntNullableFilter<"Equipo"> | number | null
    estanteId?: IntNullableFilter<"Equipo"> | number | null
    estadoId?: IntFilter<"Equipo"> | number
    disponible?: BoolFilter<"Equipo"> | boolean
    fechaCreacion?: DateTimeFilter<"Equipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"Equipo"> | Date | string
    usuarioCreadorId?: StringFilter<"Equipo"> | string
    usuarioModificadorId?: StringFilter<"Equipo"> | string
  }

  export type EquipoCreateWithoutTipoInput = {
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    marca: EquipoMarcaCreateNestedOneWithoutEquiposInput
    sede: SedeCreateNestedOneWithoutEquiposInput
    laboratorio: LaboratorioCreateNestedOneWithoutEquiposInput
    armario?: ArmarioCreateNestedOneWithoutEquiposInput
    estante?: EstanteCreateNestedOneWithoutEquiposInput
    estado: EquipoEstadoCreateNestedOneWithoutEquiposInput
    reservas?: ReservaEquipoCreateNestedManyWithoutEquipoInput
  }

  export type EquipoUncheckedCreateWithoutTipoInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    marcaId: number
    sedeId: number
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservas?: ReservaEquipoUncheckedCreateNestedManyWithoutEquipoInput
  }

  export type EquipoCreateOrConnectWithoutTipoInput = {
    where: EquipoWhereUniqueInput
    create: XOR<EquipoCreateWithoutTipoInput, EquipoUncheckedCreateWithoutTipoInput>
  }

  export type EquipoCreateManyTipoInputEnvelope = {
    data: EquipoCreateManyTipoInput | EquipoCreateManyTipoInput[]
    skipDuplicates?: boolean
  }

  export type ReservaLaboratorioCerradoEquipoCreateWithoutEquipoTipoInput = {
    cantidad: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservaLaboratorioCerrado: ReservaLaboratorioCerradoCreateNestedOneWithoutEquipoReservadoInput
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutEquipoTipoInput = {
    id?: number
    cantidad: number
    reservaLaboratorioCerradoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutEquipoTipoInput = {
    where: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    create: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutEquipoTipoInput>
  }

  export type ReservaLaboratorioCerradoEquipoCreateManyEquipoTipoInputEnvelope = {
    data: ReservaLaboratorioCerradoEquipoCreateManyEquipoTipoInput | ReservaLaboratorioCerradoEquipoCreateManyEquipoTipoInput[]
    skipDuplicates?: boolean
  }

  export type ReservaLaboratorioAbiertoEquipoCreateWithoutEquipoTipoInput = {
    cantidad: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservaLaboratorioAbierto: ReservaLaboratorioAbiertoCreateNestedOneWithoutEquipoReservadoInput
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutEquipoTipoInput = {
    id?: number
    cantidad: number
    reservaLaboratorioAbiertoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutEquipoTipoInput = {
    where: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    create: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutEquipoTipoInput>
  }

  export type ReservaLaboratorioAbiertoEquipoCreateManyEquipoTipoInputEnvelope = {
    data: ReservaLaboratorioAbiertoEquipoCreateManyEquipoTipoInput | ReservaLaboratorioAbiertoEquipoCreateManyEquipoTipoInput[]
    skipDuplicates?: boolean
  }

  export type EquipoUpsertWithWhereUniqueWithoutTipoInput = {
    where: EquipoWhereUniqueInput
    update: XOR<EquipoUpdateWithoutTipoInput, EquipoUncheckedUpdateWithoutTipoInput>
    create: XOR<EquipoCreateWithoutTipoInput, EquipoUncheckedCreateWithoutTipoInput>
  }

  export type EquipoUpdateWithWhereUniqueWithoutTipoInput = {
    where: EquipoWhereUniqueInput
    data: XOR<EquipoUpdateWithoutTipoInput, EquipoUncheckedUpdateWithoutTipoInput>
  }

  export type EquipoUpdateManyWithWhereWithoutTipoInput = {
    where: EquipoScalarWhereInput
    data: XOR<EquipoUpdateManyMutationInput, EquipoUncheckedUpdateManyWithoutTipoInput>
  }

  export type ReservaLaboratorioCerradoEquipoUpsertWithWhereUniqueWithoutEquipoTipoInput = {
    where: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    update: XOR<ReservaLaboratorioCerradoEquipoUpdateWithoutEquipoTipoInput, ReservaLaboratorioCerradoEquipoUncheckedUpdateWithoutEquipoTipoInput>
    create: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutEquipoTipoInput>
  }

  export type ReservaLaboratorioCerradoEquipoUpdateWithWhereUniqueWithoutEquipoTipoInput = {
    where: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    data: XOR<ReservaLaboratorioCerradoEquipoUpdateWithoutEquipoTipoInput, ReservaLaboratorioCerradoEquipoUncheckedUpdateWithoutEquipoTipoInput>
  }

  export type ReservaLaboratorioCerradoEquipoUpdateManyWithWhereWithoutEquipoTipoInput = {
    where: ReservaLaboratorioCerradoEquipoScalarWhereInput
    data: XOR<ReservaLaboratorioCerradoEquipoUpdateManyMutationInput, ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutEquipoTipoInput>
  }

  export type ReservaLaboratorioCerradoEquipoScalarWhereInput = {
    AND?: ReservaLaboratorioCerradoEquipoScalarWhereInput | ReservaLaboratorioCerradoEquipoScalarWhereInput[]
    OR?: ReservaLaboratorioCerradoEquipoScalarWhereInput[]
    NOT?: ReservaLaboratorioCerradoEquipoScalarWhereInput | ReservaLaboratorioCerradoEquipoScalarWhereInput[]
    id?: IntFilter<"ReservaLaboratorioCerradoEquipo"> | number
    cantidad?: IntFilter<"ReservaLaboratorioCerradoEquipo"> | number
    reservaLaboratorioCerradoId?: IntFilter<"ReservaLaboratorioCerradoEquipo"> | number
    equipoId?: IntFilter<"ReservaLaboratorioCerradoEquipo"> | number
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioCerradoEquipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioCerradoEquipo"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioCerradoEquipo"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioCerradoEquipo"> | string
  }

  export type ReservaLaboratorioAbiertoEquipoUpsertWithWhereUniqueWithoutEquipoTipoInput = {
    where: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    update: XOR<ReservaLaboratorioAbiertoEquipoUpdateWithoutEquipoTipoInput, ReservaLaboratorioAbiertoEquipoUncheckedUpdateWithoutEquipoTipoInput>
    create: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutEquipoTipoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutEquipoTipoInput>
  }

  export type ReservaLaboratorioAbiertoEquipoUpdateWithWhereUniqueWithoutEquipoTipoInput = {
    where: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    data: XOR<ReservaLaboratorioAbiertoEquipoUpdateWithoutEquipoTipoInput, ReservaLaboratorioAbiertoEquipoUncheckedUpdateWithoutEquipoTipoInput>
  }

  export type ReservaLaboratorioAbiertoEquipoUpdateManyWithWhereWithoutEquipoTipoInput = {
    where: ReservaLaboratorioAbiertoEquipoScalarWhereInput
    data: XOR<ReservaLaboratorioAbiertoEquipoUpdateManyMutationInput, ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutEquipoTipoInput>
  }

  export type ReservaLaboratorioAbiertoEquipoScalarWhereInput = {
    AND?: ReservaLaboratorioAbiertoEquipoScalarWhereInput | ReservaLaboratorioAbiertoEquipoScalarWhereInput[]
    OR?: ReservaLaboratorioAbiertoEquipoScalarWhereInput[]
    NOT?: ReservaLaboratorioAbiertoEquipoScalarWhereInput | ReservaLaboratorioAbiertoEquipoScalarWhereInput[]
    id?: IntFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    cantidad?: IntFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    reservaLaboratorioAbiertoId?: IntFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    equipoId?: IntFilter<"ReservaLaboratorioAbiertoEquipo"> | number
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioAbiertoEquipo"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioAbiertoEquipo"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioAbiertoEquipo"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioAbiertoEquipo"> | string
  }

  export type EquipoCreateWithoutEstadoInput = {
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    tipo: EquipoTipoCreateNestedOneWithoutEquiposInput
    marca: EquipoMarcaCreateNestedOneWithoutEquiposInput
    sede: SedeCreateNestedOneWithoutEquiposInput
    laboratorio: LaboratorioCreateNestedOneWithoutEquiposInput
    armario?: ArmarioCreateNestedOneWithoutEquiposInput
    estante?: EstanteCreateNestedOneWithoutEquiposInput
    reservas?: ReservaEquipoCreateNestedManyWithoutEquipoInput
  }

  export type EquipoUncheckedCreateWithoutEstadoInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservas?: ReservaEquipoUncheckedCreateNestedManyWithoutEquipoInput
  }

  export type EquipoCreateOrConnectWithoutEstadoInput = {
    where: EquipoWhereUniqueInput
    create: XOR<EquipoCreateWithoutEstadoInput, EquipoUncheckedCreateWithoutEstadoInput>
  }

  export type EquipoCreateManyEstadoInputEnvelope = {
    data: EquipoCreateManyEstadoInput | EquipoCreateManyEstadoInput[]
    skipDuplicates?: boolean
  }

  export type EquipoUpsertWithWhereUniqueWithoutEstadoInput = {
    where: EquipoWhereUniqueInput
    update: XOR<EquipoUpdateWithoutEstadoInput, EquipoUncheckedUpdateWithoutEstadoInput>
    create: XOR<EquipoCreateWithoutEstadoInput, EquipoUncheckedCreateWithoutEstadoInput>
  }

  export type EquipoUpdateWithWhereUniqueWithoutEstadoInput = {
    where: EquipoWhereUniqueInput
    data: XOR<EquipoUpdateWithoutEstadoInput, EquipoUncheckedUpdateWithoutEstadoInput>
  }

  export type EquipoUpdateManyWithWhereWithoutEstadoInput = {
    where: EquipoScalarWhereInput
    data: XOR<EquipoUpdateManyMutationInput, EquipoUncheckedUpdateManyWithoutEstadoInput>
  }

  export type SedeCreateWithoutLaboratoriosInput = {
    nombre: string
    cursos?: CursoCreateNestedManyWithoutSedeInput
    equipos?: EquipoCreateNestedManyWithoutSedeInput
    libros?: LibroCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutLaboratoriosInput = {
    id?: number
    nombre: string
    cursos?: CursoUncheckedCreateNestedManyWithoutSedeInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutSedeInput
    libros?: LibroUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutLaboratoriosInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutLaboratoriosInput, SedeUncheckedCreateWithoutLaboratoriosInput>
  }

  export type SoftwareLaboratorioCreateWithoutLaboratorioInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    software: SoftwareCreateNestedOneWithoutLaboratoriosInput
  }

  export type SoftwareLaboratorioUncheckedCreateWithoutLaboratorioInput = {
    softwareId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type SoftwareLaboratorioCreateOrConnectWithoutLaboratorioInput = {
    where: SoftwareLaboratorioWhereUniqueInput
    create: XOR<SoftwareLaboratorioCreateWithoutLaboratorioInput, SoftwareLaboratorioUncheckedCreateWithoutLaboratorioInput>
  }

  export type SoftwareLaboratorioCreateManyLaboratorioInputEnvelope = {
    data: SoftwareLaboratorioCreateManyLaboratorioInput | SoftwareLaboratorioCreateManyLaboratorioInput[]
    skipDuplicates?: boolean
  }

  export type ArmarioCreateWithoutLaboratorioInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    estantes?: EstanteCreateNestedManyWithoutArmarioInput
    equipos?: EquipoCreateNestedManyWithoutArmarioInput
    libros?: LibroCreateNestedManyWithoutArmarioInput
  }

  export type ArmarioUncheckedCreateWithoutLaboratorioInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    estantes?: EstanteUncheckedCreateNestedManyWithoutArmarioInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutArmarioInput
    libros?: LibroUncheckedCreateNestedManyWithoutArmarioInput
  }

  export type ArmarioCreateOrConnectWithoutLaboratorioInput = {
    where: ArmarioWhereUniqueInput
    create: XOR<ArmarioCreateWithoutLaboratorioInput, ArmarioUncheckedCreateWithoutLaboratorioInput>
  }

  export type ArmarioCreateManyLaboratorioInputEnvelope = {
    data: ArmarioCreateManyLaboratorioInput | ArmarioCreateManyLaboratorioInput[]
    skipDuplicates?: boolean
  }

  export type EquipoCreateWithoutLaboratorioInput = {
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    tipo: EquipoTipoCreateNestedOneWithoutEquiposInput
    marca: EquipoMarcaCreateNestedOneWithoutEquiposInput
    sede: SedeCreateNestedOneWithoutEquiposInput
    armario?: ArmarioCreateNestedOneWithoutEquiposInput
    estante?: EstanteCreateNestedOneWithoutEquiposInput
    estado: EquipoEstadoCreateNestedOneWithoutEquiposInput
    reservas?: ReservaEquipoCreateNestedManyWithoutEquipoInput
  }

  export type EquipoUncheckedCreateWithoutLaboratorioInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    armarioId?: number | null
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservas?: ReservaEquipoUncheckedCreateNestedManyWithoutEquipoInput
  }

  export type EquipoCreateOrConnectWithoutLaboratorioInput = {
    where: EquipoWhereUniqueInput
    create: XOR<EquipoCreateWithoutLaboratorioInput, EquipoUncheckedCreateWithoutLaboratorioInput>
  }

  export type EquipoCreateManyLaboratorioInputEnvelope = {
    data: EquipoCreateManyLaboratorioInput | EquipoCreateManyLaboratorioInput[]
    skipDuplicates?: boolean
  }

  export type LibroCreateWithoutLaboratorioInput = {
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaCreateNestedManyWithoutLibroInput
    armario?: ArmarioCreateNestedOneWithoutLibrosInput
    estante?: EstanteCreateNestedOneWithoutLibrosInput
    autor: LibroAutorCreateNestedOneWithoutLibrosInput
    idioma: LibroIdiomaCreateNestedOneWithoutLibrosInput
    editorial: LibroEditorialCreateNestedOneWithoutLibrosInput
    sede: SedeCreateNestedOneWithoutLibrosInput
    reservas?: ReservaLibroCreateNestedManyWithoutLibroInput
  }

  export type LibroUncheckedCreateWithoutLaboratorioInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaUncheckedCreateNestedManyWithoutLibroInput
    reservas?: ReservaLibroUncheckedCreateNestedManyWithoutLibroInput
  }

  export type LibroCreateOrConnectWithoutLaboratorioInput = {
    where: LibroWhereUniqueInput
    create: XOR<LibroCreateWithoutLaboratorioInput, LibroUncheckedCreateWithoutLaboratorioInput>
  }

  export type LibroCreateManyLaboratorioInputEnvelope = {
    data: LibroCreateManyLaboratorioInput | LibroCreateManyLaboratorioInput[]
    skipDuplicates?: boolean
  }

  export type ReservaLaboratorioCerradoCreateWithoutLaboratorioInput = {
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    sede: SedeCreateNestedOneWithoutReservaLaboratorioCerradoInput
    curso?: CursoCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalMateria?: MateriaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalDocente?: UserCreateNestedOneWithoutReservaLaboratorioCerradoInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoUncheckedCreateWithoutLaboratorioInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    sedeId: number
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoCreateOrConnectWithoutLaboratorioInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    create: XOR<ReservaLaboratorioCerradoCreateWithoutLaboratorioInput, ReservaLaboratorioCerradoUncheckedCreateWithoutLaboratorioInput>
  }

  export type ReservaLaboratorioCerradoCreateManyLaboratorioInputEnvelope = {
    data: ReservaLaboratorioCerradoCreateManyLaboratorioInput | ReservaLaboratorioCerradoCreateManyLaboratorioInput[]
    skipDuplicates?: boolean
  }

  export type ReservaLaboratorioAbiertoCreateWithoutLaboratorioInput = {
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLaboratorioAbiertoInput
    sede: SedeCreateNestedOneWithoutReservaLaboratorioAbiertoInput
    equipoReservado?: ReservaLaboratorioAbiertoEquipoCreateNestedManyWithoutReservaLaboratorioAbiertoInput
  }

  export type ReservaLaboratorioAbiertoUncheckedCreateWithoutLaboratorioInput = {
    id?: number
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    reservaId: number
    sedeId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioAbiertoInput
  }

  export type ReservaLaboratorioAbiertoCreateOrConnectWithoutLaboratorioInput = {
    where: ReservaLaboratorioAbiertoWhereUniqueInput
    create: XOR<ReservaLaboratorioAbiertoCreateWithoutLaboratorioInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutLaboratorioInput>
  }

  export type ReservaLaboratorioAbiertoCreateManyLaboratorioInputEnvelope = {
    data: ReservaLaboratorioAbiertoCreateManyLaboratorioInput | ReservaLaboratorioAbiertoCreateManyLaboratorioInput[]
    skipDuplicates?: boolean
  }

  export type SedeUpsertWithoutLaboratoriosInput = {
    update: XOR<SedeUpdateWithoutLaboratoriosInput, SedeUncheckedUpdateWithoutLaboratoriosInput>
    create: XOR<SedeCreateWithoutLaboratoriosInput, SedeUncheckedCreateWithoutLaboratoriosInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutLaboratoriosInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutLaboratoriosInput, SedeUncheckedUpdateWithoutLaboratoriosInput>
  }

  export type SedeUpdateWithoutLaboratoriosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUpdateManyWithoutSedeNestedInput
    libros?: LibroUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutLaboratoriosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUncheckedUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutSedeNestedInput
    libros?: LibroUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type SoftwareLaboratorioUpsertWithWhereUniqueWithoutLaboratorioInput = {
    where: SoftwareLaboratorioWhereUniqueInput
    update: XOR<SoftwareLaboratorioUpdateWithoutLaboratorioInput, SoftwareLaboratorioUncheckedUpdateWithoutLaboratorioInput>
    create: XOR<SoftwareLaboratorioCreateWithoutLaboratorioInput, SoftwareLaboratorioUncheckedCreateWithoutLaboratorioInput>
  }

  export type SoftwareLaboratorioUpdateWithWhereUniqueWithoutLaboratorioInput = {
    where: SoftwareLaboratorioWhereUniqueInput
    data: XOR<SoftwareLaboratorioUpdateWithoutLaboratorioInput, SoftwareLaboratorioUncheckedUpdateWithoutLaboratorioInput>
  }

  export type SoftwareLaboratorioUpdateManyWithWhereWithoutLaboratorioInput = {
    where: SoftwareLaboratorioScalarWhereInput
    data: XOR<SoftwareLaboratorioUpdateManyMutationInput, SoftwareLaboratorioUncheckedUpdateManyWithoutLaboratorioInput>
  }

  export type SoftwareLaboratorioScalarWhereInput = {
    AND?: SoftwareLaboratorioScalarWhereInput | SoftwareLaboratorioScalarWhereInput[]
    OR?: SoftwareLaboratorioScalarWhereInput[]
    NOT?: SoftwareLaboratorioScalarWhereInput | SoftwareLaboratorioScalarWhereInput[]
    softwareId?: IntFilter<"SoftwareLaboratorio"> | number
    laboratorioId?: IntFilter<"SoftwareLaboratorio"> | number
    fechaCreacion?: DateTimeFilter<"SoftwareLaboratorio"> | Date | string
    usuarioCreadorId?: StringFilter<"SoftwareLaboratorio"> | string
  }

  export type ArmarioUpsertWithWhereUniqueWithoutLaboratorioInput = {
    where: ArmarioWhereUniqueInput
    update: XOR<ArmarioUpdateWithoutLaboratorioInput, ArmarioUncheckedUpdateWithoutLaboratorioInput>
    create: XOR<ArmarioCreateWithoutLaboratorioInput, ArmarioUncheckedCreateWithoutLaboratorioInput>
  }

  export type ArmarioUpdateWithWhereUniqueWithoutLaboratorioInput = {
    where: ArmarioWhereUniqueInput
    data: XOR<ArmarioUpdateWithoutLaboratorioInput, ArmarioUncheckedUpdateWithoutLaboratorioInput>
  }

  export type ArmarioUpdateManyWithWhereWithoutLaboratorioInput = {
    where: ArmarioScalarWhereInput
    data: XOR<ArmarioUpdateManyMutationInput, ArmarioUncheckedUpdateManyWithoutLaboratorioInput>
  }

  export type ArmarioScalarWhereInput = {
    AND?: ArmarioScalarWhereInput | ArmarioScalarWhereInput[]
    OR?: ArmarioScalarWhereInput[]
    NOT?: ArmarioScalarWhereInput | ArmarioScalarWhereInput[]
    id?: IntFilter<"Armario"> | number
    nombre?: StringFilter<"Armario"> | string
    laboratorioId?: IntFilter<"Armario"> | number
    fechaCreacion?: DateTimeFilter<"Armario"> | Date | string
    fechaModificacion?: DateTimeFilter<"Armario"> | Date | string
    usuarioCreadorId?: StringFilter<"Armario"> | string
    usuarioModificadorId?: StringFilter<"Armario"> | string
  }

  export type EquipoUpsertWithWhereUniqueWithoutLaboratorioInput = {
    where: EquipoWhereUniqueInput
    update: XOR<EquipoUpdateWithoutLaboratorioInput, EquipoUncheckedUpdateWithoutLaboratorioInput>
    create: XOR<EquipoCreateWithoutLaboratorioInput, EquipoUncheckedCreateWithoutLaboratorioInput>
  }

  export type EquipoUpdateWithWhereUniqueWithoutLaboratorioInput = {
    where: EquipoWhereUniqueInput
    data: XOR<EquipoUpdateWithoutLaboratorioInput, EquipoUncheckedUpdateWithoutLaboratorioInput>
  }

  export type EquipoUpdateManyWithWhereWithoutLaboratorioInput = {
    where: EquipoScalarWhereInput
    data: XOR<EquipoUpdateManyMutationInput, EquipoUncheckedUpdateManyWithoutLaboratorioInput>
  }

  export type LibroUpsertWithWhereUniqueWithoutLaboratorioInput = {
    where: LibroWhereUniqueInput
    update: XOR<LibroUpdateWithoutLaboratorioInput, LibroUncheckedUpdateWithoutLaboratorioInput>
    create: XOR<LibroCreateWithoutLaboratorioInput, LibroUncheckedCreateWithoutLaboratorioInput>
  }

  export type LibroUpdateWithWhereUniqueWithoutLaboratorioInput = {
    where: LibroWhereUniqueInput
    data: XOR<LibroUpdateWithoutLaboratorioInput, LibroUncheckedUpdateWithoutLaboratorioInput>
  }

  export type LibroUpdateManyWithWhereWithoutLaboratorioInput = {
    where: LibroScalarWhereInput
    data: XOR<LibroUpdateManyMutationInput, LibroUncheckedUpdateManyWithoutLaboratorioInput>
  }

  export type ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutLaboratorioInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    update: XOR<ReservaLaboratorioCerradoUpdateWithoutLaboratorioInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutLaboratorioInput>
    create: XOR<ReservaLaboratorioCerradoCreateWithoutLaboratorioInput, ReservaLaboratorioCerradoUncheckedCreateWithoutLaboratorioInput>
  }

  export type ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutLaboratorioInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    data: XOR<ReservaLaboratorioCerradoUpdateWithoutLaboratorioInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutLaboratorioInput>
  }

  export type ReservaLaboratorioCerradoUpdateManyWithWhereWithoutLaboratorioInput = {
    where: ReservaLaboratorioCerradoScalarWhereInput
    data: XOR<ReservaLaboratorioCerradoUpdateManyMutationInput, ReservaLaboratorioCerradoUncheckedUpdateManyWithoutLaboratorioInput>
  }

  export type ReservaLaboratorioAbiertoUpsertWithWhereUniqueWithoutLaboratorioInput = {
    where: ReservaLaboratorioAbiertoWhereUniqueInput
    update: XOR<ReservaLaboratorioAbiertoUpdateWithoutLaboratorioInput, ReservaLaboratorioAbiertoUncheckedUpdateWithoutLaboratorioInput>
    create: XOR<ReservaLaboratorioAbiertoCreateWithoutLaboratorioInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutLaboratorioInput>
  }

  export type ReservaLaboratorioAbiertoUpdateWithWhereUniqueWithoutLaboratorioInput = {
    where: ReservaLaboratorioAbiertoWhereUniqueInput
    data: XOR<ReservaLaboratorioAbiertoUpdateWithoutLaboratorioInput, ReservaLaboratorioAbiertoUncheckedUpdateWithoutLaboratorioInput>
  }

  export type ReservaLaboratorioAbiertoUpdateManyWithWhereWithoutLaboratorioInput = {
    where: ReservaLaboratorioAbiertoScalarWhereInput
    data: XOR<ReservaLaboratorioAbiertoUpdateManyMutationInput, ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutLaboratorioInput>
  }

  export type ReservaLaboratorioAbiertoScalarWhereInput = {
    AND?: ReservaLaboratorioAbiertoScalarWhereInput | ReservaLaboratorioAbiertoScalarWhereInput[]
    OR?: ReservaLaboratorioAbiertoScalarWhereInput[]
    NOT?: ReservaLaboratorioAbiertoScalarWhereInput | ReservaLaboratorioAbiertoScalarWhereInput[]
    id?: IntFilter<"ReservaLaboratorioAbierto"> | number
    especialidad?: StringFilter<"ReservaLaboratorioAbierto"> | string
    descripcion?: StringFilter<"ReservaLaboratorioAbierto"> | string
    concurrentes?: IntFilter<"ReservaLaboratorioAbierto"> | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFilter<"ReservaLaboratorioAbierto"> | $Enums.LaboratorioAbiertoTipo
    reservaId?: IntFilter<"ReservaLaboratorioAbierto"> | number
    sedeId?: IntFilter<"ReservaLaboratorioAbierto"> | number
    laboratorioId?: IntNullableFilter<"ReservaLaboratorioAbierto"> | number | null
    fechaCreacion?: DateTimeFilter<"ReservaLaboratorioAbierto"> | Date | string
    fechaModificacion?: DateTimeFilter<"ReservaLaboratorioAbierto"> | Date | string
    usuarioCreadorId?: StringFilter<"ReservaLaboratorioAbierto"> | string
    usuarioModificadorId?: StringFilter<"ReservaLaboratorioAbierto"> | string
  }

  export type LaboratorioCreateWithoutArmariosInput = {
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    sede: SedeCreateNestedOneWithoutLaboratoriosInput
    software?: SoftwareLaboratorioCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoCreateNestedManyWithoutLaboratorioInput
    libros?: LibroCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioUncheckedCreateWithoutArmariosInput = {
    id?: number
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    software?: SoftwareLaboratorioUncheckedCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutLaboratorioInput
    libros?: LibroUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioCreateOrConnectWithoutArmariosInput = {
    where: LaboratorioWhereUniqueInput
    create: XOR<LaboratorioCreateWithoutArmariosInput, LaboratorioUncheckedCreateWithoutArmariosInput>
  }

  export type EstanteCreateWithoutArmarioInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipos?: EquipoCreateNestedManyWithoutEstanteInput
    libros?: LibroCreateNestedManyWithoutEstanteInput
  }

  export type EstanteUncheckedCreateWithoutArmarioInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipos?: EquipoUncheckedCreateNestedManyWithoutEstanteInput
    libros?: LibroUncheckedCreateNestedManyWithoutEstanteInput
  }

  export type EstanteCreateOrConnectWithoutArmarioInput = {
    where: EstanteWhereUniqueInput
    create: XOR<EstanteCreateWithoutArmarioInput, EstanteUncheckedCreateWithoutArmarioInput>
  }

  export type EstanteCreateManyArmarioInputEnvelope = {
    data: EstanteCreateManyArmarioInput | EstanteCreateManyArmarioInput[]
    skipDuplicates?: boolean
  }

  export type EquipoCreateWithoutArmarioInput = {
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    tipo: EquipoTipoCreateNestedOneWithoutEquiposInput
    marca: EquipoMarcaCreateNestedOneWithoutEquiposInput
    sede: SedeCreateNestedOneWithoutEquiposInput
    laboratorio: LaboratorioCreateNestedOneWithoutEquiposInput
    estante?: EstanteCreateNestedOneWithoutEquiposInput
    estado: EquipoEstadoCreateNestedOneWithoutEquiposInput
    reservas?: ReservaEquipoCreateNestedManyWithoutEquipoInput
  }

  export type EquipoUncheckedCreateWithoutArmarioInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    laboratorioId: number
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservas?: ReservaEquipoUncheckedCreateNestedManyWithoutEquipoInput
  }

  export type EquipoCreateOrConnectWithoutArmarioInput = {
    where: EquipoWhereUniqueInput
    create: XOR<EquipoCreateWithoutArmarioInput, EquipoUncheckedCreateWithoutArmarioInput>
  }

  export type EquipoCreateManyArmarioInputEnvelope = {
    data: EquipoCreateManyArmarioInput | EquipoCreateManyArmarioInput[]
    skipDuplicates?: boolean
  }

  export type LibroCreateWithoutArmarioInput = {
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaCreateNestedManyWithoutLibroInput
    laboratorio: LaboratorioCreateNestedOneWithoutLibrosInput
    estante?: EstanteCreateNestedOneWithoutLibrosInput
    autor: LibroAutorCreateNestedOneWithoutLibrosInput
    idioma: LibroIdiomaCreateNestedOneWithoutLibrosInput
    editorial: LibroEditorialCreateNestedOneWithoutLibrosInput
    sede: SedeCreateNestedOneWithoutLibrosInput
    reservas?: ReservaLibroCreateNestedManyWithoutLibroInput
  }

  export type LibroUncheckedCreateWithoutArmarioInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    estanteId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaUncheckedCreateNestedManyWithoutLibroInput
    reservas?: ReservaLibroUncheckedCreateNestedManyWithoutLibroInput
  }

  export type LibroCreateOrConnectWithoutArmarioInput = {
    where: LibroWhereUniqueInput
    create: XOR<LibroCreateWithoutArmarioInput, LibroUncheckedCreateWithoutArmarioInput>
  }

  export type LibroCreateManyArmarioInputEnvelope = {
    data: LibroCreateManyArmarioInput | LibroCreateManyArmarioInput[]
    skipDuplicates?: boolean
  }

  export type LaboratorioUpsertWithoutArmariosInput = {
    update: XOR<LaboratorioUpdateWithoutArmariosInput, LaboratorioUncheckedUpdateWithoutArmariosInput>
    create: XOR<LaboratorioCreateWithoutArmariosInput, LaboratorioUncheckedCreateWithoutArmariosInput>
    where?: LaboratorioWhereInput
  }

  export type LaboratorioUpdateToOneWithWhereWithoutArmariosInput = {
    where?: LaboratorioWhereInput
    data: XOR<LaboratorioUpdateWithoutArmariosInput, LaboratorioUncheckedUpdateWithoutArmariosInput>
  }

  export type LaboratorioUpdateWithoutArmariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    sede?: SedeUpdateOneRequiredWithoutLaboratoriosNestedInput
    software?: SoftwareLaboratorioUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutLaboratorioNestedInput
  }

  export type LaboratorioUncheckedUpdateWithoutArmariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    sedeId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    software?: SoftwareLaboratorioUncheckedUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutLaboratorioNestedInput
  }

  export type EstanteUpsertWithWhereUniqueWithoutArmarioInput = {
    where: EstanteWhereUniqueInput
    update: XOR<EstanteUpdateWithoutArmarioInput, EstanteUncheckedUpdateWithoutArmarioInput>
    create: XOR<EstanteCreateWithoutArmarioInput, EstanteUncheckedCreateWithoutArmarioInput>
  }

  export type EstanteUpdateWithWhereUniqueWithoutArmarioInput = {
    where: EstanteWhereUniqueInput
    data: XOR<EstanteUpdateWithoutArmarioInput, EstanteUncheckedUpdateWithoutArmarioInput>
  }

  export type EstanteUpdateManyWithWhereWithoutArmarioInput = {
    where: EstanteScalarWhereInput
    data: XOR<EstanteUpdateManyMutationInput, EstanteUncheckedUpdateManyWithoutArmarioInput>
  }

  export type EstanteScalarWhereInput = {
    AND?: EstanteScalarWhereInput | EstanteScalarWhereInput[]
    OR?: EstanteScalarWhereInput[]
    NOT?: EstanteScalarWhereInput | EstanteScalarWhereInput[]
    id?: IntFilter<"Estante"> | number
    nombre?: StringFilter<"Estante"> | string
    armarioId?: IntFilter<"Estante"> | number
    fechaCreacion?: DateTimeFilter<"Estante"> | Date | string
    fechaModificacion?: DateTimeFilter<"Estante"> | Date | string
    usuarioCreadorId?: StringFilter<"Estante"> | string
    usuarioModificadorId?: StringFilter<"Estante"> | string
  }

  export type EquipoUpsertWithWhereUniqueWithoutArmarioInput = {
    where: EquipoWhereUniqueInput
    update: XOR<EquipoUpdateWithoutArmarioInput, EquipoUncheckedUpdateWithoutArmarioInput>
    create: XOR<EquipoCreateWithoutArmarioInput, EquipoUncheckedCreateWithoutArmarioInput>
  }

  export type EquipoUpdateWithWhereUniqueWithoutArmarioInput = {
    where: EquipoWhereUniqueInput
    data: XOR<EquipoUpdateWithoutArmarioInput, EquipoUncheckedUpdateWithoutArmarioInput>
  }

  export type EquipoUpdateManyWithWhereWithoutArmarioInput = {
    where: EquipoScalarWhereInput
    data: XOR<EquipoUpdateManyMutationInput, EquipoUncheckedUpdateManyWithoutArmarioInput>
  }

  export type LibroUpsertWithWhereUniqueWithoutArmarioInput = {
    where: LibroWhereUniqueInput
    update: XOR<LibroUpdateWithoutArmarioInput, LibroUncheckedUpdateWithoutArmarioInput>
    create: XOR<LibroCreateWithoutArmarioInput, LibroUncheckedCreateWithoutArmarioInput>
  }

  export type LibroUpdateWithWhereUniqueWithoutArmarioInput = {
    where: LibroWhereUniqueInput
    data: XOR<LibroUpdateWithoutArmarioInput, LibroUncheckedUpdateWithoutArmarioInput>
  }

  export type LibroUpdateManyWithWhereWithoutArmarioInput = {
    where: LibroScalarWhereInput
    data: XOR<LibroUpdateManyMutationInput, LibroUncheckedUpdateManyWithoutArmarioInput>
  }

  export type ArmarioCreateWithoutEstantesInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    laboratorio: LaboratorioCreateNestedOneWithoutArmariosInput
    equipos?: EquipoCreateNestedManyWithoutArmarioInput
    libros?: LibroCreateNestedManyWithoutArmarioInput
  }

  export type ArmarioUncheckedCreateWithoutEstantesInput = {
    id?: number
    nombre: string
    laboratorioId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipos?: EquipoUncheckedCreateNestedManyWithoutArmarioInput
    libros?: LibroUncheckedCreateNestedManyWithoutArmarioInput
  }

  export type ArmarioCreateOrConnectWithoutEstantesInput = {
    where: ArmarioWhereUniqueInput
    create: XOR<ArmarioCreateWithoutEstantesInput, ArmarioUncheckedCreateWithoutEstantesInput>
  }

  export type EquipoCreateWithoutEstanteInput = {
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    tipo: EquipoTipoCreateNestedOneWithoutEquiposInput
    marca: EquipoMarcaCreateNestedOneWithoutEquiposInput
    sede: SedeCreateNestedOneWithoutEquiposInput
    laboratorio: LaboratorioCreateNestedOneWithoutEquiposInput
    armario?: ArmarioCreateNestedOneWithoutEquiposInput
    estado: EquipoEstadoCreateNestedOneWithoutEquiposInput
    reservas?: ReservaEquipoCreateNestedManyWithoutEquipoInput
  }

  export type EquipoUncheckedCreateWithoutEstanteInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    laboratorioId: number
    armarioId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservas?: ReservaEquipoUncheckedCreateNestedManyWithoutEquipoInput
  }

  export type EquipoCreateOrConnectWithoutEstanteInput = {
    where: EquipoWhereUniqueInput
    create: XOR<EquipoCreateWithoutEstanteInput, EquipoUncheckedCreateWithoutEstanteInput>
  }

  export type EquipoCreateManyEstanteInputEnvelope = {
    data: EquipoCreateManyEstanteInput | EquipoCreateManyEstanteInput[]
    skipDuplicates?: boolean
  }

  export type LibroCreateWithoutEstanteInput = {
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaCreateNestedManyWithoutLibroInput
    laboratorio: LaboratorioCreateNestedOneWithoutLibrosInput
    armario?: ArmarioCreateNestedOneWithoutLibrosInput
    autor: LibroAutorCreateNestedOneWithoutLibrosInput
    idioma: LibroIdiomaCreateNestedOneWithoutLibrosInput
    editorial: LibroEditorialCreateNestedOneWithoutLibrosInput
    sede: SedeCreateNestedOneWithoutLibrosInput
    reservas?: ReservaLibroCreateNestedManyWithoutLibroInput
  }

  export type LibroUncheckedCreateWithoutEstanteInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaUncheckedCreateNestedManyWithoutLibroInput
    reservas?: ReservaLibroUncheckedCreateNestedManyWithoutLibroInput
  }

  export type LibroCreateOrConnectWithoutEstanteInput = {
    where: LibroWhereUniqueInput
    create: XOR<LibroCreateWithoutEstanteInput, LibroUncheckedCreateWithoutEstanteInput>
  }

  export type LibroCreateManyEstanteInputEnvelope = {
    data: LibroCreateManyEstanteInput | LibroCreateManyEstanteInput[]
    skipDuplicates?: boolean
  }

  export type ArmarioUpsertWithoutEstantesInput = {
    update: XOR<ArmarioUpdateWithoutEstantesInput, ArmarioUncheckedUpdateWithoutEstantesInput>
    create: XOR<ArmarioCreateWithoutEstantesInput, ArmarioUncheckedCreateWithoutEstantesInput>
    where?: ArmarioWhereInput
  }

  export type ArmarioUpdateToOneWithWhereWithoutEstantesInput = {
    where?: ArmarioWhereInput
    data: XOR<ArmarioUpdateWithoutEstantesInput, ArmarioUncheckedUpdateWithoutEstantesInput>
  }

  export type ArmarioUpdateWithoutEstantesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    laboratorio?: LaboratorioUpdateOneRequiredWithoutArmariosNestedInput
    equipos?: EquipoUpdateManyWithoutArmarioNestedInput
    libros?: LibroUpdateManyWithoutArmarioNestedInput
  }

  export type ArmarioUncheckedUpdateWithoutEstantesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    laboratorioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUncheckedUpdateManyWithoutArmarioNestedInput
    libros?: LibroUncheckedUpdateManyWithoutArmarioNestedInput
  }

  export type EquipoUpsertWithWhereUniqueWithoutEstanteInput = {
    where: EquipoWhereUniqueInput
    update: XOR<EquipoUpdateWithoutEstanteInput, EquipoUncheckedUpdateWithoutEstanteInput>
    create: XOR<EquipoCreateWithoutEstanteInput, EquipoUncheckedCreateWithoutEstanteInput>
  }

  export type EquipoUpdateWithWhereUniqueWithoutEstanteInput = {
    where: EquipoWhereUniqueInput
    data: XOR<EquipoUpdateWithoutEstanteInput, EquipoUncheckedUpdateWithoutEstanteInput>
  }

  export type EquipoUpdateManyWithWhereWithoutEstanteInput = {
    where: EquipoScalarWhereInput
    data: XOR<EquipoUpdateManyMutationInput, EquipoUncheckedUpdateManyWithoutEstanteInput>
  }

  export type LibroUpsertWithWhereUniqueWithoutEstanteInput = {
    where: LibroWhereUniqueInput
    update: XOR<LibroUpdateWithoutEstanteInput, LibroUncheckedUpdateWithoutEstanteInput>
    create: XOR<LibroCreateWithoutEstanteInput, LibroUncheckedCreateWithoutEstanteInput>
  }

  export type LibroUpdateWithWhereUniqueWithoutEstanteInput = {
    where: LibroWhereUniqueInput
    data: XOR<LibroUpdateWithoutEstanteInput, LibroUncheckedUpdateWithoutEstanteInput>
  }

  export type LibroUpdateManyWithWhereWithoutEstanteInput = {
    where: LibroScalarWhereInput
    data: XOR<LibroUpdateManyMutationInput, LibroUncheckedUpdateManyWithoutEstanteInput>
  }

  export type SoftwareLaboratorioCreateWithoutSoftwareInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    laboratorio: LaboratorioCreateNestedOneWithoutSoftwareInput
  }

  export type SoftwareLaboratorioUncheckedCreateWithoutSoftwareInput = {
    laboratorioId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type SoftwareLaboratorioCreateOrConnectWithoutSoftwareInput = {
    where: SoftwareLaboratorioWhereUniqueInput
    create: XOR<SoftwareLaboratorioCreateWithoutSoftwareInput, SoftwareLaboratorioUncheckedCreateWithoutSoftwareInput>
  }

  export type SoftwareLaboratorioCreateManySoftwareInputEnvelope = {
    data: SoftwareLaboratorioCreateManySoftwareInput | SoftwareLaboratorioCreateManySoftwareInput[]
    skipDuplicates?: boolean
  }

  export type SoftwareLaboratorioUpsertWithWhereUniqueWithoutSoftwareInput = {
    where: SoftwareLaboratorioWhereUniqueInput
    update: XOR<SoftwareLaboratorioUpdateWithoutSoftwareInput, SoftwareLaboratorioUncheckedUpdateWithoutSoftwareInput>
    create: XOR<SoftwareLaboratorioCreateWithoutSoftwareInput, SoftwareLaboratorioUncheckedCreateWithoutSoftwareInput>
  }

  export type SoftwareLaboratorioUpdateWithWhereUniqueWithoutSoftwareInput = {
    where: SoftwareLaboratorioWhereUniqueInput
    data: XOR<SoftwareLaboratorioUpdateWithoutSoftwareInput, SoftwareLaboratorioUncheckedUpdateWithoutSoftwareInput>
  }

  export type SoftwareLaboratorioUpdateManyWithWhereWithoutSoftwareInput = {
    where: SoftwareLaboratorioScalarWhereInput
    data: XOR<SoftwareLaboratorioUpdateManyMutationInput, SoftwareLaboratorioUncheckedUpdateManyWithoutSoftwareInput>
  }

  export type SoftwareCreateWithoutLaboratoriosInput = {
    nombre: string
    version: string
    estado: string
    windows?: boolean
    linux?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type SoftwareUncheckedCreateWithoutLaboratoriosInput = {
    id?: number
    nombre: string
    version: string
    estado: string
    windows?: boolean
    linux?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type SoftwareCreateOrConnectWithoutLaboratoriosInput = {
    where: SoftwareWhereUniqueInput
    create: XOR<SoftwareCreateWithoutLaboratoriosInput, SoftwareUncheckedCreateWithoutLaboratoriosInput>
  }

  export type LaboratorioCreateWithoutSoftwareInput = {
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    sede: SedeCreateNestedOneWithoutLaboratoriosInput
    armarios?: ArmarioCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoCreateNestedManyWithoutLaboratorioInput
    libros?: LibroCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioUncheckedCreateWithoutSoftwareInput = {
    id?: number
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    armarios?: ArmarioUncheckedCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutLaboratorioInput
    libros?: LibroUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioCreateOrConnectWithoutSoftwareInput = {
    where: LaboratorioWhereUniqueInput
    create: XOR<LaboratorioCreateWithoutSoftwareInput, LaboratorioUncheckedCreateWithoutSoftwareInput>
  }

  export type SoftwareUpsertWithoutLaboratoriosInput = {
    update: XOR<SoftwareUpdateWithoutLaboratoriosInput, SoftwareUncheckedUpdateWithoutLaboratoriosInput>
    create: XOR<SoftwareCreateWithoutLaboratoriosInput, SoftwareUncheckedCreateWithoutLaboratoriosInput>
    where?: SoftwareWhereInput
  }

  export type SoftwareUpdateToOneWithWhereWithoutLaboratoriosInput = {
    where?: SoftwareWhereInput
    data: XOR<SoftwareUpdateWithoutLaboratoriosInput, SoftwareUncheckedUpdateWithoutLaboratoriosInput>
  }

  export type SoftwareUpdateWithoutLaboratoriosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    windows?: BoolFieldUpdateOperationsInput | boolean
    linux?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareUncheckedUpdateWithoutLaboratoriosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    windows?: BoolFieldUpdateOperationsInput | boolean
    linux?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LaboratorioUpsertWithoutSoftwareInput = {
    update: XOR<LaboratorioUpdateWithoutSoftwareInput, LaboratorioUncheckedUpdateWithoutSoftwareInput>
    create: XOR<LaboratorioCreateWithoutSoftwareInput, LaboratorioUncheckedCreateWithoutSoftwareInput>
    where?: LaboratorioWhereInput
  }

  export type LaboratorioUpdateToOneWithWhereWithoutSoftwareInput = {
    where?: LaboratorioWhereInput
    data: XOR<LaboratorioUpdateWithoutSoftwareInput, LaboratorioUncheckedUpdateWithoutSoftwareInput>
  }

  export type LaboratorioUpdateWithoutSoftwareInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    sede?: SedeUpdateOneRequiredWithoutLaboratoriosNestedInput
    armarios?: ArmarioUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutLaboratorioNestedInput
  }

  export type LaboratorioUncheckedUpdateWithoutSoftwareInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    sedeId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    armarios?: ArmarioUncheckedUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutLaboratorioNestedInput
  }

  export type UserCreateWithoutMateriasDirectorInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutMateriasDirectorInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutMateriasDirectorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMateriasDirectorInput, UserUncheckedCreateWithoutMateriasDirectorInput>
  }

  export type MateriaJefeTpCreateWithoutMateriaInput = {
    usuario: UserCreateNestedOneWithoutMateriaJefeTpInput
  }

  export type MateriaJefeTpUncheckedCreateWithoutMateriaInput = {
    userId: string
  }

  export type MateriaJefeTpCreateOrConnectWithoutMateriaInput = {
    where: MateriaJefeTpWhereUniqueInput
    create: XOR<MateriaJefeTpCreateWithoutMateriaInput, MateriaJefeTpUncheckedCreateWithoutMateriaInput>
  }

  export type MateriaJefeTpCreateManyMateriaInputEnvelope = {
    data: MateriaJefeTpCreateManyMateriaInput | MateriaJefeTpCreateManyMateriaInput[]
    skipDuplicates?: boolean
  }

  export type CursoCreateWithoutMateriaInput = {
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    anioDeCarrera: number
    activo: boolean
    ac: string
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteCreateNestedManyWithoutCursoInput
    profesor: UserCreateNestedOneWithoutCursosComoProfesorInput
    sede: SedeCreateNestedOneWithoutCursosInput
    division: DivisionCreateNestedOneWithoutCursosInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutCursoInput
  }

  export type CursoUncheckedCreateWithoutMateriaInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    profesorId: string
    anioDeCarrera: number
    activo: boolean
    ac: string
    sedeId: number
    divisionId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteUncheckedCreateNestedManyWithoutCursoInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutCursoInput
  }

  export type CursoCreateOrConnectWithoutMateriaInput = {
    where: CursoWhereUniqueInput
    create: XOR<CursoCreateWithoutMateriaInput, CursoUncheckedCreateWithoutMateriaInput>
  }

  export type CursoCreateManyMateriaInputEnvelope = {
    data: CursoCreateManyMateriaInput | CursoCreateManyMateriaInput[]
    skipDuplicates?: boolean
  }

  export type LibroMateriaCreateWithoutMateriaInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    libro: LibroCreateNestedOneWithoutMateriasInput
  }

  export type LibroMateriaUncheckedCreateWithoutMateriaInput = {
    libroId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type LibroMateriaCreateOrConnectWithoutMateriaInput = {
    where: LibroMateriaWhereUniqueInput
    create: XOR<LibroMateriaCreateWithoutMateriaInput, LibroMateriaUncheckedCreateWithoutMateriaInput>
  }

  export type LibroMateriaCreateManyMateriaInputEnvelope = {
    data: LibroMateriaCreateManyMateriaInput | LibroMateriaCreateManyMateriaInput[]
    skipDuplicates?: boolean
  }

  export type MateriaCorrelativaCreateWithoutMateriaPrerequisitoInput = {
    estatusCorrelativa: $Enums.EstatusCorrelativa
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    correlativa: MateriaCreateNestedOneWithoutCorrelativaInput
  }

  export type MateriaCorrelativaUncheckedCreateWithoutMateriaPrerequisitoInput = {
    correlativaId: number
    estatusCorrelativa: $Enums.EstatusCorrelativa
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type MateriaCorrelativaCreateOrConnectWithoutMateriaPrerequisitoInput = {
    where: MateriaCorrelativaWhereUniqueInput
    create: XOR<MateriaCorrelativaCreateWithoutMateriaPrerequisitoInput, MateriaCorrelativaUncheckedCreateWithoutMateriaPrerequisitoInput>
  }

  export type MateriaCorrelativaCreateManyMateriaPrerequisitoInputEnvelope = {
    data: MateriaCorrelativaCreateManyMateriaPrerequisitoInput | MateriaCorrelativaCreateManyMateriaPrerequisitoInput[]
    skipDuplicates?: boolean
  }

  export type MateriaCorrelativaCreateWithoutCorrelativaInput = {
    estatusCorrelativa: $Enums.EstatusCorrelativa
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materiaPrerequisito: MateriaCreateNestedOneWithoutMateriaPrerequisitoInput
  }

  export type MateriaCorrelativaUncheckedCreateWithoutCorrelativaInput = {
    materiaPrerequisitoId: number
    estatusCorrelativa: $Enums.EstatusCorrelativa
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type MateriaCorrelativaCreateOrConnectWithoutCorrelativaInput = {
    where: MateriaCorrelativaWhereUniqueInput
    create: XOR<MateriaCorrelativaCreateWithoutCorrelativaInput, MateriaCorrelativaUncheckedCreateWithoutCorrelativaInput>
  }

  export type MateriaCorrelativaCreateManyCorrelativaInputEnvelope = {
    data: MateriaCorrelativaCreateManyCorrelativaInput | MateriaCorrelativaCreateManyCorrelativaInput[]
    skipDuplicates?: boolean
  }

  export type ReservaLaboratorioCerradoCreateWithoutDiscrecionalMateriaInput = {
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    sede: SedeCreateNestedOneWithoutReservaLaboratorioCerradoInput
    laboratorio?: LaboratorioCreateNestedOneWithoutReservaLaboratorioCerradoInput
    curso?: CursoCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalDocente?: UserCreateNestedOneWithoutReservaLaboratorioCerradoInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalMateriaInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalMateriaInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    create: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalMateriaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalMateriaInput>
  }

  export type ReservaLaboratorioCerradoCreateManyDiscrecionalMateriaInputEnvelope = {
    data: ReservaLaboratorioCerradoCreateManyDiscrecionalMateriaInput | ReservaLaboratorioCerradoCreateManyDiscrecionalMateriaInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutMateriasDirectorInput = {
    update: XOR<UserUpdateWithoutMateriasDirectorInput, UserUncheckedUpdateWithoutMateriasDirectorInput>
    create: XOR<UserCreateWithoutMateriasDirectorInput, UserUncheckedCreateWithoutMateriasDirectorInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMateriasDirectorInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMateriasDirectorInput, UserUncheckedUpdateWithoutMateriasDirectorInput>
  }

  export type UserUpdateWithoutMateriasDirectorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutMateriasDirectorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type MateriaJefeTpUpsertWithWhereUniqueWithoutMateriaInput = {
    where: MateriaJefeTpWhereUniqueInput
    update: XOR<MateriaJefeTpUpdateWithoutMateriaInput, MateriaJefeTpUncheckedUpdateWithoutMateriaInput>
    create: XOR<MateriaJefeTpCreateWithoutMateriaInput, MateriaJefeTpUncheckedCreateWithoutMateriaInput>
  }

  export type MateriaJefeTpUpdateWithWhereUniqueWithoutMateriaInput = {
    where: MateriaJefeTpWhereUniqueInput
    data: XOR<MateriaJefeTpUpdateWithoutMateriaInput, MateriaJefeTpUncheckedUpdateWithoutMateriaInput>
  }

  export type MateriaJefeTpUpdateManyWithWhereWithoutMateriaInput = {
    where: MateriaJefeTpScalarWhereInput
    data: XOR<MateriaJefeTpUpdateManyMutationInput, MateriaJefeTpUncheckedUpdateManyWithoutMateriaInput>
  }

  export type MateriaJefeTpScalarWhereInput = {
    AND?: MateriaJefeTpScalarWhereInput | MateriaJefeTpScalarWhereInput[]
    OR?: MateriaJefeTpScalarWhereInput[]
    NOT?: MateriaJefeTpScalarWhereInput | MateriaJefeTpScalarWhereInput[]
    materiaId?: IntFilter<"MateriaJefeTp"> | number
    userId?: StringFilter<"MateriaJefeTp"> | string
  }

  export type CursoUpsertWithWhereUniqueWithoutMateriaInput = {
    where: CursoWhereUniqueInput
    update: XOR<CursoUpdateWithoutMateriaInput, CursoUncheckedUpdateWithoutMateriaInput>
    create: XOR<CursoCreateWithoutMateriaInput, CursoUncheckedCreateWithoutMateriaInput>
  }

  export type CursoUpdateWithWhereUniqueWithoutMateriaInput = {
    where: CursoWhereUniqueInput
    data: XOR<CursoUpdateWithoutMateriaInput, CursoUncheckedUpdateWithoutMateriaInput>
  }

  export type CursoUpdateManyWithWhereWithoutMateriaInput = {
    where: CursoScalarWhereInput
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyWithoutMateriaInput>
  }

  export type LibroMateriaUpsertWithWhereUniqueWithoutMateriaInput = {
    where: LibroMateriaWhereUniqueInput
    update: XOR<LibroMateriaUpdateWithoutMateriaInput, LibroMateriaUncheckedUpdateWithoutMateriaInput>
    create: XOR<LibroMateriaCreateWithoutMateriaInput, LibroMateriaUncheckedCreateWithoutMateriaInput>
  }

  export type LibroMateriaUpdateWithWhereUniqueWithoutMateriaInput = {
    where: LibroMateriaWhereUniqueInput
    data: XOR<LibroMateriaUpdateWithoutMateriaInput, LibroMateriaUncheckedUpdateWithoutMateriaInput>
  }

  export type LibroMateriaUpdateManyWithWhereWithoutMateriaInput = {
    where: LibroMateriaScalarWhereInput
    data: XOR<LibroMateriaUpdateManyMutationInput, LibroMateriaUncheckedUpdateManyWithoutMateriaInput>
  }

  export type MateriaCorrelativaUpsertWithWhereUniqueWithoutMateriaPrerequisitoInput = {
    where: MateriaCorrelativaWhereUniqueInput
    update: XOR<MateriaCorrelativaUpdateWithoutMateriaPrerequisitoInput, MateriaCorrelativaUncheckedUpdateWithoutMateriaPrerequisitoInput>
    create: XOR<MateriaCorrelativaCreateWithoutMateriaPrerequisitoInput, MateriaCorrelativaUncheckedCreateWithoutMateriaPrerequisitoInput>
  }

  export type MateriaCorrelativaUpdateWithWhereUniqueWithoutMateriaPrerequisitoInput = {
    where: MateriaCorrelativaWhereUniqueInput
    data: XOR<MateriaCorrelativaUpdateWithoutMateriaPrerequisitoInput, MateriaCorrelativaUncheckedUpdateWithoutMateriaPrerequisitoInput>
  }

  export type MateriaCorrelativaUpdateManyWithWhereWithoutMateriaPrerequisitoInput = {
    where: MateriaCorrelativaScalarWhereInput
    data: XOR<MateriaCorrelativaUpdateManyMutationInput, MateriaCorrelativaUncheckedUpdateManyWithoutMateriaPrerequisitoInput>
  }

  export type MateriaCorrelativaScalarWhereInput = {
    AND?: MateriaCorrelativaScalarWhereInput | MateriaCorrelativaScalarWhereInput[]
    OR?: MateriaCorrelativaScalarWhereInput[]
    NOT?: MateriaCorrelativaScalarWhereInput | MateriaCorrelativaScalarWhereInput[]
    materiaPrerequisitoId?: IntFilter<"MateriaCorrelativa"> | number
    correlativaId?: IntFilter<"MateriaCorrelativa"> | number
    estatusCorrelativa?: EnumEstatusCorrelativaFilter<"MateriaCorrelativa"> | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFilter<"MateriaCorrelativa"> | Date | string
    fechaModificacion?: DateTimeFilter<"MateriaCorrelativa"> | Date | string
    usuarioCreadorId?: StringFilter<"MateriaCorrelativa"> | string
    usuarioModificadorId?: StringFilter<"MateriaCorrelativa"> | string
  }

  export type MateriaCorrelativaUpsertWithWhereUniqueWithoutCorrelativaInput = {
    where: MateriaCorrelativaWhereUniqueInput
    update: XOR<MateriaCorrelativaUpdateWithoutCorrelativaInput, MateriaCorrelativaUncheckedUpdateWithoutCorrelativaInput>
    create: XOR<MateriaCorrelativaCreateWithoutCorrelativaInput, MateriaCorrelativaUncheckedCreateWithoutCorrelativaInput>
  }

  export type MateriaCorrelativaUpdateWithWhereUniqueWithoutCorrelativaInput = {
    where: MateriaCorrelativaWhereUniqueInput
    data: XOR<MateriaCorrelativaUpdateWithoutCorrelativaInput, MateriaCorrelativaUncheckedUpdateWithoutCorrelativaInput>
  }

  export type MateriaCorrelativaUpdateManyWithWhereWithoutCorrelativaInput = {
    where: MateriaCorrelativaScalarWhereInput
    data: XOR<MateriaCorrelativaUpdateManyMutationInput, MateriaCorrelativaUncheckedUpdateManyWithoutCorrelativaInput>
  }

  export type ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutDiscrecionalMateriaInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    update: XOR<ReservaLaboratorioCerradoUpdateWithoutDiscrecionalMateriaInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutDiscrecionalMateriaInput>
    create: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalMateriaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalMateriaInput>
  }

  export type ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutDiscrecionalMateriaInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    data: XOR<ReservaLaboratorioCerradoUpdateWithoutDiscrecionalMateriaInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutDiscrecionalMateriaInput>
  }

  export type ReservaLaboratorioCerradoUpdateManyWithWhereWithoutDiscrecionalMateriaInput = {
    where: ReservaLaboratorioCerradoScalarWhereInput
    data: XOR<ReservaLaboratorioCerradoUpdateManyMutationInput, ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalMateriaInput>
  }

  export type MateriaCreateWithoutJefeTrabajoPracticosInput = {
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    directorUsuario?: UserCreateNestedOneWithoutMateriasDirectorInput
    cursos?: CursoCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaUncheckedCreateWithoutJefeTrabajoPracticosInput = {
    id?: number
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    directorUsuarioId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    cursos?: CursoUncheckedCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaUncheckedCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaUncheckedCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaCreateOrConnectWithoutJefeTrabajoPracticosInput = {
    where: MateriaWhereUniqueInput
    create: XOR<MateriaCreateWithoutJefeTrabajoPracticosInput, MateriaUncheckedCreateWithoutJefeTrabajoPracticosInput>
  }

  export type UserCreateWithoutMateriaJefeTpInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutMateriaJefeTpInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutMateriaJefeTpInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMateriaJefeTpInput, UserUncheckedCreateWithoutMateriaJefeTpInput>
  }

  export type MateriaUpsertWithoutJefeTrabajoPracticosInput = {
    update: XOR<MateriaUpdateWithoutJefeTrabajoPracticosInput, MateriaUncheckedUpdateWithoutJefeTrabajoPracticosInput>
    create: XOR<MateriaCreateWithoutJefeTrabajoPracticosInput, MateriaUncheckedCreateWithoutJefeTrabajoPracticosInput>
    where?: MateriaWhereInput
  }

  export type MateriaUpdateToOneWithWhereWithoutJefeTrabajoPracticosInput = {
    where?: MateriaWhereInput
    data: XOR<MateriaUpdateWithoutJefeTrabajoPracticosInput, MateriaUncheckedUpdateWithoutJefeTrabajoPracticosInput>
  }

  export type MateriaUpdateWithoutJefeTrabajoPracticosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    directorUsuario?: UserUpdateOneWithoutMateriasDirectorNestedInput
    cursos?: CursoUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type MateriaUncheckedUpdateWithoutJefeTrabajoPracticosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    directorUsuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUncheckedUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUncheckedUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUncheckedUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type UserUpsertWithoutMateriaJefeTpInput = {
    update: XOR<UserUpdateWithoutMateriaJefeTpInput, UserUncheckedUpdateWithoutMateriaJefeTpInput>
    create: XOR<UserCreateWithoutMateriaJefeTpInput, UserUncheckedCreateWithoutMateriaJefeTpInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMateriaJefeTpInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMateriaJefeTpInput, UserUncheckedUpdateWithoutMateriaJefeTpInput>
  }

  export type UserUpdateWithoutMateriaJefeTpInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutMateriaJefeTpInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type MateriaCreateWithoutMateriaPrerequisitoInput = {
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    directorUsuario?: UserCreateNestedOneWithoutMateriasDirectorInput
    jefeTrabajoPracticos?: MateriaJefeTpCreateNestedManyWithoutMateriaInput
    cursos?: CursoCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaCreateNestedManyWithoutMateriaInput
    correlativa?: MateriaCorrelativaCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaUncheckedCreateWithoutMateriaPrerequisitoInput = {
    id?: number
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    directorUsuarioId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedCreateNestedManyWithoutMateriaInput
    cursos?: CursoUncheckedCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaUncheckedCreateNestedManyWithoutMateriaInput
    correlativa?: MateriaCorrelativaUncheckedCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaCreateOrConnectWithoutMateriaPrerequisitoInput = {
    where: MateriaWhereUniqueInput
    create: XOR<MateriaCreateWithoutMateriaPrerequisitoInput, MateriaUncheckedCreateWithoutMateriaPrerequisitoInput>
  }

  export type MateriaCreateWithoutCorrelativaInput = {
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    directorUsuario?: UserCreateNestedOneWithoutMateriasDirectorInput
    jefeTrabajoPracticos?: MateriaJefeTpCreateNestedManyWithoutMateriaInput
    cursos?: CursoCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaCreateNestedManyWithoutMateriaPrerequisitoInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaUncheckedCreateWithoutCorrelativaInput = {
    id?: number
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    directorUsuarioId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedCreateNestedManyWithoutMateriaInput
    cursos?: CursoUncheckedCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaUncheckedCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedCreateNestedManyWithoutMateriaPrerequisitoInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaCreateOrConnectWithoutCorrelativaInput = {
    where: MateriaWhereUniqueInput
    create: XOR<MateriaCreateWithoutCorrelativaInput, MateriaUncheckedCreateWithoutCorrelativaInput>
  }

  export type MateriaUpsertWithoutMateriaPrerequisitoInput = {
    update: XOR<MateriaUpdateWithoutMateriaPrerequisitoInput, MateriaUncheckedUpdateWithoutMateriaPrerequisitoInput>
    create: XOR<MateriaCreateWithoutMateriaPrerequisitoInput, MateriaUncheckedCreateWithoutMateriaPrerequisitoInput>
    where?: MateriaWhereInput
  }

  export type MateriaUpdateToOneWithWhereWithoutMateriaPrerequisitoInput = {
    where?: MateriaWhereInput
    data: XOR<MateriaUpdateWithoutMateriaPrerequisitoInput, MateriaUncheckedUpdateWithoutMateriaPrerequisitoInput>
  }

  export type MateriaUpdateWithoutMateriaPrerequisitoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    directorUsuario?: UserUpdateOneWithoutMateriasDirectorNestedInput
    jefeTrabajoPracticos?: MateriaJefeTpUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUpdateManyWithoutMateriaNestedInput
    correlativa?: MateriaCorrelativaUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type MateriaUncheckedUpdateWithoutMateriaPrerequisitoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    directorUsuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUncheckedUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUncheckedUpdateManyWithoutMateriaNestedInput
    correlativa?: MateriaCorrelativaUncheckedUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type MateriaUpsertWithoutCorrelativaInput = {
    update: XOR<MateriaUpdateWithoutCorrelativaInput, MateriaUncheckedUpdateWithoutCorrelativaInput>
    create: XOR<MateriaCreateWithoutCorrelativaInput, MateriaUncheckedCreateWithoutCorrelativaInput>
    where?: MateriaWhereInput
  }

  export type MateriaUpdateToOneWithWhereWithoutCorrelativaInput = {
    where?: MateriaWhereInput
    data: XOR<MateriaUpdateWithoutCorrelativaInput, MateriaUncheckedUpdateWithoutCorrelativaInput>
  }

  export type MateriaUpdateWithoutCorrelativaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    directorUsuario?: UserUpdateOneWithoutMateriasDirectorNestedInput
    jefeTrabajoPracticos?: MateriaJefeTpUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUpdateManyWithoutMateriaPrerequisitoNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type MateriaUncheckedUpdateWithoutCorrelativaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    directorUsuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUncheckedUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUncheckedUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedUpdateManyWithoutMateriaPrerequisitoNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type UserCreateWithoutReservasSolicitadasInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutReservasSolicitadasInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutReservasSolicitadasInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReservasSolicitadasInput, UserUncheckedCreateWithoutReservasSolicitadasInput>
  }

  export type UserCreateWithoutReservasAprobadasInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutReservasAprobadasInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutReservasAprobadasInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReservasAprobadasInput, UserUncheckedCreateWithoutReservasAprobadasInput>
  }

  export type UserCreateWithoutReservasRechazadasInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutReservasRechazadasInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutReservasRechazadasInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReservasRechazadasInput, UserUncheckedCreateWithoutReservasRechazadasInput>
  }

  export type UserCreateWithoutReservasRenovadasInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutReservasRenovadasInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutReservasRenovadasInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReservasRenovadasInput, UserUncheckedCreateWithoutReservasRenovadasInput>
  }

  export type UserCreateWithoutReservasRecibidasInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutReservasRecibidasInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutReservasRecibidasInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReservasRecibidasInput, UserUncheckedCreateWithoutReservasRecibidasInput>
  }

  export type UserCreateWithoutReservasComoTutorInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutReservasComoTutorInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutReservasComoTutorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReservasComoTutorInput, UserUncheckedCreateWithoutReservasComoTutorInput>
  }

  export type ReservaEquipoCreateWithoutReservaInput = {
    fechaEntregado: Date | string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipo: EquipoCreateNestedOneWithoutReservasInput
  }

  export type ReservaEquipoUncheckedCreateWithoutReservaInput = {
    id?: number
    fechaEntregado: Date | string
    equipoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaEquipoCreateOrConnectWithoutReservaInput = {
    where: ReservaEquipoWhereUniqueInput
    create: XOR<ReservaEquipoCreateWithoutReservaInput, ReservaEquipoUncheckedCreateWithoutReservaInput>
  }

  export type ReservaLibroCreateWithoutReservaInput = {
    fechaEntregado: Date | string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    libro: LibroCreateNestedOneWithoutReservasInput
  }

  export type ReservaLibroUncheckedCreateWithoutReservaInput = {
    id?: number
    fechaEntregado: Date | string
    libroId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLibroCreateOrConnectWithoutReservaInput = {
    where: ReservaLibroWhereUniqueInput
    create: XOR<ReservaLibroCreateWithoutReservaInput, ReservaLibroUncheckedCreateWithoutReservaInput>
  }

  export type ReservaLaboratorioCerradoCreateWithoutReservaInput = {
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    sede: SedeCreateNestedOneWithoutReservaLaboratorioCerradoInput
    laboratorio?: LaboratorioCreateNestedOneWithoutReservaLaboratorioCerradoInput
    curso?: CursoCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalMateria?: MateriaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalDocente?: UserCreateNestedOneWithoutReservaLaboratorioCerradoInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoUncheckedCreateWithoutReservaInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    sedeId: number
    laboratorioId?: number | null
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoCreateOrConnectWithoutReservaInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    create: XOR<ReservaLaboratorioCerradoCreateWithoutReservaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutReservaInput>
  }

  export type ReservaLaboratorioAbiertoCreateWithoutReservaInput = {
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    sede: SedeCreateNestedOneWithoutReservaLaboratorioAbiertoInput
    laboratorio?: LaboratorioCreateNestedOneWithoutReservaLaboratorioAbiertoInput
    equipoReservado?: ReservaLaboratorioAbiertoEquipoCreateNestedManyWithoutReservaLaboratorioAbiertoInput
  }

  export type ReservaLaboratorioAbiertoUncheckedCreateWithoutReservaInput = {
    id?: number
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    sedeId: number
    laboratorioId?: number | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioAbiertoInput
  }

  export type ReservaLaboratorioAbiertoCreateOrConnectWithoutReservaInput = {
    where: ReservaLaboratorioAbiertoWhereUniqueInput
    create: XOR<ReservaLaboratorioAbiertoCreateWithoutReservaInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutReservaInput>
  }

  export type UserUpsertWithoutReservasSolicitadasInput = {
    update: XOR<UserUpdateWithoutReservasSolicitadasInput, UserUncheckedUpdateWithoutReservasSolicitadasInput>
    create: XOR<UserCreateWithoutReservasSolicitadasInput, UserUncheckedCreateWithoutReservasSolicitadasInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReservasSolicitadasInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReservasSolicitadasInput, UserUncheckedUpdateWithoutReservasSolicitadasInput>
  }

  export type UserUpdateWithoutReservasSolicitadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutReservasSolicitadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUpsertWithoutReservasAprobadasInput = {
    update: XOR<UserUpdateWithoutReservasAprobadasInput, UserUncheckedUpdateWithoutReservasAprobadasInput>
    create: XOR<UserCreateWithoutReservasAprobadasInput, UserUncheckedCreateWithoutReservasAprobadasInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReservasAprobadasInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReservasAprobadasInput, UserUncheckedUpdateWithoutReservasAprobadasInput>
  }

  export type UserUpdateWithoutReservasAprobadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutReservasAprobadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUpsertWithoutReservasRechazadasInput = {
    update: XOR<UserUpdateWithoutReservasRechazadasInput, UserUncheckedUpdateWithoutReservasRechazadasInput>
    create: XOR<UserCreateWithoutReservasRechazadasInput, UserUncheckedCreateWithoutReservasRechazadasInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReservasRechazadasInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReservasRechazadasInput, UserUncheckedUpdateWithoutReservasRechazadasInput>
  }

  export type UserUpdateWithoutReservasRechazadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutReservasRechazadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUpsertWithoutReservasRenovadasInput = {
    update: XOR<UserUpdateWithoutReservasRenovadasInput, UserUncheckedUpdateWithoutReservasRenovadasInput>
    create: XOR<UserCreateWithoutReservasRenovadasInput, UserUncheckedCreateWithoutReservasRenovadasInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReservasRenovadasInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReservasRenovadasInput, UserUncheckedUpdateWithoutReservasRenovadasInput>
  }

  export type UserUpdateWithoutReservasRenovadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutReservasRenovadasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUpsertWithoutReservasRecibidasInput = {
    update: XOR<UserUpdateWithoutReservasRecibidasInput, UserUncheckedUpdateWithoutReservasRecibidasInput>
    create: XOR<UserCreateWithoutReservasRecibidasInput, UserUncheckedCreateWithoutReservasRecibidasInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReservasRecibidasInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReservasRecibidasInput, UserUncheckedUpdateWithoutReservasRecibidasInput>
  }

  export type UserUpdateWithoutReservasRecibidasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutReservasRecibidasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUpsertWithoutReservasComoTutorInput = {
    update: XOR<UserUpdateWithoutReservasComoTutorInput, UserUncheckedUpdateWithoutReservasComoTutorInput>
    create: XOR<UserCreateWithoutReservasComoTutorInput, UserUncheckedCreateWithoutReservasComoTutorInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReservasComoTutorInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReservasComoTutorInput, UserUncheckedUpdateWithoutReservasComoTutorInput>
  }

  export type UserUpdateWithoutReservasComoTutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutReservasComoTutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type ReservaEquipoUpsertWithoutReservaInput = {
    update: XOR<ReservaEquipoUpdateWithoutReservaInput, ReservaEquipoUncheckedUpdateWithoutReservaInput>
    create: XOR<ReservaEquipoCreateWithoutReservaInput, ReservaEquipoUncheckedCreateWithoutReservaInput>
    where?: ReservaEquipoWhereInput
  }

  export type ReservaEquipoUpdateToOneWithWhereWithoutReservaInput = {
    where?: ReservaEquipoWhereInput
    data: XOR<ReservaEquipoUpdateWithoutReservaInput, ReservaEquipoUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaEquipoUpdateWithoutReservaInput = {
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipo?: EquipoUpdateOneRequiredWithoutReservasNestedInput
  }

  export type ReservaEquipoUncheckedUpdateWithoutReservaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    equipoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLibroUpsertWithoutReservaInput = {
    update: XOR<ReservaLibroUpdateWithoutReservaInput, ReservaLibroUncheckedUpdateWithoutReservaInput>
    create: XOR<ReservaLibroCreateWithoutReservaInput, ReservaLibroUncheckedCreateWithoutReservaInput>
    where?: ReservaLibroWhereInput
  }

  export type ReservaLibroUpdateToOneWithWhereWithoutReservaInput = {
    where?: ReservaLibroWhereInput
    data: XOR<ReservaLibroUpdateWithoutReservaInput, ReservaLibroUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaLibroUpdateWithoutReservaInput = {
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    libro?: LibroUpdateOneRequiredWithoutReservasNestedInput
  }

  export type ReservaLibroUncheckedUpdateWithoutReservaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    libroId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoUpsertWithoutReservaInput = {
    update: XOR<ReservaLaboratorioCerradoUpdateWithoutReservaInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutReservaInput>
    create: XOR<ReservaLaboratorioCerradoCreateWithoutReservaInput, ReservaLaboratorioCerradoUncheckedCreateWithoutReservaInput>
    where?: ReservaLaboratorioCerradoWhereInput
  }

  export type ReservaLaboratorioCerradoUpdateToOneWithWhereWithoutReservaInput = {
    where?: ReservaLaboratorioCerradoWhereInput
    data: XOR<ReservaLaboratorioCerradoUpdateWithoutReservaInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaLaboratorioCerradoUpdateWithoutReservaInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    sede?: SedeUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    laboratorio?: LaboratorioUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    curso?: CursoUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalMateria?: MateriaUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalDocente?: UserUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateWithoutReservaInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioAbiertoUpsertWithoutReservaInput = {
    update: XOR<ReservaLaboratorioAbiertoUpdateWithoutReservaInput, ReservaLaboratorioAbiertoUncheckedUpdateWithoutReservaInput>
    create: XOR<ReservaLaboratorioAbiertoCreateWithoutReservaInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutReservaInput>
    where?: ReservaLaboratorioAbiertoWhereInput
  }

  export type ReservaLaboratorioAbiertoUpdateToOneWithWhereWithoutReservaInput = {
    where?: ReservaLaboratorioAbiertoWhereInput
    data: XOR<ReservaLaboratorioAbiertoUpdateWithoutReservaInput, ReservaLaboratorioAbiertoUncheckedUpdateWithoutReservaInput>
  }

  export type ReservaLaboratorioAbiertoUpdateWithoutReservaInput = {
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    sede?: SedeUpdateOneRequiredWithoutReservaLaboratorioAbiertoNestedInput
    laboratorio?: LaboratorioUpdateOneWithoutReservaLaboratorioAbiertoNestedInput
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUpdateManyWithoutReservaLaboratorioAbiertoNestedInput
  }

  export type ReservaLaboratorioAbiertoUncheckedUpdateWithoutReservaInput = {
    id?: IntFieldUpdateOperationsInput | number
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutReservaLaboratorioAbiertoNestedInput
  }

  export type ReservaCreateWithoutReservaEquipoInput = {
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    usuarioSolicito: UserCreateNestedOneWithoutReservasSolicitadasInput
    usuarioAprobador?: UserCreateNestedOneWithoutReservasAprobadasInput
    usuarioRechazado?: UserCreateNestedOneWithoutReservasRechazadasInput
    usuarioRenovo?: UserCreateNestedOneWithoutReservasRenovadasInput
    usuarioRecibio?: UserCreateNestedOneWithoutReservasRecibidasInput
    usuarioTutor?: UserCreateNestedOneWithoutReservasComoTutorInput
    reservaLibro?: ReservaLibroCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutReservaEquipoInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    reservaLibro?: ReservaLibroUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutReservaEquipoInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutReservaEquipoInput, ReservaUncheckedCreateWithoutReservaEquipoInput>
  }

  export type EquipoCreateWithoutReservasInput = {
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    tipo: EquipoTipoCreateNestedOneWithoutEquiposInput
    marca: EquipoMarcaCreateNestedOneWithoutEquiposInput
    sede: SedeCreateNestedOneWithoutEquiposInput
    laboratorio: LaboratorioCreateNestedOneWithoutEquiposInput
    armario?: ArmarioCreateNestedOneWithoutEquiposInput
    estante?: EstanteCreateNestedOneWithoutEquiposInput
    estado: EquipoEstadoCreateNestedOneWithoutEquiposInput
  }

  export type EquipoUncheckedCreateWithoutReservasInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type EquipoCreateOrConnectWithoutReservasInput = {
    where: EquipoWhereUniqueInput
    create: XOR<EquipoCreateWithoutReservasInput, EquipoUncheckedCreateWithoutReservasInput>
  }

  export type ReservaUpsertWithoutReservaEquipoInput = {
    update: XOR<ReservaUpdateWithoutReservaEquipoInput, ReservaUncheckedUpdateWithoutReservaEquipoInput>
    create: XOR<ReservaCreateWithoutReservaEquipoInput, ReservaUncheckedCreateWithoutReservaEquipoInput>
    where?: ReservaWhereInput
  }

  export type ReservaUpdateToOneWithWhereWithoutReservaEquipoInput = {
    where?: ReservaWhereInput
    data: XOR<ReservaUpdateWithoutReservaEquipoInput, ReservaUncheckedUpdateWithoutReservaEquipoInput>
  }

  export type ReservaUpdateWithoutReservaEquipoInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    usuarioSolicito?: UserUpdateOneRequiredWithoutReservasSolicitadasNestedInput
    usuarioAprobador?: UserUpdateOneWithoutReservasAprobadasNestedInput
    usuarioRechazado?: UserUpdateOneWithoutReservasRechazadasNestedInput
    usuarioRenovo?: UserUpdateOneWithoutReservasRenovadasNestedInput
    usuarioRecibio?: UserUpdateOneWithoutReservasRecibidasNestedInput
    usuarioTutor?: UserUpdateOneWithoutReservasComoTutorNestedInput
    reservaLibro?: ReservaLibroUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutReservaEquipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    reservaLibro?: ReservaLibroUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type EquipoUpsertWithoutReservasInput = {
    update: XOR<EquipoUpdateWithoutReservasInput, EquipoUncheckedUpdateWithoutReservasInput>
    create: XOR<EquipoCreateWithoutReservasInput, EquipoUncheckedCreateWithoutReservasInput>
    where?: EquipoWhereInput
  }

  export type EquipoUpdateToOneWithWhereWithoutReservasInput = {
    where?: EquipoWhereInput
    data: XOR<EquipoUpdateWithoutReservasInput, EquipoUncheckedUpdateWithoutReservasInput>
  }

  export type EquipoUpdateWithoutReservasInput = {
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    tipo?: EquipoTipoUpdateOneRequiredWithoutEquiposNestedInput
    marca?: EquipoMarcaUpdateOneRequiredWithoutEquiposNestedInput
    sede?: SedeUpdateOneRequiredWithoutEquiposNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutEquiposNestedInput
    armario?: ArmarioUpdateOneWithoutEquiposNestedInput
    estante?: EstanteUpdateOneWithoutEquiposNestedInput
    estado?: EquipoEstadoUpdateOneRequiredWithoutEquiposNestedInput
  }

  export type EquipoUncheckedUpdateWithoutReservasInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaCreateWithoutReservaLibroInput = {
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    usuarioSolicito: UserCreateNestedOneWithoutReservasSolicitadasInput
    usuarioAprobador?: UserCreateNestedOneWithoutReservasAprobadasInput
    usuarioRechazado?: UserCreateNestedOneWithoutReservasRechazadasInput
    usuarioRenovo?: UserCreateNestedOneWithoutReservasRenovadasInput
    usuarioRecibio?: UserCreateNestedOneWithoutReservasRecibidasInput
    usuarioTutor?: UserCreateNestedOneWithoutReservasComoTutorInput
    reservaEquipo?: ReservaEquipoCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutReservaLibroInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    reservaEquipo?: ReservaEquipoUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutReservaLibroInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutReservaLibroInput, ReservaUncheckedCreateWithoutReservaLibroInput>
  }

  export type LibroCreateWithoutReservasInput = {
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaCreateNestedManyWithoutLibroInput
    laboratorio: LaboratorioCreateNestedOneWithoutLibrosInput
    armario?: ArmarioCreateNestedOneWithoutLibrosInput
    estante?: EstanteCreateNestedOneWithoutLibrosInput
    autor: LibroAutorCreateNestedOneWithoutLibrosInput
    idioma: LibroIdiomaCreateNestedOneWithoutLibrosInput
    editorial: LibroEditorialCreateNestedOneWithoutLibrosInput
    sede: SedeCreateNestedOneWithoutLibrosInput
  }

  export type LibroUncheckedCreateWithoutReservasInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaUncheckedCreateNestedManyWithoutLibroInput
  }

  export type LibroCreateOrConnectWithoutReservasInput = {
    where: LibroWhereUniqueInput
    create: XOR<LibroCreateWithoutReservasInput, LibroUncheckedCreateWithoutReservasInput>
  }

  export type ReservaUpsertWithoutReservaLibroInput = {
    update: XOR<ReservaUpdateWithoutReservaLibroInput, ReservaUncheckedUpdateWithoutReservaLibroInput>
    create: XOR<ReservaCreateWithoutReservaLibroInput, ReservaUncheckedCreateWithoutReservaLibroInput>
    where?: ReservaWhereInput
  }

  export type ReservaUpdateToOneWithWhereWithoutReservaLibroInput = {
    where?: ReservaWhereInput
    data: XOR<ReservaUpdateWithoutReservaLibroInput, ReservaUncheckedUpdateWithoutReservaLibroInput>
  }

  export type ReservaUpdateWithoutReservaLibroInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    usuarioSolicito?: UserUpdateOneRequiredWithoutReservasSolicitadasNestedInput
    usuarioAprobador?: UserUpdateOneWithoutReservasAprobadasNestedInput
    usuarioRechazado?: UserUpdateOneWithoutReservasRechazadasNestedInput
    usuarioRenovo?: UserUpdateOneWithoutReservasRenovadasNestedInput
    usuarioRecibio?: UserUpdateOneWithoutReservasRecibidasNestedInput
    usuarioTutor?: UserUpdateOneWithoutReservasComoTutorNestedInput
    reservaEquipo?: ReservaEquipoUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutReservaLibroInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    reservaEquipo?: ReservaEquipoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type LibroUpsertWithoutReservasInput = {
    update: XOR<LibroUpdateWithoutReservasInput, LibroUncheckedUpdateWithoutReservasInput>
    create: XOR<LibroCreateWithoutReservasInput, LibroUncheckedCreateWithoutReservasInput>
    where?: LibroWhereInput
  }

  export type LibroUpdateToOneWithWhereWithoutReservasInput = {
    where?: LibroWhereInput
    data: XOR<LibroUpdateWithoutReservasInput, LibroUncheckedUpdateWithoutReservasInput>
  }

  export type LibroUpdateWithoutReservasInput = {
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUpdateManyWithoutLibroNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutLibrosNestedInput
    armario?: ArmarioUpdateOneWithoutLibrosNestedInput
    estante?: EstanteUpdateOneWithoutLibrosNestedInput
    autor?: LibroAutorUpdateOneRequiredWithoutLibrosNestedInput
    idioma?: LibroIdiomaUpdateOneRequiredWithoutLibrosNestedInput
    editorial?: LibroEditorialUpdateOneRequiredWithoutLibrosNestedInput
    sede?: SedeUpdateOneRequiredWithoutLibrosNestedInput
  }

  export type LibroUncheckedUpdateWithoutReservasInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUncheckedUpdateManyWithoutLibroNestedInput
  }

  export type ReservaCreateWithoutReservaLaboratorioCerradoInput = {
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    usuarioSolicito: UserCreateNestedOneWithoutReservasSolicitadasInput
    usuarioAprobador?: UserCreateNestedOneWithoutReservasAprobadasInput
    usuarioRechazado?: UserCreateNestedOneWithoutReservasRechazadasInput
    usuarioRenovo?: UserCreateNestedOneWithoutReservasRenovadasInput
    usuarioRecibio?: UserCreateNestedOneWithoutReservasRecibidasInput
    usuarioTutor?: UserCreateNestedOneWithoutReservasComoTutorInput
    reservaEquipo?: ReservaEquipoCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutReservaLaboratorioCerradoInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    reservaEquipo?: ReservaEquipoUncheckedCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutReservaLaboratorioCerradoInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutReservaLaboratorioCerradoInput, ReservaUncheckedCreateWithoutReservaLaboratorioCerradoInput>
  }

  export type SedeCreateWithoutReservaLaboratorioCerradoInput = {
    nombre: string
    cursos?: CursoCreateNestedManyWithoutSedeInput
    equipos?: EquipoCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioCreateNestedManyWithoutSedeInput
    libros?: LibroCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutReservaLaboratorioCerradoInput = {
    id?: number
    nombre: string
    cursos?: CursoUncheckedCreateNestedManyWithoutSedeInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioUncheckedCreateNestedManyWithoutSedeInput
    libros?: LibroUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutReservaLaboratorioCerradoInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutReservaLaboratorioCerradoInput, SedeUncheckedCreateWithoutReservaLaboratorioCerradoInput>
  }

  export type LaboratorioCreateWithoutReservaLaboratorioCerradoInput = {
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    sede: SedeCreateNestedOneWithoutLaboratoriosInput
    software?: SoftwareLaboratorioCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoCreateNestedManyWithoutLaboratorioInput
    libros?: LibroCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioUncheckedCreateWithoutReservaLaboratorioCerradoInput = {
    id?: number
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    software?: SoftwareLaboratorioUncheckedCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioUncheckedCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutLaboratorioInput
    libros?: LibroUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioCreateOrConnectWithoutReservaLaboratorioCerradoInput = {
    where: LaboratorioWhereUniqueInput
    create: XOR<LaboratorioCreateWithoutReservaLaboratorioCerradoInput, LaboratorioUncheckedCreateWithoutReservaLaboratorioCerradoInput>
  }

  export type CursoCreateWithoutReservaLaboratorioCerradoInput = {
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    anioDeCarrera: number
    activo: boolean
    ac: string
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteCreateNestedManyWithoutCursoInput
    profesor: UserCreateNestedOneWithoutCursosComoProfesorInput
    sede: SedeCreateNestedOneWithoutCursosInput
    materia: MateriaCreateNestedOneWithoutCursosInput
    division: DivisionCreateNestedOneWithoutCursosInput
  }

  export type CursoUncheckedCreateWithoutReservaLaboratorioCerradoInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    profesorId: string
    anioDeCarrera: number
    activo: boolean
    ac: string
    sedeId: number
    materiaId: number
    divisionId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteUncheckedCreateNestedManyWithoutCursoInput
  }

  export type CursoCreateOrConnectWithoutReservaLaboratorioCerradoInput = {
    where: CursoWhereUniqueInput
    create: XOR<CursoCreateWithoutReservaLaboratorioCerradoInput, CursoUncheckedCreateWithoutReservaLaboratorioCerradoInput>
  }

  export type MateriaCreateWithoutReservaLaboratorioCerradoInput = {
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    directorUsuario?: UserCreateNestedOneWithoutMateriasDirectorInput
    jefeTrabajoPracticos?: MateriaJefeTpCreateNestedManyWithoutMateriaInput
    cursos?: CursoCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaCreateNestedManyWithoutCorrelativaInput
  }

  export type MateriaUncheckedCreateWithoutReservaLaboratorioCerradoInput = {
    id?: number
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    directorUsuarioId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedCreateNestedManyWithoutMateriaInput
    cursos?: CursoUncheckedCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaUncheckedCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaUncheckedCreateNestedManyWithoutCorrelativaInput
  }

  export type MateriaCreateOrConnectWithoutReservaLaboratorioCerradoInput = {
    where: MateriaWhereUniqueInput
    create: XOR<MateriaCreateWithoutReservaLaboratorioCerradoInput, MateriaUncheckedCreateWithoutReservaLaboratorioCerradoInput>
  }

  export type UserCreateWithoutReservaLaboratorioCerradoInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
  }

  export type UserUncheckedCreateWithoutReservaLaboratorioCerradoInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type UserCreateOrConnectWithoutReservaLaboratorioCerradoInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReservaLaboratorioCerradoInput, UserUncheckedCreateWithoutReservaLaboratorioCerradoInput>
  }

  export type ReservaLaboratorioCerradoEquipoCreateWithoutReservaLaboratorioCerradoInput = {
    cantidad: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoTipo: EquipoTipoCreateNestedOneWithoutReservaLaboratorioCerradoEquipoInput
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutReservaLaboratorioCerradoInput = {
    id?: number
    cantidad: number
    equipoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoEquipoCreateOrConnectWithoutReservaLaboratorioCerradoInput = {
    where: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    create: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutReservaLaboratorioCerradoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutReservaLaboratorioCerradoInput>
  }

  export type ReservaLaboratorioCerradoEquipoCreateManyReservaLaboratorioCerradoInputEnvelope = {
    data: ReservaLaboratorioCerradoEquipoCreateManyReservaLaboratorioCerradoInput | ReservaLaboratorioCerradoEquipoCreateManyReservaLaboratorioCerradoInput[]
    skipDuplicates?: boolean
  }

  export type ReservaUpsertWithoutReservaLaboratorioCerradoInput = {
    update: XOR<ReservaUpdateWithoutReservaLaboratorioCerradoInput, ReservaUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
    create: XOR<ReservaCreateWithoutReservaLaboratorioCerradoInput, ReservaUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    where?: ReservaWhereInput
  }

  export type ReservaUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput = {
    where?: ReservaWhereInput
    data: XOR<ReservaUpdateWithoutReservaLaboratorioCerradoInput, ReservaUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type ReservaUpdateWithoutReservaLaboratorioCerradoInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    usuarioSolicito?: UserUpdateOneRequiredWithoutReservasSolicitadasNestedInput
    usuarioAprobador?: UserUpdateOneWithoutReservasAprobadasNestedInput
    usuarioRechazado?: UserUpdateOneWithoutReservasRechazadasNestedInput
    usuarioRenovo?: UserUpdateOneWithoutReservasRenovadasNestedInput
    usuarioRecibio?: UserUpdateOneWithoutReservasRecibidasNestedInput
    usuarioTutor?: UserUpdateOneWithoutReservasComoTutorNestedInput
    reservaEquipo?: ReservaEquipoUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutReservaLaboratorioCerradoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    reservaEquipo?: ReservaEquipoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type SedeUpsertWithoutReservaLaboratorioCerradoInput = {
    update: XOR<SedeUpdateWithoutReservaLaboratorioCerradoInput, SedeUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
    create: XOR<SedeCreateWithoutReservaLaboratorioCerradoInput, SedeUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutReservaLaboratorioCerradoInput, SedeUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type SedeUpdateWithoutReservaLaboratorioCerradoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUpdateManyWithoutSedeNestedInput
    libros?: LibroUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutReservaLaboratorioCerradoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUncheckedUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUncheckedUpdateManyWithoutSedeNestedInput
    libros?: LibroUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type LaboratorioUpsertWithoutReservaLaboratorioCerradoInput = {
    update: XOR<LaboratorioUpdateWithoutReservaLaboratorioCerradoInput, LaboratorioUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
    create: XOR<LaboratorioCreateWithoutReservaLaboratorioCerradoInput, LaboratorioUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    where?: LaboratorioWhereInput
  }

  export type LaboratorioUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput = {
    where?: LaboratorioWhereInput
    data: XOR<LaboratorioUpdateWithoutReservaLaboratorioCerradoInput, LaboratorioUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type LaboratorioUpdateWithoutReservaLaboratorioCerradoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    sede?: SedeUpdateOneRequiredWithoutLaboratoriosNestedInput
    software?: SoftwareLaboratorioUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutLaboratorioNestedInput
  }

  export type LaboratorioUncheckedUpdateWithoutReservaLaboratorioCerradoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    sedeId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    software?: SoftwareLaboratorioUncheckedUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUncheckedUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutLaboratorioNestedInput
  }

  export type CursoUpsertWithoutReservaLaboratorioCerradoInput = {
    update: XOR<CursoUpdateWithoutReservaLaboratorioCerradoInput, CursoUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
    create: XOR<CursoCreateWithoutReservaLaboratorioCerradoInput, CursoUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    where?: CursoWhereInput
  }

  export type CursoUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput = {
    where?: CursoWhereInput
    data: XOR<CursoUpdateWithoutReservaLaboratorioCerradoInput, CursoUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type CursoUpdateWithoutReservaLaboratorioCerradoInput = {
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUpdateManyWithoutCursoNestedInput
    profesor?: UserUpdateOneRequiredWithoutCursosComoProfesorNestedInput
    sede?: SedeUpdateOneRequiredWithoutCursosNestedInput
    materia?: MateriaUpdateOneRequiredWithoutCursosNestedInput
    division?: DivisionUpdateOneRequiredWithoutCursosNestedInput
  }

  export type CursoUncheckedUpdateWithoutReservaLaboratorioCerradoInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    profesorId?: StringFieldUpdateOperationsInput | string
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    sedeId?: IntFieldUpdateOperationsInput | number
    materiaId?: IntFieldUpdateOperationsInput | number
    divisionId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUncheckedUpdateManyWithoutCursoNestedInput
  }

  export type MateriaUpsertWithoutReservaLaboratorioCerradoInput = {
    update: XOR<MateriaUpdateWithoutReservaLaboratorioCerradoInput, MateriaUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
    create: XOR<MateriaCreateWithoutReservaLaboratorioCerradoInput, MateriaUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    where?: MateriaWhereInput
  }

  export type MateriaUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput = {
    where?: MateriaWhereInput
    data: XOR<MateriaUpdateWithoutReservaLaboratorioCerradoInput, MateriaUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type MateriaUpdateWithoutReservaLaboratorioCerradoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    directorUsuario?: UserUpdateOneWithoutMateriasDirectorNestedInput
    jefeTrabajoPracticos?: MateriaJefeTpUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUpdateManyWithoutCorrelativaNestedInput
  }

  export type MateriaUncheckedUpdateWithoutReservaLaboratorioCerradoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    directorUsuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUncheckedUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUncheckedUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUncheckedUpdateManyWithoutCorrelativaNestedInput
  }

  export type UserUpsertWithoutReservaLaboratorioCerradoInput = {
    update: XOR<UserUpdateWithoutReservaLaboratorioCerradoInput, UserUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
    create: XOR<UserCreateWithoutReservaLaboratorioCerradoInput, UserUncheckedCreateWithoutReservaLaboratorioCerradoInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReservaLaboratorioCerradoInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReservaLaboratorioCerradoInput, UserUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type UserUpdateWithoutReservaLaboratorioCerradoInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateWithoutReservaLaboratorioCerradoInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type ReservaLaboratorioCerradoEquipoUpsertWithWhereUniqueWithoutReservaLaboratorioCerradoInput = {
    where: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    update: XOR<ReservaLaboratorioCerradoEquipoUpdateWithoutReservaLaboratorioCerradoInput, ReservaLaboratorioCerradoEquipoUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
    create: XOR<ReservaLaboratorioCerradoEquipoCreateWithoutReservaLaboratorioCerradoInput, ReservaLaboratorioCerradoEquipoUncheckedCreateWithoutReservaLaboratorioCerradoInput>
  }

  export type ReservaLaboratorioCerradoEquipoUpdateWithWhereUniqueWithoutReservaLaboratorioCerradoInput = {
    where: ReservaLaboratorioCerradoEquipoWhereUniqueInput
    data: XOR<ReservaLaboratorioCerradoEquipoUpdateWithoutReservaLaboratorioCerradoInput, ReservaLaboratorioCerradoEquipoUncheckedUpdateWithoutReservaLaboratorioCerradoInput>
  }

  export type ReservaLaboratorioCerradoEquipoUpdateManyWithWhereWithoutReservaLaboratorioCerradoInput = {
    where: ReservaLaboratorioCerradoEquipoScalarWhereInput
    data: XOR<ReservaLaboratorioCerradoEquipoUpdateManyMutationInput, ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutReservaLaboratorioCerradoInput>
  }

  export type ReservaLaboratorioCerradoCreateWithoutEquipoReservadoInput = {
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    sede: SedeCreateNestedOneWithoutReservaLaboratorioCerradoInput
    laboratorio?: LaboratorioCreateNestedOneWithoutReservaLaboratorioCerradoInput
    curso?: CursoCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalMateria?: MateriaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalDocente?: UserCreateNestedOneWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoUncheckedCreateWithoutEquipoReservadoInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoCreateOrConnectWithoutEquipoReservadoInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    create: XOR<ReservaLaboratorioCerradoCreateWithoutEquipoReservadoInput, ReservaLaboratorioCerradoUncheckedCreateWithoutEquipoReservadoInput>
  }

  export type EquipoTipoCreateWithoutReservaLaboratorioCerradoEquipoInput = {
    nombre: string
    imagen?: string | null
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    equipos?: EquipoCreateNestedManyWithoutTipoInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoCreateNestedManyWithoutEquipoTipoInput
  }

  export type EquipoTipoUncheckedCreateWithoutReservaLaboratorioCerradoEquipoInput = {
    id?: number
    nombre: string
    imagen?: string | null
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    equipos?: EquipoUncheckedCreateNestedManyWithoutTipoInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoUncheckedCreateNestedManyWithoutEquipoTipoInput
  }

  export type EquipoTipoCreateOrConnectWithoutReservaLaboratorioCerradoEquipoInput = {
    where: EquipoTipoWhereUniqueInput
    create: XOR<EquipoTipoCreateWithoutReservaLaboratorioCerradoEquipoInput, EquipoTipoUncheckedCreateWithoutReservaLaboratorioCerradoEquipoInput>
  }

  export type ReservaLaboratorioCerradoUpsertWithoutEquipoReservadoInput = {
    update: XOR<ReservaLaboratorioCerradoUpdateWithoutEquipoReservadoInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutEquipoReservadoInput>
    create: XOR<ReservaLaboratorioCerradoCreateWithoutEquipoReservadoInput, ReservaLaboratorioCerradoUncheckedCreateWithoutEquipoReservadoInput>
    where?: ReservaLaboratorioCerradoWhereInput
  }

  export type ReservaLaboratorioCerradoUpdateToOneWithWhereWithoutEquipoReservadoInput = {
    where?: ReservaLaboratorioCerradoWhereInput
    data: XOR<ReservaLaboratorioCerradoUpdateWithoutEquipoReservadoInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutEquipoReservadoInput>
  }

  export type ReservaLaboratorioCerradoUpdateWithoutEquipoReservadoInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    sede?: SedeUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    laboratorio?: LaboratorioUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    curso?: CursoUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalMateria?: MateriaUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalDocente?: UserUpdateOneWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateWithoutEquipoReservadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoTipoUpsertWithoutReservaLaboratorioCerradoEquipoInput = {
    update: XOR<EquipoTipoUpdateWithoutReservaLaboratorioCerradoEquipoInput, EquipoTipoUncheckedUpdateWithoutReservaLaboratorioCerradoEquipoInput>
    create: XOR<EquipoTipoCreateWithoutReservaLaboratorioCerradoEquipoInput, EquipoTipoUncheckedCreateWithoutReservaLaboratorioCerradoEquipoInput>
    where?: EquipoTipoWhereInput
  }

  export type EquipoTipoUpdateToOneWithWhereWithoutReservaLaboratorioCerradoEquipoInput = {
    where?: EquipoTipoWhereInput
    data: XOR<EquipoTipoUpdateWithoutReservaLaboratorioCerradoEquipoInput, EquipoTipoUncheckedUpdateWithoutReservaLaboratorioCerradoEquipoInput>
  }

  export type EquipoTipoUpdateWithoutReservaLaboratorioCerradoEquipoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUpdateManyWithoutTipoNestedInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoUpdateManyWithoutEquipoTipoNestedInput
  }

  export type EquipoTipoUncheckedUpdateWithoutReservaLaboratorioCerradoEquipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUncheckedUpdateManyWithoutTipoNestedInput
    reservaLaboratorioAbiertoEquipo?: ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutEquipoTipoNestedInput
  }

  export type ReservaCreateWithoutReservaLaboratorioAbiertoInput = {
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    usuarioSolicito: UserCreateNestedOneWithoutReservasSolicitadasInput
    usuarioAprobador?: UserCreateNestedOneWithoutReservasAprobadasInput
    usuarioRechazado?: UserCreateNestedOneWithoutReservasRechazadasInput
    usuarioRenovo?: UserCreateNestedOneWithoutReservasRenovadasInput
    usuarioRecibio?: UserCreateNestedOneWithoutReservasRecibidasInput
    usuarioTutor?: UserCreateNestedOneWithoutReservasComoTutorInput
    reservaEquipo?: ReservaEquipoCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutReservaLaboratorioAbiertoInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    reservaEquipo?: ReservaEquipoUncheckedCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutReservaLaboratorioAbiertoInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutReservaLaboratorioAbiertoInput, ReservaUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
  }

  export type SedeCreateWithoutReservaLaboratorioAbiertoInput = {
    nombre: string
    cursos?: CursoCreateNestedManyWithoutSedeInput
    equipos?: EquipoCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioCreateNestedManyWithoutSedeInput
    libros?: LibroCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutReservaLaboratorioAbiertoInput = {
    id?: number
    nombre: string
    cursos?: CursoUncheckedCreateNestedManyWithoutSedeInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioUncheckedCreateNestedManyWithoutSedeInput
    libros?: LibroUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutSedeInput
    Pantalla?: PantallaUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutReservaLaboratorioAbiertoInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutReservaLaboratorioAbiertoInput, SedeUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
  }

  export type LaboratorioCreateWithoutReservaLaboratorioAbiertoInput = {
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    sede: SedeCreateNestedOneWithoutLaboratoriosInput
    software?: SoftwareLaboratorioCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoCreateNestedManyWithoutLaboratorioInput
    libros?: LibroCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioUncheckedCreateWithoutReservaLaboratorioAbiertoInput = {
    id?: number
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    sedeId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    software?: SoftwareLaboratorioUncheckedCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioUncheckedCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutLaboratorioInput
    libros?: LibroUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioCreateOrConnectWithoutReservaLaboratorioAbiertoInput = {
    where: LaboratorioWhereUniqueInput
    create: XOR<LaboratorioCreateWithoutReservaLaboratorioAbiertoInput, LaboratorioUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
  }

  export type ReservaLaboratorioAbiertoEquipoCreateWithoutReservaLaboratorioAbiertoInput = {
    cantidad: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoTipo: EquipoTipoCreateNestedOneWithoutReservaLaboratorioAbiertoEquipoInput
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutReservaLaboratorioAbiertoInput = {
    id?: number
    cantidad: number
    equipoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioAbiertoEquipoCreateOrConnectWithoutReservaLaboratorioAbiertoInput = {
    where: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    create: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutReservaLaboratorioAbiertoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
  }

  export type ReservaLaboratorioAbiertoEquipoCreateManyReservaLaboratorioAbiertoInputEnvelope = {
    data: ReservaLaboratorioAbiertoEquipoCreateManyReservaLaboratorioAbiertoInput | ReservaLaboratorioAbiertoEquipoCreateManyReservaLaboratorioAbiertoInput[]
    skipDuplicates?: boolean
  }

  export type ReservaUpsertWithoutReservaLaboratorioAbiertoInput = {
    update: XOR<ReservaUpdateWithoutReservaLaboratorioAbiertoInput, ReservaUncheckedUpdateWithoutReservaLaboratorioAbiertoInput>
    create: XOR<ReservaCreateWithoutReservaLaboratorioAbiertoInput, ReservaUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
    where?: ReservaWhereInput
  }

  export type ReservaUpdateToOneWithWhereWithoutReservaLaboratorioAbiertoInput = {
    where?: ReservaWhereInput
    data: XOR<ReservaUpdateWithoutReservaLaboratorioAbiertoInput, ReservaUncheckedUpdateWithoutReservaLaboratorioAbiertoInput>
  }

  export type ReservaUpdateWithoutReservaLaboratorioAbiertoInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    usuarioSolicito?: UserUpdateOneRequiredWithoutReservasSolicitadasNestedInput
    usuarioAprobador?: UserUpdateOneWithoutReservasAprobadasNestedInput
    usuarioRechazado?: UserUpdateOneWithoutReservasRechazadasNestedInput
    usuarioRenovo?: UserUpdateOneWithoutReservasRenovadasNestedInput
    usuarioRecibio?: UserUpdateOneWithoutReservasRecibidasNestedInput
    usuarioTutor?: UserUpdateOneWithoutReservasComoTutorNestedInput
    reservaEquipo?: ReservaEquipoUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutReservaLaboratorioAbiertoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    reservaEquipo?: ReservaEquipoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type SedeUpsertWithoutReservaLaboratorioAbiertoInput = {
    update: XOR<SedeUpdateWithoutReservaLaboratorioAbiertoInput, SedeUncheckedUpdateWithoutReservaLaboratorioAbiertoInput>
    create: XOR<SedeCreateWithoutReservaLaboratorioAbiertoInput, SedeUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutReservaLaboratorioAbiertoInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutReservaLaboratorioAbiertoInput, SedeUncheckedUpdateWithoutReservaLaboratorioAbiertoInput>
  }

  export type SedeUpdateWithoutReservaLaboratorioAbiertoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUpdateManyWithoutSedeNestedInput
    libros?: LibroUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutReservaLaboratorioAbiertoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUncheckedUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUncheckedUpdateManyWithoutSedeNestedInput
    libros?: LibroUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutSedeNestedInput
    Pantalla?: PantallaUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type LaboratorioUpsertWithoutReservaLaboratorioAbiertoInput = {
    update: XOR<LaboratorioUpdateWithoutReservaLaboratorioAbiertoInput, LaboratorioUncheckedUpdateWithoutReservaLaboratorioAbiertoInput>
    create: XOR<LaboratorioCreateWithoutReservaLaboratorioAbiertoInput, LaboratorioUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
    where?: LaboratorioWhereInput
  }

  export type LaboratorioUpdateToOneWithWhereWithoutReservaLaboratorioAbiertoInput = {
    where?: LaboratorioWhereInput
    data: XOR<LaboratorioUpdateWithoutReservaLaboratorioAbiertoInput, LaboratorioUncheckedUpdateWithoutReservaLaboratorioAbiertoInput>
  }

  export type LaboratorioUpdateWithoutReservaLaboratorioAbiertoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    sede?: SedeUpdateOneRequiredWithoutLaboratoriosNestedInput
    software?: SoftwareLaboratorioUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutLaboratorioNestedInput
  }

  export type LaboratorioUncheckedUpdateWithoutReservaLaboratorioAbiertoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    sedeId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    software?: SoftwareLaboratorioUncheckedUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUncheckedUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutLaboratorioNestedInput
  }

  export type ReservaLaboratorioAbiertoEquipoUpsertWithWhereUniqueWithoutReservaLaboratorioAbiertoInput = {
    where: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    update: XOR<ReservaLaboratorioAbiertoEquipoUpdateWithoutReservaLaboratorioAbiertoInput, ReservaLaboratorioAbiertoEquipoUncheckedUpdateWithoutReservaLaboratorioAbiertoInput>
    create: XOR<ReservaLaboratorioAbiertoEquipoCreateWithoutReservaLaboratorioAbiertoInput, ReservaLaboratorioAbiertoEquipoUncheckedCreateWithoutReservaLaboratorioAbiertoInput>
  }

  export type ReservaLaboratorioAbiertoEquipoUpdateWithWhereUniqueWithoutReservaLaboratorioAbiertoInput = {
    where: ReservaLaboratorioAbiertoEquipoWhereUniqueInput
    data: XOR<ReservaLaboratorioAbiertoEquipoUpdateWithoutReservaLaboratorioAbiertoInput, ReservaLaboratorioAbiertoEquipoUncheckedUpdateWithoutReservaLaboratorioAbiertoInput>
  }

  export type ReservaLaboratorioAbiertoEquipoUpdateManyWithWhereWithoutReservaLaboratorioAbiertoInput = {
    where: ReservaLaboratorioAbiertoEquipoScalarWhereInput
    data: XOR<ReservaLaboratorioAbiertoEquipoUpdateManyMutationInput, ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutReservaLaboratorioAbiertoInput>
  }

  export type ReservaLaboratorioAbiertoCreateWithoutEquipoReservadoInput = {
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLaboratorioAbiertoInput
    sede: SedeCreateNestedOneWithoutReservaLaboratorioAbiertoInput
    laboratorio?: LaboratorioCreateNestedOneWithoutReservaLaboratorioAbiertoInput
  }

  export type ReservaLaboratorioAbiertoUncheckedCreateWithoutEquipoReservadoInput = {
    id?: number
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioAbiertoCreateOrConnectWithoutEquipoReservadoInput = {
    where: ReservaLaboratorioAbiertoWhereUniqueInput
    create: XOR<ReservaLaboratorioAbiertoCreateWithoutEquipoReservadoInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutEquipoReservadoInput>
  }

  export type EquipoTipoCreateWithoutReservaLaboratorioAbiertoEquipoInput = {
    nombre: string
    imagen?: string | null
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    equipos?: EquipoCreateNestedManyWithoutTipoInput
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutEquipoTipoInput
  }

  export type EquipoTipoUncheckedCreateWithoutReservaLaboratorioAbiertoEquipoInput = {
    id?: number
    nombre: string
    imagen?: string | null
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    equipos?: EquipoUncheckedCreateNestedManyWithoutTipoInput
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutEquipoTipoInput
  }

  export type EquipoTipoCreateOrConnectWithoutReservaLaboratorioAbiertoEquipoInput = {
    where: EquipoTipoWhereUniqueInput
    create: XOR<EquipoTipoCreateWithoutReservaLaboratorioAbiertoEquipoInput, EquipoTipoUncheckedCreateWithoutReservaLaboratorioAbiertoEquipoInput>
  }

  export type ReservaLaboratorioAbiertoUpsertWithoutEquipoReservadoInput = {
    update: XOR<ReservaLaboratorioAbiertoUpdateWithoutEquipoReservadoInput, ReservaLaboratorioAbiertoUncheckedUpdateWithoutEquipoReservadoInput>
    create: XOR<ReservaLaboratorioAbiertoCreateWithoutEquipoReservadoInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutEquipoReservadoInput>
    where?: ReservaLaboratorioAbiertoWhereInput
  }

  export type ReservaLaboratorioAbiertoUpdateToOneWithWhereWithoutEquipoReservadoInput = {
    where?: ReservaLaboratorioAbiertoWhereInput
    data: XOR<ReservaLaboratorioAbiertoUpdateWithoutEquipoReservadoInput, ReservaLaboratorioAbiertoUncheckedUpdateWithoutEquipoReservadoInput>
  }

  export type ReservaLaboratorioAbiertoUpdateWithoutEquipoReservadoInput = {
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLaboratorioAbiertoNestedInput
    sede?: SedeUpdateOneRequiredWithoutReservaLaboratorioAbiertoNestedInput
    laboratorio?: LaboratorioUpdateOneWithoutReservaLaboratorioAbiertoNestedInput
  }

  export type ReservaLaboratorioAbiertoUncheckedUpdateWithoutEquipoReservadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoTipoUpsertWithoutReservaLaboratorioAbiertoEquipoInput = {
    update: XOR<EquipoTipoUpdateWithoutReservaLaboratorioAbiertoEquipoInput, EquipoTipoUncheckedUpdateWithoutReservaLaboratorioAbiertoEquipoInput>
    create: XOR<EquipoTipoCreateWithoutReservaLaboratorioAbiertoEquipoInput, EquipoTipoUncheckedCreateWithoutReservaLaboratorioAbiertoEquipoInput>
    where?: EquipoTipoWhereInput
  }

  export type EquipoTipoUpdateToOneWithWhereWithoutReservaLaboratorioAbiertoEquipoInput = {
    where?: EquipoTipoWhereInput
    data: XOR<EquipoTipoUpdateWithoutReservaLaboratorioAbiertoEquipoInput, EquipoTipoUncheckedUpdateWithoutReservaLaboratorioAbiertoEquipoInput>
  }

  export type EquipoTipoUpdateWithoutReservaLaboratorioAbiertoEquipoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUpdateManyWithoutTipoNestedInput
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoUpdateManyWithoutEquipoTipoNestedInput
  }

  export type EquipoTipoUncheckedUpdateWithoutReservaLaboratorioAbiertoEquipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUncheckedUpdateManyWithoutTipoNestedInput
    reservaLaboratorioCerradoEquipo?: ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutEquipoTipoNestedInput
  }

  export type SedeCreateWithoutPantallaInput = {
    nombre: string
    cursos?: CursoCreateNestedManyWithoutSedeInput
    equipos?: EquipoCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioCreateNestedManyWithoutSedeInput
    libros?: LibroCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutSedeInput
  }

  export type SedeUncheckedCreateWithoutPantallaInput = {
    id?: number
    nombre: string
    cursos?: CursoUncheckedCreateNestedManyWithoutSedeInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutSedeInput
    laboratorios?: LaboratorioUncheckedCreateNestedManyWithoutSedeInput
    libros?: LibroUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutSedeInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutSedeInput
  }

  export type SedeCreateOrConnectWithoutPantallaInput = {
    where: SedeWhereUniqueInput
    create: XOR<SedeCreateWithoutPantallaInput, SedeUncheckedCreateWithoutPantallaInput>
  }

  export type SedeUpsertWithoutPantallaInput = {
    update: XOR<SedeUpdateWithoutPantallaInput, SedeUncheckedUpdateWithoutPantallaInput>
    create: XOR<SedeCreateWithoutPantallaInput, SedeUncheckedCreateWithoutPantallaInput>
    where?: SedeWhereInput
  }

  export type SedeUpdateToOneWithWhereWithoutPantallaInput = {
    where?: SedeWhereInput
    data: XOR<SedeUpdateWithoutPantallaInput, SedeUncheckedUpdateWithoutPantallaInput>
  }

  export type SedeUpdateWithoutPantallaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUpdateManyWithoutSedeNestedInput
    libros?: LibroUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutSedeNestedInput
  }

  export type SedeUncheckedUpdateWithoutPantallaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cursos?: CursoUncheckedUpdateManyWithoutSedeNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutSedeNestedInput
    laboratorios?: LaboratorioUncheckedUpdateManyWithoutSedeNestedInput
    libros?: LibroUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutSedeNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutSedeNestedInput
  }

  export type UserCreateWithoutAccountsInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutAccountsInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutAccountsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
  }

  export type UserUpsertWithoutAccountsInput = {
    update: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type CursoCreateWithoutSedeInput = {
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    anioDeCarrera: number
    activo: boolean
    ac: string
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteCreateNestedManyWithoutCursoInput
    profesor: UserCreateNestedOneWithoutCursosComoProfesorInput
    materia: MateriaCreateNestedOneWithoutCursosInput
    division: DivisionCreateNestedOneWithoutCursosInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutCursoInput
  }

  export type CursoUncheckedCreateWithoutSedeInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    profesorId: string
    anioDeCarrera: number
    activo: boolean
    ac: string
    materiaId: number
    divisionId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteUncheckedCreateNestedManyWithoutCursoInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutCursoInput
  }

  export type CursoCreateOrConnectWithoutSedeInput = {
    where: CursoWhereUniqueInput
    create: XOR<CursoCreateWithoutSedeInput, CursoUncheckedCreateWithoutSedeInput>
  }

  export type CursoCreateManySedeInputEnvelope = {
    data: CursoCreateManySedeInput | CursoCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type EquipoCreateWithoutSedeInput = {
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    tipo: EquipoTipoCreateNestedOneWithoutEquiposInput
    marca: EquipoMarcaCreateNestedOneWithoutEquiposInput
    laboratorio: LaboratorioCreateNestedOneWithoutEquiposInput
    armario?: ArmarioCreateNestedOneWithoutEquiposInput
    estante?: EstanteCreateNestedOneWithoutEquiposInput
    estado: EquipoEstadoCreateNestedOneWithoutEquiposInput
    reservas?: ReservaEquipoCreateNestedManyWithoutEquipoInput
  }

  export type EquipoUncheckedCreateWithoutSedeInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reservas?: ReservaEquipoUncheckedCreateNestedManyWithoutEquipoInput
  }

  export type EquipoCreateOrConnectWithoutSedeInput = {
    where: EquipoWhereUniqueInput
    create: XOR<EquipoCreateWithoutSedeInput, EquipoUncheckedCreateWithoutSedeInput>
  }

  export type EquipoCreateManySedeInputEnvelope = {
    data: EquipoCreateManySedeInput | EquipoCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type LaboratorioCreateWithoutSedeInput = {
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    software?: SoftwareLaboratorioCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoCreateNestedManyWithoutLaboratorioInput
    libros?: LibroCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioUncheckedCreateWithoutSedeInput = {
    id?: number
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    software?: SoftwareLaboratorioUncheckedCreateNestedManyWithoutLaboratorioInput
    armarios?: ArmarioUncheckedCreateNestedManyWithoutLaboratorioInput
    equipos?: EquipoUncheckedCreateNestedManyWithoutLaboratorioInput
    libros?: LibroUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutLaboratorioInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedManyWithoutLaboratorioInput
  }

  export type LaboratorioCreateOrConnectWithoutSedeInput = {
    where: LaboratorioWhereUniqueInput
    create: XOR<LaboratorioCreateWithoutSedeInput, LaboratorioUncheckedCreateWithoutSedeInput>
  }

  export type LaboratorioCreateManySedeInputEnvelope = {
    data: LaboratorioCreateManySedeInput | LaboratorioCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type LibroCreateWithoutSedeInput = {
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaCreateNestedManyWithoutLibroInput
    laboratorio: LaboratorioCreateNestedOneWithoutLibrosInput
    armario?: ArmarioCreateNestedOneWithoutLibrosInput
    estante?: EstanteCreateNestedOneWithoutLibrosInput
    autor: LibroAutorCreateNestedOneWithoutLibrosInput
    idioma: LibroIdiomaCreateNestedOneWithoutLibrosInput
    editorial: LibroEditorialCreateNestedOneWithoutLibrosInput
    reservas?: ReservaLibroCreateNestedManyWithoutLibroInput
  }

  export type LibroUncheckedCreateWithoutSedeInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    materias?: LibroMateriaUncheckedCreateNestedManyWithoutLibroInput
    reservas?: ReservaLibroUncheckedCreateNestedManyWithoutLibroInput
  }

  export type LibroCreateOrConnectWithoutSedeInput = {
    where: LibroWhereUniqueInput
    create: XOR<LibroCreateWithoutSedeInput, LibroUncheckedCreateWithoutSedeInput>
  }

  export type LibroCreateManySedeInputEnvelope = {
    data: LibroCreateManySedeInput | LibroCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type ReservaLaboratorioAbiertoCreateWithoutSedeInput = {
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLaboratorioAbiertoInput
    laboratorio?: LaboratorioCreateNestedOneWithoutReservaLaboratorioAbiertoInput
    equipoReservado?: ReservaLaboratorioAbiertoEquipoCreateNestedManyWithoutReservaLaboratorioAbiertoInput
  }

  export type ReservaLaboratorioAbiertoUncheckedCreateWithoutSedeInput = {
    id?: number
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    reservaId: number
    laboratorioId?: number | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioAbiertoInput
  }

  export type ReservaLaboratorioAbiertoCreateOrConnectWithoutSedeInput = {
    where: ReservaLaboratorioAbiertoWhereUniqueInput
    create: XOR<ReservaLaboratorioAbiertoCreateWithoutSedeInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutSedeInput>
  }

  export type ReservaLaboratorioAbiertoCreateManySedeInputEnvelope = {
    data: ReservaLaboratorioAbiertoCreateManySedeInput | ReservaLaboratorioAbiertoCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type ReservaLaboratorioCerradoCreateWithoutSedeInput = {
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    laboratorio?: LaboratorioCreateNestedOneWithoutReservaLaboratorioCerradoInput
    curso?: CursoCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalMateria?: MateriaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalDocente?: UserCreateNestedOneWithoutReservaLaboratorioCerradoInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoUncheckedCreateWithoutSedeInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    laboratorioId?: number | null
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoCreateOrConnectWithoutSedeInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    create: XOR<ReservaLaboratorioCerradoCreateWithoutSedeInput, ReservaLaboratorioCerradoUncheckedCreateWithoutSedeInput>
  }

  export type ReservaLaboratorioCerradoCreateManySedeInputEnvelope = {
    data: ReservaLaboratorioCerradoCreateManySedeInput | ReservaLaboratorioCerradoCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type PantallaCreateWithoutSedeInput = {
    docente: string
    materia?: string | null
    laboratorio?: string | null
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    usuarioCreadorId: string
    fechaCreacion?: Date | string
  }

  export type PantallaUncheckedCreateWithoutSedeInput = {
    id?: number
    docente: string
    materia?: string | null
    laboratorio?: string | null
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    usuarioCreadorId: string
    fechaCreacion?: Date | string
  }

  export type PantallaCreateOrConnectWithoutSedeInput = {
    where: PantallaWhereUniqueInput
    create: XOR<PantallaCreateWithoutSedeInput, PantallaUncheckedCreateWithoutSedeInput>
  }

  export type PantallaCreateManySedeInputEnvelope = {
    data: PantallaCreateManySedeInput | PantallaCreateManySedeInput[]
    skipDuplicates?: boolean
  }

  export type CursoUpsertWithWhereUniqueWithoutSedeInput = {
    where: CursoWhereUniqueInput
    update: XOR<CursoUpdateWithoutSedeInput, CursoUncheckedUpdateWithoutSedeInput>
    create: XOR<CursoCreateWithoutSedeInput, CursoUncheckedCreateWithoutSedeInput>
  }

  export type CursoUpdateWithWhereUniqueWithoutSedeInput = {
    where: CursoWhereUniqueInput
    data: XOR<CursoUpdateWithoutSedeInput, CursoUncheckedUpdateWithoutSedeInput>
  }

  export type CursoUpdateManyWithWhereWithoutSedeInput = {
    where: CursoScalarWhereInput
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyWithoutSedeInput>
  }

  export type EquipoUpsertWithWhereUniqueWithoutSedeInput = {
    where: EquipoWhereUniqueInput
    update: XOR<EquipoUpdateWithoutSedeInput, EquipoUncheckedUpdateWithoutSedeInput>
    create: XOR<EquipoCreateWithoutSedeInput, EquipoUncheckedCreateWithoutSedeInput>
  }

  export type EquipoUpdateWithWhereUniqueWithoutSedeInput = {
    where: EquipoWhereUniqueInput
    data: XOR<EquipoUpdateWithoutSedeInput, EquipoUncheckedUpdateWithoutSedeInput>
  }

  export type EquipoUpdateManyWithWhereWithoutSedeInput = {
    where: EquipoScalarWhereInput
    data: XOR<EquipoUpdateManyMutationInput, EquipoUncheckedUpdateManyWithoutSedeInput>
  }

  export type LaboratorioUpsertWithWhereUniqueWithoutSedeInput = {
    where: LaboratorioWhereUniqueInput
    update: XOR<LaboratorioUpdateWithoutSedeInput, LaboratorioUncheckedUpdateWithoutSedeInput>
    create: XOR<LaboratorioCreateWithoutSedeInput, LaboratorioUncheckedCreateWithoutSedeInput>
  }

  export type LaboratorioUpdateWithWhereUniqueWithoutSedeInput = {
    where: LaboratorioWhereUniqueInput
    data: XOR<LaboratorioUpdateWithoutSedeInput, LaboratorioUncheckedUpdateWithoutSedeInput>
  }

  export type LaboratorioUpdateManyWithWhereWithoutSedeInput = {
    where: LaboratorioScalarWhereInput
    data: XOR<LaboratorioUpdateManyMutationInput, LaboratorioUncheckedUpdateManyWithoutSedeInput>
  }

  export type LaboratorioScalarWhereInput = {
    AND?: LaboratorioScalarWhereInput | LaboratorioScalarWhereInput[]
    OR?: LaboratorioScalarWhereInput[]
    NOT?: LaboratorioScalarWhereInput | LaboratorioScalarWhereInput[]
    id?: IntFilter<"Laboratorio"> | number
    nombre?: StringFilter<"Laboratorio"> | string
    tienePc?: BoolFilter<"Laboratorio"> | boolean
    esReservable?: BoolFilter<"Laboratorio"> | boolean
    incluirEnReporte?: BoolFilter<"Laboratorio"> | boolean
    sedeId?: IntFilter<"Laboratorio"> | number
    fechaCreacion?: DateTimeFilter<"Laboratorio"> | Date | string
    fechaModificacion?: DateTimeFilter<"Laboratorio"> | Date | string
    usuarioCreadorId?: StringFilter<"Laboratorio"> | string
    usuarioModificadorId?: StringFilter<"Laboratorio"> | string
  }

  export type LibroUpsertWithWhereUniqueWithoutSedeInput = {
    where: LibroWhereUniqueInput
    update: XOR<LibroUpdateWithoutSedeInput, LibroUncheckedUpdateWithoutSedeInput>
    create: XOR<LibroCreateWithoutSedeInput, LibroUncheckedCreateWithoutSedeInput>
  }

  export type LibroUpdateWithWhereUniqueWithoutSedeInput = {
    where: LibroWhereUniqueInput
    data: XOR<LibroUpdateWithoutSedeInput, LibroUncheckedUpdateWithoutSedeInput>
  }

  export type LibroUpdateManyWithWhereWithoutSedeInput = {
    where: LibroScalarWhereInput
    data: XOR<LibroUpdateManyMutationInput, LibroUncheckedUpdateManyWithoutSedeInput>
  }

  export type ReservaLaboratorioAbiertoUpsertWithWhereUniqueWithoutSedeInput = {
    where: ReservaLaboratorioAbiertoWhereUniqueInput
    update: XOR<ReservaLaboratorioAbiertoUpdateWithoutSedeInput, ReservaLaboratorioAbiertoUncheckedUpdateWithoutSedeInput>
    create: XOR<ReservaLaboratorioAbiertoCreateWithoutSedeInput, ReservaLaboratorioAbiertoUncheckedCreateWithoutSedeInput>
  }

  export type ReservaLaboratorioAbiertoUpdateWithWhereUniqueWithoutSedeInput = {
    where: ReservaLaboratorioAbiertoWhereUniqueInput
    data: XOR<ReservaLaboratorioAbiertoUpdateWithoutSedeInput, ReservaLaboratorioAbiertoUncheckedUpdateWithoutSedeInput>
  }

  export type ReservaLaboratorioAbiertoUpdateManyWithWhereWithoutSedeInput = {
    where: ReservaLaboratorioAbiertoScalarWhereInput
    data: XOR<ReservaLaboratorioAbiertoUpdateManyMutationInput, ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutSedeInput>
  }

  export type ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutSedeInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    update: XOR<ReservaLaboratorioCerradoUpdateWithoutSedeInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutSedeInput>
    create: XOR<ReservaLaboratorioCerradoCreateWithoutSedeInput, ReservaLaboratorioCerradoUncheckedCreateWithoutSedeInput>
  }

  export type ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutSedeInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    data: XOR<ReservaLaboratorioCerradoUpdateWithoutSedeInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutSedeInput>
  }

  export type ReservaLaboratorioCerradoUpdateManyWithWhereWithoutSedeInput = {
    where: ReservaLaboratorioCerradoScalarWhereInput
    data: XOR<ReservaLaboratorioCerradoUpdateManyMutationInput, ReservaLaboratorioCerradoUncheckedUpdateManyWithoutSedeInput>
  }

  export type PantallaUpsertWithWhereUniqueWithoutSedeInput = {
    where: PantallaWhereUniqueInput
    update: XOR<PantallaUpdateWithoutSedeInput, PantallaUncheckedUpdateWithoutSedeInput>
    create: XOR<PantallaCreateWithoutSedeInput, PantallaUncheckedCreateWithoutSedeInput>
  }

  export type PantallaUpdateWithWhereUniqueWithoutSedeInput = {
    where: PantallaWhereUniqueInput
    data: XOR<PantallaUpdateWithoutSedeInput, PantallaUncheckedUpdateWithoutSedeInput>
  }

  export type PantallaUpdateManyWithWhereWithoutSedeInput = {
    where: PantallaScalarWhereInput
    data: XOR<PantallaUpdateManyMutationInput, PantallaUncheckedUpdateManyWithoutSedeInput>
  }

  export type PantallaScalarWhereInput = {
    AND?: PantallaScalarWhereInput | PantallaScalarWhereInput[]
    OR?: PantallaScalarWhereInput[]
    NOT?: PantallaScalarWhereInput | PantallaScalarWhereInput[]
    id?: IntFilter<"Pantalla"> | number
    sedeId?: IntFilter<"Pantalla"> | number
    docente?: StringFilter<"Pantalla"> | string
    materia?: StringNullableFilter<"Pantalla"> | string | null
    laboratorio?: StringNullableFilter<"Pantalla"> | string | null
    fechaHoraInicio?: DateTimeFilter<"Pantalla"> | Date | string
    fechaHoraFin?: DateTimeFilter<"Pantalla"> | Date | string
    usuarioCreadorId?: StringFilter<"Pantalla"> | string
    fechaCreacion?: DateTimeFilter<"Pantalla"> | Date | string
  }

  export type DocumentoTipoCreateWithoutUsuariosInput = {
    nombre: string
  }

  export type DocumentoTipoUncheckedCreateWithoutUsuariosInput = {
    id?: number
    nombre: string
  }

  export type DocumentoTipoCreateOrConnectWithoutUsuariosInput = {
    where: DocumentoTipoWhereUniqueInput
    create: XOR<DocumentoTipoCreateWithoutUsuariosInput, DocumentoTipoUncheckedCreateWithoutUsuariosInput>
  }

  export type ProvinciaCreateWithoutUsuariosInput = {
    iso: string
    nombre: string
    pais: PaisCreateNestedOneWithoutProvinciasInput
  }

  export type ProvinciaUncheckedCreateWithoutUsuariosInput = {
    iso: string
    nombre: string
    paisIso: string
  }

  export type ProvinciaCreateOrConnectWithoutUsuariosInput = {
    where: ProvinciaWhereUniqueInput
    create: XOR<ProvinciaCreateWithoutUsuariosInput, ProvinciaUncheckedCreateWithoutUsuariosInput>
  }

  export type PaisCreateWithoutUsuariosInput = {
    iso: string
    nombreEspanol: string
    nombreIngles: string
    iso3: string
    codigoNumerico: number
    provincias?: ProvinciaCreateNestedManyWithoutPaisInput
  }

  export type PaisUncheckedCreateWithoutUsuariosInput = {
    iso: string
    nombreEspanol: string
    nombreIngles: string
    iso3: string
    codigoNumerico: number
    provincias?: ProvinciaUncheckedCreateNestedManyWithoutPaisInput
  }

  export type PaisCreateOrConnectWithoutUsuariosInput = {
    where: PaisWhereUniqueInput
    create: XOR<PaisCreateWithoutUsuariosInput, PaisUncheckedCreateWithoutUsuariosInput>
  }

  export type AccountCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    refresh_expires_in?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    refresh_token_expires_in?: number | null
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    refresh_expires_in?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    refresh_token_expires_in?: number | null
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountCreateManyUserInputEnvelope = {
    data: AccountCreateManyUserInput | AccountCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SessionCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioRolCreateWithoutUsuarioInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    rol: RolCreateNestedOneWithoutUsuariosInput
  }

  export type UsuarioRolUncheckedCreateWithoutUsuarioInput = {
    rolId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type UsuarioRolCreateOrConnectWithoutUsuarioInput = {
    where: UsuarioRolWhereUniqueInput
    create: XOR<UsuarioRolCreateWithoutUsuarioInput, UsuarioRolUncheckedCreateWithoutUsuarioInput>
  }

  export type UsuarioRolCreateManyUsuarioInputEnvelope = {
    data: UsuarioRolCreateManyUsuarioInput | UsuarioRolCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type ReservaCreateWithoutUsuarioSolicitoInput = {
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    usuarioAprobador?: UserCreateNestedOneWithoutReservasAprobadasInput
    usuarioRechazado?: UserCreateNestedOneWithoutReservasRechazadasInput
    usuarioRenovo?: UserCreateNestedOneWithoutReservasRenovadasInput
    usuarioRecibio?: UserCreateNestedOneWithoutReservasRecibidasInput
    usuarioTutor?: UserCreateNestedOneWithoutReservasComoTutorInput
    reservaEquipo?: ReservaEquipoCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutUsuarioSolicitoInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    reservaEquipo?: ReservaEquipoUncheckedCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutUsuarioSolicitoInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutUsuarioSolicitoInput, ReservaUncheckedCreateWithoutUsuarioSolicitoInput>
  }

  export type ReservaCreateManyUsuarioSolicitoInputEnvelope = {
    data: ReservaCreateManyUsuarioSolicitoInput | ReservaCreateManyUsuarioSolicitoInput[]
    skipDuplicates?: boolean
  }

  export type ReservaCreateWithoutUsuarioRenovoInput = {
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    usuarioSolicito: UserCreateNestedOneWithoutReservasSolicitadasInput
    usuarioAprobador?: UserCreateNestedOneWithoutReservasAprobadasInput
    usuarioRechazado?: UserCreateNestedOneWithoutReservasRechazadasInput
    usuarioRecibio?: UserCreateNestedOneWithoutReservasRecibidasInput
    usuarioTutor?: UserCreateNestedOneWithoutReservasComoTutorInput
    reservaEquipo?: ReservaEquipoCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutUsuarioRenovoInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    reservaEquipo?: ReservaEquipoUncheckedCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutUsuarioRenovoInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutUsuarioRenovoInput, ReservaUncheckedCreateWithoutUsuarioRenovoInput>
  }

  export type ReservaCreateManyUsuarioRenovoInputEnvelope = {
    data: ReservaCreateManyUsuarioRenovoInput | ReservaCreateManyUsuarioRenovoInput[]
    skipDuplicates?: boolean
  }

  export type ReservaCreateWithoutUsuarioTutorInput = {
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    usuarioSolicito: UserCreateNestedOneWithoutReservasSolicitadasInput
    usuarioAprobador?: UserCreateNestedOneWithoutReservasAprobadasInput
    usuarioRechazado?: UserCreateNestedOneWithoutReservasRechazadasInput
    usuarioRenovo?: UserCreateNestedOneWithoutReservasRenovadasInput
    usuarioRecibio?: UserCreateNestedOneWithoutReservasRecibidasInput
    reservaEquipo?: ReservaEquipoCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutUsuarioTutorInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    reservaEquipo?: ReservaEquipoUncheckedCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutUsuarioTutorInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutUsuarioTutorInput, ReservaUncheckedCreateWithoutUsuarioTutorInput>
  }

  export type ReservaCreateManyUsuarioTutorInputEnvelope = {
    data: ReservaCreateManyUsuarioTutorInput | ReservaCreateManyUsuarioTutorInput[]
    skipDuplicates?: boolean
  }

  export type ReservaCreateWithoutUsuarioAprobadorInput = {
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    usuarioSolicito: UserCreateNestedOneWithoutReservasSolicitadasInput
    usuarioRechazado?: UserCreateNestedOneWithoutReservasRechazadasInput
    usuarioRenovo?: UserCreateNestedOneWithoutReservasRenovadasInput
    usuarioRecibio?: UserCreateNestedOneWithoutReservasRecibidasInput
    usuarioTutor?: UserCreateNestedOneWithoutReservasComoTutorInput
    reservaEquipo?: ReservaEquipoCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutUsuarioAprobadorInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    reservaEquipo?: ReservaEquipoUncheckedCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutUsuarioAprobadorInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutUsuarioAprobadorInput, ReservaUncheckedCreateWithoutUsuarioAprobadorInput>
  }

  export type ReservaCreateManyUsuarioAprobadorInputEnvelope = {
    data: ReservaCreateManyUsuarioAprobadorInput | ReservaCreateManyUsuarioAprobadorInput[]
    skipDuplicates?: boolean
  }

  export type ReservaCreateWithoutUsuarioRechazadoInput = {
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    usuarioSolicito: UserCreateNestedOneWithoutReservasSolicitadasInput
    usuarioAprobador?: UserCreateNestedOneWithoutReservasAprobadasInput
    usuarioRenovo?: UserCreateNestedOneWithoutReservasRenovadasInput
    usuarioRecibio?: UserCreateNestedOneWithoutReservasRecibidasInput
    usuarioTutor?: UserCreateNestedOneWithoutReservasComoTutorInput
    reservaEquipo?: ReservaEquipoCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutUsuarioRechazadoInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    reservaEquipo?: ReservaEquipoUncheckedCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutUsuarioRechazadoInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutUsuarioRechazadoInput, ReservaUncheckedCreateWithoutUsuarioRechazadoInput>
  }

  export type ReservaCreateManyUsuarioRechazadoInputEnvelope = {
    data: ReservaCreateManyUsuarioRechazadoInput | ReservaCreateManyUsuarioRechazadoInput[]
    skipDuplicates?: boolean
  }

  export type ReservaCreateWithoutUsuarioRecibioInput = {
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    usuarioSolicito: UserCreateNestedOneWithoutReservasSolicitadasInput
    usuarioAprobador?: UserCreateNestedOneWithoutReservasAprobadasInput
    usuarioRechazado?: UserCreateNestedOneWithoutReservasRechazadasInput
    usuarioRenovo?: UserCreateNestedOneWithoutReservasRenovadasInput
    usuarioTutor?: UserCreateNestedOneWithoutReservasComoTutorInput
    reservaEquipo?: ReservaEquipoCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoCreateNestedOneWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutUsuarioRecibioInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
    reservaEquipo?: ReservaEquipoUncheckedCreateNestedOneWithoutReservaInput
    reservaLibro?: ReservaLibroUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedOneWithoutReservaInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedCreateNestedOneWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutUsuarioRecibioInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutUsuarioRecibioInput, ReservaUncheckedCreateWithoutUsuarioRecibioInput>
  }

  export type ReservaCreateManyUsuarioRecibioInputEnvelope = {
    data: ReservaCreateManyUsuarioRecibioInput | ReservaCreateManyUsuarioRecibioInput[]
    skipDuplicates?: boolean
  }

  export type CursoAyudanteCreateWithoutUsuarioInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
    curso: CursoCreateNestedOneWithoutAyudantesInput
  }

  export type CursoAyudanteUncheckedCreateWithoutUsuarioInput = {
    cursoId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
  }

  export type CursoAyudanteCreateOrConnectWithoutUsuarioInput = {
    where: CursoAyudanteWhereUniqueInput
    create: XOR<CursoAyudanteCreateWithoutUsuarioInput, CursoAyudanteUncheckedCreateWithoutUsuarioInput>
  }

  export type CursoAyudanteCreateManyUsuarioInputEnvelope = {
    data: CursoAyudanteCreateManyUsuarioInput | CursoAyudanteCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type CursoCreateWithoutProfesorInput = {
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    anioDeCarrera: number
    activo: boolean
    ac: string
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteCreateNestedManyWithoutCursoInput
    sede: SedeCreateNestedOneWithoutCursosInput
    materia: MateriaCreateNestedOneWithoutCursosInput
    division: DivisionCreateNestedOneWithoutCursosInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutCursoInput
  }

  export type CursoUncheckedCreateWithoutProfesorInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    anioDeCarrera: number
    activo: boolean
    ac: string
    sedeId: number
    materiaId: number
    divisionId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    ayudantes?: CursoAyudanteUncheckedCreateNestedManyWithoutCursoInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutCursoInput
  }

  export type CursoCreateOrConnectWithoutProfesorInput = {
    where: CursoWhereUniqueInput
    create: XOR<CursoCreateWithoutProfesorInput, CursoUncheckedCreateWithoutProfesorInput>
  }

  export type CursoCreateManyProfesorInputEnvelope = {
    data: CursoCreateManyProfesorInput | CursoCreateManyProfesorInput[]
    skipDuplicates?: boolean
  }

  export type MateriaJefeTpCreateWithoutUsuarioInput = {
    materia: MateriaCreateNestedOneWithoutJefeTrabajoPracticosInput
  }

  export type MateriaJefeTpUncheckedCreateWithoutUsuarioInput = {
    materiaId: number
  }

  export type MateriaJefeTpCreateOrConnectWithoutUsuarioInput = {
    where: MateriaJefeTpWhereUniqueInput
    create: XOR<MateriaJefeTpCreateWithoutUsuarioInput, MateriaJefeTpUncheckedCreateWithoutUsuarioInput>
  }

  export type MateriaJefeTpCreateManyUsuarioInputEnvelope = {
    data: MateriaJefeTpCreateManyUsuarioInput | MateriaJefeTpCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type MateriaCreateWithoutDirectorUsuarioInput = {
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    jefeTrabajoPracticos?: MateriaJefeTpCreateNestedManyWithoutMateriaInput
    cursos?: CursoCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaUncheckedCreateWithoutDirectorUsuarioInput = {
    id?: number
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedCreateNestedManyWithoutMateriaInput
    cursos?: CursoUncheckedCreateNestedManyWithoutMateriaInput
    libros?: LibroMateriaUncheckedCreateNestedManyWithoutMateriaInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedCreateNestedManyWithoutMateriaPrerequisitoInput
    correlativa?: MateriaCorrelativaUncheckedCreateNestedManyWithoutCorrelativaInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalMateriaInput
  }

  export type MateriaCreateOrConnectWithoutDirectorUsuarioInput = {
    where: MateriaWhereUniqueInput
    create: XOR<MateriaCreateWithoutDirectorUsuarioInput, MateriaUncheckedCreateWithoutDirectorUsuarioInput>
  }

  export type MateriaCreateManyDirectorUsuarioInputEnvelope = {
    data: MateriaCreateManyDirectorUsuarioInput | MateriaCreateManyDirectorUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type TutorCreateWithoutUsuarioInput = {
    diasHorarios: string
    activo: boolean
    especialidad: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type TutorUncheckedCreateWithoutUsuarioInput = {
    diasHorarios: string
    activo: boolean
    especialidad: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type TutorCreateOrConnectWithoutUsuarioInput = {
    where: TutorWhereUniqueInput
    create: XOR<TutorCreateWithoutUsuarioInput, TutorUncheckedCreateWithoutUsuarioInput>
  }

  export type ReservaLaboratorioCerradoCreateWithoutDiscrecionalDocenteInput = {
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    reserva: ReservaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    sede: SedeCreateNestedOneWithoutReservaLaboratorioCerradoInput
    laboratorio?: LaboratorioCreateNestedOneWithoutReservaLaboratorioCerradoInput
    curso?: CursoCreateNestedOneWithoutReservaLaboratorioCerradoInput
    discrecionalMateria?: MateriaCreateNestedOneWithoutReservaLaboratorioCerradoInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalDocenteInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedCreateNestedManyWithoutReservaLaboratorioCerradoInput
  }

  export type ReservaLaboratorioCerradoCreateOrConnectWithoutDiscrecionalDocenteInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    create: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalDocenteInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalDocenteInput>
  }

  export type ReservaLaboratorioCerradoCreateManyDiscrecionalDocenteInputEnvelope = {
    data: ReservaLaboratorioCerradoCreateManyDiscrecionalDocenteInput | ReservaLaboratorioCerradoCreateManyDiscrecionalDocenteInput[]
    skipDuplicates?: boolean
  }

  export type DocumentoTipoUpsertWithoutUsuariosInput = {
    update: XOR<DocumentoTipoUpdateWithoutUsuariosInput, DocumentoTipoUncheckedUpdateWithoutUsuariosInput>
    create: XOR<DocumentoTipoCreateWithoutUsuariosInput, DocumentoTipoUncheckedCreateWithoutUsuariosInput>
    where?: DocumentoTipoWhereInput
  }

  export type DocumentoTipoUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: DocumentoTipoWhereInput
    data: XOR<DocumentoTipoUpdateWithoutUsuariosInput, DocumentoTipoUncheckedUpdateWithoutUsuariosInput>
  }

  export type DocumentoTipoUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentoTipoUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProvinciaUpsertWithoutUsuariosInput = {
    update: XOR<ProvinciaUpdateWithoutUsuariosInput, ProvinciaUncheckedUpdateWithoutUsuariosInput>
    create: XOR<ProvinciaCreateWithoutUsuariosInput, ProvinciaUncheckedCreateWithoutUsuariosInput>
    where?: ProvinciaWhereInput
  }

  export type ProvinciaUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: ProvinciaWhereInput
    data: XOR<ProvinciaUpdateWithoutUsuariosInput, ProvinciaUncheckedUpdateWithoutUsuariosInput>
  }

  export type ProvinciaUpdateWithoutUsuariosInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    pais?: PaisUpdateOneRequiredWithoutProvinciasNestedInput
  }

  export type ProvinciaUncheckedUpdateWithoutUsuariosInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    paisIso?: StringFieldUpdateOperationsInput | string
  }

  export type PaisUpsertWithoutUsuariosInput = {
    update: XOR<PaisUpdateWithoutUsuariosInput, PaisUncheckedUpdateWithoutUsuariosInput>
    create: XOR<PaisCreateWithoutUsuariosInput, PaisUncheckedCreateWithoutUsuariosInput>
    where?: PaisWhereInput
  }

  export type PaisUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: PaisWhereInput
    data: XOR<PaisUpdateWithoutUsuariosInput, PaisUncheckedUpdateWithoutUsuariosInput>
  }

  export type PaisUpdateWithoutUsuariosInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombreEspanol?: StringFieldUpdateOperationsInput | string
    nombreIngles?: StringFieldUpdateOperationsInput | string
    iso3?: StringFieldUpdateOperationsInput | string
    codigoNumerico?: IntFieldUpdateOperationsInput | number
    provincias?: ProvinciaUpdateManyWithoutPaisNestedInput
  }

  export type PaisUncheckedUpdateWithoutUsuariosInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombreEspanol?: StringFieldUpdateOperationsInput | string
    nombreIngles?: StringFieldUpdateOperationsInput | string
    iso3?: StringFieldUpdateOperationsInput | string
    codigoNumerico?: IntFieldUpdateOperationsInput | number
    provincias?: ProvinciaUncheckedUpdateManyWithoutPaisNestedInput
  }

  export type AccountUpsertWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateManyWithWhereWithoutUserInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutUserInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    id?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    refresh_expires_in?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    refresh_token_expires_in?: IntNullableFilter<"Account"> | number | null
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
  }

  export type UsuarioRolUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: UsuarioRolWhereUniqueInput
    update: XOR<UsuarioRolUpdateWithoutUsuarioInput, UsuarioRolUncheckedUpdateWithoutUsuarioInput>
    create: XOR<UsuarioRolCreateWithoutUsuarioInput, UsuarioRolUncheckedCreateWithoutUsuarioInput>
  }

  export type UsuarioRolUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: UsuarioRolWhereUniqueInput
    data: XOR<UsuarioRolUpdateWithoutUsuarioInput, UsuarioRolUncheckedUpdateWithoutUsuarioInput>
  }

  export type UsuarioRolUpdateManyWithWhereWithoutUsuarioInput = {
    where: UsuarioRolScalarWhereInput
    data: XOR<UsuarioRolUpdateManyMutationInput, UsuarioRolUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type UsuarioRolScalarWhereInput = {
    AND?: UsuarioRolScalarWhereInput | UsuarioRolScalarWhereInput[]
    OR?: UsuarioRolScalarWhereInput[]
    NOT?: UsuarioRolScalarWhereInput | UsuarioRolScalarWhereInput[]
    userId?: StringFilter<"UsuarioRol"> | string
    rolId?: IntFilter<"UsuarioRol"> | number
    fechaCreacion?: DateTimeFilter<"UsuarioRol"> | Date | string
    usuarioCreadorId?: StringFilter<"UsuarioRol"> | string
  }

  export type ReservaUpsertWithWhereUniqueWithoutUsuarioSolicitoInput = {
    where: ReservaWhereUniqueInput
    update: XOR<ReservaUpdateWithoutUsuarioSolicitoInput, ReservaUncheckedUpdateWithoutUsuarioSolicitoInput>
    create: XOR<ReservaCreateWithoutUsuarioSolicitoInput, ReservaUncheckedCreateWithoutUsuarioSolicitoInput>
  }

  export type ReservaUpdateWithWhereUniqueWithoutUsuarioSolicitoInput = {
    where: ReservaWhereUniqueInput
    data: XOR<ReservaUpdateWithoutUsuarioSolicitoInput, ReservaUncheckedUpdateWithoutUsuarioSolicitoInput>
  }

  export type ReservaUpdateManyWithWhereWithoutUsuarioSolicitoInput = {
    where: ReservaScalarWhereInput
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyWithoutUsuarioSolicitoInput>
  }

  export type ReservaScalarWhereInput = {
    AND?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
    OR?: ReservaScalarWhereInput[]
    NOT?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
    id?: IntFilter<"Reserva"> | number
    estatus?: EnumReservaEstatusFilter<"Reserva"> | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFilter<"Reserva"> | Date | string
    fechaHoraFin?: DateTimeFilter<"Reserva"> | Date | string
    tipo?: EnumReservaTipoFilter<"Reserva"> | $Enums.ReservaTipo
    asistio?: BoolFilter<"Reserva"> | boolean
    motivoRechazo?: StringNullableFilter<"Reserva"> | string | null
    usuarioSolicitoId?: StringFilter<"Reserva"> | string
    usuarioAprobadorId?: StringNullableFilter<"Reserva"> | string | null
    usuarioRechazadoId?: StringNullableFilter<"Reserva"> | string | null
    usuarioRenovoId?: StringNullableFilter<"Reserva"> | string | null
    usuarioRecibioId?: StringNullableFilter<"Reserva"> | string | null
    usuarioTutorId?: StringNullableFilter<"Reserva"> | string | null
    fechaRenovacion?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    fechaAprobacion?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    fechaRechazo?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    fechaRecibido?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    usuarioCreadorId?: StringFilter<"Reserva"> | string
    usuarioModificadorId?: StringFilter<"Reserva"> | string
    fechaCreacion?: DateTimeFilter<"Reserva"> | Date | string
    fechaModificacion?: DateTimeFilter<"Reserva"> | Date | string
    mostrarEnPantalla?: BoolFilter<"Reserva"> | boolean
  }

  export type ReservaUpsertWithWhereUniqueWithoutUsuarioRenovoInput = {
    where: ReservaWhereUniqueInput
    update: XOR<ReservaUpdateWithoutUsuarioRenovoInput, ReservaUncheckedUpdateWithoutUsuarioRenovoInput>
    create: XOR<ReservaCreateWithoutUsuarioRenovoInput, ReservaUncheckedCreateWithoutUsuarioRenovoInput>
  }

  export type ReservaUpdateWithWhereUniqueWithoutUsuarioRenovoInput = {
    where: ReservaWhereUniqueInput
    data: XOR<ReservaUpdateWithoutUsuarioRenovoInput, ReservaUncheckedUpdateWithoutUsuarioRenovoInput>
  }

  export type ReservaUpdateManyWithWhereWithoutUsuarioRenovoInput = {
    where: ReservaScalarWhereInput
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyWithoutUsuarioRenovoInput>
  }

  export type ReservaUpsertWithWhereUniqueWithoutUsuarioTutorInput = {
    where: ReservaWhereUniqueInput
    update: XOR<ReservaUpdateWithoutUsuarioTutorInput, ReservaUncheckedUpdateWithoutUsuarioTutorInput>
    create: XOR<ReservaCreateWithoutUsuarioTutorInput, ReservaUncheckedCreateWithoutUsuarioTutorInput>
  }

  export type ReservaUpdateWithWhereUniqueWithoutUsuarioTutorInput = {
    where: ReservaWhereUniqueInput
    data: XOR<ReservaUpdateWithoutUsuarioTutorInput, ReservaUncheckedUpdateWithoutUsuarioTutorInput>
  }

  export type ReservaUpdateManyWithWhereWithoutUsuarioTutorInput = {
    where: ReservaScalarWhereInput
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyWithoutUsuarioTutorInput>
  }

  export type ReservaUpsertWithWhereUniqueWithoutUsuarioAprobadorInput = {
    where: ReservaWhereUniqueInput
    update: XOR<ReservaUpdateWithoutUsuarioAprobadorInput, ReservaUncheckedUpdateWithoutUsuarioAprobadorInput>
    create: XOR<ReservaCreateWithoutUsuarioAprobadorInput, ReservaUncheckedCreateWithoutUsuarioAprobadorInput>
  }

  export type ReservaUpdateWithWhereUniqueWithoutUsuarioAprobadorInput = {
    where: ReservaWhereUniqueInput
    data: XOR<ReservaUpdateWithoutUsuarioAprobadorInput, ReservaUncheckedUpdateWithoutUsuarioAprobadorInput>
  }

  export type ReservaUpdateManyWithWhereWithoutUsuarioAprobadorInput = {
    where: ReservaScalarWhereInput
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyWithoutUsuarioAprobadorInput>
  }

  export type ReservaUpsertWithWhereUniqueWithoutUsuarioRechazadoInput = {
    where: ReservaWhereUniqueInput
    update: XOR<ReservaUpdateWithoutUsuarioRechazadoInput, ReservaUncheckedUpdateWithoutUsuarioRechazadoInput>
    create: XOR<ReservaCreateWithoutUsuarioRechazadoInput, ReservaUncheckedCreateWithoutUsuarioRechazadoInput>
  }

  export type ReservaUpdateWithWhereUniqueWithoutUsuarioRechazadoInput = {
    where: ReservaWhereUniqueInput
    data: XOR<ReservaUpdateWithoutUsuarioRechazadoInput, ReservaUncheckedUpdateWithoutUsuarioRechazadoInput>
  }

  export type ReservaUpdateManyWithWhereWithoutUsuarioRechazadoInput = {
    where: ReservaScalarWhereInput
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyWithoutUsuarioRechazadoInput>
  }

  export type ReservaUpsertWithWhereUniqueWithoutUsuarioRecibioInput = {
    where: ReservaWhereUniqueInput
    update: XOR<ReservaUpdateWithoutUsuarioRecibioInput, ReservaUncheckedUpdateWithoutUsuarioRecibioInput>
    create: XOR<ReservaCreateWithoutUsuarioRecibioInput, ReservaUncheckedCreateWithoutUsuarioRecibioInput>
  }

  export type ReservaUpdateWithWhereUniqueWithoutUsuarioRecibioInput = {
    where: ReservaWhereUniqueInput
    data: XOR<ReservaUpdateWithoutUsuarioRecibioInput, ReservaUncheckedUpdateWithoutUsuarioRecibioInput>
  }

  export type ReservaUpdateManyWithWhereWithoutUsuarioRecibioInput = {
    where: ReservaScalarWhereInput
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyWithoutUsuarioRecibioInput>
  }

  export type CursoAyudanteUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: CursoAyudanteWhereUniqueInput
    update: XOR<CursoAyudanteUpdateWithoutUsuarioInput, CursoAyudanteUncheckedUpdateWithoutUsuarioInput>
    create: XOR<CursoAyudanteCreateWithoutUsuarioInput, CursoAyudanteUncheckedCreateWithoutUsuarioInput>
  }

  export type CursoAyudanteUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: CursoAyudanteWhereUniqueInput
    data: XOR<CursoAyudanteUpdateWithoutUsuarioInput, CursoAyudanteUncheckedUpdateWithoutUsuarioInput>
  }

  export type CursoAyudanteUpdateManyWithWhereWithoutUsuarioInput = {
    where: CursoAyudanteScalarWhereInput
    data: XOR<CursoAyudanteUpdateManyMutationInput, CursoAyudanteUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type CursoUpsertWithWhereUniqueWithoutProfesorInput = {
    where: CursoWhereUniqueInput
    update: XOR<CursoUpdateWithoutProfesorInput, CursoUncheckedUpdateWithoutProfesorInput>
    create: XOR<CursoCreateWithoutProfesorInput, CursoUncheckedCreateWithoutProfesorInput>
  }

  export type CursoUpdateWithWhereUniqueWithoutProfesorInput = {
    where: CursoWhereUniqueInput
    data: XOR<CursoUpdateWithoutProfesorInput, CursoUncheckedUpdateWithoutProfesorInput>
  }

  export type CursoUpdateManyWithWhereWithoutProfesorInput = {
    where: CursoScalarWhereInput
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyWithoutProfesorInput>
  }

  export type MateriaJefeTpUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: MateriaJefeTpWhereUniqueInput
    update: XOR<MateriaJefeTpUpdateWithoutUsuarioInput, MateriaJefeTpUncheckedUpdateWithoutUsuarioInput>
    create: XOR<MateriaJefeTpCreateWithoutUsuarioInput, MateriaJefeTpUncheckedCreateWithoutUsuarioInput>
  }

  export type MateriaJefeTpUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: MateriaJefeTpWhereUniqueInput
    data: XOR<MateriaJefeTpUpdateWithoutUsuarioInput, MateriaJefeTpUncheckedUpdateWithoutUsuarioInput>
  }

  export type MateriaJefeTpUpdateManyWithWhereWithoutUsuarioInput = {
    where: MateriaJefeTpScalarWhereInput
    data: XOR<MateriaJefeTpUpdateManyMutationInput, MateriaJefeTpUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type MateriaUpsertWithWhereUniqueWithoutDirectorUsuarioInput = {
    where: MateriaWhereUniqueInput
    update: XOR<MateriaUpdateWithoutDirectorUsuarioInput, MateriaUncheckedUpdateWithoutDirectorUsuarioInput>
    create: XOR<MateriaCreateWithoutDirectorUsuarioInput, MateriaUncheckedCreateWithoutDirectorUsuarioInput>
  }

  export type MateriaUpdateWithWhereUniqueWithoutDirectorUsuarioInput = {
    where: MateriaWhereUniqueInput
    data: XOR<MateriaUpdateWithoutDirectorUsuarioInput, MateriaUncheckedUpdateWithoutDirectorUsuarioInput>
  }

  export type MateriaUpdateManyWithWhereWithoutDirectorUsuarioInput = {
    where: MateriaScalarWhereInput
    data: XOR<MateriaUpdateManyMutationInput, MateriaUncheckedUpdateManyWithoutDirectorUsuarioInput>
  }

  export type MateriaScalarWhereInput = {
    AND?: MateriaScalarWhereInput | MateriaScalarWhereInput[]
    OR?: MateriaScalarWhereInput[]
    NOT?: MateriaScalarWhereInput | MateriaScalarWhereInput[]
    id?: IntFilter<"Materia"> | number
    nombre?: StringFilter<"Materia"> | string
    codigo?: StringFilter<"Materia"> | string
    anio?: IntFilter<"Materia"> | number
    duracion?: EnumMateriaDuracionFilter<"Materia"> | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFilter<"Materia"> | $Enums.MateriaTipo
    directorUsuarioId?: StringNullableFilter<"Materia"> | string | null
    fechaCreacion?: DateTimeFilter<"Materia"> | Date | string
    fechaModificacion?: DateTimeFilter<"Materia"> | Date | string
    usuarioCreadorId?: StringFilter<"Materia"> | string
    usuarioModificadorId?: StringFilter<"Materia"> | string
  }

  export type TutorUpsertWithoutUsuarioInput = {
    update: XOR<TutorUpdateWithoutUsuarioInput, TutorUncheckedUpdateWithoutUsuarioInput>
    create: XOR<TutorCreateWithoutUsuarioInput, TutorUncheckedCreateWithoutUsuarioInput>
    where?: TutorWhereInput
  }

  export type TutorUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: TutorWhereInput
    data: XOR<TutorUpdateWithoutUsuarioInput, TutorUncheckedUpdateWithoutUsuarioInput>
  }

  export type TutorUpdateWithoutUsuarioInput = {
    diasHorarios?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    especialidad?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type TutorUncheckedUpdateWithoutUsuarioInput = {
    diasHorarios?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    especialidad?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoUpsertWithWhereUniqueWithoutDiscrecionalDocenteInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    update: XOR<ReservaLaboratorioCerradoUpdateWithoutDiscrecionalDocenteInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutDiscrecionalDocenteInput>
    create: XOR<ReservaLaboratorioCerradoCreateWithoutDiscrecionalDocenteInput, ReservaLaboratorioCerradoUncheckedCreateWithoutDiscrecionalDocenteInput>
  }

  export type ReservaLaboratorioCerradoUpdateWithWhereUniqueWithoutDiscrecionalDocenteInput = {
    where: ReservaLaboratorioCerradoWhereUniqueInput
    data: XOR<ReservaLaboratorioCerradoUpdateWithoutDiscrecionalDocenteInput, ReservaLaboratorioCerradoUncheckedUpdateWithoutDiscrecionalDocenteInput>
  }

  export type ReservaLaboratorioCerradoUpdateManyWithWhereWithoutDiscrecionalDocenteInput = {
    where: ReservaLaboratorioCerradoScalarWhereInput
    data: XOR<ReservaLaboratorioCerradoUpdateManyMutationInput, ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteInput>
  }

  export type UserCreateWithoutTutorInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutTutorInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutTutorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTutorInput, UserUncheckedCreateWithoutTutorInput>
  }

  export type UserUpsertWithoutTutorInput = {
    update: XOR<UserUpdateWithoutTutorInput, UserUncheckedUpdateWithoutTutorInput>
    create: XOR<UserCreateWithoutTutorInput, UserUncheckedCreateWithoutTutorInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTutorInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTutorInput, UserUncheckedUpdateWithoutTutorInput>
  }

  export type UserUpdateWithoutTutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutTutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserCreateWithoutUsuarioRolInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutUsuarioRolInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutUsuarioRolInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUsuarioRolInput, UserUncheckedCreateWithoutUsuarioRolInput>
  }

  export type RolCreateWithoutUsuariosInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    rolPermiso?: RolPermisoCreateNestedManyWithoutRolInput
  }

  export type RolUncheckedCreateWithoutUsuariosInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    rolPermiso?: RolPermisoUncheckedCreateNestedManyWithoutRolInput
  }

  export type RolCreateOrConnectWithoutUsuariosInput = {
    where: RolWhereUniqueInput
    create: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
  }

  export type UserUpsertWithoutUsuarioRolInput = {
    update: XOR<UserUpdateWithoutUsuarioRolInput, UserUncheckedUpdateWithoutUsuarioRolInput>
    create: XOR<UserCreateWithoutUsuarioRolInput, UserUncheckedCreateWithoutUsuarioRolInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUsuarioRolInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUsuarioRolInput, UserUncheckedUpdateWithoutUsuarioRolInput>
  }

  export type UserUpdateWithoutUsuarioRolInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutUsuarioRolInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type RolUpsertWithoutUsuariosInput = {
    update: XOR<RolUpdateWithoutUsuariosInput, RolUncheckedUpdateWithoutUsuariosInput>
    create: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
    where?: RolWhereInput
  }

  export type RolUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: RolWhereInput
    data: XOR<RolUpdateWithoutUsuariosInput, RolUncheckedUpdateWithoutUsuariosInput>
  }

  export type RolUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    rolPermiso?: RolPermisoUpdateManyWithoutRolNestedInput
  }

  export type RolUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    rolPermiso?: RolPermisoUncheckedUpdateManyWithoutRolNestedInput
  }

  export type UsuarioRolCreateWithoutRolInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    usuario: UserCreateNestedOneWithoutUsuarioRolInput
  }

  export type UsuarioRolUncheckedCreateWithoutRolInput = {
    userId: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type UsuarioRolCreateOrConnectWithoutRolInput = {
    where: UsuarioRolWhereUniqueInput
    create: XOR<UsuarioRolCreateWithoutRolInput, UsuarioRolUncheckedCreateWithoutRolInput>
  }

  export type UsuarioRolCreateManyRolInputEnvelope = {
    data: UsuarioRolCreateManyRolInput | UsuarioRolCreateManyRolInput[]
    skipDuplicates?: boolean
  }

  export type RolPermisoCreateWithoutRolInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    permiso: PermisoCreateNestedOneWithoutRolPermisoInput
  }

  export type RolPermisoUncheckedCreateWithoutRolInput = {
    permisoId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type RolPermisoCreateOrConnectWithoutRolInput = {
    where: RolPermisoWhereUniqueInput
    create: XOR<RolPermisoCreateWithoutRolInput, RolPermisoUncheckedCreateWithoutRolInput>
  }

  export type RolPermisoCreateManyRolInputEnvelope = {
    data: RolPermisoCreateManyRolInput | RolPermisoCreateManyRolInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioRolUpsertWithWhereUniqueWithoutRolInput = {
    where: UsuarioRolWhereUniqueInput
    update: XOR<UsuarioRolUpdateWithoutRolInput, UsuarioRolUncheckedUpdateWithoutRolInput>
    create: XOR<UsuarioRolCreateWithoutRolInput, UsuarioRolUncheckedCreateWithoutRolInput>
  }

  export type UsuarioRolUpdateWithWhereUniqueWithoutRolInput = {
    where: UsuarioRolWhereUniqueInput
    data: XOR<UsuarioRolUpdateWithoutRolInput, UsuarioRolUncheckedUpdateWithoutRolInput>
  }

  export type UsuarioRolUpdateManyWithWhereWithoutRolInput = {
    where: UsuarioRolScalarWhereInput
    data: XOR<UsuarioRolUpdateManyMutationInput, UsuarioRolUncheckedUpdateManyWithoutRolInput>
  }

  export type RolPermisoUpsertWithWhereUniqueWithoutRolInput = {
    where: RolPermisoWhereUniqueInput
    update: XOR<RolPermisoUpdateWithoutRolInput, RolPermisoUncheckedUpdateWithoutRolInput>
    create: XOR<RolPermisoCreateWithoutRolInput, RolPermisoUncheckedCreateWithoutRolInput>
  }

  export type RolPermisoUpdateWithWhereUniqueWithoutRolInput = {
    where: RolPermisoWhereUniqueInput
    data: XOR<RolPermisoUpdateWithoutRolInput, RolPermisoUncheckedUpdateWithoutRolInput>
  }

  export type RolPermisoUpdateManyWithWhereWithoutRolInput = {
    where: RolPermisoScalarWhereInput
    data: XOR<RolPermisoUpdateManyMutationInput, RolPermisoUncheckedUpdateManyWithoutRolInput>
  }

  export type RolPermisoScalarWhereInput = {
    AND?: RolPermisoScalarWhereInput | RolPermisoScalarWhereInput[]
    OR?: RolPermisoScalarWhereInput[]
    NOT?: RolPermisoScalarWhereInput | RolPermisoScalarWhereInput[]
    rolId?: IntFilter<"RolPermiso"> | number
    permisoId?: IntFilter<"RolPermiso"> | number
    fechaCreacion?: DateTimeFilter<"RolPermiso"> | Date | string
    usuarioCreadorId?: StringFilter<"RolPermiso"> | string
  }

  export type RolCreateWithoutRolPermisoInput = {
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    usuarios?: UsuarioRolCreateNestedManyWithoutRolInput
  }

  export type RolUncheckedCreateWithoutRolPermisoInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
    usuarios?: UsuarioRolUncheckedCreateNestedManyWithoutRolInput
  }

  export type RolCreateOrConnectWithoutRolPermisoInput = {
    where: RolWhereUniqueInput
    create: XOR<RolCreateWithoutRolPermisoInput, RolUncheckedCreateWithoutRolPermisoInput>
  }

  export type PermisoCreateWithoutRolPermisoInput = {
    sgeNombre: $Enums.SgeNombre
    nombre: string
    rubro: string
    incluido?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type PermisoUncheckedCreateWithoutRolPermisoInput = {
    id?: number
    sgeNombre: $Enums.SgeNombre
    nombre: string
    rubro: string
    incluido?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type PermisoCreateOrConnectWithoutRolPermisoInput = {
    where: PermisoWhereUniqueInput
    create: XOR<PermisoCreateWithoutRolPermisoInput, PermisoUncheckedCreateWithoutRolPermisoInput>
  }

  export type RolUpsertWithoutRolPermisoInput = {
    update: XOR<RolUpdateWithoutRolPermisoInput, RolUncheckedUpdateWithoutRolPermisoInput>
    create: XOR<RolCreateWithoutRolPermisoInput, RolUncheckedCreateWithoutRolPermisoInput>
    where?: RolWhereInput
  }

  export type RolUpdateToOneWithWhereWithoutRolPermisoInput = {
    where?: RolWhereInput
    data: XOR<RolUpdateWithoutRolPermisoInput, RolUncheckedUpdateWithoutRolPermisoInput>
  }

  export type RolUpdateWithoutRolPermisoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioRolUpdateManyWithoutRolNestedInput
  }

  export type RolUncheckedUpdateWithoutRolPermisoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioRolUncheckedUpdateManyWithoutRolNestedInput
  }

  export type PermisoUpsertWithoutRolPermisoInput = {
    update: XOR<PermisoUpdateWithoutRolPermisoInput, PermisoUncheckedUpdateWithoutRolPermisoInput>
    create: XOR<PermisoCreateWithoutRolPermisoInput, PermisoUncheckedCreateWithoutRolPermisoInput>
    where?: PermisoWhereInput
  }

  export type PermisoUpdateToOneWithWhereWithoutRolPermisoInput = {
    where?: PermisoWhereInput
    data: XOR<PermisoUpdateWithoutRolPermisoInput, PermisoUncheckedUpdateWithoutRolPermisoInput>
  }

  export type PermisoUpdateWithoutRolPermisoInput = {
    sgeNombre?: EnumSgeNombreFieldUpdateOperationsInput | $Enums.SgeNombre
    nombre?: StringFieldUpdateOperationsInput | string
    rubro?: StringFieldUpdateOperationsInput | string
    incluido?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type PermisoUncheckedUpdateWithoutRolPermisoInput = {
    id?: IntFieldUpdateOperationsInput | number
    sgeNombre?: EnumSgeNombreFieldUpdateOperationsInput | $Enums.SgeNombre
    nombre?: StringFieldUpdateOperationsInput | string
    rubro?: StringFieldUpdateOperationsInput | string
    incluido?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type RolPermisoCreateWithoutPermisoInput = {
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    rol: RolCreateNestedOneWithoutRolPermisoInput
  }

  export type RolPermisoUncheckedCreateWithoutPermisoInput = {
    rolId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type RolPermisoCreateOrConnectWithoutPermisoInput = {
    where: RolPermisoWhereUniqueInput
    create: XOR<RolPermisoCreateWithoutPermisoInput, RolPermisoUncheckedCreateWithoutPermisoInput>
  }

  export type RolPermisoCreateManyPermisoInputEnvelope = {
    data: RolPermisoCreateManyPermisoInput | RolPermisoCreateManyPermisoInput[]
    skipDuplicates?: boolean
  }

  export type RolPermisoUpsertWithWhereUniqueWithoutPermisoInput = {
    where: RolPermisoWhereUniqueInput
    update: XOR<RolPermisoUpdateWithoutPermisoInput, RolPermisoUncheckedUpdateWithoutPermisoInput>
    create: XOR<RolPermisoCreateWithoutPermisoInput, RolPermisoUncheckedCreateWithoutPermisoInput>
  }

  export type RolPermisoUpdateWithWhereUniqueWithoutPermisoInput = {
    where: RolPermisoWhereUniqueInput
    data: XOR<RolPermisoUpdateWithoutPermisoInput, RolPermisoUncheckedUpdateWithoutPermisoInput>
  }

  export type RolPermisoUpdateManyWithWhereWithoutPermisoInput = {
    where: RolPermisoScalarWhereInput
    data: XOR<RolPermisoUpdateManyMutationInput, RolPermisoUncheckedUpdateManyWithoutPermisoInput>
  }

  export type PaisCreateWithoutProvinciasInput = {
    iso: string
    nombreEspanol: string
    nombreIngles: string
    iso3: string
    codigoNumerico: number
    usuarios?: UserCreateNestedManyWithoutPaisInput
  }

  export type PaisUncheckedCreateWithoutProvinciasInput = {
    iso: string
    nombreEspanol: string
    nombreIngles: string
    iso3: string
    codigoNumerico: number
    usuarios?: UserUncheckedCreateNestedManyWithoutPaisInput
  }

  export type PaisCreateOrConnectWithoutProvinciasInput = {
    where: PaisWhereUniqueInput
    create: XOR<PaisCreateWithoutProvinciasInput, PaisUncheckedCreateWithoutProvinciasInput>
  }

  export type UserCreateWithoutProvinciaInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutProvinciaInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutProvinciaInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProvinciaInput, UserUncheckedCreateWithoutProvinciaInput>
  }

  export type UserCreateManyProvinciaInputEnvelope = {
    data: UserCreateManyProvinciaInput | UserCreateManyProvinciaInput[]
    skipDuplicates?: boolean
  }

  export type PaisUpsertWithoutProvinciasInput = {
    update: XOR<PaisUpdateWithoutProvinciasInput, PaisUncheckedUpdateWithoutProvinciasInput>
    create: XOR<PaisCreateWithoutProvinciasInput, PaisUncheckedCreateWithoutProvinciasInput>
    where?: PaisWhereInput
  }

  export type PaisUpdateToOneWithWhereWithoutProvinciasInput = {
    where?: PaisWhereInput
    data: XOR<PaisUpdateWithoutProvinciasInput, PaisUncheckedUpdateWithoutProvinciasInput>
  }

  export type PaisUpdateWithoutProvinciasInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombreEspanol?: StringFieldUpdateOperationsInput | string
    nombreIngles?: StringFieldUpdateOperationsInput | string
    iso3?: StringFieldUpdateOperationsInput | string
    codigoNumerico?: IntFieldUpdateOperationsInput | number
    usuarios?: UserUpdateManyWithoutPaisNestedInput
  }

  export type PaisUncheckedUpdateWithoutProvinciasInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombreEspanol?: StringFieldUpdateOperationsInput | string
    nombreIngles?: StringFieldUpdateOperationsInput | string
    iso3?: StringFieldUpdateOperationsInput | string
    codigoNumerico?: IntFieldUpdateOperationsInput | number
    usuarios?: UserUncheckedUpdateManyWithoutPaisNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutProvinciaInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutProvinciaInput, UserUncheckedUpdateWithoutProvinciaInput>
    create: XOR<UserCreateWithoutProvinciaInput, UserUncheckedCreateWithoutProvinciaInput>
  }

  export type UserUpdateWithWhereUniqueWithoutProvinciaInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutProvinciaInput, UserUncheckedUpdateWithoutProvinciaInput>
  }

  export type UserUpdateManyWithWhereWithoutProvinciaInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutProvinciaInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    emailVerified?: BoolNullableFilter<"User"> | boolean | null
    image?: StringFilter<"User"> | string
    nombre?: StringNullableFilter<"User"> | string | null
    apellido?: StringNullableFilter<"User"> | string | null
    fechaNacimiento?: DateTimeNullableFilter<"User"> | Date | string | null
    direccion?: StringNullableFilter<"User"> | string | null
    piso?: StringNullableFilter<"User"> | string | null
    departamento?: StringNullableFilter<"User"> | string | null
    ciudad?: StringNullableFilter<"User"> | string | null
    codigoPostal?: StringNullableFilter<"User"> | string | null
    telefonoCasa?: StringNullableFilter<"User"> | string | null
    telefonoCelular?: StringNullableFilter<"User"> | string | null
    telefonoLaboral?: StringNullableFilter<"User"> | string | null
    documentoNumero?: StringNullableFilter<"User"> | string | null
    legajo?: StringNullableFilter<"User"> | string | null
    gitlab?: StringNullableFilter<"User"> | string | null
    penalizaciones?: IntFilter<"User"> | number
    esDocente?: BoolFilter<"User"> | boolean
    esTutor?: BoolFilter<"User"> | boolean
    fechaRegistro?: DateTimeFilter<"User"> | Date | string
    fechaUltimoAcceso?: DateTimeFilter<"User"> | Date | string
    fechaUltimaActualizacion?: DateTimeFilter<"User"> | Date | string
    documentoTipoId?: IntNullableFilter<"User"> | number | null
    provinciaIso?: StringNullableFilter<"User"> | string | null
    paisIso?: StringNullableFilter<"User"> | string | null
  }

  export type UserCreateWithoutPaisInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipo?: DocumentoTipoCreateNestedOneWithoutUsuariosInput
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutPaisInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutPaisInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPaisInput, UserUncheckedCreateWithoutPaisInput>
  }

  export type UserCreateManyPaisInputEnvelope = {
    data: UserCreateManyPaisInput | UserCreateManyPaisInput[]
    skipDuplicates?: boolean
  }

  export type ProvinciaCreateWithoutPaisInput = {
    iso: string
    nombre: string
    usuarios?: UserCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciaUncheckedCreateWithoutPaisInput = {
    iso: string
    nombre: string
    usuarios?: UserUncheckedCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciaCreateOrConnectWithoutPaisInput = {
    where: ProvinciaWhereUniqueInput
    create: XOR<ProvinciaCreateWithoutPaisInput, ProvinciaUncheckedCreateWithoutPaisInput>
  }

  export type ProvinciaCreateManyPaisInputEnvelope = {
    data: ProvinciaCreateManyPaisInput | ProvinciaCreateManyPaisInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutPaisInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutPaisInput, UserUncheckedUpdateWithoutPaisInput>
    create: XOR<UserCreateWithoutPaisInput, UserUncheckedCreateWithoutPaisInput>
  }

  export type UserUpdateWithWhereUniqueWithoutPaisInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutPaisInput, UserUncheckedUpdateWithoutPaisInput>
  }

  export type UserUpdateManyWithWhereWithoutPaisInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutPaisInput>
  }

  export type ProvinciaUpsertWithWhereUniqueWithoutPaisInput = {
    where: ProvinciaWhereUniqueInput
    update: XOR<ProvinciaUpdateWithoutPaisInput, ProvinciaUncheckedUpdateWithoutPaisInput>
    create: XOR<ProvinciaCreateWithoutPaisInput, ProvinciaUncheckedCreateWithoutPaisInput>
  }

  export type ProvinciaUpdateWithWhereUniqueWithoutPaisInput = {
    where: ProvinciaWhereUniqueInput
    data: XOR<ProvinciaUpdateWithoutPaisInput, ProvinciaUncheckedUpdateWithoutPaisInput>
  }

  export type ProvinciaUpdateManyWithWhereWithoutPaisInput = {
    where: ProvinciaScalarWhereInput
    data: XOR<ProvinciaUpdateManyMutationInput, ProvinciaUncheckedUpdateManyWithoutPaisInput>
  }

  export type ProvinciaScalarWhereInput = {
    AND?: ProvinciaScalarWhereInput | ProvinciaScalarWhereInput[]
    OR?: ProvinciaScalarWhereInput[]
    NOT?: ProvinciaScalarWhereInput | ProvinciaScalarWhereInput[]
    iso?: StringFilter<"Provincia"> | string
    nombre?: StringFilter<"Provincia"> | string
    paisIso?: StringFilter<"Provincia"> | string
  }

  export type UserCreateWithoutDocumentoTipoInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    provincia?: ProvinciaCreateNestedOneWithoutUsuariosInput
    pais?: PaisCreateNestedOneWithoutUsuariosInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserUncheckedCreateWithoutDocumentoTipoInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    provinciaIso?: string | null
    paisIso?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    usuarioRol?: UsuarioRolUncheckedCreateNestedManyWithoutUsuarioInput
    reservasSolicitadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioSolicitoInput
    reservasRenovadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRenovoInput
    reservasComoTutor?: ReservaUncheckedCreateNestedManyWithoutUsuarioTutorInput
    reservasAprobadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioAprobadorInput
    reservasRechazadas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRechazadoInput
    reservasRecibidas?: ReservaUncheckedCreateNestedManyWithoutUsuarioRecibioInput
    cursosComoAyudante?: CursoAyudanteUncheckedCreateNestedManyWithoutUsuarioInput
    cursosComoProfesor?: CursoUncheckedCreateNestedManyWithoutProfesorInput
    MateriaJefeTp?: MateriaJefeTpUncheckedCreateNestedManyWithoutUsuarioInput
    materiasDirector?: MateriaUncheckedCreateNestedManyWithoutDirectorUsuarioInput
    tutor?: TutorUncheckedCreateNestedOneWithoutUsuarioInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedCreateNestedManyWithoutDiscrecionalDocenteInput
  }

  export type UserCreateOrConnectWithoutDocumentoTipoInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDocumentoTipoInput, UserUncheckedCreateWithoutDocumentoTipoInput>
  }

  export type UserCreateManyDocumentoTipoInputEnvelope = {
    data: UserCreateManyDocumentoTipoInput | UserCreateManyDocumentoTipoInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutDocumentoTipoInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutDocumentoTipoInput, UserUncheckedUpdateWithoutDocumentoTipoInput>
    create: XOR<UserCreateWithoutDocumentoTipoInput, UserUncheckedCreateWithoutDocumentoTipoInput>
  }

  export type UserUpdateWithWhereUniqueWithoutDocumentoTipoInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutDocumentoTipoInput, UserUncheckedUpdateWithoutDocumentoTipoInput>
  }

  export type UserUpdateManyWithWhereWithoutDocumentoTipoInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutDocumentoTipoInput>
  }

  export type LibroMateriaCreateManyLibroInput = {
    materiaId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type ReservaLibroCreateManyLibroInput = {
    id?: number
    fechaEntregado: Date | string
    reservaId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LibroMateriaUpdateWithoutLibroInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    materia?: MateriaUpdateOneRequiredWithoutLibrosNestedInput
  }

  export type LibroMateriaUncheckedUpdateWithoutLibroInput = {
    materiaId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroMateriaUncheckedUpdateManyWithoutLibroInput = {
    materiaId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLibroUpdateWithoutLibroInput = {
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLibroNestedInput
  }

  export type ReservaLibroUncheckedUpdateWithoutLibroInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLibroUncheckedUpdateManyWithoutLibroInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroCreateManyAutorInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LibroUpdateWithoutAutorInput = {
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUpdateManyWithoutLibroNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutLibrosNestedInput
    armario?: ArmarioUpdateOneWithoutLibrosNestedInput
    estante?: EstanteUpdateOneWithoutLibrosNestedInput
    idioma?: LibroIdiomaUpdateOneRequiredWithoutLibrosNestedInput
    editorial?: LibroEditorialUpdateOneRequiredWithoutLibrosNestedInput
    sede?: SedeUpdateOneRequiredWithoutLibrosNestedInput
    reservas?: ReservaLibroUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateWithoutAutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUncheckedUpdateManyWithoutLibroNestedInput
    reservas?: ReservaLibroUncheckedUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateManyWithoutAutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroCreateManyIdiomaInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LibroUpdateWithoutIdiomaInput = {
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUpdateManyWithoutLibroNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutLibrosNestedInput
    armario?: ArmarioUpdateOneWithoutLibrosNestedInput
    estante?: EstanteUpdateOneWithoutLibrosNestedInput
    autor?: LibroAutorUpdateOneRequiredWithoutLibrosNestedInput
    editorial?: LibroEditorialUpdateOneRequiredWithoutLibrosNestedInput
    sede?: SedeUpdateOneRequiredWithoutLibrosNestedInput
    reservas?: ReservaLibroUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateWithoutIdiomaInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUncheckedUpdateManyWithoutLibroNestedInput
    reservas?: ReservaLibroUncheckedUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateManyWithoutIdiomaInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroCreateManyEditorialInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    idiomaId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LibroUpdateWithoutEditorialInput = {
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUpdateManyWithoutLibroNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutLibrosNestedInput
    armario?: ArmarioUpdateOneWithoutLibrosNestedInput
    estante?: EstanteUpdateOneWithoutLibrosNestedInput
    autor?: LibroAutorUpdateOneRequiredWithoutLibrosNestedInput
    idioma?: LibroIdiomaUpdateOneRequiredWithoutLibrosNestedInput
    sede?: SedeUpdateOneRequiredWithoutLibrosNestedInput
    reservas?: ReservaLibroUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateWithoutEditorialInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUncheckedUpdateManyWithoutLibroNestedInput
    reservas?: ReservaLibroUncheckedUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateManyWithoutEditorialInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoAyudanteCreateManyCursoInput = {
    userId: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoCreateManyCursoInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type CursoAyudanteUpdateWithoutCursoInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    usuario?: UserUpdateOneRequiredWithoutCursosComoAyudanteNestedInput
  }

  export type CursoAyudanteUncheckedUpdateWithoutCursoInput = {
    userId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoAyudanteUncheckedUpdateManyWithoutCursoInput = {
    userId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoUpdateWithoutCursoInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    sede?: SedeUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    laboratorio?: LaboratorioUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalMateria?: MateriaUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalDocente?: UserUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateWithoutCursoInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateManyWithoutCursoInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoCreateManyDivisionInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    profesorId: string
    anioDeCarrera: number
    activo: boolean
    ac: string
    sedeId: number
    materiaId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type CursoUpdateWithoutDivisionInput = {
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUpdateManyWithoutCursoNestedInput
    profesor?: UserUpdateOneRequiredWithoutCursosComoProfesorNestedInput
    sede?: SedeUpdateOneRequiredWithoutCursosNestedInput
    materia?: MateriaUpdateOneRequiredWithoutCursosNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateWithoutDivisionInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    profesorId?: StringFieldUpdateOperationsInput | string
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    sedeId?: IntFieldUpdateOperationsInput | number
    materiaId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUncheckedUpdateManyWithoutCursoNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateManyWithoutDivisionInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    profesorId?: StringFieldUpdateOperationsInput | string
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    sedeId?: IntFieldUpdateOperationsInput | number
    materiaId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaEquipoCreateManyEquipoInput = {
    id?: number
    fechaEntregado: Date | string
    reservaId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaEquipoUpdateWithoutEquipoInput = {
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaEquipoNestedInput
  }

  export type ReservaEquipoUncheckedUpdateWithoutEquipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaEquipoUncheckedUpdateManyWithoutEquipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaEntregado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoCreateManyMarcaInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    sedeId: number
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type EquipoUpdateWithoutMarcaInput = {
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    tipo?: EquipoTipoUpdateOneRequiredWithoutEquiposNestedInput
    sede?: SedeUpdateOneRequiredWithoutEquiposNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutEquiposNestedInput
    armario?: ArmarioUpdateOneWithoutEquiposNestedInput
    estante?: EstanteUpdateOneWithoutEquiposNestedInput
    estado?: EquipoEstadoUpdateOneRequiredWithoutEquiposNestedInput
    reservas?: ReservaEquipoUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateWithoutMarcaInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservas?: ReservaEquipoUncheckedUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateManyWithoutMarcaInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoCreateManyTipoInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    marcaId: number
    sedeId: number
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoEquipoCreateManyEquipoTipoInput = {
    id?: number
    cantidad: number
    reservaLaboratorioCerradoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioAbiertoEquipoCreateManyEquipoTipoInput = {
    id?: number
    cantidad: number
    reservaLaboratorioAbiertoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type EquipoUpdateWithoutTipoInput = {
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    marca?: EquipoMarcaUpdateOneRequiredWithoutEquiposNestedInput
    sede?: SedeUpdateOneRequiredWithoutEquiposNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutEquiposNestedInput
    armario?: ArmarioUpdateOneWithoutEquiposNestedInput
    estante?: EstanteUpdateOneWithoutEquiposNestedInput
    estado?: EquipoEstadoUpdateOneRequiredWithoutEquiposNestedInput
    reservas?: ReservaEquipoUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateWithoutTipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservas?: ReservaEquipoUncheckedUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateManyWithoutTipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoEquipoUpdateWithoutEquipoTipoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneRequiredWithoutEquipoReservadoNestedInput
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedUpdateWithoutEquipoTipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    reservaLaboratorioCerradoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutEquipoTipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    reservaLaboratorioCerradoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioAbiertoEquipoUpdateWithoutEquipoTipoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneRequiredWithoutEquipoReservadoNestedInput
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedUpdateWithoutEquipoTipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    reservaLaboratorioAbiertoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutEquipoTipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    reservaLaboratorioAbiertoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoCreateManyEstadoInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type EquipoUpdateWithoutEstadoInput = {
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    tipo?: EquipoTipoUpdateOneRequiredWithoutEquiposNestedInput
    marca?: EquipoMarcaUpdateOneRequiredWithoutEquiposNestedInput
    sede?: SedeUpdateOneRequiredWithoutEquiposNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutEquiposNestedInput
    armario?: ArmarioUpdateOneWithoutEquiposNestedInput
    estante?: EstanteUpdateOneWithoutEquiposNestedInput
    reservas?: ReservaEquipoUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservas?: ReservaEquipoUncheckedUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateManyWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareLaboratorioCreateManyLaboratorioInput = {
    softwareId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type ArmarioCreateManyLaboratorioInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type EquipoCreateManyLaboratorioInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    armarioId?: number | null
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LibroCreateManyLaboratorioInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoCreateManyLaboratorioInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    sedeId: number
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioAbiertoCreateManyLaboratorioInput = {
    id?: number
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    reservaId: number
    sedeId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type SoftwareLaboratorioUpdateWithoutLaboratorioInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    software?: SoftwareUpdateOneRequiredWithoutLaboratoriosNestedInput
  }

  export type SoftwareLaboratorioUncheckedUpdateWithoutLaboratorioInput = {
    softwareId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareLaboratorioUncheckedUpdateManyWithoutLaboratorioInput = {
    softwareId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ArmarioUpdateWithoutLaboratorioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    estantes?: EstanteUpdateManyWithoutArmarioNestedInput
    equipos?: EquipoUpdateManyWithoutArmarioNestedInput
    libros?: LibroUpdateManyWithoutArmarioNestedInput
  }

  export type ArmarioUncheckedUpdateWithoutLaboratorioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    estantes?: EstanteUncheckedUpdateManyWithoutArmarioNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutArmarioNestedInput
    libros?: LibroUncheckedUpdateManyWithoutArmarioNestedInput
  }

  export type ArmarioUncheckedUpdateManyWithoutLaboratorioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoUpdateWithoutLaboratorioInput = {
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    tipo?: EquipoTipoUpdateOneRequiredWithoutEquiposNestedInput
    marca?: EquipoMarcaUpdateOneRequiredWithoutEquiposNestedInput
    sede?: SedeUpdateOneRequiredWithoutEquiposNestedInput
    armario?: ArmarioUpdateOneWithoutEquiposNestedInput
    estante?: EstanteUpdateOneWithoutEquiposNestedInput
    estado?: EquipoEstadoUpdateOneRequiredWithoutEquiposNestedInput
    reservas?: ReservaEquipoUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateWithoutLaboratorioInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservas?: ReservaEquipoUncheckedUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateManyWithoutLaboratorioInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroUpdateWithoutLaboratorioInput = {
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUpdateManyWithoutLibroNestedInput
    armario?: ArmarioUpdateOneWithoutLibrosNestedInput
    estante?: EstanteUpdateOneWithoutLibrosNestedInput
    autor?: LibroAutorUpdateOneRequiredWithoutLibrosNestedInput
    idioma?: LibroIdiomaUpdateOneRequiredWithoutLibrosNestedInput
    editorial?: LibroEditorialUpdateOneRequiredWithoutLibrosNestedInput
    sede?: SedeUpdateOneRequiredWithoutLibrosNestedInput
    reservas?: ReservaLibroUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateWithoutLaboratorioInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUncheckedUpdateManyWithoutLibroNestedInput
    reservas?: ReservaLibroUncheckedUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateManyWithoutLaboratorioInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoUpdateWithoutLaboratorioInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    sede?: SedeUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    curso?: CursoUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalMateria?: MateriaUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalDocente?: UserUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateWithoutLaboratorioInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateManyWithoutLaboratorioInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioAbiertoUpdateWithoutLaboratorioInput = {
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLaboratorioAbiertoNestedInput
    sede?: SedeUpdateOneRequiredWithoutReservaLaboratorioAbiertoNestedInput
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUpdateManyWithoutReservaLaboratorioAbiertoNestedInput
  }

  export type ReservaLaboratorioAbiertoUncheckedUpdateWithoutLaboratorioInput = {
    id?: IntFieldUpdateOperationsInput | number
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutReservaLaboratorioAbiertoNestedInput
  }

  export type ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutLaboratorioInput = {
    id?: IntFieldUpdateOperationsInput | number
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EstanteCreateManyArmarioInput = {
    id?: number
    nombre: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type EquipoCreateManyArmarioInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    laboratorioId: number
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LibroCreateManyArmarioInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    estanteId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type EstanteUpdateWithoutArmarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUpdateManyWithoutEstanteNestedInput
    libros?: LibroUpdateManyWithoutEstanteNestedInput
  }

  export type EstanteUncheckedUpdateWithoutArmarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipos?: EquipoUncheckedUpdateManyWithoutEstanteNestedInput
    libros?: LibroUncheckedUpdateManyWithoutEstanteNestedInput
  }

  export type EstanteUncheckedUpdateManyWithoutArmarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoUpdateWithoutArmarioInput = {
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    tipo?: EquipoTipoUpdateOneRequiredWithoutEquiposNestedInput
    marca?: EquipoMarcaUpdateOneRequiredWithoutEquiposNestedInput
    sede?: SedeUpdateOneRequiredWithoutEquiposNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutEquiposNestedInput
    estante?: EstanteUpdateOneWithoutEquiposNestedInput
    estado?: EquipoEstadoUpdateOneRequiredWithoutEquiposNestedInput
    reservas?: ReservaEquipoUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateWithoutArmarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservas?: ReservaEquipoUncheckedUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateManyWithoutArmarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroUpdateWithoutArmarioInput = {
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUpdateManyWithoutLibroNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutLibrosNestedInput
    estante?: EstanteUpdateOneWithoutLibrosNestedInput
    autor?: LibroAutorUpdateOneRequiredWithoutLibrosNestedInput
    idioma?: LibroIdiomaUpdateOneRequiredWithoutLibrosNestedInput
    editorial?: LibroEditorialUpdateOneRequiredWithoutLibrosNestedInput
    sede?: SedeUpdateOneRequiredWithoutLibrosNestedInput
    reservas?: ReservaLibroUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateWithoutArmarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUncheckedUpdateManyWithoutLibroNestedInput
    reservas?: ReservaLibroUncheckedUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateManyWithoutArmarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoCreateManyEstanteInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    sedeId: number
    laboratorioId: number
    armarioId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LibroCreateManyEstanteInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    sedeId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type EquipoUpdateWithoutEstanteInput = {
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    tipo?: EquipoTipoUpdateOneRequiredWithoutEquiposNestedInput
    marca?: EquipoMarcaUpdateOneRequiredWithoutEquiposNestedInput
    sede?: SedeUpdateOneRequiredWithoutEquiposNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutEquiposNestedInput
    armario?: ArmarioUpdateOneWithoutEquiposNestedInput
    estado?: EquipoEstadoUpdateOneRequiredWithoutEquiposNestedInput
    reservas?: ReservaEquipoUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateWithoutEstanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservas?: ReservaEquipoUncheckedUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateManyWithoutEstanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroUpdateWithoutEstanteInput = {
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUpdateManyWithoutLibroNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutLibrosNestedInput
    armario?: ArmarioUpdateOneWithoutLibrosNestedInput
    autor?: LibroAutorUpdateOneRequiredWithoutLibrosNestedInput
    idioma?: LibroIdiomaUpdateOneRequiredWithoutLibrosNestedInput
    editorial?: LibroEditorialUpdateOneRequiredWithoutLibrosNestedInput
    sede?: SedeUpdateOneRequiredWithoutLibrosNestedInput
    reservas?: ReservaLibroUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateWithoutEstanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUncheckedUpdateManyWithoutLibroNestedInput
    reservas?: ReservaLibroUncheckedUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateManyWithoutEstanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareLaboratorioCreateManySoftwareInput = {
    laboratorioId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type SoftwareLaboratorioUpdateWithoutSoftwareInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    laboratorio?: LaboratorioUpdateOneRequiredWithoutSoftwareNestedInput
  }

  export type SoftwareLaboratorioUncheckedUpdateWithoutSoftwareInput = {
    laboratorioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type SoftwareLaboratorioUncheckedUpdateManyWithoutSoftwareInput = {
    laboratorioId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaJefeTpCreateManyMateriaInput = {
    userId: string
  }

  export type CursoCreateManyMateriaInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    profesorId: string
    anioDeCarrera: number
    activo: boolean
    ac: string
    sedeId: number
    divisionId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LibroMateriaCreateManyMateriaInput = {
    libroId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type MateriaCorrelativaCreateManyMateriaPrerequisitoInput = {
    correlativaId: number
    estatusCorrelativa: $Enums.EstatusCorrelativa
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type MateriaCorrelativaCreateManyCorrelativaInput = {
    materiaPrerequisitoId: number
    estatusCorrelativa: $Enums.EstatusCorrelativa
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoCreateManyDiscrecionalMateriaInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type MateriaJefeTpUpdateWithoutMateriaInput = {
    usuario?: UserUpdateOneRequiredWithoutMateriaJefeTpNestedInput
  }

  export type MateriaJefeTpUncheckedUpdateWithoutMateriaInput = {
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaJefeTpUncheckedUpdateManyWithoutMateriaInput = {
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoUpdateWithoutMateriaInput = {
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUpdateManyWithoutCursoNestedInput
    profesor?: UserUpdateOneRequiredWithoutCursosComoProfesorNestedInput
    sede?: SedeUpdateOneRequiredWithoutCursosNestedInput
    division?: DivisionUpdateOneRequiredWithoutCursosNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateWithoutMateriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    profesorId?: StringFieldUpdateOperationsInput | string
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    sedeId?: IntFieldUpdateOperationsInput | number
    divisionId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUncheckedUpdateManyWithoutCursoNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateManyWithoutMateriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    profesorId?: StringFieldUpdateOperationsInput | string
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    sedeId?: IntFieldUpdateOperationsInput | number
    divisionId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroMateriaUpdateWithoutMateriaInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    libro?: LibroUpdateOneRequiredWithoutMateriasNestedInput
  }

  export type LibroMateriaUncheckedUpdateWithoutMateriaInput = {
    libroId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroMateriaUncheckedUpdateManyWithoutMateriaInput = {
    libroId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaCorrelativaUpdateWithoutMateriaPrerequisitoInput = {
    estatusCorrelativa?: EnumEstatusCorrelativaFieldUpdateOperationsInput | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    correlativa?: MateriaUpdateOneRequiredWithoutCorrelativaNestedInput
  }

  export type MateriaCorrelativaUncheckedUpdateWithoutMateriaPrerequisitoInput = {
    correlativaId?: IntFieldUpdateOperationsInput | number
    estatusCorrelativa?: EnumEstatusCorrelativaFieldUpdateOperationsInput | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaCorrelativaUncheckedUpdateManyWithoutMateriaPrerequisitoInput = {
    correlativaId?: IntFieldUpdateOperationsInput | number
    estatusCorrelativa?: EnumEstatusCorrelativaFieldUpdateOperationsInput | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaCorrelativaUpdateWithoutCorrelativaInput = {
    estatusCorrelativa?: EnumEstatusCorrelativaFieldUpdateOperationsInput | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materiaPrerequisito?: MateriaUpdateOneRequiredWithoutMateriaPrerequisitoNestedInput
  }

  export type MateriaCorrelativaUncheckedUpdateWithoutCorrelativaInput = {
    materiaPrerequisitoId?: IntFieldUpdateOperationsInput | number
    estatusCorrelativa?: EnumEstatusCorrelativaFieldUpdateOperationsInput | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaCorrelativaUncheckedUpdateManyWithoutCorrelativaInput = {
    materiaPrerequisitoId?: IntFieldUpdateOperationsInput | number
    estatusCorrelativa?: EnumEstatusCorrelativaFieldUpdateOperationsInput | $Enums.EstatusCorrelativa
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoUpdateWithoutDiscrecionalMateriaInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    sede?: SedeUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    laboratorio?: LaboratorioUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    curso?: CursoUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalDocente?: UserUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateWithoutDiscrecionalMateriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalMateriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoEquipoCreateManyReservaLaboratorioCerradoInput = {
    id?: number
    cantidad: number
    equipoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoEquipoUpdateWithoutReservaLaboratorioCerradoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoTipo?: EquipoTipoUpdateOneRequiredWithoutReservaLaboratorioCerradoEquipoNestedInput
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedUpdateWithoutReservaLaboratorioCerradoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    equipoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutReservaLaboratorioCerradoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    equipoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioAbiertoEquipoCreateManyReservaLaboratorioAbiertoInput = {
    id?: number
    cantidad: number
    equipoId: number
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioAbiertoEquipoUpdateWithoutReservaLaboratorioAbiertoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoTipo?: EquipoTipoUpdateOneRequiredWithoutReservaLaboratorioAbiertoEquipoNestedInput
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedUpdateWithoutReservaLaboratorioAbiertoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    equipoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutReservaLaboratorioAbiertoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    equipoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoCreateManySedeInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    profesorId: string
    anioDeCarrera: number
    activo: boolean
    ac: string
    materiaId: number
    divisionId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type EquipoCreateManySedeInput = {
    id?: number
    inventarioId: string
    modelo?: string | null
    numeroSerie?: string | null
    observaciones?: string | null
    palabrasClave?: string | null
    imagen?: string | null
    tipoId: number
    marcaId: number
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    estadoId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LaboratorioCreateManySedeInput = {
    id?: number
    nombre: string
    tienePc?: boolean
    esReservable?: boolean
    incluirEnReporte?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type LibroCreateManySedeInput = {
    id?: number
    bibliotecaId?: string | null
    inventarioId: string
    titulo: string
    anio: number
    isbn?: string | null
    laboratorioId: number
    armarioId?: number | null
    estanteId?: number | null
    autorId: number
    idiomaId: number
    editorialId: number
    disponible?: boolean
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioAbiertoCreateManySedeInput = {
    id?: number
    especialidad: string
    descripcion?: string
    concurrentes: number
    laboratorioAbiertoTipo: $Enums.LaboratorioAbiertoTipo
    reservaId: number
    laboratorioId?: number | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoCreateManySedeInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    laboratorioId?: number | null
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    discrecionalDocenteId?: string | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type PantallaCreateManySedeInput = {
    id?: number
    docente: string
    materia?: string | null
    laboratorio?: string | null
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    usuarioCreadorId: string
    fechaCreacion?: Date | string
  }

  export type CursoUpdateWithoutSedeInput = {
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUpdateManyWithoutCursoNestedInput
    profesor?: UserUpdateOneRequiredWithoutCursosComoProfesorNestedInput
    materia?: MateriaUpdateOneRequiredWithoutCursosNestedInput
    division?: DivisionUpdateOneRequiredWithoutCursosNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    profesorId?: StringFieldUpdateOperationsInput | string
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    materiaId?: IntFieldUpdateOperationsInput | number
    divisionId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUncheckedUpdateManyWithoutCursoNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateManyWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    profesorId?: StringFieldUpdateOperationsInput | string
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    materiaId?: IntFieldUpdateOperationsInput | number
    divisionId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipoUpdateWithoutSedeInput = {
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    tipo?: EquipoTipoUpdateOneRequiredWithoutEquiposNestedInput
    marca?: EquipoMarcaUpdateOneRequiredWithoutEquiposNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutEquiposNestedInput
    armario?: ArmarioUpdateOneWithoutEquiposNestedInput
    estante?: EstanteUpdateOneWithoutEquiposNestedInput
    estado?: EquipoEstadoUpdateOneRequiredWithoutEquiposNestedInput
    reservas?: ReservaEquipoUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reservas?: ReservaEquipoUncheckedUpdateManyWithoutEquipoNestedInput
  }

  export type EquipoUncheckedUpdateManyWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    inventarioId?: StringFieldUpdateOperationsInput | string
    modelo?: NullableStringFieldUpdateOperationsInput | string | null
    numeroSerie?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    palabrasClave?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableStringFieldUpdateOperationsInput | string | null
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estadoId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LaboratorioUpdateWithoutSedeInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    software?: SoftwareLaboratorioUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateManyWithoutLaboratorioNestedInput
  }

  export type LaboratorioUncheckedUpdateWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    software?: SoftwareLaboratorioUncheckedUpdateManyWithoutLaboratorioNestedInput
    armarios?: ArmarioUncheckedUpdateManyWithoutLaboratorioNestedInput
    equipos?: EquipoUncheckedUpdateManyWithoutLaboratorioNestedInput
    libros?: LibroUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutLaboratorioNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutLaboratorioNestedInput
  }

  export type LaboratorioUncheckedUpdateManyWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tienePc?: BoolFieldUpdateOperationsInput | boolean
    esReservable?: BoolFieldUpdateOperationsInput | boolean
    incluirEnReporte?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type LibroUpdateWithoutSedeInput = {
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUpdateManyWithoutLibroNestedInput
    laboratorio?: LaboratorioUpdateOneRequiredWithoutLibrosNestedInput
    armario?: ArmarioUpdateOneWithoutLibrosNestedInput
    estante?: EstanteUpdateOneWithoutLibrosNestedInput
    autor?: LibroAutorUpdateOneRequiredWithoutLibrosNestedInput
    idioma?: LibroIdiomaUpdateOneRequiredWithoutLibrosNestedInput
    editorial?: LibroEditorialUpdateOneRequiredWithoutLibrosNestedInput
    reservas?: ReservaLibroUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    materias?: LibroMateriaUncheckedUpdateManyWithoutLibroNestedInput
    reservas?: ReservaLibroUncheckedUpdateManyWithoutLibroNestedInput
  }

  export type LibroUncheckedUpdateManyWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    bibliotecaId?: NullableStringFieldUpdateOperationsInput | string | null
    inventarioId?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    isbn?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorioId?: IntFieldUpdateOperationsInput | number
    armarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estanteId?: NullableIntFieldUpdateOperationsInput | number | null
    autorId?: IntFieldUpdateOperationsInput | number
    idiomaId?: IntFieldUpdateOperationsInput | number
    editorialId?: IntFieldUpdateOperationsInput | number
    disponible?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioAbiertoUpdateWithoutSedeInput = {
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLaboratorioAbiertoNestedInput
    laboratorio?: LaboratorioUpdateOneWithoutReservaLaboratorioAbiertoNestedInput
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUpdateManyWithoutReservaLaboratorioAbiertoNestedInput
  }

  export type ReservaLaboratorioAbiertoUncheckedUpdateWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    reservaId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoReservado?: ReservaLaboratorioAbiertoEquipoUncheckedUpdateManyWithoutReservaLaboratorioAbiertoNestedInput
  }

  export type ReservaLaboratorioAbiertoUncheckedUpdateManyWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    especialidad?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    concurrentes?: IntFieldUpdateOperationsInput | number
    laboratorioAbiertoTipo?: EnumLaboratorioAbiertoTipoFieldUpdateOperationsInput | $Enums.LaboratorioAbiertoTipo
    reservaId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoUpdateWithoutSedeInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    laboratorio?: LaboratorioUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    curso?: CursoUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalMateria?: MateriaUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalDocente?: UserUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateManyWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    discrecionalDocenteId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type PantallaUpdateWithoutSedeInput = {
    docente?: StringFieldUpdateOperationsInput | string
    materia?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PantallaUncheckedUpdateWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    docente?: StringFieldUpdateOperationsInput | string
    materia?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PantallaUncheckedUpdateManyWithoutSedeInput = {
    id?: IntFieldUpdateOperationsInput | number
    docente?: StringFieldUpdateOperationsInput | string
    materia?: NullableStringFieldUpdateOperationsInput | string | null
    laboratorio?: NullableStringFieldUpdateOperationsInput | string | null
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountCreateManyUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    refresh_expires_in?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    refresh_token_expires_in?: number | null
  }

  export type SessionCreateManyUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type UsuarioRolCreateManyUsuarioInput = {
    rolId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type ReservaCreateManyUsuarioSolicitoInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
  }

  export type ReservaCreateManyUsuarioRenovoInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
  }

  export type ReservaCreateManyUsuarioTutorInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
  }

  export type ReservaCreateManyUsuarioAprobadorInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
  }

  export type ReservaCreateManyUsuarioRechazadoInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRenovoId?: string | null
    usuarioRecibioId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
  }

  export type ReservaCreateManyUsuarioRecibioInput = {
    id?: number
    estatus: $Enums.ReservaEstatus
    fechaHoraInicio: Date | string
    fechaHoraFin: Date | string
    tipo: $Enums.ReservaTipo
    asistio?: boolean
    motivoRechazo?: string | null
    usuarioSolicitoId: string
    usuarioAprobadorId?: string | null
    usuarioRechazadoId?: string | null
    usuarioRenovoId?: string | null
    usuarioTutorId?: string | null
    fechaRenovacion?: Date | string | null
    fechaAprobacion?: Date | string | null
    fechaRechazo?: Date | string | null
    fechaRecibido?: Date | string | null
    usuarioCreadorId: string
    usuarioModificadorId: string
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    mostrarEnPantalla?: boolean
  }

  export type CursoAyudanteCreateManyUsuarioInput = {
    cursoId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
    fechaModificacion?: Date | string
    usuarioModificadorId: string
  }

  export type CursoCreateManyProfesorInput = {
    id?: number
    horaInicio1: string
    duracion1: string
    horaInicio2?: string | null
    duracion2?: string | null
    dia1: $Enums.CursoDia
    dia2?: $Enums.CursoDia | null
    anioDeCarrera: number
    activo: boolean
    ac: string
    sedeId: number
    materiaId: number
    divisionId: number
    turno: $Enums.TurnoCurso
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type MateriaJefeTpCreateManyUsuarioInput = {
    materiaId: number
  }

  export type MateriaCreateManyDirectorUsuarioInput = {
    id?: number
    nombre: string
    codigo: string
    anio: number
    duracion: $Enums.MateriaDuracion
    tipo: $Enums.MateriaTipo
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type ReservaLaboratorioCerradoCreateManyDiscrecionalDocenteInput = {
    id?: number
    descripcion?: string
    requierePC?: boolean
    requiereProyector?: boolean
    reservaId: number
    sedeId: number
    laboratorioId?: number | null
    cursoId?: number | null
    esDiscrecional?: boolean
    discrecionalTitulo?: string
    discrecionalMateriaId?: number | null
    fechaCreacion?: Date | string
    fechaModificacion?: Date | string
    usuarioCreadorId: string
    usuarioModificadorId: string
  }

  export type AccountUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    refresh_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    refresh_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AccountUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    refresh_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioRolUpdateWithoutUsuarioInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
  }

  export type UsuarioRolUncheckedUpdateWithoutUsuarioInput = {
    rolId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioRolUncheckedUpdateManyWithoutUsuarioInput = {
    rolId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaUpdateWithoutUsuarioSolicitoInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    usuarioAprobador?: UserUpdateOneWithoutReservasAprobadasNestedInput
    usuarioRechazado?: UserUpdateOneWithoutReservasRechazadasNestedInput
    usuarioRenovo?: UserUpdateOneWithoutReservasRenovadasNestedInput
    usuarioRecibio?: UserUpdateOneWithoutReservasRecibidasNestedInput
    usuarioTutor?: UserUpdateOneWithoutReservasComoTutorNestedInput
    reservaEquipo?: ReservaEquipoUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutUsuarioSolicitoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    reservaEquipo?: ReservaEquipoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioSolicitoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReservaUpdateWithoutUsuarioRenovoInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    usuarioSolicito?: UserUpdateOneRequiredWithoutReservasSolicitadasNestedInput
    usuarioAprobador?: UserUpdateOneWithoutReservasAprobadasNestedInput
    usuarioRechazado?: UserUpdateOneWithoutReservasRechazadasNestedInput
    usuarioRecibio?: UserUpdateOneWithoutReservasRecibidasNestedInput
    usuarioTutor?: UserUpdateOneWithoutReservasComoTutorNestedInput
    reservaEquipo?: ReservaEquipoUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutUsuarioRenovoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    reservaEquipo?: ReservaEquipoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioRenovoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReservaUpdateWithoutUsuarioTutorInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    usuarioSolicito?: UserUpdateOneRequiredWithoutReservasSolicitadasNestedInput
    usuarioAprobador?: UserUpdateOneWithoutReservasAprobadasNestedInput
    usuarioRechazado?: UserUpdateOneWithoutReservasRechazadasNestedInput
    usuarioRenovo?: UserUpdateOneWithoutReservasRenovadasNestedInput
    usuarioRecibio?: UserUpdateOneWithoutReservasRecibidasNestedInput
    reservaEquipo?: ReservaEquipoUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutUsuarioTutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    reservaEquipo?: ReservaEquipoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioTutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReservaUpdateWithoutUsuarioAprobadorInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    usuarioSolicito?: UserUpdateOneRequiredWithoutReservasSolicitadasNestedInput
    usuarioRechazado?: UserUpdateOneWithoutReservasRechazadasNestedInput
    usuarioRenovo?: UserUpdateOneWithoutReservasRenovadasNestedInput
    usuarioRecibio?: UserUpdateOneWithoutReservasRecibidasNestedInput
    usuarioTutor?: UserUpdateOneWithoutReservasComoTutorNestedInput
    reservaEquipo?: ReservaEquipoUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutUsuarioAprobadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    reservaEquipo?: ReservaEquipoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioAprobadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReservaUpdateWithoutUsuarioRechazadoInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    usuarioSolicito?: UserUpdateOneRequiredWithoutReservasSolicitadasNestedInput
    usuarioAprobador?: UserUpdateOneWithoutReservasAprobadasNestedInput
    usuarioRenovo?: UserUpdateOneWithoutReservasRenovadasNestedInput
    usuarioRecibio?: UserUpdateOneWithoutReservasRecibidasNestedInput
    usuarioTutor?: UserUpdateOneWithoutReservasComoTutorNestedInput
    reservaEquipo?: ReservaEquipoUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutUsuarioRechazadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    reservaEquipo?: ReservaEquipoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioRechazadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRecibioId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReservaUpdateWithoutUsuarioRecibioInput = {
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    usuarioSolicito?: UserUpdateOneRequiredWithoutReservasSolicitadasNestedInput
    usuarioAprobador?: UserUpdateOneWithoutReservasAprobadasNestedInput
    usuarioRechazado?: UserUpdateOneWithoutReservasRechazadasNestedInput
    usuarioRenovo?: UserUpdateOneWithoutReservasRenovadasNestedInput
    usuarioTutor?: UserUpdateOneWithoutReservasComoTutorNestedInput
    reservaEquipo?: ReservaEquipoUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutUsuarioRecibioInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
    reservaEquipo?: ReservaEquipoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLibro?: ReservaLibroUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateOneWithoutReservaNestedInput
    reservaLaboratorioAbierto?: ReservaLaboratorioAbiertoUncheckedUpdateOneWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateManyWithoutUsuarioRecibioInput = {
    id?: IntFieldUpdateOperationsInput | number
    estatus?: EnumReservaEstatusFieldUpdateOperationsInput | $Enums.ReservaEstatus
    fechaHoraInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHoraFin?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumReservaTipoFieldUpdateOperationsInput | $Enums.ReservaTipo
    asistio?: BoolFieldUpdateOperationsInput | boolean
    motivoRechazo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioSolicitoId?: StringFieldUpdateOperationsInput | string
    usuarioAprobadorId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRechazadoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioRenovoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTutorId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRenovacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRechazo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaRecibido?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    mostrarEnPantalla?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CursoAyudanteUpdateWithoutUsuarioInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    curso?: CursoUpdateOneRequiredWithoutAyudantesNestedInput
  }

  export type CursoAyudanteUncheckedUpdateWithoutUsuarioInput = {
    cursoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoAyudanteUncheckedUpdateManyWithoutUsuarioInput = {
    cursoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type CursoUpdateWithoutProfesorInput = {
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUpdateManyWithoutCursoNestedInput
    sede?: SedeUpdateOneRequiredWithoutCursosNestedInput
    materia?: MateriaUpdateOneRequiredWithoutCursosNestedInput
    division?: DivisionUpdateOneRequiredWithoutCursosNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateWithoutProfesorInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    sedeId?: IntFieldUpdateOperationsInput | number
    materiaId?: IntFieldUpdateOperationsInput | number
    divisionId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    ayudantes?: CursoAyudanteUncheckedUpdateManyWithoutCursoNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateManyWithoutProfesorInput = {
    id?: IntFieldUpdateOperationsInput | number
    horaInicio1?: StringFieldUpdateOperationsInput | string
    duracion1?: StringFieldUpdateOperationsInput | string
    horaInicio2?: NullableStringFieldUpdateOperationsInput | string | null
    duracion2?: NullableStringFieldUpdateOperationsInput | string | null
    dia1?: EnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia
    dia2?: NullableEnumCursoDiaFieldUpdateOperationsInput | $Enums.CursoDia | null
    anioDeCarrera?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    ac?: StringFieldUpdateOperationsInput | string
    sedeId?: IntFieldUpdateOperationsInput | number
    materiaId?: IntFieldUpdateOperationsInput | number
    divisionId?: IntFieldUpdateOperationsInput | number
    turno?: EnumTurnoCursoFieldUpdateOperationsInput | $Enums.TurnoCurso
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type MateriaJefeTpUpdateWithoutUsuarioInput = {
    materia?: MateriaUpdateOneRequiredWithoutJefeTrabajoPracticosNestedInput
  }

  export type MateriaJefeTpUncheckedUpdateWithoutUsuarioInput = {
    materiaId?: IntFieldUpdateOperationsInput | number
  }

  export type MateriaJefeTpUncheckedUpdateManyWithoutUsuarioInput = {
    materiaId?: IntFieldUpdateOperationsInput | number
  }

  export type MateriaUpdateWithoutDirectorUsuarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    jefeTrabajoPracticos?: MateriaJefeTpUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type MateriaUncheckedUpdateWithoutDirectorUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    jefeTrabajoPracticos?: MateriaJefeTpUncheckedUpdateManyWithoutMateriaNestedInput
    cursos?: CursoUncheckedUpdateManyWithoutMateriaNestedInput
    libros?: LibroMateriaUncheckedUpdateManyWithoutMateriaNestedInput
    materiaPrerequisito?: MateriaCorrelativaUncheckedUpdateManyWithoutMateriaPrerequisitoNestedInput
    correlativa?: MateriaCorrelativaUncheckedUpdateManyWithoutCorrelativaNestedInput
    reservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalMateriaNestedInput
  }

  export type MateriaUncheckedUpdateManyWithoutDirectorUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    duracion?: EnumMateriaDuracionFieldUpdateOperationsInput | $Enums.MateriaDuracion
    tipo?: EnumMateriaTipoFieldUpdateOperationsInput | $Enums.MateriaTipo
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaLaboratorioCerradoUpdateWithoutDiscrecionalDocenteInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    sede?: SedeUpdateOneRequiredWithoutReservaLaboratorioCerradoNestedInput
    laboratorio?: LaboratorioUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    curso?: CursoUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    discrecionalMateria?: MateriaUpdateOneWithoutReservaLaboratorioCerradoNestedInput
    equipoReservado?: ReservaLaboratorioCerradoEquipoUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateWithoutDiscrecionalDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
    equipoReservado?: ReservaLaboratorioCerradoEquipoUncheckedUpdateManyWithoutReservaLaboratorioCerradoNestedInput
  }

  export type ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    requierePC?: BoolFieldUpdateOperationsInput | boolean
    requiereProyector?: BoolFieldUpdateOperationsInput | boolean
    reservaId?: IntFieldUpdateOperationsInput | number
    sedeId?: IntFieldUpdateOperationsInput | number
    laboratorioId?: NullableIntFieldUpdateOperationsInput | number | null
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    esDiscrecional?: BoolFieldUpdateOperationsInput | boolean
    discrecionalTitulo?: StringFieldUpdateOperationsInput | string
    discrecionalMateriaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaModificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuarioModificadorId?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioRolCreateManyRolInput = {
    userId: string
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type RolPermisoCreateManyRolInput = {
    permisoId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type UsuarioRolUpdateWithoutRolInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    usuario?: UserUpdateOneRequiredWithoutUsuarioRolNestedInput
  }

  export type UsuarioRolUncheckedUpdateWithoutRolInput = {
    userId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioRolUncheckedUpdateManyWithoutRolInput = {
    userId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type RolPermisoUpdateWithoutRolInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    permiso?: PermisoUpdateOneRequiredWithoutRolPermisoNestedInput
  }

  export type RolPermisoUncheckedUpdateWithoutRolInput = {
    permisoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type RolPermisoUncheckedUpdateManyWithoutRolInput = {
    permisoId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type RolPermisoCreateManyPermisoInput = {
    rolId: number
    fechaCreacion?: Date | string
    usuarioCreadorId: string
  }

  export type RolPermisoUpdateWithoutPermisoInput = {
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
    rol?: RolUpdateOneRequiredWithoutRolPermisoNestedInput
  }

  export type RolPermisoUncheckedUpdateWithoutPermisoInput = {
    rolId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type RolPermisoUncheckedUpdateManyWithoutPermisoInput = {
    rolId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioCreadorId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateManyProvinciaInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
  }

  export type UserUpdateWithoutProvinciaInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutProvinciaInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateManyWithoutProvinciaInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UserCreateManyPaisInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    documentoTipoId?: number | null
    provinciaIso?: string | null
  }

  export type ProvinciaCreateManyPaisInput = {
    iso: string
    nombre: string
  }

  export type UserUpdateWithoutPaisInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipo?: DocumentoTipoUpdateOneWithoutUsuariosNestedInput
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutPaisInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateManyWithoutPaisInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    documentoTipoId?: NullableIntFieldUpdateOperationsInput | number | null
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProvinciaUpdateWithoutPaisInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    usuarios?: UserUpdateManyWithoutProvinciaNestedInput
  }

  export type ProvinciaUncheckedUpdateWithoutPaisInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    usuarios?: UserUncheckedUpdateManyWithoutProvinciaNestedInput
  }

  export type ProvinciaUncheckedUpdateManyWithoutPaisInput = {
    iso?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateManyDocumentoTipoInput = {
    id?: string
    name: string
    email: string
    emailVerified?: boolean | null
    image?: string
    nombre?: string | null
    apellido?: string | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    piso?: string | null
    departamento?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    telefonoCasa?: string | null
    telefonoCelular?: string | null
    telefonoLaboral?: string | null
    documentoNumero?: string | null
    legajo?: string | null
    gitlab?: string | null
    penalizaciones?: number
    esDocente?: boolean
    esTutor?: boolean
    fechaRegistro?: Date | string
    fechaUltimoAcceso?: Date | string
    fechaUltimaActualizacion?: Date | string
    provinciaIso?: string | null
    paisIso?: string | null
  }

  export type UserUpdateWithoutDocumentoTipoInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    provincia?: ProvinciaUpdateOneWithoutUsuariosNestedInput
    pais?: PaisUpdateOneWithoutUsuariosNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateWithoutDocumentoTipoInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    usuarioRol?: UsuarioRolUncheckedUpdateManyWithoutUsuarioNestedInput
    reservasSolicitadas?: ReservaUncheckedUpdateManyWithoutUsuarioSolicitoNestedInput
    reservasRenovadas?: ReservaUncheckedUpdateManyWithoutUsuarioRenovoNestedInput
    reservasComoTutor?: ReservaUncheckedUpdateManyWithoutUsuarioTutorNestedInput
    reservasAprobadas?: ReservaUncheckedUpdateManyWithoutUsuarioAprobadorNestedInput
    reservasRechazadas?: ReservaUncheckedUpdateManyWithoutUsuarioRechazadoNestedInput
    reservasRecibidas?: ReservaUncheckedUpdateManyWithoutUsuarioRecibioNestedInput
    cursosComoAyudante?: CursoAyudanteUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosComoProfesor?: CursoUncheckedUpdateManyWithoutProfesorNestedInput
    MateriaJefeTp?: MateriaJefeTpUncheckedUpdateManyWithoutUsuarioNestedInput
    materiasDirector?: MateriaUncheckedUpdateManyWithoutDirectorUsuarioNestedInput
    tutor?: TutorUncheckedUpdateOneWithoutUsuarioNestedInput
    ReservaLaboratorioCerrado?: ReservaLaboratorioCerradoUncheckedUpdateManyWithoutDiscrecionalDocenteNestedInput
  }

  export type UserUncheckedUpdateManyWithoutDocumentoTipoInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    image?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    piso?: NullableStringFieldUpdateOperationsInput | string | null
    departamento?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCasa?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoCelular?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoLaboral?: NullableStringFieldUpdateOperationsInput | string | null
    documentoNumero?: NullableStringFieldUpdateOperationsInput | string | null
    legajo?: NullableStringFieldUpdateOperationsInput | string | null
    gitlab?: NullableStringFieldUpdateOperationsInput | string | null
    penalizaciones?: IntFieldUpdateOperationsInput | number
    esDocente?: BoolFieldUpdateOperationsInput | boolean
    esTutor?: BoolFieldUpdateOperationsInput | boolean
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimoAcceso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaUltimaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    provinciaIso?: NullableStringFieldUpdateOperationsInput | string | null
    paisIso?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}