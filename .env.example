# Dado que el archivo ".env" está ignorado por git, se puede utilizar el archivo ".env.example" para
# crear un nuevo archivo ".env" al clonar el repositorio. Es importante mantener este archivo actualizado
# cuando se agreguen nuevas variables a `.env`.

# Este archivo será incluido en el control de versiones, por lo que no se deben almacenar secretos en él.
# Al clonar el repositorio, se debe crear una copia de este archivo llamada ".env" y completarlo con los secretos.

# Al agregar variables de entorno adicionales, el esquema en "/src/env.js"
# debe ser actualizado en consecuencia.

# Las variables comentadas son opcionales, pero se pueden configurar si es necesario.

# Prisma
# https://www.prisma.io/docs/reference/database-reference/connection-urls#env
DATABASE_URL=postgresql://postgres:password@localhost:5432/sge2

# Next Auth
NEXTAUTH_SECRET= # Se puede generar desde la línea de comando con: openssl rand -base64 32
NEXTAUTH_URL=http://localhost:3000

# Next Auth Discord Provider
# DISCORD_CLIENT_ID=
# DISCORD_CLIENT_SECRET=

# Next Auth Keycloak Provider
# KEYCLOAK_CLIENT_ID=
# KEYCLOAK_CLIENT_SECRET=
# KEYCLOAK_ISSUER=

# Envío de mails
SMTP_MAIL_EMISOR=testutn88@gmail.com # A nombre de quién se envían los mails
SMTP_HOST=smtp.gmail.com # Servidor SMTP
SMTP_PORT=587 # Puerto SMTP
# SMTP_SECURE=false # Normalmente siempre es false

# SMTP_TESTING=true # Si está activo significa que va a enviar todos los mails a `SMTP_TESTING_EMAIL_RECEPTOR`
# SMTP_TESTING_EMAIL_RECEPTOR=alexanderarmua1@gmail.com # A quién se envían los mails de prueba
# SMTP_TESTING_EMAIL_USER=testutn88@gmail.com # Usuario para loguearse en el SMTP si es testing
# SMTP_TESTING_EMAIL_PASSWORD= # Contraseña para loguearse en el SMTP si es testing
